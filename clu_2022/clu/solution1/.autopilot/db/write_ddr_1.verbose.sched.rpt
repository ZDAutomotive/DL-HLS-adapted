

================================================================
== Vitis HLS Report for 'write_ddr_1'
================================================================
* Date:           Fri Dec 16 14:07:20 2022

* Version:        2022.2 (Build 3670227 on Oct 13 2022)
* Project:        clu
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynquplus
* Target device:  xczu5ev-sfvc784-2-i


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  7.300 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |      138|      246|  1.380 us|  2.460 us|  138|  246|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+---------+---------+----------+-----------+-----------+------+----------+
        |          |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name|   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+---------+---------+----------+-----------+-----------+------+----------+
        |- Loop 1  |       84|       84|         3|          -|          -|    28|        no|
        +----------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 71
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 11 
9 --> 10 
10 --> 8 
11 --> 12 
12 --> 13 
13 --> 14 
14 --> 15 
15 --> 16 
16 --> 17 
17 --> 18 
18 --> 19 
19 --> 20 
20 --> 21 
21 --> 22 
22 --> 23 
23 --> 24 
24 --> 25 
25 --> 26 
26 --> 27 
27 --> 28 
28 --> 29 
29 --> 30 
30 --> 31 
31 --> 32 
32 --> 33 
33 --> 34 
34 --> 35 
35 --> 36 
36 --> 37 
37 --> 38 
38 --> 39 
39 --> 40 
40 --> 41 
41 --> 42 
42 --> 43 
43 --> 44 
44 --> 45 
45 --> 46 
46 --> 47 
47 --> 48 
48 --> 49 
49 --> 50 65 
50 --> 51 
51 --> 52 
52 --> 53 
53 --> 54 
54 --> 55 
55 --> 56 
56 --> 57 
57 --> 58 
58 --> 59 
59 --> 60 
60 --> 61 
61 --> 62 
62 --> 63 
63 --> 64 
64 --> 
65 --> 66 
66 --> 67 
67 --> 68 
68 --> 69 
69 --> 70 
70 --> 71 
71 --> 64 

* FSM state operations: 

State 1 <SV = 0> <Delay = 7.30>
ST_1 : Operation 72 [1/1] (0.00ns)   --->   "%loop_index4 = alloca i32 1"   --->   Operation 72 'alloca' 'loop_index4' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 73 [1/1] (0.00ns)   --->   "%ddr_header_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %ddr_header"   --->   Operation 73 'read' 'ddr_header_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 74 [1/1] (0.00ns)   --->   "%ringbuffer_header_bytes = alloca i64 1" [can.c:100]   --->   Operation 74 'alloca' 'ringbuffer_header_bytes' <Predicate = true> <Delay = 0.00> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.67> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 28> <RAM>
ST_1 : Operation 75 [1/1] (0.00ns)   --->   "%ps_ddr_addr = getelementptr i8 %ps_ddr, i64 %ddr_header_read" [can.c:103]   --->   Operation 75 'getelementptr' 'ps_ddr_addr' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 76 [7/7] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i8, i8 %ps_ddr_addr, i32 28" [can.c:103]   --->   Operation 76 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_1 : Operation 77 [1/1] (0.42ns)   --->   "%store_ln103 = store i5 0, i5 %loop_index4" [can.c:103]   --->   Operation 77 'store' 'store_ln103' <Predicate = true> <Delay = 0.42>

State 2 <SV = 1> <Delay = 7.30>
ST_2 : Operation 78 [6/7] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i8, i8 %ps_ddr_addr, i32 28" [can.c:103]   --->   Operation 78 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 3 <SV = 2> <Delay = 7.30>
ST_3 : Operation 79 [5/7] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i8, i8 %ps_ddr_addr, i32 28" [can.c:103]   --->   Operation 79 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 4 <SV = 3> <Delay = 7.30>
ST_4 : Operation 80 [4/7] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i8, i8 %ps_ddr_addr, i32 28" [can.c:103]   --->   Operation 80 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 5 <SV = 4> <Delay = 7.30>
ST_5 : Operation 81 [3/7] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i8, i8 %ps_ddr_addr, i32 28" [can.c:103]   --->   Operation 81 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 6 <SV = 5> <Delay = 7.30>
ST_6 : Operation 82 [2/7] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i8, i8 %ps_ddr_addr, i32 28" [can.c:103]   --->   Operation 82 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 7 <SV = 6> <Delay = 7.30>
ST_7 : Operation 83 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i8 %ps_ddr, void @empty_23, i32 0, i32 0, void @empty_24, i32 0, i32 10, void @empty, void @empty_26, void @empty_24, i32 16, i32 16, i32 16, i32 16, void @empty_24, void @empty_24, i32 4294967295, i32 0"   --->   Operation 83 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 84 [1/7] (7.30ns)   --->   "%empty = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i8, i8 %ps_ddr_addr, i32 28" [can.c:103]   --->   Operation 84 'readreq' 'empty' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_7 : Operation 85 [1/1] (0.00ns)   --->   "%br_ln103 = br void %load-store-loop3" [can.c:103]   --->   Operation 85 'br' 'br_ln103' <Predicate = true> <Delay = 0.00>

State 8 <SV = 7> <Delay = 1.21>
ST_8 : Operation 86 [1/1] (0.00ns)   --->   "%loop_index4_load = load i5 %loop_index4"   --->   Operation 86 'load' 'loop_index4_load' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 87 [1/1] (0.00ns)   --->   "%loop_index4_cast = zext i5 %loop_index4_load"   --->   Operation 87 'zext' 'loop_index4_cast' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 88 [1/1] (0.75ns)   --->   "%exitcond66 = icmp_eq  i5 %loop_index4_load, i5 28"   --->   Operation 88 'icmp' 'exitcond66' <Predicate = true> <Delay = 0.75> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.75> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 89 [1/1] (0.00ns)   --->   "%empty_60 = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 28, i64 28, i64 28"   --->   Operation 89 'speclooptripcount' 'empty_60' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 90 [1/1] (0.78ns)   --->   "%empty_61 = add i5 %loop_index4_load, i5 1"   --->   Operation 90 'add' 'empty_61' <Predicate = true> <Delay = 0.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 91 [1/1] (0.00ns)   --->   "%br_ln0 = br i1 %exitcond66, void %load-store-loop3.split, void %memcpy-split2"   --->   Operation 91 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 92 [1/1] (0.42ns)   --->   "%store_ln0 = store i5 %empty_61, i5 %loop_index4"   --->   Operation 92 'store' 'store_ln0' <Predicate = (!exitcond66)> <Delay = 0.42>
ST_8 : Operation 93 [1/1] (0.00ns)   --->   "%ringbuffer_header_bytes_addr = getelementptr i8 %ringbuffer_header_bytes, i64 0, i64 12" [can.c:104]   --->   Operation 93 'getelementptr' 'ringbuffer_header_bytes_addr' <Predicate = (exitcond66)> <Delay = 0.00>
ST_8 : Operation 94 [2/2] (0.67ns)   --->   "%ringbuffer_header_bytes_load = load i5 %ringbuffer_header_bytes_addr" [can.c:104]   --->   Operation 94 'load' 'ringbuffer_header_bytes_load' <Predicate = (exitcond66)> <Delay = 0.67> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.67> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 28> <RAM>
ST_8 : Operation 95 [1/1] (0.00ns)   --->   "%ringbuffer_header_bytes_addr_13 = getelementptr i8 %ringbuffer_header_bytes, i64 0, i64 13" [can.c:105]   --->   Operation 95 'getelementptr' 'ringbuffer_header_bytes_addr_13' <Predicate = (exitcond66)> <Delay = 0.00>
ST_8 : Operation 96 [2/2] (0.67ns)   --->   "%ringbuffer_header_bytes_load_12 = load i5 %ringbuffer_header_bytes_addr_13" [can.c:105]   --->   Operation 96 'load' 'ringbuffer_header_bytes_load_12' <Predicate = (exitcond66)> <Delay = 0.67> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.67> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 28> <RAM>

State 9 <SV = 8> <Delay = 7.30>
ST_9 : Operation 97 [1/1] (7.30ns)   --->   "%ps_ddr_addr_read = read i8 @_ssdm_op_Read.m_axi.p1i8, i8 %ps_ddr_addr" [can.c:103]   --->   Operation 97 'read' 'ps_ddr_addr_read' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 10 <SV = 9> <Delay = 0.67>
ST_10 : Operation 98 [1/1] (0.00ns)   --->   "%ringbuffer_header_bytes_addr_24 = getelementptr i8 %ringbuffer_header_bytes, i64 0, i64 %loop_index4_cast"   --->   Operation 98 'getelementptr' 'ringbuffer_header_bytes_addr_24' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 99 [1/1] (0.67ns)   --->   "%store_ln103 = store i8 %ps_ddr_addr_read, i5 %ringbuffer_header_bytes_addr_24" [can.c:103]   --->   Operation 99 'store' 'store_ln103' <Predicate = true> <Delay = 0.67> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.67> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 28> <RAM>
ST_10 : Operation 100 [1/1] (0.00ns)   --->   "%br_ln0 = br void %load-store-loop3"   --->   Operation 100 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>

State 11 <SV = 8> <Delay = 0.67>
ST_11 : Operation 101 [1/2] (0.67ns)   --->   "%ringbuffer_header_bytes_load = load i5 %ringbuffer_header_bytes_addr" [can.c:104]   --->   Operation 101 'load' 'ringbuffer_header_bytes_load' <Predicate = true> <Delay = 0.67> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.67> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 28> <RAM>
ST_11 : Operation 102 [1/2] (0.67ns)   --->   "%ringbuffer_header_bytes_load_12 = load i5 %ringbuffer_header_bytes_addr_13" [can.c:105]   --->   Operation 102 'load' 'ringbuffer_header_bytes_load_12' <Predicate = true> <Delay = 0.67> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.67> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 28> <RAM>
ST_11 : Operation 103 [1/1] (0.00ns)   --->   "%ringbuffer_header_bytes_addr_14 = getelementptr i8 %ringbuffer_header_bytes, i64 0, i64 14" [can.c:106]   --->   Operation 103 'getelementptr' 'ringbuffer_header_bytes_addr_14' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 104 [2/2] (0.67ns)   --->   "%ringbuffer_header_bytes_load_13 = load i5 %ringbuffer_header_bytes_addr_14" [can.c:106]   --->   Operation 104 'load' 'ringbuffer_header_bytes_load_13' <Predicate = true> <Delay = 0.67> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.67> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 28> <RAM>
ST_11 : Operation 105 [1/1] (0.00ns)   --->   "%ringbuffer_header_bytes_addr_15 = getelementptr i8 %ringbuffer_header_bytes, i64 0, i64 15" [can.c:107]   --->   Operation 105 'getelementptr' 'ringbuffer_header_bytes_addr_15' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 106 [2/2] (0.67ns)   --->   "%ringbuffer_header_bytes_load_14 = load i5 %ringbuffer_header_bytes_addr_15" [can.c:107]   --->   Operation 106 'load' 'ringbuffer_header_bytes_load_14' <Predicate = true> <Delay = 0.67> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.67> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 28> <RAM>

State 12 <SV = 9> <Delay = 0.67>
ST_12 : Operation 107 [1/2] (0.67ns)   --->   "%ringbuffer_header_bytes_load_13 = load i5 %ringbuffer_header_bytes_addr_14" [can.c:106]   --->   Operation 107 'load' 'ringbuffer_header_bytes_load_13' <Predicate = true> <Delay = 0.67> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.67> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 28> <RAM>
ST_12 : Operation 108 [1/2] (0.67ns)   --->   "%ringbuffer_header_bytes_load_14 = load i5 %ringbuffer_header_bytes_addr_15" [can.c:107]   --->   Operation 108 'load' 'ringbuffer_header_bytes_load_14' <Predicate = true> <Delay = 0.67> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.67> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 28> <RAM>
ST_12 : Operation 109 [1/1] (0.00ns)   --->   "%ringbuffer_header_bytes_addr_20 = getelementptr i8 %ringbuffer_header_bytes, i64 0, i64 24" [can.c:112]   --->   Operation 109 'getelementptr' 'ringbuffer_header_bytes_addr_20' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 110 [2/2] (0.67ns)   --->   "%ringbuffer_header_bytes_load_19 = load i5 %ringbuffer_header_bytes_addr_20" [can.c:112]   --->   Operation 110 'load' 'ringbuffer_header_bytes_load_19' <Predicate = true> <Delay = 0.67> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.67> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 28> <RAM>
ST_12 : Operation 111 [1/1] (0.00ns)   --->   "%ringbuffer_header_bytes_addr_21 = getelementptr i8 %ringbuffer_header_bytes, i64 0, i64 25" [can.c:113]   --->   Operation 111 'getelementptr' 'ringbuffer_header_bytes_addr_21' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 112 [2/2] (0.67ns)   --->   "%ringbuffer_header_bytes_load_20 = load i5 %ringbuffer_header_bytes_addr_21" [can.c:113]   --->   Operation 112 'load' 'ringbuffer_header_bytes_load_20' <Predicate = true> <Delay = 0.67> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.67> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 28> <RAM>

State 13 <SV = 10> <Delay = 0.67>
ST_13 : Operation 113 [1/2] (0.67ns)   --->   "%ringbuffer_header_bytes_load_19 = load i5 %ringbuffer_header_bytes_addr_20" [can.c:112]   --->   Operation 113 'load' 'ringbuffer_header_bytes_load_19' <Predicate = true> <Delay = 0.67> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.67> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 28> <RAM>
ST_13 : Operation 114 [1/2] (0.67ns)   --->   "%ringbuffer_header_bytes_load_20 = load i5 %ringbuffer_header_bytes_addr_21" [can.c:113]   --->   Operation 114 'load' 'ringbuffer_header_bytes_load_20' <Predicate = true> <Delay = 0.67> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.67> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 28> <RAM>
ST_13 : Operation 115 [1/1] (0.00ns)   --->   "%ringbuffer_header_bytes_addr_22 = getelementptr i8 %ringbuffer_header_bytes, i64 0, i64 26" [can.c:114]   --->   Operation 115 'getelementptr' 'ringbuffer_header_bytes_addr_22' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 116 [2/2] (0.67ns)   --->   "%ringbuffer_header_bytes_load_21 = load i5 %ringbuffer_header_bytes_addr_22" [can.c:114]   --->   Operation 116 'load' 'ringbuffer_header_bytes_load_21' <Predicate = true> <Delay = 0.67> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.67> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 28> <RAM>
ST_13 : Operation 117 [1/1] (0.00ns)   --->   "%ringbuffer_header_bytes_addr_23 = getelementptr i8 %ringbuffer_header_bytes, i64 0, i64 27" [can.c:115]   --->   Operation 117 'getelementptr' 'ringbuffer_header_bytes_addr_23' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 118 [2/2] (0.67ns)   --->   "%ringbuffer_header_bytes_load_22 = load i5 %ringbuffer_header_bytes_addr_23" [can.c:115]   --->   Operation 118 'load' 'ringbuffer_header_bytes_load_22' <Predicate = true> <Delay = 0.67> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.67> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 28> <RAM>

State 14 <SV = 11> <Delay = 3.16>
ST_14 : Operation 119 [1/1] (0.00ns)   --->   "%max_can_count = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i8.i8.i8.i8, i8 %ringbuffer_header_bytes_load, i8 %ringbuffer_header_bytes_load_12, i8 %ringbuffer_header_bytes_load_13, i8 %ringbuffer_header_bytes_load_14" [can.c:106]   --->   Operation 119 'bitconcatenate' 'max_can_count' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 120 [1/2] (0.67ns)   --->   "%ringbuffer_header_bytes_load_21 = load i5 %ringbuffer_header_bytes_addr_22" [can.c:114]   --->   Operation 120 'load' 'ringbuffer_header_bytes_load_21' <Predicate = true> <Delay = 0.67> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.67> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 28> <RAM>
ST_14 : Operation 121 [1/2] (0.67ns)   --->   "%ringbuffer_header_bytes_load_22 = load i5 %ringbuffer_header_bytes_addr_23" [can.c:115]   --->   Operation 121 'load' 'ringbuffer_header_bytes_load_22' <Predicate = true> <Delay = 0.67> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.67> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 28> <RAM>
ST_14 : Operation 122 [1/1] (0.00ns)   --->   "%writeCanIndex = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i8.i8.i8.i8, i8 %ringbuffer_header_bytes_load_19, i8 %ringbuffer_header_bytes_load_20, i8 %ringbuffer_header_bytes_load_21, i8 %ringbuffer_header_bytes_load_22" [can.c:114]   --->   Operation 122 'bitconcatenate' 'writeCanIndex' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 123 [1/1] (1.01ns)   --->   "%add_ln116 = add i32 %writeCanIndex, i32 1" [can.c:116]   --->   Operation 123 'add' 'add_ln116' <Predicate = true> <Delay = 1.01> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 124 [36/36] (1.47ns)   --->   "%nextWriteCanIndex = urem i32 %add_ln116, i32 %max_can_count" [can.c:116]   --->   Operation 124 'urem' 'nextWriteCanIndex' <Predicate = true> <Delay = 1.47> <CoreInst = "DivnS_SEQ">   --->   Core 7 'DivnS_SEQ' <Latency = 35> <II = 32> <Delay = 1.47> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 15 <SV = 12> <Delay = 1.47>
ST_15 : Operation 125 [35/36] (1.47ns)   --->   "%nextWriteCanIndex = urem i32 %add_ln116, i32 %max_can_count" [can.c:116]   --->   Operation 125 'urem' 'nextWriteCanIndex' <Predicate = true> <Delay = 1.47> <CoreInst = "DivnS_SEQ">   --->   Core 7 'DivnS_SEQ' <Latency = 35> <II = 32> <Delay = 1.47> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 16 <SV = 13> <Delay = 1.47>
ST_16 : Operation 126 [34/36] (1.47ns)   --->   "%nextWriteCanIndex = urem i32 %add_ln116, i32 %max_can_count" [can.c:116]   --->   Operation 126 'urem' 'nextWriteCanIndex' <Predicate = true> <Delay = 1.47> <CoreInst = "DivnS_SEQ">   --->   Core 7 'DivnS_SEQ' <Latency = 35> <II = 32> <Delay = 1.47> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 17 <SV = 14> <Delay = 1.47>
ST_17 : Operation 127 [33/36] (1.47ns)   --->   "%nextWriteCanIndex = urem i32 %add_ln116, i32 %max_can_count" [can.c:116]   --->   Operation 127 'urem' 'nextWriteCanIndex' <Predicate = true> <Delay = 1.47> <CoreInst = "DivnS_SEQ">   --->   Core 7 'DivnS_SEQ' <Latency = 35> <II = 32> <Delay = 1.47> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 18 <SV = 15> <Delay = 1.47>
ST_18 : Operation 128 [32/36] (1.47ns)   --->   "%nextWriteCanIndex = urem i32 %add_ln116, i32 %max_can_count" [can.c:116]   --->   Operation 128 'urem' 'nextWriteCanIndex' <Predicate = true> <Delay = 1.47> <CoreInst = "DivnS_SEQ">   --->   Core 7 'DivnS_SEQ' <Latency = 35> <II = 32> <Delay = 1.47> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 19 <SV = 16> <Delay = 1.47>
ST_19 : Operation 129 [31/36] (1.47ns)   --->   "%nextWriteCanIndex = urem i32 %add_ln116, i32 %max_can_count" [can.c:116]   --->   Operation 129 'urem' 'nextWriteCanIndex' <Predicate = true> <Delay = 1.47> <CoreInst = "DivnS_SEQ">   --->   Core 7 'DivnS_SEQ' <Latency = 35> <II = 32> <Delay = 1.47> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 20 <SV = 17> <Delay = 1.47>
ST_20 : Operation 130 [30/36] (1.47ns)   --->   "%nextWriteCanIndex = urem i32 %add_ln116, i32 %max_can_count" [can.c:116]   --->   Operation 130 'urem' 'nextWriteCanIndex' <Predicate = true> <Delay = 1.47> <CoreInst = "DivnS_SEQ">   --->   Core 7 'DivnS_SEQ' <Latency = 35> <II = 32> <Delay = 1.47> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 21 <SV = 18> <Delay = 1.47>
ST_21 : Operation 131 [29/36] (1.47ns)   --->   "%nextWriteCanIndex = urem i32 %add_ln116, i32 %max_can_count" [can.c:116]   --->   Operation 131 'urem' 'nextWriteCanIndex' <Predicate = true> <Delay = 1.47> <CoreInst = "DivnS_SEQ">   --->   Core 7 'DivnS_SEQ' <Latency = 35> <II = 32> <Delay = 1.47> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 22 <SV = 19> <Delay = 1.47>
ST_22 : Operation 132 [28/36] (1.47ns)   --->   "%nextWriteCanIndex = urem i32 %add_ln116, i32 %max_can_count" [can.c:116]   --->   Operation 132 'urem' 'nextWriteCanIndex' <Predicate = true> <Delay = 1.47> <CoreInst = "DivnS_SEQ">   --->   Core 7 'DivnS_SEQ' <Latency = 35> <II = 32> <Delay = 1.47> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 23 <SV = 20> <Delay = 1.47>
ST_23 : Operation 133 [27/36] (1.47ns)   --->   "%nextWriteCanIndex = urem i32 %add_ln116, i32 %max_can_count" [can.c:116]   --->   Operation 133 'urem' 'nextWriteCanIndex' <Predicate = true> <Delay = 1.47> <CoreInst = "DivnS_SEQ">   --->   Core 7 'DivnS_SEQ' <Latency = 35> <II = 32> <Delay = 1.47> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 24 <SV = 21> <Delay = 1.47>
ST_24 : Operation 134 [26/36] (1.47ns)   --->   "%nextWriteCanIndex = urem i32 %add_ln116, i32 %max_can_count" [can.c:116]   --->   Operation 134 'urem' 'nextWriteCanIndex' <Predicate = true> <Delay = 1.47> <CoreInst = "DivnS_SEQ">   --->   Core 7 'DivnS_SEQ' <Latency = 35> <II = 32> <Delay = 1.47> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 25 <SV = 22> <Delay = 1.47>
ST_25 : Operation 135 [25/36] (1.47ns)   --->   "%nextWriteCanIndex = urem i32 %add_ln116, i32 %max_can_count" [can.c:116]   --->   Operation 135 'urem' 'nextWriteCanIndex' <Predicate = true> <Delay = 1.47> <CoreInst = "DivnS_SEQ">   --->   Core 7 'DivnS_SEQ' <Latency = 35> <II = 32> <Delay = 1.47> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 26 <SV = 23> <Delay = 1.47>
ST_26 : Operation 136 [24/36] (1.47ns)   --->   "%nextWriteCanIndex = urem i32 %add_ln116, i32 %max_can_count" [can.c:116]   --->   Operation 136 'urem' 'nextWriteCanIndex' <Predicate = true> <Delay = 1.47> <CoreInst = "DivnS_SEQ">   --->   Core 7 'DivnS_SEQ' <Latency = 35> <II = 32> <Delay = 1.47> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 27 <SV = 24> <Delay = 1.47>
ST_27 : Operation 137 [23/36] (1.47ns)   --->   "%nextWriteCanIndex = urem i32 %add_ln116, i32 %max_can_count" [can.c:116]   --->   Operation 137 'urem' 'nextWriteCanIndex' <Predicate = true> <Delay = 1.47> <CoreInst = "DivnS_SEQ">   --->   Core 7 'DivnS_SEQ' <Latency = 35> <II = 32> <Delay = 1.47> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 28 <SV = 25> <Delay = 1.47>
ST_28 : Operation 138 [22/36] (1.47ns)   --->   "%nextWriteCanIndex = urem i32 %add_ln116, i32 %max_can_count" [can.c:116]   --->   Operation 138 'urem' 'nextWriteCanIndex' <Predicate = true> <Delay = 1.47> <CoreInst = "DivnS_SEQ">   --->   Core 7 'DivnS_SEQ' <Latency = 35> <II = 32> <Delay = 1.47> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 29 <SV = 26> <Delay = 1.47>
ST_29 : Operation 139 [21/36] (1.47ns)   --->   "%nextWriteCanIndex = urem i32 %add_ln116, i32 %max_can_count" [can.c:116]   --->   Operation 139 'urem' 'nextWriteCanIndex' <Predicate = true> <Delay = 1.47> <CoreInst = "DivnS_SEQ">   --->   Core 7 'DivnS_SEQ' <Latency = 35> <II = 32> <Delay = 1.47> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 30 <SV = 27> <Delay = 1.47>
ST_30 : Operation 140 [20/36] (1.47ns)   --->   "%nextWriteCanIndex = urem i32 %add_ln116, i32 %max_can_count" [can.c:116]   --->   Operation 140 'urem' 'nextWriteCanIndex' <Predicate = true> <Delay = 1.47> <CoreInst = "DivnS_SEQ">   --->   Core 7 'DivnS_SEQ' <Latency = 35> <II = 32> <Delay = 1.47> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 31 <SV = 28> <Delay = 1.47>
ST_31 : Operation 141 [19/36] (1.47ns)   --->   "%nextWriteCanIndex = urem i32 %add_ln116, i32 %max_can_count" [can.c:116]   --->   Operation 141 'urem' 'nextWriteCanIndex' <Predicate = true> <Delay = 1.47> <CoreInst = "DivnS_SEQ">   --->   Core 7 'DivnS_SEQ' <Latency = 35> <II = 32> <Delay = 1.47> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 32 <SV = 29> <Delay = 1.47>
ST_32 : Operation 142 [18/36] (1.47ns)   --->   "%nextWriteCanIndex = urem i32 %add_ln116, i32 %max_can_count" [can.c:116]   --->   Operation 142 'urem' 'nextWriteCanIndex' <Predicate = true> <Delay = 1.47> <CoreInst = "DivnS_SEQ">   --->   Core 7 'DivnS_SEQ' <Latency = 35> <II = 32> <Delay = 1.47> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 33 <SV = 30> <Delay = 1.47>
ST_33 : Operation 143 [17/36] (1.47ns)   --->   "%nextWriteCanIndex = urem i32 %add_ln116, i32 %max_can_count" [can.c:116]   --->   Operation 143 'urem' 'nextWriteCanIndex' <Predicate = true> <Delay = 1.47> <CoreInst = "DivnS_SEQ">   --->   Core 7 'DivnS_SEQ' <Latency = 35> <II = 32> <Delay = 1.47> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 34 <SV = 31> <Delay = 1.47>
ST_34 : Operation 144 [16/36] (1.47ns)   --->   "%nextWriteCanIndex = urem i32 %add_ln116, i32 %max_can_count" [can.c:116]   --->   Operation 144 'urem' 'nextWriteCanIndex' <Predicate = true> <Delay = 1.47> <CoreInst = "DivnS_SEQ">   --->   Core 7 'DivnS_SEQ' <Latency = 35> <II = 32> <Delay = 1.47> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 35 <SV = 32> <Delay = 1.47>
ST_35 : Operation 145 [15/36] (1.47ns)   --->   "%nextWriteCanIndex = urem i32 %add_ln116, i32 %max_can_count" [can.c:116]   --->   Operation 145 'urem' 'nextWriteCanIndex' <Predicate = true> <Delay = 1.47> <CoreInst = "DivnS_SEQ">   --->   Core 7 'DivnS_SEQ' <Latency = 35> <II = 32> <Delay = 1.47> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 36 <SV = 33> <Delay = 1.47>
ST_36 : Operation 146 [14/36] (1.47ns)   --->   "%nextWriteCanIndex = urem i32 %add_ln116, i32 %max_can_count" [can.c:116]   --->   Operation 146 'urem' 'nextWriteCanIndex' <Predicate = true> <Delay = 1.47> <CoreInst = "DivnS_SEQ">   --->   Core 7 'DivnS_SEQ' <Latency = 35> <II = 32> <Delay = 1.47> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 37 <SV = 34> <Delay = 1.47>
ST_37 : Operation 147 [13/36] (1.47ns)   --->   "%nextWriteCanIndex = urem i32 %add_ln116, i32 %max_can_count" [can.c:116]   --->   Operation 147 'urem' 'nextWriteCanIndex' <Predicate = true> <Delay = 1.47> <CoreInst = "DivnS_SEQ">   --->   Core 7 'DivnS_SEQ' <Latency = 35> <II = 32> <Delay = 1.47> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 38 <SV = 35> <Delay = 1.47>
ST_38 : Operation 148 [12/36] (1.47ns)   --->   "%nextWriteCanIndex = urem i32 %add_ln116, i32 %max_can_count" [can.c:116]   --->   Operation 148 'urem' 'nextWriteCanIndex' <Predicate = true> <Delay = 1.47> <CoreInst = "DivnS_SEQ">   --->   Core 7 'DivnS_SEQ' <Latency = 35> <II = 32> <Delay = 1.47> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 39 <SV = 36> <Delay = 1.47>
ST_39 : Operation 149 [11/36] (1.47ns)   --->   "%nextWriteCanIndex = urem i32 %add_ln116, i32 %max_can_count" [can.c:116]   --->   Operation 149 'urem' 'nextWriteCanIndex' <Predicate = true> <Delay = 1.47> <CoreInst = "DivnS_SEQ">   --->   Core 7 'DivnS_SEQ' <Latency = 35> <II = 32> <Delay = 1.47> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 40 <SV = 37> <Delay = 1.47>
ST_40 : Operation 150 [10/36] (1.47ns)   --->   "%nextWriteCanIndex = urem i32 %add_ln116, i32 %max_can_count" [can.c:116]   --->   Operation 150 'urem' 'nextWriteCanIndex' <Predicate = true> <Delay = 1.47> <CoreInst = "DivnS_SEQ">   --->   Core 7 'DivnS_SEQ' <Latency = 35> <II = 32> <Delay = 1.47> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 41 <SV = 38> <Delay = 1.47>
ST_41 : Operation 151 [9/36] (1.47ns)   --->   "%nextWriteCanIndex = urem i32 %add_ln116, i32 %max_can_count" [can.c:116]   --->   Operation 151 'urem' 'nextWriteCanIndex' <Predicate = true> <Delay = 1.47> <CoreInst = "DivnS_SEQ">   --->   Core 7 'DivnS_SEQ' <Latency = 35> <II = 32> <Delay = 1.47> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 42 <SV = 39> <Delay = 1.47>
ST_42 : Operation 152 [8/36] (1.47ns)   --->   "%nextWriteCanIndex = urem i32 %add_ln116, i32 %max_can_count" [can.c:116]   --->   Operation 152 'urem' 'nextWriteCanIndex' <Predicate = true> <Delay = 1.47> <CoreInst = "DivnS_SEQ">   --->   Core 7 'DivnS_SEQ' <Latency = 35> <II = 32> <Delay = 1.47> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 43 <SV = 40> <Delay = 1.47>
ST_43 : Operation 153 [7/36] (1.47ns)   --->   "%nextWriteCanIndex = urem i32 %add_ln116, i32 %max_can_count" [can.c:116]   --->   Operation 153 'urem' 'nextWriteCanIndex' <Predicate = true> <Delay = 1.47> <CoreInst = "DivnS_SEQ">   --->   Core 7 'DivnS_SEQ' <Latency = 35> <II = 32> <Delay = 1.47> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 44 <SV = 41> <Delay = 1.47>
ST_44 : Operation 154 [6/36] (1.47ns)   --->   "%nextWriteCanIndex = urem i32 %add_ln116, i32 %max_can_count" [can.c:116]   --->   Operation 154 'urem' 'nextWriteCanIndex' <Predicate = true> <Delay = 1.47> <CoreInst = "DivnS_SEQ">   --->   Core 7 'DivnS_SEQ' <Latency = 35> <II = 32> <Delay = 1.47> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 45 <SV = 42> <Delay = 1.47>
ST_45 : Operation 155 [5/36] (1.47ns)   --->   "%nextWriteCanIndex = urem i32 %add_ln116, i32 %max_can_count" [can.c:116]   --->   Operation 155 'urem' 'nextWriteCanIndex' <Predicate = true> <Delay = 1.47> <CoreInst = "DivnS_SEQ">   --->   Core 7 'DivnS_SEQ' <Latency = 35> <II = 32> <Delay = 1.47> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 46 <SV = 43> <Delay = 1.47>
ST_46 : Operation 156 [4/36] (1.47ns)   --->   "%nextWriteCanIndex = urem i32 %add_ln116, i32 %max_can_count" [can.c:116]   --->   Operation 156 'urem' 'nextWriteCanIndex' <Predicate = true> <Delay = 1.47> <CoreInst = "DivnS_SEQ">   --->   Core 7 'DivnS_SEQ' <Latency = 35> <II = 32> <Delay = 1.47> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 47 <SV = 44> <Delay = 1.47>
ST_47 : Operation 157 [1/1] (0.00ns)   --->   "%ringbuffer_header_bytes_addr_16 = getelementptr i8 %ringbuffer_header_bytes, i64 0, i64 20" [can.c:108]   --->   Operation 157 'getelementptr' 'ringbuffer_header_bytes_addr_16' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 158 [2/2] (0.67ns)   --->   "%ringbuffer_header_bytes_load_15 = load i5 %ringbuffer_header_bytes_addr_16" [can.c:108]   --->   Operation 158 'load' 'ringbuffer_header_bytes_load_15' <Predicate = true> <Delay = 0.67> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.67> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 28> <RAM>
ST_47 : Operation 159 [1/1] (0.00ns)   --->   "%ringbuffer_header_bytes_addr_17 = getelementptr i8 %ringbuffer_header_bytes, i64 0, i64 21" [can.c:109]   --->   Operation 159 'getelementptr' 'ringbuffer_header_bytes_addr_17' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 160 [2/2] (0.67ns)   --->   "%ringbuffer_header_bytes_load_16 = load i5 %ringbuffer_header_bytes_addr_17" [can.c:109]   --->   Operation 160 'load' 'ringbuffer_header_bytes_load_16' <Predicate = true> <Delay = 0.67> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.67> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 28> <RAM>
ST_47 : Operation 161 [3/36] (1.47ns)   --->   "%nextWriteCanIndex = urem i32 %add_ln116, i32 %max_can_count" [can.c:116]   --->   Operation 161 'urem' 'nextWriteCanIndex' <Predicate = true> <Delay = 1.47> <CoreInst = "DivnS_SEQ">   --->   Core 7 'DivnS_SEQ' <Latency = 35> <II = 32> <Delay = 1.47> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 48 <SV = 45> <Delay = 1.47>
ST_48 : Operation 162 [1/2] (0.67ns)   --->   "%ringbuffer_header_bytes_load_15 = load i5 %ringbuffer_header_bytes_addr_16" [can.c:108]   --->   Operation 162 'load' 'ringbuffer_header_bytes_load_15' <Predicate = true> <Delay = 0.67> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.67> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 28> <RAM>
ST_48 : Operation 163 [1/2] (0.67ns)   --->   "%ringbuffer_header_bytes_load_16 = load i5 %ringbuffer_header_bytes_addr_17" [can.c:109]   --->   Operation 163 'load' 'ringbuffer_header_bytes_load_16' <Predicate = true> <Delay = 0.67> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.67> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 28> <RAM>
ST_48 : Operation 164 [1/1] (0.00ns)   --->   "%ringbuffer_header_bytes_addr_18 = getelementptr i8 %ringbuffer_header_bytes, i64 0, i64 22" [can.c:110]   --->   Operation 164 'getelementptr' 'ringbuffer_header_bytes_addr_18' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 165 [2/2] (0.67ns)   --->   "%ringbuffer_header_bytes_load_17 = load i5 %ringbuffer_header_bytes_addr_18" [can.c:110]   --->   Operation 165 'load' 'ringbuffer_header_bytes_load_17' <Predicate = true> <Delay = 0.67> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.67> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 28> <RAM>
ST_48 : Operation 166 [1/1] (0.00ns)   --->   "%ringbuffer_header_bytes_addr_19 = getelementptr i8 %ringbuffer_header_bytes, i64 0, i64 23" [can.c:111]   --->   Operation 166 'getelementptr' 'ringbuffer_header_bytes_addr_19' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 167 [2/2] (0.67ns)   --->   "%ringbuffer_header_bytes_load_18 = load i5 %ringbuffer_header_bytes_addr_19" [can.c:111]   --->   Operation 167 'load' 'ringbuffer_header_bytes_load_18' <Predicate = true> <Delay = 0.67> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.67> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 28> <RAM>
ST_48 : Operation 168 [2/36] (1.47ns)   --->   "%nextWriteCanIndex = urem i32 %add_ln116, i32 %max_can_count" [can.c:116]   --->   Operation 168 'urem' 'nextWriteCanIndex' <Predicate = true> <Delay = 1.47> <CoreInst = "DivnS_SEQ">   --->   Core 7 'DivnS_SEQ' <Latency = 35> <II = 32> <Delay = 1.47> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 49 <SV = 46> <Delay = 5.52>
ST_49 : Operation 169 [1/2] (0.67ns)   --->   "%ringbuffer_header_bytes_load_17 = load i5 %ringbuffer_header_bytes_addr_18" [can.c:110]   --->   Operation 169 'load' 'ringbuffer_header_bytes_load_17' <Predicate = true> <Delay = 0.67> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.67> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 28> <RAM>
ST_49 : Operation 170 [1/2] (0.67ns)   --->   "%ringbuffer_header_bytes_load_18 = load i5 %ringbuffer_header_bytes_addr_19" [can.c:111]   --->   Operation 170 'load' 'ringbuffer_header_bytes_load_18' <Predicate = true> <Delay = 0.67> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.67> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 28> <RAM>
ST_49 : Operation 171 [1/1] (0.00ns)   --->   "%readCanIndex = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i8.i8.i8.i8, i8 %ringbuffer_header_bytes_load_15, i8 %ringbuffer_header_bytes_load_16, i8 %ringbuffer_header_bytes_load_17, i8 %ringbuffer_header_bytes_load_18" [can.c:110]   --->   Operation 171 'bitconcatenate' 'readCanIndex' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 172 [1/36] (1.47ns)   --->   "%nextWriteCanIndex = urem i32 %add_ln116, i32 %max_can_count" [can.c:116]   --->   Operation 172 'urem' 'nextWriteCanIndex' <Predicate = true> <Delay = 1.47> <CoreInst = "DivnS_SEQ">   --->   Core 7 'DivnS_SEQ' <Latency = 35> <II = 32> <Delay = 1.47> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 173 [1/1] (0.99ns)   --->   "%icmp_ln118 = icmp_eq  i32 %nextWriteCanIndex, i32 %readCanIndex" [can.c:118]   --->   Operation 173 'icmp' 'icmp_ln118' <Predicate = true> <Delay = 0.99> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 174 [1/1] (0.00ns)   --->   "%br_ln118 = br i1 %icmp_ln118, void %if.else, void %if.then" [can.c:118]   --->   Operation 174 'br' 'br_ln118' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 175 [1/1] (3.42ns)   --->   "%mul_ln126 = mul i32 %writeCanIndex, i32 92" [can.c:126]   --->   Operation 175 'mul' 'mul_ln126' <Predicate = (!icmp_ln118)> <Delay = 3.42> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 176 [1/1] (0.00ns)   --->   "%zext_ln126 = zext i32 %mul_ln126" [can.c:126]   --->   Operation 176 'zext' 'zext_ln126' <Predicate = (!icmp_ln118)> <Delay = 0.00>
ST_49 : Operation 177 [1/1] (1.01ns)   --->   "%add_ln126 = add i33 %zext_ln126, i33 28" [can.c:126]   --->   Operation 177 'add' 'add_ln126' <Predicate = (!icmp_ln118)> <Delay = 1.01> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 178 [1/1] (0.00ns)   --->   "%zext_ln126_1 = zext i33 %add_ln126" [can.c:126]   --->   Operation 178 'zext' 'zext_ln126_1' <Predicate = (!icmp_ln118)> <Delay = 0.00>
ST_49 : Operation 179 [1/1] (1.08ns)   --->   "%add_ln126_1 = add i64 %zext_ln126_1, i64 %ddr_header_read" [can.c:126]   --->   Operation 179 'add' 'add_ln126_1' <Predicate = (!icmp_ln118)> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 180 [1/1] (1.08ns)   --->   "%add_ln120 = add i64 %ddr_header_read, i64 4" [can.c:120]   --->   Operation 180 'add' 'add_ln120' <Predicate = (icmp_ln118)> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 181 [1/1] (0.00ns)   --->   "%ps_ddr_addr_4 = getelementptr i8 %ps_ddr, i64 %add_ln120" [can.c:120]   --->   Operation 181 'getelementptr' 'ps_ddr_addr_4' <Predicate = (icmp_ln118)> <Delay = 0.00>

State 50 <SV = 47> <Delay = 7.30>
ST_50 : Operation 182 [1/1] (0.00ns)   --->   "%ps_ddr_addr_5 = getelementptr i8 %ps_ddr, i64 %add_ln126_1" [can.c:126]   --->   Operation 182 'getelementptr' 'ps_ddr_addr_5' <Predicate = true> <Delay = 0.00>
ST_50 : Operation 183 [1/1] (7.30ns)   --->   "%empty_62 = writereq i1 @_ssdm_op_WriteReq.m_axi.p1i8, i8 %ps_ddr_addr_5, i32 92" [can.c:126]   --->   Operation 183 'writereq' 'empty_62' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 51 <SV = 48> <Delay = 0.00>
ST_51 : Operation 184 [2/2] (0.00ns)   --->   "%call_ln126 = call void @write_ddr.1_Pipeline_1, i8 %ps_ddr, i64 %add_ln126_1, i8 %data" [can.c:126]   --->   Operation 184 'call' 'call_ln126' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 52 <SV = 49> <Delay = 0.00>
ST_52 : Operation 185 [1/2] (0.00ns)   --->   "%call_ln126 = call void @write_ddr.1_Pipeline_1, i8 %ps_ddr, i64 %add_ln126_1, i8 %data" [can.c:126]   --->   Operation 185 'call' 'call_ln126' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 53 <SV = 50> <Delay = 7.30>
ST_53 : Operation 186 [5/5] (7.30ns)   --->   "%empty_63 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i8, i8 %ps_ddr_addr_5" [clu.c:10]   --->   Operation 186 'writeresp' 'empty_63' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 54 <SV = 51> <Delay = 7.30>
ST_54 : Operation 187 [4/5] (7.30ns)   --->   "%empty_63 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i8, i8 %ps_ddr_addr_5" [clu.c:10]   --->   Operation 187 'writeresp' 'empty_63' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 55 <SV = 52> <Delay = 7.30>
ST_55 : Operation 188 [3/5] (7.30ns)   --->   "%empty_63 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i8, i8 %ps_ddr_addr_5" [clu.c:10]   --->   Operation 188 'writeresp' 'empty_63' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 56 <SV = 53> <Delay = 7.30>
ST_56 : Operation 189 [2/5] (7.30ns)   --->   "%empty_63 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i8, i8 %ps_ddr_addr_5" [clu.c:10]   --->   Operation 189 'writeresp' 'empty_63' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_56 : Operation 190 [1/1] (1.08ns)   --->   "%add_ln17 = add i64 %ddr_header_read, i64 24" [clu.c:17]   --->   Operation 190 'add' 'add_ln17' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 57 <SV = 54> <Delay = 7.30>
ST_57 : Operation 191 [1/5] (7.30ns)   --->   "%empty_63 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i8, i8 %ps_ddr_addr_5" [clu.c:10]   --->   Operation 191 'writeresp' 'empty_63' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_57 : Operation 192 [1/1] (0.00ns)   --->   "%ps_ddr_addr_6 = getelementptr i8 %ps_ddr, i64 %add_ln17" [clu.c:17]   --->   Operation 192 'getelementptr' 'ps_ddr_addr_6' <Predicate = true> <Delay = 0.00>
ST_57 : Operation 193 [1/1] (7.30ns)   --->   "%empty_64 = writereq i1 @_ssdm_op_WriteReq.m_axi.p1i8, i8 %ps_ddr_addr_6, i32 4" [clu.c:17]   --->   Operation 193 'writereq' 'empty_64' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 58 <SV = 55> <Delay = 0.52>
ST_58 : Operation 194 [1/1] (0.00ns)   --->   "%write_index_array_0 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %nextWriteCanIndex, i32 24, i32 31" [clu.c:13]   --->   Operation 194 'partselect' 'write_index_array_0' <Predicate = true> <Delay = 0.00>
ST_58 : Operation 195 [1/1] (0.00ns)   --->   "%write_index_array_1 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %nextWriteCanIndex, i32 16, i32 23" [clu.c:14]   --->   Operation 195 'partselect' 'write_index_array_1' <Predicate = true> <Delay = 0.00>
ST_58 : Operation 196 [1/1] (0.00ns)   --->   "%write_index_array_2 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %nextWriteCanIndex, i32 8, i32 15" [clu.c:15]   --->   Operation 196 'partselect' 'write_index_array_2' <Predicate = true> <Delay = 0.00>
ST_58 : Operation 197 [1/1] (0.00ns)   --->   "%write_index_array_3 = trunc i32 %nextWriteCanIndex" [clu.c:16]   --->   Operation 197 'trunc' 'write_index_array_3' <Predicate = true> <Delay = 0.00>
ST_58 : Operation 198 [2/2] (0.52ns)   --->   "%call_ln17 = call void @write_ddr.1_Pipeline_2, i8 %ps_ddr, i64 %add_ln17, i8 %write_index_array_0, i8 %write_index_array_1, i8 %write_index_array_2, i8 %write_index_array_3" [clu.c:17]   --->   Operation 198 'call' 'call_ln17' <Predicate = true> <Delay = 0.52> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 59 <SV = 56> <Delay = 0.00>
ST_59 : Operation 199 [1/2] (0.00ns)   --->   "%call_ln17 = call void @write_ddr.1_Pipeline_2, i8 %ps_ddr, i64 %add_ln17, i8 %write_index_array_0, i8 %write_index_array_1, i8 %write_index_array_2, i8 %write_index_array_3" [clu.c:17]   --->   Operation 199 'call' 'call_ln17' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 60 <SV = 57> <Delay = 7.30>
ST_60 : Operation 200 [5/5] (7.30ns)   --->   "%empty_65 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i8, i8 %ps_ddr_addr_6" [clu.c:20]   --->   Operation 200 'writeresp' 'empty_65' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 61 <SV = 58> <Delay = 7.30>
ST_61 : Operation 201 [4/5] (7.30ns)   --->   "%empty_65 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i8, i8 %ps_ddr_addr_6" [clu.c:20]   --->   Operation 201 'writeresp' 'empty_65' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 62 <SV = 59> <Delay = 7.30>
ST_62 : Operation 202 [3/5] (7.30ns)   --->   "%empty_65 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i8, i8 %ps_ddr_addr_6" [clu.c:20]   --->   Operation 202 'writeresp' 'empty_65' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 63 <SV = 60> <Delay = 7.30>
ST_63 : Operation 203 [2/5] (7.30ns)   --->   "%empty_65 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i8, i8 %ps_ddr_addr_6" [clu.c:20]   --->   Operation 203 'writeresp' 'empty_65' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 64 <SV = 61> <Delay = 7.30>
ST_64 : Operation 204 [1/5] (7.30ns)   --->   "%empty_65 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i8, i8 %ps_ddr_addr_6" [clu.c:20]   --->   Operation 204 'writeresp' 'empty_65' <Predicate = (!icmp_ln118)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_64 : Operation 205 [1/1] (0.00ns)   --->   "%br_ln131 = br void %cleanup" [can.c:131]   --->   Operation 205 'br' 'br_ln131' <Predicate = (!icmp_ln118)> <Delay = 0.00>
ST_64 : Operation 206 [1/1] (0.00ns)   --->   "%ret_ln131 = ret" [can.c:131]   --->   Operation 206 'ret' 'ret_ln131' <Predicate = true> <Delay = 0.00>

State 65 <SV = 47> <Delay = 7.30>
ST_65 : Operation 207 [1/1] (0.00ns)   --->   "%dropped_can_counter_load = load i16 %dropped_can_counter" [can.c:119]   --->   Operation 207 'load' 'dropped_can_counter_load' <Predicate = true> <Delay = 0.00>
ST_65 : Operation 208 [1/1] (0.00ns)   --->   "%trunc_ln119 = trunc i16 %dropped_can_counter_load" [can.c:119]   --->   Operation 208 'trunc' 'trunc_ln119' <Predicate = true> <Delay = 0.00>
ST_65 : Operation 209 [1/1] (0.85ns)   --->   "%add_ln119 = add i16 %dropped_can_counter_load, i16 1" [can.c:119]   --->   Operation 209 'add' 'add_ln119' <Predicate = true> <Delay = 0.85> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.85> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_65 : Operation 210 [1/1] (0.00ns)   --->   "%store_ln119 = store i16 %add_ln119, i16 %dropped_can_counter" [can.c:119]   --->   Operation 210 'store' 'store_ln119' <Predicate = true> <Delay = 0.00>
ST_65 : Operation 211 [1/1] (0.76ns)   --->   "%add_ln120_2 = add i8 %trunc_ln119, i8 1" [can.c:120]   --->   Operation 211 'add' 'add_ln120_2' <Predicate = true> <Delay = 0.76> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_65 : Operation 212 [1/1] (7.30ns)   --->   "%ps_ddr_addr_4_req = writereq i1 @_ssdm_op_WriteReq.m_axi.i8P1A, i8 %ps_ddr_addr_4, i32 1" [can.c:120]   --->   Operation 212 'writereq' 'ps_ddr_addr_4_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 66 <SV = 48> <Delay = 7.30>
ST_66 : Operation 213 [1/1] (7.30ns)   --->   "%write_ln120 = write void @_ssdm_op_Write.m_axi.volatile.i8P1A, i8 %ps_ddr_addr_4, i8 %add_ln120_2, i1 1" [can.c:120]   --->   Operation 213 'write' 'write_ln120' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 67 <SV = 49> <Delay = 7.30>
ST_67 : Operation 214 [5/5] (7.30ns)   --->   "%ps_ddr_addr_4_resp = writeresp i1 @_ssdm_op_WriteResp.m_axi.i8P1A, i8 %ps_ddr_addr_4" [can.c:120]   --->   Operation 214 'writeresp' 'ps_ddr_addr_4_resp' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 68 <SV = 50> <Delay = 7.30>
ST_68 : Operation 215 [4/5] (7.30ns)   --->   "%ps_ddr_addr_4_resp = writeresp i1 @_ssdm_op_WriteResp.m_axi.i8P1A, i8 %ps_ddr_addr_4" [can.c:120]   --->   Operation 215 'writeresp' 'ps_ddr_addr_4_resp' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 69 <SV = 51> <Delay = 7.30>
ST_69 : Operation 216 [3/5] (7.30ns)   --->   "%ps_ddr_addr_4_resp = writeresp i1 @_ssdm_op_WriteResp.m_axi.i8P1A, i8 %ps_ddr_addr_4" [can.c:120]   --->   Operation 216 'writeresp' 'ps_ddr_addr_4_resp' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 70 <SV = 52> <Delay = 7.30>
ST_70 : Operation 217 [2/5] (7.30ns)   --->   "%ps_ddr_addr_4_resp = writeresp i1 @_ssdm_op_WriteResp.m_axi.i8P1A, i8 %ps_ddr_addr_4" [can.c:120]   --->   Operation 217 'writeresp' 'ps_ddr_addr_4_resp' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 71 <SV = 53> <Delay = 7.30>
ST_71 : Operation 218 [1/5] (7.30ns)   --->   "%ps_ddr_addr_4_resp = writeresp i1 @_ssdm_op_WriteResp.m_axi.i8P1A, i8 %ps_ddr_addr_4" [can.c:120]   --->   Operation 218 'writeresp' 'ps_ddr_addr_4_resp' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_71 : Operation 219 [1/1] (0.00ns)   --->   "%br_ln121 = br void %cleanup" [can.c:121]   --->   Operation 219 'br' 'br_ln121' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 7.3ns
The critical path consists of the following:
	wire read operation ('ddr_header') on port 'ddr_header' [7]  (0 ns)
	'getelementptr' operation ('ps_ddr_addr', can.c:103) [9]  (0 ns)
	bus request operation ('empty', can.c:103) on port 'ps_ddr' (can.c:103) [10]  (7.3 ns)

 <State 2>: 7.3ns
The critical path consists of the following:
	bus request operation ('empty', can.c:103) on port 'ps_ddr' (can.c:103) [10]  (7.3 ns)

 <State 3>: 7.3ns
The critical path consists of the following:
	bus request operation ('empty', can.c:103) on port 'ps_ddr' (can.c:103) [10]  (7.3 ns)

 <State 4>: 7.3ns
The critical path consists of the following:
	bus request operation ('empty', can.c:103) on port 'ps_ddr' (can.c:103) [10]  (7.3 ns)

 <State 5>: 7.3ns
The critical path consists of the following:
	bus request operation ('empty', can.c:103) on port 'ps_ddr' (can.c:103) [10]  (7.3 ns)

 <State 6>: 7.3ns
The critical path consists of the following:
	bus request operation ('empty', can.c:103) on port 'ps_ddr' (can.c:103) [10]  (7.3 ns)

 <State 7>: 7.3ns
The critical path consists of the following:
	bus request operation ('empty', can.c:103) on port 'ps_ddr' (can.c:103) [10]  (7.3 ns)

 <State 8>: 1.22ns
The critical path consists of the following:
	'load' operation ('loop_index4_load') on local variable 'loop_index4' [14]  (0 ns)
	'add' operation ('empty_61') [18]  (0.789 ns)
	'store' operation ('store_ln0') of variable 'empty_61' on local variable 'loop_index4' [24]  (0.427 ns)

 <State 9>: 7.3ns
The critical path consists of the following:
	bus read operation ('ps_ddr_addr_read', can.c:103) on port 'ps_ddr' (can.c:103) [21]  (7.3 ns)

 <State 10>: 0.677ns
The critical path consists of the following:
	'getelementptr' operation ('ringbuffer_header_bytes_addr_24') [22]  (0 ns)
	'store' operation ('store_ln103', can.c:103) of variable 'ps_ddr_addr_read', can.c:103 on array 'ringbuffer_header_bytes', can.c:100 [23]  (0.677 ns)

 <State 11>: 0.677ns
The critical path consists of the following:
	'load' operation ('ringbuffer_header_bytes_load', can.c:104) on array 'ringbuffer_header_bytes', can.c:100 [28]  (0.677 ns)

 <State 12>: 0.677ns
The critical path consists of the following:
	'load' operation ('ringbuffer_header_bytes_load_13', can.c:106) on array 'ringbuffer_header_bytes', can.c:100 [32]  (0.677 ns)

 <State 13>: 0.677ns
The critical path consists of the following:
	'load' operation ('ringbuffer_header_bytes_load_19', can.c:112) on array 'ringbuffer_header_bytes', can.c:100 [46]  (0.677 ns)

 <State 14>: 3.17ns
The critical path consists of the following:
	'load' operation ('ringbuffer_header_bytes_load_21', can.c:114) on array 'ringbuffer_header_bytes', can.c:100 [50]  (0.677 ns)
	'add' operation ('add_ln116', can.c:116) [54]  (1.02 ns)
	'urem' operation ('nextWriteCanIndex', can.c:116) [55]  (1.48 ns)

 <State 15>: 1.48ns
The critical path consists of the following:
	'urem' operation ('nextWriteCanIndex', can.c:116) [55]  (1.48 ns)

 <State 16>: 1.48ns
The critical path consists of the following:
	'urem' operation ('nextWriteCanIndex', can.c:116) [55]  (1.48 ns)

 <State 17>: 1.48ns
The critical path consists of the following:
	'urem' operation ('nextWriteCanIndex', can.c:116) [55]  (1.48 ns)

 <State 18>: 1.48ns
The critical path consists of the following:
	'urem' operation ('nextWriteCanIndex', can.c:116) [55]  (1.48 ns)

 <State 19>: 1.48ns
The critical path consists of the following:
	'urem' operation ('nextWriteCanIndex', can.c:116) [55]  (1.48 ns)

 <State 20>: 1.48ns
The critical path consists of the following:
	'urem' operation ('nextWriteCanIndex', can.c:116) [55]  (1.48 ns)

 <State 21>: 1.48ns
The critical path consists of the following:
	'urem' operation ('nextWriteCanIndex', can.c:116) [55]  (1.48 ns)

 <State 22>: 1.48ns
The critical path consists of the following:
	'urem' operation ('nextWriteCanIndex', can.c:116) [55]  (1.48 ns)

 <State 23>: 1.48ns
The critical path consists of the following:
	'urem' operation ('nextWriteCanIndex', can.c:116) [55]  (1.48 ns)

 <State 24>: 1.48ns
The critical path consists of the following:
	'urem' operation ('nextWriteCanIndex', can.c:116) [55]  (1.48 ns)

 <State 25>: 1.48ns
The critical path consists of the following:
	'urem' operation ('nextWriteCanIndex', can.c:116) [55]  (1.48 ns)

 <State 26>: 1.48ns
The critical path consists of the following:
	'urem' operation ('nextWriteCanIndex', can.c:116) [55]  (1.48 ns)

 <State 27>: 1.48ns
The critical path consists of the following:
	'urem' operation ('nextWriteCanIndex', can.c:116) [55]  (1.48 ns)

 <State 28>: 1.48ns
The critical path consists of the following:
	'urem' operation ('nextWriteCanIndex', can.c:116) [55]  (1.48 ns)

 <State 29>: 1.48ns
The critical path consists of the following:
	'urem' operation ('nextWriteCanIndex', can.c:116) [55]  (1.48 ns)

 <State 30>: 1.48ns
The critical path consists of the following:
	'urem' operation ('nextWriteCanIndex', can.c:116) [55]  (1.48 ns)

 <State 31>: 1.48ns
The critical path consists of the following:
	'urem' operation ('nextWriteCanIndex', can.c:116) [55]  (1.48 ns)

 <State 32>: 1.48ns
The critical path consists of the following:
	'urem' operation ('nextWriteCanIndex', can.c:116) [55]  (1.48 ns)

 <State 33>: 1.48ns
The critical path consists of the following:
	'urem' operation ('nextWriteCanIndex', can.c:116) [55]  (1.48 ns)

 <State 34>: 1.48ns
The critical path consists of the following:
	'urem' operation ('nextWriteCanIndex', can.c:116) [55]  (1.48 ns)

 <State 35>: 1.48ns
The critical path consists of the following:
	'urem' operation ('nextWriteCanIndex', can.c:116) [55]  (1.48 ns)

 <State 36>: 1.48ns
The critical path consists of the following:
	'urem' operation ('nextWriteCanIndex', can.c:116) [55]  (1.48 ns)

 <State 37>: 1.48ns
The critical path consists of the following:
	'urem' operation ('nextWriteCanIndex', can.c:116) [55]  (1.48 ns)

 <State 38>: 1.48ns
The critical path consists of the following:
	'urem' operation ('nextWriteCanIndex', can.c:116) [55]  (1.48 ns)

 <State 39>: 1.48ns
The critical path consists of the following:
	'urem' operation ('nextWriteCanIndex', can.c:116) [55]  (1.48 ns)

 <State 40>: 1.48ns
The critical path consists of the following:
	'urem' operation ('nextWriteCanIndex', can.c:116) [55]  (1.48 ns)

 <State 41>: 1.48ns
The critical path consists of the following:
	'urem' operation ('nextWriteCanIndex', can.c:116) [55]  (1.48 ns)

 <State 42>: 1.48ns
The critical path consists of the following:
	'urem' operation ('nextWriteCanIndex', can.c:116) [55]  (1.48 ns)

 <State 43>: 1.48ns
The critical path consists of the following:
	'urem' operation ('nextWriteCanIndex', can.c:116) [55]  (1.48 ns)

 <State 44>: 1.48ns
The critical path consists of the following:
	'urem' operation ('nextWriteCanIndex', can.c:116) [55]  (1.48 ns)

 <State 45>: 1.48ns
The critical path consists of the following:
	'urem' operation ('nextWriteCanIndex', can.c:116) [55]  (1.48 ns)

 <State 46>: 1.48ns
The critical path consists of the following:
	'urem' operation ('nextWriteCanIndex', can.c:116) [55]  (1.48 ns)

 <State 47>: 1.48ns
The critical path consists of the following:
	'urem' operation ('nextWriteCanIndex', can.c:116) [55]  (1.48 ns)

 <State 48>: 1.48ns
The critical path consists of the following:
	'urem' operation ('nextWriteCanIndex', can.c:116) [55]  (1.48 ns)

 <State 49>: 5.52ns
The critical path consists of the following:
	'mul' operation ('mul_ln126', can.c:126) [59]  (3.42 ns)
	'add' operation ('add_ln126', can.c:126) [61]  (1.02 ns)
	'add' operation ('add_ln126_1', can.c:126) [63]  (1.08 ns)

 <State 50>: 7.3ns
The critical path consists of the following:
	'getelementptr' operation ('ps_ddr_addr_5', can.c:126) [64]  (0 ns)
	bus request operation ('empty_62', can.c:126) on port 'ps_ddr' (can.c:126) [65]  (7.3 ns)

 <State 51>: 0ns
The critical path consists of the following:

 <State 52>: 0ns
The critical path consists of the following:

 <State 53>: 7.3ns
The critical path consists of the following:
	bus response operation ('empty_63', clu.c:10) on port 'ps_ddr' (clu.c:10) [67]  (7.3 ns)

 <State 54>: 7.3ns
The critical path consists of the following:
	bus response operation ('empty_63', clu.c:10) on port 'ps_ddr' (clu.c:10) [67]  (7.3 ns)

 <State 55>: 7.3ns
The critical path consists of the following:
	bus response operation ('empty_63', clu.c:10) on port 'ps_ddr' (clu.c:10) [67]  (7.3 ns)

 <State 56>: 7.3ns
The critical path consists of the following:
	bus response operation ('empty_63', clu.c:10) on port 'ps_ddr' (clu.c:10) [67]  (7.3 ns)

 <State 57>: 7.3ns
The critical path consists of the following:
	bus response operation ('empty_63', clu.c:10) on port 'ps_ddr' (clu.c:10) [67]  (7.3 ns)

 <State 58>: 0.525ns
The critical path consists of the following:
	'call' operation ('call_ln17', clu.c:17) to 'write_ddr.1_Pipeline_2' [75]  (0.525 ns)

 <State 59>: 0ns
The critical path consists of the following:

 <State 60>: 7.3ns
The critical path consists of the following:
	bus response operation ('empty_65', clu.c:20) on port 'ps_ddr' (clu.c:20) [76]  (7.3 ns)

 <State 61>: 7.3ns
The critical path consists of the following:
	bus response operation ('empty_65', clu.c:20) on port 'ps_ddr' (clu.c:20) [76]  (7.3 ns)

 <State 62>: 7.3ns
The critical path consists of the following:
	bus response operation ('empty_65', clu.c:20) on port 'ps_ddr' (clu.c:20) [76]  (7.3 ns)

 <State 63>: 7.3ns
The critical path consists of the following:
	bus response operation ('empty_65', clu.c:20) on port 'ps_ddr' (clu.c:20) [76]  (7.3 ns)

 <State 64>: 7.3ns
The critical path consists of the following:
	bus response operation ('empty_65', clu.c:20) on port 'ps_ddr' (clu.c:20) [76]  (7.3 ns)

 <State 65>: 7.3ns
The critical path consists of the following:
	bus request operation ('ps_ddr_addr_4_req', can.c:120) on port 'ps_ddr' (can.c:120) [86]  (7.3 ns)

 <State 66>: 7.3ns
The critical path consists of the following:
	bus write operation ('write_ln120', can.c:120) on port 'ps_ddr' (can.c:120) [87]  (7.3 ns)

 <State 67>: 7.3ns
The critical path consists of the following:
	bus response operation ('ps_ddr_addr_4_resp', can.c:120) on port 'ps_ddr' (can.c:120) [88]  (7.3 ns)

 <State 68>: 7.3ns
The critical path consists of the following:
	bus response operation ('ps_ddr_addr_4_resp', can.c:120) on port 'ps_ddr' (can.c:120) [88]  (7.3 ns)

 <State 69>: 7.3ns
The critical path consists of the following:
	bus response operation ('ps_ddr_addr_4_resp', can.c:120) on port 'ps_ddr' (can.c:120) [88]  (7.3 ns)

 <State 70>: 7.3ns
The critical path consists of the following:
	bus response operation ('ps_ddr_addr_4_resp', can.c:120) on port 'ps_ddr' (can.c:120) [88]  (7.3 ns)

 <State 71>: 7.3ns
The critical path consists of the following:
	bus response operation ('ps_ddr_addr_4_resp', can.c:120) on port 'ps_ddr' (can.c:120) [88]  (7.3 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34
	State 35
	State 36
	State 37
	State 38
	State 39
	State 40
	State 41
	State 42
	State 43
	State 44
	State 45
	State 46
	State 47
	State 48
	State 49
	State 50
	State 51
	State 52
	State 53
	State 54
	State 55
	State 56
	State 57
	State 58
	State 59
	State 60
	State 61
	State 62
	State 63
	State 64
	State 65
	State 66
	State 67
	State 68
	State 69
	State 70
	State 71


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
