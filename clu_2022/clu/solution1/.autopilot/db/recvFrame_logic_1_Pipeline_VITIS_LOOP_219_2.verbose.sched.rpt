

================================================================
== Vitis HLS Report for 'recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2'
================================================================
* Date:           Fri Dec 16 14:07:19 2022

* Version:        2022.2 (Build 3670227 on Oct 13 2022)
* Project:        clu
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynquplus
* Target device:  xczu5ev-sfvc784-2-i


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  7.300 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |        ?|        ?|         ?|         ?|    ?|    ?|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +--------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                    |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |      Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +--------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_219_2  |        ?|        ?|        11|          2|          1|     ?|       yes|
        +--------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 2, depth = 11


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 11
* Pipeline : 1
  Pipeline-0 : II = 2, D = 11, States = { 1 2 3 4 5 6 7 8 9 10 11 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 4.11>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%Len = alloca i32 1"   --->   Operation 14 'alloca' 'Len' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%canIndex = alloca i32 1"   --->   Operation 15 'alloca' 'canIndex' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%canbase_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %canbase"   --->   Operation 16 'read' 'canbase_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%zext_ln205_read = read i15 @_ssdm_op_Read.ap_auto.i15, i15 %zext_ln205"   --->   Operation 17 'read' 'zext_ln205_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%zext_ln27_read = read i7 @_ssdm_op_Read.ap_auto.i7, i7 %zext_ln27"   --->   Operation 18 'read' 'zext_ln27_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%zext_ln205_cast = zext i15 %zext_ln205_read"   --->   Operation 19 'zext' 'zext_ln205_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%zext_ln27_cast = zext i7 %zext_ln27_read"   --->   Operation 20 'zext' 'zext_ln27_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %clu_addr, void @empty_23, i32 0, i32 0, void @empty_24, i32 0, i32 1, void @empty_25, void @empty_26, void @empty_24, i32 16, i32 16, i32 16, i32 16, void @empty_24, void @empty_24, i32 4294967295, i32 0"   --->   Operation 21 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.42ns)   --->   "%store_ln0 = store i64 8, i64 %canIndex"   --->   Operation 22 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 23 [1/1] (0.42ns)   --->   "%store_ln0 = store i32 0, i32 %Len"   --->   Operation 23 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.inc189"   --->   Operation 24 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%Len_2 = load i32 %Len" [can.c:221]   --->   Operation 25 'load' 'Len_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 26 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.99ns)   --->   "%icmp_ln219 = icmp_ult  i32 %Len_2, i32 %zext_ln27_cast" [can.c:219]   --->   Operation 27 'icmp' 'icmp_ln219' <Predicate = true> <Delay = 0.99> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%br_ln219 = br i1 %icmp_ln219, void %if.end192.loopexit.exitStub, void %for.inc189.split" [can.c:219]   --->   Operation 28 'br' 'br_ln219' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (1.01ns)   --->   "%add_ln221 = add i32 %Len_2, i32 %zext_ln205_cast" [can.c:221]   --->   Operation 29 'add' 'add_ln221' <Predicate = (icmp_ln219)> <Delay = 1.01> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 30 [1/1] (0.00ns) (grouped into LUT with out node add_ln220)   --->   "%tmp = bitselect i1 @_ssdm_op_BitSelect.i1.i32.i32, i32 %add_ln221, i32 31" [can.c:221]   --->   Operation 30 'bitselect' 'tmp' <Predicate = (icmp_ln219)> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (1.01ns)   --->   "%sub_ln221 = sub i32 0, i32 %add_ln221" [can.c:221]   --->   Operation 31 'sub' 'sub_ln221' <Predicate = (icmp_ln219)> <Delay = 1.01> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%trunc_ln221_1 = partselect i30 @_ssdm_op_PartSelect.i30.i32.i32.i32, i32 %sub_ln221, i32 2, i32 31" [can.c:221]   --->   Operation 32 'partselect' 'trunc_ln221_1' <Predicate = (icmp_ln219)> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%zext_ln221 = zext i30 %trunc_ln221_1" [can.c:221]   --->   Operation 33 'zext' 'zext_ln221' <Predicate = (icmp_ln219)> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.99ns)   --->   "%sub_ln221_1 = sub i31 0, i31 %zext_ln221" [can.c:221]   --->   Operation 34 'sub' 'sub_ln221_1' <Predicate = (icmp_ln219)> <Delay = 0.99> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 35 [1/1] (0.00ns) (grouped into LUT with out node add_ln220)   --->   "%trunc_ln221_2 = partselect i30 @_ssdm_op_PartSelect.i30.i32.i32.i32, i32 %add_ln221, i32 2, i32 31" [can.c:221]   --->   Operation 35 'partselect' 'trunc_ln221_2' <Predicate = (icmp_ln219)> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (0.00ns) (grouped into LUT with out node add_ln220)   --->   "%zext_ln221_1 = zext i30 %trunc_ln221_2" [can.c:221]   --->   Operation 36 'zext' 'zext_ln221_1' <Predicate = (icmp_ln219)> <Delay = 0.00>
ST_1 : Operation 37 [1/1] (0.00ns) (grouped into LUT with out node add_ln220)   --->   "%select_ln221 = select i1 %tmp, i31 %sub_ln221_1, i31 %zext_ln221_1" [can.c:221]   --->   Operation 37 'select' 'select_ln221' <Predicate = (icmp_ln219)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.41> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 38 [1/1] (0.00ns) (grouped into LUT with out node add_ln220)   --->   "%shl_ln2 = bitconcatenate i33 @_ssdm_op_BitConcatenate.i33.i31.i2, i31 %select_ln221, i2 0" [can.c:220]   --->   Operation 38 'bitconcatenate' 'shl_ln2' <Predicate = (icmp_ln219)> <Delay = 0.00>
ST_1 : Operation 39 [1/1] (0.00ns) (grouped into LUT with out node add_ln220)   --->   "%sext_ln220 = sext i33 %shl_ln2" [can.c:220]   --->   Operation 39 'sext' 'sext_ln220' <Predicate = (icmp_ln219)> <Delay = 0.00>
ST_1 : Operation 40 [1/1] (1.08ns) (out node of the LUT)   --->   "%add_ln220 = add i64 %sext_ln220, i64 %canbase_read" [can.c:220]   --->   Operation 40 'add' 'add_ln220' <Predicate = (icmp_ln219)> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 41 [1/1] (0.00ns)   --->   "%trunc_ln = partselect i62 @_ssdm_op_PartSelect.i62.i64.i32.i32, i64 %add_ln220, i32 2, i32 63" [can.c:220]   --->   Operation 41 'partselect' 'trunc_ln' <Predicate = (icmp_ln219)> <Delay = 0.00>
ST_1 : Operation 42 [1/1] (0.00ns)   --->   "%sext_ln220_1 = sext i62 %trunc_ln" [can.c:220]   --->   Operation 42 'sext' 'sext_ln220_1' <Predicate = (icmp_ln219)> <Delay = 0.00>
ST_1 : Operation 43 [1/1] (0.00ns)   --->   "%clu_addr_addr = getelementptr i32 %clu_addr, i64 %sext_ln220_1" [can.c:220]   --->   Operation 43 'getelementptr' 'clu_addr_addr' <Predicate = (icmp_ln219)> <Delay = 0.00>
ST_1 : Operation 44 [1/1] (1.01ns)   --->   "%Len_3 = add i32 %Len_2, i32 4" [can.c:219]   --->   Operation 44 'add' 'Len_3' <Predicate = (icmp_ln219)> <Delay = 1.01> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 45 [1/1] (0.42ns)   --->   "%store_ln219 = store i32 %Len_3, i32 %Len" [can.c:219]   --->   Operation 45 'store' 'store_ln219' <Predicate = (icmp_ln219)> <Delay = 0.42>

State 2 <SV = 1> <Delay = 7.30>
ST_2 : Operation 46 [7/7] (7.30ns)   --->   "%data_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P1A, i32 %clu_addr_addr, i32 1" [can.c:220]   --->   Operation 46 'readreq' 'data_req' <Predicate = (icmp_ln219)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 3 <SV = 2> <Delay = 7.30>
ST_3 : Operation 47 [6/7] (7.30ns)   --->   "%data_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P1A, i32 %clu_addr_addr, i32 1" [can.c:220]   --->   Operation 47 'readreq' 'data_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 4 <SV = 3> <Delay = 7.30>
ST_4 : Operation 48 [5/7] (7.30ns)   --->   "%data_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P1A, i32 %clu_addr_addr, i32 1" [can.c:220]   --->   Operation 48 'readreq' 'data_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 5 <SV = 4> <Delay = 7.30>
ST_5 : Operation 49 [4/7] (7.30ns)   --->   "%data_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P1A, i32 %clu_addr_addr, i32 1" [can.c:220]   --->   Operation 49 'readreq' 'data_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 6 <SV = 5> <Delay = 7.30>
ST_6 : Operation 50 [3/7] (7.30ns)   --->   "%data_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P1A, i32 %clu_addr_addr, i32 1" [can.c:220]   --->   Operation 50 'readreq' 'data_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 7 <SV = 6> <Delay = 7.30>
ST_7 : Operation 51 [2/7] (7.30ns)   --->   "%data_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P1A, i32 %clu_addr_addr, i32 1" [can.c:220]   --->   Operation 51 'readreq' 'data_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 8 <SV = 7> <Delay = 7.30>
ST_8 : Operation 52 [1/7] (7.30ns)   --->   "%data_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P1A, i32 %clu_addr_addr, i32 1" [can.c:220]   --->   Operation 52 'readreq' 'data_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 9 <SV = 8> <Delay = 7.30>
ST_9 : Operation 53 [1/1] (7.30ns)   --->   "%data = read i32 @_ssdm_op_Read.m_axi.volatile.i32P1A, i32 %clu_addr_addr" [can.c:220]   --->   Operation 53 'read' 'data' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 121 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_9 : Operation 54 [1/1] (0.00ns)   --->   "%trunc_ln17 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %data, i32 24, i32 31" [can.c:222]   --->   Operation 54 'partselect' 'trunc_ln17' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 55 [1/1] (0.00ns)   --->   "%trunc_ln18 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %data, i32 16, i32 23" [can.c:223]   --->   Operation 55 'partselect' 'trunc_ln18' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 56 [1/1] (0.00ns)   --->   "%trunc_ln19 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %data, i32 8, i32 15" [can.c:224]   --->   Operation 56 'partselect' 'trunc_ln19' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 57 [1/1] (0.00ns)   --->   "%trunc_ln225 = trunc i32 %data" [can.c:225]   --->   Operation 57 'trunc' 'trunc_ln225' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 80 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 80 'ret' 'ret_ln0' <Predicate = (!icmp_ln219)> <Delay = 0.00>

State 10 <SV = 9> <Delay = 1.51>
ST_10 : Operation 58 [1/1] (0.00ns)   --->   "%canIndex_load = load i64 %canIndex"   --->   Operation 58 'load' 'canIndex_load' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 59 [1/1] (0.00ns)   --->   "%empty = trunc i64 %canIndex_load"   --->   Operation 59 'trunc' 'empty' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 60 [1/1] (0.77ns)   --->   "%add_ln222 = add i7 %empty, i7 12" [can.c:222]   --->   Operation 60 'add' 'add_ln222' <Predicate = true> <Delay = 0.77> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 61 [1/1] (0.00ns)   --->   "%zext_ln222 = zext i7 %add_ln222" [can.c:222]   --->   Operation 61 'zext' 'zext_ln222' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 62 [1/1] (0.00ns)   --->   "%can_frame_addr = getelementptr i8 %can_frame, i64 0, i64 %zext_ln222" [can.c:222]   --->   Operation 62 'getelementptr' 'can_frame_addr' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 63 [1/1] (0.67ns)   --->   "%store_ln222 = store i8 %trunc_ln17, i7 %can_frame_addr" [can.c:222]   --->   Operation 63 'store' 'store_ln222' <Predicate = true> <Delay = 0.67> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.67> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 92> <RAM>
ST_10 : Operation 64 [1/1] (0.77ns)   --->   "%add_ln223 = add i7 %empty, i7 13" [can.c:223]   --->   Operation 64 'add' 'add_ln223' <Predicate = true> <Delay = 0.77> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 65 [1/1] (0.00ns)   --->   "%zext_ln223 = zext i7 %add_ln223" [can.c:223]   --->   Operation 65 'zext' 'zext_ln223' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 66 [1/1] (0.00ns)   --->   "%can_frame_addr_1 = getelementptr i8 %can_frame, i64 0, i64 %zext_ln223" [can.c:223]   --->   Operation 66 'getelementptr' 'can_frame_addr_1' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 67 [1/1] (0.67ns)   --->   "%store_ln223 = store i8 %trunc_ln18, i7 %can_frame_addr_1" [can.c:223]   --->   Operation 67 'store' 'store_ln223' <Predicate = true> <Delay = 0.67> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.67> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 92> <RAM>
ST_10 : Operation 68 [1/1] (1.08ns)   --->   "%add_ln226 = add i64 %canIndex_load, i64 4" [can.c:226]   --->   Operation 68 'add' 'add_ln226' <Predicate = true> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 69 [1/1] (0.42ns)   --->   "%store_ln219 = store i64 %add_ln226, i64 %canIndex" [can.c:219]   --->   Operation 69 'store' 'store_ln219' <Predicate = true> <Delay = 0.42>

State 11 <SV = 10> <Delay = 1.45>
ST_11 : Operation 70 [1/1] (0.00ns)   --->   "%specloopname_ln146 = specloopname void @_ssdm_op_SpecLoopName, void @empty_22" [can.c:146]   --->   Operation 70 'specloopname' 'specloopname_ln146' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 71 [1/1] (0.77ns)   --->   "%add_ln224 = add i7 %empty, i7 14" [can.c:224]   --->   Operation 71 'add' 'add_ln224' <Predicate = true> <Delay = 0.77> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 72 [1/1] (0.00ns)   --->   "%zext_ln224 = zext i7 %add_ln224" [can.c:224]   --->   Operation 72 'zext' 'zext_ln224' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 73 [1/1] (0.00ns)   --->   "%can_frame_addr_2 = getelementptr i8 %can_frame, i64 0, i64 %zext_ln224" [can.c:224]   --->   Operation 73 'getelementptr' 'can_frame_addr_2' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 74 [1/1] (0.67ns)   --->   "%store_ln224 = store i8 %trunc_ln19, i7 %can_frame_addr_2" [can.c:224]   --->   Operation 74 'store' 'store_ln224' <Predicate = true> <Delay = 0.67> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.67> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 92> <RAM>
ST_11 : Operation 75 [1/1] (0.77ns)   --->   "%add_ln225 = add i7 %empty, i7 15" [can.c:225]   --->   Operation 75 'add' 'add_ln225' <Predicate = true> <Delay = 0.77> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 76 [1/1] (0.00ns)   --->   "%zext_ln225 = zext i7 %add_ln225" [can.c:225]   --->   Operation 76 'zext' 'zext_ln225' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 77 [1/1] (0.00ns)   --->   "%can_frame_addr_3 = getelementptr i8 %can_frame, i64 0, i64 %zext_ln225" [can.c:225]   --->   Operation 77 'getelementptr' 'can_frame_addr_3' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 78 [1/1] (0.67ns)   --->   "%store_ln225 = store i8 %trunc_ln225, i7 %can_frame_addr_3" [can.c:225]   --->   Operation 78 'store' 'store_ln225' <Predicate = true> <Delay = 0.67> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.67> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 92> <RAM>
ST_11 : Operation 79 [1/1] (0.00ns)   --->   "%br_ln219 = br void %for.inc189" [can.c:219]   --->   Operation 79 'br' 'br_ln219' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 4.11ns
The critical path consists of the following:
	'alloca' operation ('Len') [6]  (0 ns)
	'load' operation ('Len', can.c:221) on local variable 'Len' [18]  (0 ns)
	'add' operation ('add_ln221', can.c:221) [26]  (1.02 ns)
	'sub' operation ('sub_ln221', can.c:221) [28]  (1.02 ns)
	'sub' operation ('sub_ln221_1', can.c:221) [31]  (0.996 ns)
	'select' operation ('select_ln221', can.c:221) [34]  (0 ns)
	'add' operation ('add_ln220', can.c:220) [37]  (1.08 ns)

 <State 2>: 7.3ns
The critical path consists of the following:
	bus request operation ('data_req', can.c:220) on port 'clu_addr' (can.c:220) [41]  (7.3 ns)

 <State 3>: 7.3ns
The critical path consists of the following:
	bus request operation ('data_req', can.c:220) on port 'clu_addr' (can.c:220) [41]  (7.3 ns)

 <State 4>: 7.3ns
The critical path consists of the following:
	bus request operation ('data_req', can.c:220) on port 'clu_addr' (can.c:220) [41]  (7.3 ns)

 <State 5>: 7.3ns
The critical path consists of the following:
	bus request operation ('data_req', can.c:220) on port 'clu_addr' (can.c:220) [41]  (7.3 ns)

 <State 6>: 7.3ns
The critical path consists of the following:
	bus request operation ('data_req', can.c:220) on port 'clu_addr' (can.c:220) [41]  (7.3 ns)

 <State 7>: 7.3ns
The critical path consists of the following:
	bus request operation ('data_req', can.c:220) on port 'clu_addr' (can.c:220) [41]  (7.3 ns)

 <State 8>: 7.3ns
The critical path consists of the following:
	bus request operation ('data_req', can.c:220) on port 'clu_addr' (can.c:220) [41]  (7.3 ns)

 <State 9>: 7.3ns
The critical path consists of the following:
	bus read operation ('data', can.c:220) on port 'clu_addr' (can.c:220) [42]  (7.3 ns)

 <State 10>: 1.51ns
The critical path consists of the following:
	'load' operation ('canIndex_load') on local variable 'canIndex' [23]  (0 ns)
	'add' operation ('add_ln226', can.c:226) [63]  (1.08 ns)
	'store' operation ('store_ln219', can.c:219) of variable 'add_ln226', can.c:226 on local variable 'canIndex' [65]  (0.427 ns)

 <State 11>: 1.45ns
The critical path consists of the following:
	'add' operation ('add_ln224', can.c:224) [54]  (0.773 ns)
	'getelementptr' operation ('can_frame_addr_2', can.c:224) [56]  (0 ns)
	'store' operation ('store_ln224', can.c:224) of variable 'trunc_ln19', can.c:224 on array 'can_frame' [57]  (0.677 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
