-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
-- Version: 2022.2
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity clu_recvFrame_logic_1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    m_axi_clu_addr_AWVALID : OUT STD_LOGIC;
    m_axi_clu_addr_AWREADY : IN STD_LOGIC;
    m_axi_clu_addr_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_clu_addr_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_clu_addr_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_clu_addr_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_clu_addr_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_clu_addr_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_clu_addr_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_clu_addr_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_clu_addr_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_clu_addr_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_clu_addr_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_clu_addr_WVALID : OUT STD_LOGIC;
    m_axi_clu_addr_WREADY : IN STD_LOGIC;
    m_axi_clu_addr_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_clu_addr_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_clu_addr_WLAST : OUT STD_LOGIC;
    m_axi_clu_addr_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_clu_addr_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_clu_addr_ARVALID : OUT STD_LOGIC;
    m_axi_clu_addr_ARREADY : IN STD_LOGIC;
    m_axi_clu_addr_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_clu_addr_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_clu_addr_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_clu_addr_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_clu_addr_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_clu_addr_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_clu_addr_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_clu_addr_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_clu_addr_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_clu_addr_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_clu_addr_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_clu_addr_RVALID : IN STD_LOGIC;
    m_axi_clu_addr_RREADY : OUT STD_LOGIC;
    m_axi_clu_addr_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    m_axi_clu_addr_RLAST : IN STD_LOGIC;
    m_axi_clu_addr_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_clu_addr_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
    m_axi_clu_addr_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_clu_addr_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_clu_addr_BVALID : IN STD_LOGIC;
    m_axi_clu_addr_BREADY : OUT STD_LOGIC;
    m_axi_clu_addr_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_clu_addr_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_clu_addr_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    canbase : IN STD_LOGIC_VECTOR (63 downto 0);
    m_axi_ps_ddr_AWVALID : OUT STD_LOGIC;
    m_axi_ps_ddr_AWREADY : IN STD_LOGIC;
    m_axi_ps_ddr_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_ps_ddr_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_ps_ddr_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_ps_ddr_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_ps_ddr_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_ps_ddr_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_ps_ddr_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_ps_ddr_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_ps_ddr_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_ps_ddr_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_ps_ddr_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_ps_ddr_WVALID : OUT STD_LOGIC;
    m_axi_ps_ddr_WREADY : IN STD_LOGIC;
    m_axi_ps_ddr_WDATA : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_ps_ddr_WSTRB : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_ps_ddr_WLAST : OUT STD_LOGIC;
    m_axi_ps_ddr_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_ps_ddr_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_ps_ddr_ARVALID : OUT STD_LOGIC;
    m_axi_ps_ddr_ARREADY : IN STD_LOGIC;
    m_axi_ps_ddr_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_ps_ddr_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_ps_ddr_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_ps_ddr_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_ps_ddr_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_ps_ddr_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_ps_ddr_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_ps_ddr_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_ps_ddr_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_ps_ddr_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_ps_ddr_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_ps_ddr_RVALID : IN STD_LOGIC;
    m_axi_ps_ddr_RREADY : OUT STD_LOGIC;
    m_axi_ps_ddr_RDATA : IN STD_LOGIC_VECTOR (7 downto 0);
    m_axi_ps_ddr_RLAST : IN STD_LOGIC;
    m_axi_ps_ddr_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_ps_ddr_RFIFONUM : IN STD_LOGIC_VECTOR (10 downto 0);
    m_axi_ps_ddr_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_ps_ddr_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_ps_ddr_BVALID : IN STD_LOGIC;
    m_axi_ps_ddr_BREADY : OUT STD_LOGIC;
    m_axi_ps_ddr_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_ps_ddr_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_ps_ddr_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    ddr : IN STD_LOGIC_VECTOR (63 downto 0);
    readIndex : IN STD_LOGIC_VECTOR (7 downto 0);
    EN : IN STD_LOGIC_VECTOR (3 downto 0);
    timestamp : IN STD_LOGIC_VECTOR (63 downto 0);
    received_can : OUT STD_LOGIC_VECTOR (31 downto 0);
    received_can_ap_vld : OUT STD_LOGIC );
end;


architecture behav of clu_recvFrame_logic_1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (30 downto 0) := "0000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (30 downto 0) := "0000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (30 downto 0) := "0000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (30 downto 0) := "0000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (30 downto 0) := "0000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (30 downto 0) := "0000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (30 downto 0) := "0001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (30 downto 0) := "0010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (30 downto 0) := "0100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (30 downto 0) := "1000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv64_2 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000010";
    constant ap_const_lv64_3 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000011";
    constant ap_const_lv64_4 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000100";
    constant ap_const_lv64_5 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000101";
    constant ap_const_lv64_6 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000110";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv64_7 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000111";
    constant ap_const_lv64_8 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001000";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv64_9 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001001";
    constant ap_const_lv64_A : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001010";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv64_12 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010010";
    constant ap_const_lv64_10 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010000";
    constant ap_const_lv64_11 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010001";
    constant ap_const_lv64_C : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001100";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv64_D : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001101";
    constant ap_const_lv64_E : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001110";
    constant ap_const_lv64_F : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001111";
    constant ap_const_lv64_B : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001011";
    constant ap_const_lv64_13 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010011";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv8_2 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv15_2100 : STD_LOGIC_VECTOR (14 downto 0) := "010000100000000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_38 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111000";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv15_2104 : STD_LOGIC_VECTOR (14 downto 0) := "010000100000100";
    constant ap_const_lv5_8 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv28_0 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000000000000";
    constant ap_const_lv32_8FFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "10001111111111111111111111111111";
    constant ap_const_lv32_80000000 : STD_LOGIC_VECTOR (31 downto 0) := "10000000000000000000000000000000";
    constant ap_const_lv32_10000000 : STD_LOGIC_VECTOR (31 downto 0) := "00010000000000000000000000000000";
    constant ap_const_lv32_20000000 : STD_LOGIC_VECTOR (31 downto 0) := "00100000000000000000000000000000";
    constant ap_const_lv32_30000000 : STD_LOGIC_VECTOR (31 downto 0) := "00110000000000000000000000000000";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv32_40000000 : STD_LOGIC_VECTOR (31 downto 0) := "01000000000000000000000000000000";
    constant ap_const_lv32_50000000 : STD_LOGIC_VECTOR (31 downto 0) := "01010000000000000000000000000000";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv32_60000000 : STD_LOGIC_VECTOR (31 downto 0) := "01100000000000000000000000000000";
    constant ap_const_lv32_70000000 : STD_LOGIC_VECTOR (31 downto 0) := "01110000000000000000000000000000";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv32_90000000 : STD_LOGIC_VECTOR (31 downto 0) := "10010000000000000000000000000000";
    constant ap_const_lv4_C : STD_LOGIC_VECTOR (3 downto 0) := "1100";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv32_A0000000 : STD_LOGIC_VECTOR (31 downto 0) := "10100000000000000000000000000000";
    constant ap_const_lv32_B0000000 : STD_LOGIC_VECTOR (31 downto 0) := "10110000000000000000000000000000";
    constant ap_const_lv5_14 : STD_LOGIC_VECTOR (4 downto 0) := "10100";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv32_C0000000 : STD_LOGIC_VECTOR (31 downto 0) := "11000000000000000000000000000000";
    constant ap_const_lv32_D0000000 : STD_LOGIC_VECTOR (31 downto 0) := "11010000000000000000000000000000";
    constant ap_const_lv6_20 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_lv6_18 : STD_LOGIC_VECTOR (5 downto 0) := "011000";
    constant ap_const_lv32_E0000000 : STD_LOGIC_VECTOR (31 downto 0) := "11100000000000000000000000000000";
    constant ap_const_lv32_F0000000 : STD_LOGIC_VECTOR (31 downto 0) := "11110000000000000000000000000000";
    constant ap_const_lv7_40 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_lv7_30 : STD_LOGIC_VECTOR (6 downto 0) := "0110000";
    constant ap_const_lv7_8 : STD_LOGIC_VECTOR (6 downto 0) := "0001000";
    constant ap_const_lv15_2108 : STD_LOGIC_VECTOR (14 downto 0) := "010000100001000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv6_3F : STD_LOGIC_VECTOR (5 downto 0) := "111111";
    constant ap_const_lv64_E8 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000011101000";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv32_80 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000000";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_can_counter : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal clu_addr_blk_n_AR : STD_LOGIC;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal clu_addr_blk_n_R : STD_LOGIC;
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal clu_addr_blk_n_AW : STD_LOGIC;
    signal ap_CS_fsm_state25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal clu_addr_blk_n_W : STD_LOGIC;
    signal ap_CS_fsm_state26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal clu_addr_blk_n_B : STD_LOGIC;
    signal ap_CS_fsm_state31 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state31 : signal is "none";
    signal add_ln150_2_fu_597_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln150_2_reg_1338 : STD_LOGIC_VECTOR (14 downto 0);
    signal clu_addr_addr_reg_1344 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln26_reg_1350 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal trunc_ln28_reg_1355 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln29_reg_1360 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln30_reg_1365 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln31_reg_1370 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln192_fu_729_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln192_reg_1375 : STD_LOGIC_VECTOR (7 downto 0);
    signal clu_addr_addr_5_reg_1380 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal trunc_ln146_fu_800_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln146_reg_1386 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_reg_1391 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln158_1_reg_1398 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_3_reg_1404 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln161_2_reg_1409 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_4_reg_1414 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal trunc_ln_reg_1419 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln23_reg_1424 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln168_fu_900_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln168_reg_1429 : STD_LOGIC_VECTOR (7 downto 0);
    signal frameDLC_reg_1434 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_reg_1440 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal NofBytes_fu_1217_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal NofBytes_reg_1450 : STD_LOGIC_VECTOR (6 downto 0);
    signal add115_fu_1245_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal add115_reg_1455 : STD_LOGIC_VECTOR (14 downto 0);
    signal icmp_ln205_fu_1250_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln205_reg_1461 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln32_reg_1465 : STD_LOGIC_VECTOR (3 downto 0);
    signal clu_addr_addr_6_reg_1470 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal add_ln205_1_fu_1317_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln205_1_reg_1477 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal clu_addr_addr_6_read_reg_1482 : STD_LOGIC_VECTOR (31 downto 0);
    signal can_frame_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal can_frame_ce0 : STD_LOGIC;
    signal can_frame_we0 : STD_LOGIC;
    signal can_frame_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal can_frame_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal can_frame_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal can_frame_ce1 : STD_LOGIC;
    signal can_frame_we1 : STD_LOGIC;
    signal can_frame_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_recvFrame_logic_1_Pipeline_1_fu_537_ap_start : STD_LOGIC;
    signal grp_recvFrame_logic_1_Pipeline_1_fu_537_ap_done : STD_LOGIC;
    signal grp_recvFrame_logic_1_Pipeline_1_fu_537_ap_idle : STD_LOGIC;
    signal grp_recvFrame_logic_1_Pipeline_1_fu_537_ap_ready : STD_LOGIC;
    signal grp_recvFrame_logic_1_Pipeline_1_fu_537_can_frame_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_recvFrame_logic_1_Pipeline_1_fu_537_can_frame_ce0 : STD_LOGIC;
    signal grp_recvFrame_logic_1_Pipeline_1_fu_537_can_frame_we0 : STD_LOGIC;
    signal grp_recvFrame_logic_1_Pipeline_1_fu_537_can_frame_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_ap_start : STD_LOGIC;
    signal grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_ap_done : STD_LOGIC;
    signal grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_ap_idle : STD_LOGIC;
    signal grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_ap_ready : STD_LOGIC;
    signal grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_m_axi_clu_addr_AWVALID : STD_LOGIC;
    signal grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_m_axi_clu_addr_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_m_axi_clu_addr_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_m_axi_clu_addr_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_m_axi_clu_addr_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_m_axi_clu_addr_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_m_axi_clu_addr_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_m_axi_clu_addr_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_m_axi_clu_addr_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_m_axi_clu_addr_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_m_axi_clu_addr_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_m_axi_clu_addr_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_m_axi_clu_addr_WVALID : STD_LOGIC;
    signal grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_m_axi_clu_addr_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_m_axi_clu_addr_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_m_axi_clu_addr_WLAST : STD_LOGIC;
    signal grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_m_axi_clu_addr_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_m_axi_clu_addr_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_m_axi_clu_addr_ARVALID : STD_LOGIC;
    signal grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_m_axi_clu_addr_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_m_axi_clu_addr_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_m_axi_clu_addr_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_m_axi_clu_addr_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_m_axi_clu_addr_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_m_axi_clu_addr_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_m_axi_clu_addr_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_m_axi_clu_addr_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_m_axi_clu_addr_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_m_axi_clu_addr_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_m_axi_clu_addr_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_m_axi_clu_addr_RREADY : STD_LOGIC;
    signal grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_m_axi_clu_addr_BREADY : STD_LOGIC;
    signal grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_can_frame_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_can_frame_ce0 : STD_LOGIC;
    signal grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_can_frame_we0 : STD_LOGIC;
    signal grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_can_frame_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_can_frame_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_can_frame_ce1 : STD_LOGIC;
    signal grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_can_frame_we1 : STD_LOGIC;
    signal grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_can_frame_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_ap_start : STD_LOGIC;
    signal grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_ap_done : STD_LOGIC;
    signal grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_ap_idle : STD_LOGIC;
    signal grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_ap_ready : STD_LOGIC;
    signal grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_m_axi_clu_addr_AWVALID : STD_LOGIC;
    signal grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_m_axi_clu_addr_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_m_axi_clu_addr_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_m_axi_clu_addr_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_m_axi_clu_addr_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_m_axi_clu_addr_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_m_axi_clu_addr_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_m_axi_clu_addr_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_m_axi_clu_addr_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_m_axi_clu_addr_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_m_axi_clu_addr_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_m_axi_clu_addr_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_m_axi_clu_addr_WVALID : STD_LOGIC;
    signal grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_m_axi_clu_addr_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_m_axi_clu_addr_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_m_axi_clu_addr_WLAST : STD_LOGIC;
    signal grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_m_axi_clu_addr_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_m_axi_clu_addr_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_m_axi_clu_addr_ARVALID : STD_LOGIC;
    signal grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_m_axi_clu_addr_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_m_axi_clu_addr_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_m_axi_clu_addr_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_m_axi_clu_addr_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_m_axi_clu_addr_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_m_axi_clu_addr_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_m_axi_clu_addr_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_m_axi_clu_addr_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_m_axi_clu_addr_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_m_axi_clu_addr_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_m_axi_clu_addr_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_m_axi_clu_addr_RREADY : STD_LOGIC;
    signal grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_m_axi_clu_addr_BREADY : STD_LOGIC;
    signal grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_can_frame_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_can_frame_ce0 : STD_LOGIC;
    signal grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_can_frame_we0 : STD_LOGIC;
    signal grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_can_frame_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_can_frame_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_can_frame_ce1 : STD_LOGIC;
    signal grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_can_frame_we1 : STD_LOGIC;
    signal grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_can_frame_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_write_ddr_1_fu_563_ap_start : STD_LOGIC;
    signal grp_write_ddr_1_fu_563_ap_done : STD_LOGIC;
    signal grp_write_ddr_1_fu_563_ap_idle : STD_LOGIC;
    signal grp_write_ddr_1_fu_563_ap_ready : STD_LOGIC;
    signal grp_write_ddr_1_fu_563_m_axi_ps_ddr_AWVALID : STD_LOGIC;
    signal grp_write_ddr_1_fu_563_m_axi_ps_ddr_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_write_ddr_1_fu_563_m_axi_ps_ddr_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_write_ddr_1_fu_563_m_axi_ps_ddr_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_write_ddr_1_fu_563_m_axi_ps_ddr_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_write_ddr_1_fu_563_m_axi_ps_ddr_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_write_ddr_1_fu_563_m_axi_ps_ddr_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_write_ddr_1_fu_563_m_axi_ps_ddr_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_write_ddr_1_fu_563_m_axi_ps_ddr_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_write_ddr_1_fu_563_m_axi_ps_ddr_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_write_ddr_1_fu_563_m_axi_ps_ddr_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_write_ddr_1_fu_563_m_axi_ps_ddr_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_write_ddr_1_fu_563_m_axi_ps_ddr_WVALID : STD_LOGIC;
    signal grp_write_ddr_1_fu_563_m_axi_ps_ddr_WDATA : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_write_ddr_1_fu_563_m_axi_ps_ddr_WSTRB : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_write_ddr_1_fu_563_m_axi_ps_ddr_WLAST : STD_LOGIC;
    signal grp_write_ddr_1_fu_563_m_axi_ps_ddr_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_write_ddr_1_fu_563_m_axi_ps_ddr_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_write_ddr_1_fu_563_m_axi_ps_ddr_ARVALID : STD_LOGIC;
    signal grp_write_ddr_1_fu_563_m_axi_ps_ddr_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_write_ddr_1_fu_563_m_axi_ps_ddr_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_write_ddr_1_fu_563_m_axi_ps_ddr_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_write_ddr_1_fu_563_m_axi_ps_ddr_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_write_ddr_1_fu_563_m_axi_ps_ddr_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_write_ddr_1_fu_563_m_axi_ps_ddr_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_write_ddr_1_fu_563_m_axi_ps_ddr_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_write_ddr_1_fu_563_m_axi_ps_ddr_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_write_ddr_1_fu_563_m_axi_ps_ddr_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_write_ddr_1_fu_563_m_axi_ps_ddr_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_write_ddr_1_fu_563_m_axi_ps_ddr_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_write_ddr_1_fu_563_m_axi_ps_ddr_RREADY : STD_LOGIC;
    signal grp_write_ddr_1_fu_563_m_axi_ps_ddr_BREADY : STD_LOGIC;
    signal grp_write_ddr_1_fu_563_data_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_write_ddr_1_fu_563_data_ce0 : STD_LOGIC;
    signal grp_recvFrame_logic_1_Pipeline_1_fu_537_ap_start_reg : STD_LOGIC := '0';
    signal grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_ap_start_reg : STD_LOGIC := '0';
    signal grp_write_ddr_1_fu_563_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal sext_ln150_fu_647_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln173_fu_775_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln233_fu_1304_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln230_fu_1276_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_predicate_op208_call_state15 : BOOLEAN;
    signal ap_block_state15_on_subcall_done : BOOLEAN;
    signal zext_ln179_1_fu_795_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln153_fu_840_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln158_1_fu_865_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln165_fu_904_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln196_1_fu_1240_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln196_fu_1229_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln_fu_573_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal shl_ln150_1_fu_585_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln150_fu_581_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln150_1_fu_593_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln150_fu_603_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_fu_609_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal shl_ln150_2_fu_619_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln150_2_fu_627_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln150_1_fu_631_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln150_1_fu_637_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal add_ln173_fu_733_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_5_fu_738_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal shl_ln1_fu_748_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln173_fu_756_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln173_1_fu_760_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln173_1_fu_765_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal zext_ln179_fu_785_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal id_can_fu_789_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal FrameID_fu_847_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal zext_ln158_fu_844_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal select_ln158_fu_853_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal FrameID_1_fu_858_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_6_fu_916_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln28_fu_938_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln28_fu_933_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln28_fu_943_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Dlc_assign_fu_925_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln28_fu_949_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln32_fu_957_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln32_2_fu_973_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln32_1_fu_967_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln32_fu_987_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln32_fu_979_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln32_fu_963_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln32_1_fu_993_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln32_4_fu_1011_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln32_3_fu_1005_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln32_1_fu_1025_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln32_2_fu_1017_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln32_1_fu_1001_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln32_6_fu_1045_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln32_5_fu_1039_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln32_2_fu_1059_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln32_4_fu_1051_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln32_3_fu_1031_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln32_5_fu_1065_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln32_8_fu_1083_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln32_7_fu_1077_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln32_3_fu_1097_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln32_6_fu_1089_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln32_2_fu_1073_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln32_7_fu_1103_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln32_10_fu_1121_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln32_9_fu_1115_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln32_4_fu_1135_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln32_8_fu_1127_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln32_3_fu_1111_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln32_9_fu_1141_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln32_12_fu_1159_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln32_11_fu_1153_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln32_5_fu_1173_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln32_10_fu_1165_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln32_4_fu_1149_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln32_11_fu_1179_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln32_14_fu_1197_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln32_13_fu_1191_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_70_fu_1211_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_fu_1203_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln32_5_fu_1187_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln196_fu_1234_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln27_fu_1225_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln205_fu_1256_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln233_fu_1289_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln33_fu_1294_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal zext_ln205_fu_1314_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_ST_fsm_state17_blk : STD_LOGIC;
    signal ap_ST_fsm_state18_blk : STD_LOGIC;
    signal ap_ST_fsm_state19_blk : STD_LOGIC;
    signal ap_ST_fsm_state20_blk : STD_LOGIC;
    signal ap_ST_fsm_state21_blk : STD_LOGIC;
    signal ap_ST_fsm_state22_blk : STD_LOGIC;
    signal ap_ST_fsm_state23_blk : STD_LOGIC;
    signal ap_ST_fsm_state24_blk : STD_LOGIC;
    signal ap_ST_fsm_state25_blk : STD_LOGIC;
    signal ap_ST_fsm_state26_blk : STD_LOGIC;
    signal ap_ST_fsm_state27_blk : STD_LOGIC;
    signal ap_ST_fsm_state28_blk : STD_LOGIC;
    signal ap_ST_fsm_state29_blk : STD_LOGIC;
    signal ap_ST_fsm_state30_blk : STD_LOGIC;
    signal ap_ST_fsm_state31_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component clu_recvFrame_logic_1_Pipeline_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        can_frame_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        can_frame_ce0 : OUT STD_LOGIC;
        can_frame_we0 : OUT STD_LOGIC;
        can_frame_d0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component clu_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_clu_addr_AWVALID : OUT STD_LOGIC;
        m_axi_clu_addr_AWREADY : IN STD_LOGIC;
        m_axi_clu_addr_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_clu_addr_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_clu_addr_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_clu_addr_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_clu_addr_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_clu_addr_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_clu_addr_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_clu_addr_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_clu_addr_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_clu_addr_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_clu_addr_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_clu_addr_WVALID : OUT STD_LOGIC;
        m_axi_clu_addr_WREADY : IN STD_LOGIC;
        m_axi_clu_addr_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_clu_addr_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_clu_addr_WLAST : OUT STD_LOGIC;
        m_axi_clu_addr_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_clu_addr_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_clu_addr_ARVALID : OUT STD_LOGIC;
        m_axi_clu_addr_ARREADY : IN STD_LOGIC;
        m_axi_clu_addr_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_clu_addr_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_clu_addr_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_clu_addr_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_clu_addr_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_clu_addr_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_clu_addr_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_clu_addr_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_clu_addr_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_clu_addr_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_clu_addr_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_clu_addr_RVALID : IN STD_LOGIC;
        m_axi_clu_addr_RREADY : OUT STD_LOGIC;
        m_axi_clu_addr_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_clu_addr_RLAST : IN STD_LOGIC;
        m_axi_clu_addr_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_clu_addr_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_clu_addr_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_clu_addr_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_clu_addr_BVALID : IN STD_LOGIC;
        m_axi_clu_addr_BREADY : OUT STD_LOGIC;
        m_axi_clu_addr_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_clu_addr_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_clu_addr_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        zext_ln27 : IN STD_LOGIC_VECTOR (6 downto 0);
        zext_ln205 : IN STD_LOGIC_VECTOR (14 downto 0);
        canbase : IN STD_LOGIC_VECTOR (63 downto 0);
        can_frame_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        can_frame_ce0 : OUT STD_LOGIC;
        can_frame_we0 : OUT STD_LOGIC;
        can_frame_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        can_frame_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        can_frame_ce1 : OUT STD_LOGIC;
        can_frame_we1 : OUT STD_LOGIC;
        can_frame_d1 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component clu_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_clu_addr_AWVALID : OUT STD_LOGIC;
        m_axi_clu_addr_AWREADY : IN STD_LOGIC;
        m_axi_clu_addr_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_clu_addr_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_clu_addr_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_clu_addr_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_clu_addr_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_clu_addr_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_clu_addr_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_clu_addr_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_clu_addr_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_clu_addr_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_clu_addr_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_clu_addr_WVALID : OUT STD_LOGIC;
        m_axi_clu_addr_WREADY : IN STD_LOGIC;
        m_axi_clu_addr_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_clu_addr_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_clu_addr_WLAST : OUT STD_LOGIC;
        m_axi_clu_addr_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_clu_addr_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_clu_addr_ARVALID : OUT STD_LOGIC;
        m_axi_clu_addr_ARREADY : IN STD_LOGIC;
        m_axi_clu_addr_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_clu_addr_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_clu_addr_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_clu_addr_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_clu_addr_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_clu_addr_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_clu_addr_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_clu_addr_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_clu_addr_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_clu_addr_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_clu_addr_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_clu_addr_RVALID : IN STD_LOGIC;
        m_axi_clu_addr_RREADY : OUT STD_LOGIC;
        m_axi_clu_addr_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_clu_addr_RLAST : IN STD_LOGIC;
        m_axi_clu_addr_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_clu_addr_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_clu_addr_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_clu_addr_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_clu_addr_BVALID : IN STD_LOGIC;
        m_axi_clu_addr_BREADY : OUT STD_LOGIC;
        m_axi_clu_addr_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_clu_addr_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_clu_addr_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        add_ln205_1 : IN STD_LOGIC_VECTOR (4 downto 0);
        add115 : IN STD_LOGIC_VECTOR (14 downto 0);
        canbase : IN STD_LOGIC_VECTOR (63 downto 0);
        can_frame_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        can_frame_ce0 : OUT STD_LOGIC;
        can_frame_we0 : OUT STD_LOGIC;
        can_frame_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        can_frame_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        can_frame_ce1 : OUT STD_LOGIC;
        can_frame_we1 : OUT STD_LOGIC;
        can_frame_d1 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component clu_write_ddr_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_ps_ddr_AWVALID : OUT STD_LOGIC;
        m_axi_ps_ddr_AWREADY : IN STD_LOGIC;
        m_axi_ps_ddr_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_ps_ddr_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_ps_ddr_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_ps_ddr_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_ps_ddr_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_ps_ddr_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_ps_ddr_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_ps_ddr_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_ps_ddr_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_ps_ddr_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_ps_ddr_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_ps_ddr_WVALID : OUT STD_LOGIC;
        m_axi_ps_ddr_WREADY : IN STD_LOGIC;
        m_axi_ps_ddr_WDATA : OUT STD_LOGIC_VECTOR (7 downto 0);
        m_axi_ps_ddr_WSTRB : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_ps_ddr_WLAST : OUT STD_LOGIC;
        m_axi_ps_ddr_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_ps_ddr_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_ps_ddr_ARVALID : OUT STD_LOGIC;
        m_axi_ps_ddr_ARREADY : IN STD_LOGIC;
        m_axi_ps_ddr_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_ps_ddr_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_ps_ddr_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_ps_ddr_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_ps_ddr_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_ps_ddr_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_ps_ddr_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_ps_ddr_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_ps_ddr_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_ps_ddr_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_ps_ddr_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_ps_ddr_RVALID : IN STD_LOGIC;
        m_axi_ps_ddr_RREADY : OUT STD_LOGIC;
        m_axi_ps_ddr_RDATA : IN STD_LOGIC_VECTOR (7 downto 0);
        m_axi_ps_ddr_RLAST : IN STD_LOGIC;
        m_axi_ps_ddr_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_ps_ddr_RFIFONUM : IN STD_LOGIC_VECTOR (10 downto 0);
        m_axi_ps_ddr_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_ps_ddr_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_ps_ddr_BVALID : IN STD_LOGIC;
        m_axi_ps_ddr_BREADY : OUT STD_LOGIC;
        m_axi_ps_ddr_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_ps_ddr_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_ps_ddr_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        ddr_header : IN STD_LOGIC_VECTOR (63 downto 0);
        data_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        data_ce0 : OUT STD_LOGIC;
        data_q0 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component clu_recvFrame_logic_1_can_frame_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    can_frame_U : component clu_recvFrame_logic_1_can_frame_RAM_AUTO_1R1W
    generic map (
        DataWidth => 8,
        AddressRange => 92,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => can_frame_address0,
        ce0 => can_frame_ce0,
        we0 => can_frame_we0,
        d0 => can_frame_d0,
        q0 => can_frame_q0,
        address1 => can_frame_address1,
        ce1 => can_frame_ce1,
        we1 => can_frame_we1,
        d1 => can_frame_d1);

    grp_recvFrame_logic_1_Pipeline_1_fu_537 : component clu_recvFrame_logic_1_Pipeline_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_recvFrame_logic_1_Pipeline_1_fu_537_ap_start,
        ap_done => grp_recvFrame_logic_1_Pipeline_1_fu_537_ap_done,
        ap_idle => grp_recvFrame_logic_1_Pipeline_1_fu_537_ap_idle,
        ap_ready => grp_recvFrame_logic_1_Pipeline_1_fu_537_ap_ready,
        can_frame_address0 => grp_recvFrame_logic_1_Pipeline_1_fu_537_can_frame_address0,
        can_frame_ce0 => grp_recvFrame_logic_1_Pipeline_1_fu_537_can_frame_ce0,
        can_frame_we0 => grp_recvFrame_logic_1_Pipeline_1_fu_537_can_frame_we0,
        can_frame_d0 => grp_recvFrame_logic_1_Pipeline_1_fu_537_can_frame_d0);

    grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543 : component clu_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_ap_start,
        ap_done => grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_ap_done,
        ap_idle => grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_ap_idle,
        ap_ready => grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_ap_ready,
        m_axi_clu_addr_AWVALID => grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_m_axi_clu_addr_AWVALID,
        m_axi_clu_addr_AWREADY => ap_const_logic_0,
        m_axi_clu_addr_AWADDR => grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_m_axi_clu_addr_AWADDR,
        m_axi_clu_addr_AWID => grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_m_axi_clu_addr_AWID,
        m_axi_clu_addr_AWLEN => grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_m_axi_clu_addr_AWLEN,
        m_axi_clu_addr_AWSIZE => grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_m_axi_clu_addr_AWSIZE,
        m_axi_clu_addr_AWBURST => grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_m_axi_clu_addr_AWBURST,
        m_axi_clu_addr_AWLOCK => grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_m_axi_clu_addr_AWLOCK,
        m_axi_clu_addr_AWCACHE => grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_m_axi_clu_addr_AWCACHE,
        m_axi_clu_addr_AWPROT => grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_m_axi_clu_addr_AWPROT,
        m_axi_clu_addr_AWQOS => grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_m_axi_clu_addr_AWQOS,
        m_axi_clu_addr_AWREGION => grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_m_axi_clu_addr_AWREGION,
        m_axi_clu_addr_AWUSER => grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_m_axi_clu_addr_AWUSER,
        m_axi_clu_addr_WVALID => grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_m_axi_clu_addr_WVALID,
        m_axi_clu_addr_WREADY => ap_const_logic_0,
        m_axi_clu_addr_WDATA => grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_m_axi_clu_addr_WDATA,
        m_axi_clu_addr_WSTRB => grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_m_axi_clu_addr_WSTRB,
        m_axi_clu_addr_WLAST => grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_m_axi_clu_addr_WLAST,
        m_axi_clu_addr_WID => grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_m_axi_clu_addr_WID,
        m_axi_clu_addr_WUSER => grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_m_axi_clu_addr_WUSER,
        m_axi_clu_addr_ARVALID => grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_m_axi_clu_addr_ARVALID,
        m_axi_clu_addr_ARREADY => m_axi_clu_addr_ARREADY,
        m_axi_clu_addr_ARADDR => grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_m_axi_clu_addr_ARADDR,
        m_axi_clu_addr_ARID => grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_m_axi_clu_addr_ARID,
        m_axi_clu_addr_ARLEN => grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_m_axi_clu_addr_ARLEN,
        m_axi_clu_addr_ARSIZE => grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_m_axi_clu_addr_ARSIZE,
        m_axi_clu_addr_ARBURST => grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_m_axi_clu_addr_ARBURST,
        m_axi_clu_addr_ARLOCK => grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_m_axi_clu_addr_ARLOCK,
        m_axi_clu_addr_ARCACHE => grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_m_axi_clu_addr_ARCACHE,
        m_axi_clu_addr_ARPROT => grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_m_axi_clu_addr_ARPROT,
        m_axi_clu_addr_ARQOS => grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_m_axi_clu_addr_ARQOS,
        m_axi_clu_addr_ARREGION => grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_m_axi_clu_addr_ARREGION,
        m_axi_clu_addr_ARUSER => grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_m_axi_clu_addr_ARUSER,
        m_axi_clu_addr_RVALID => m_axi_clu_addr_RVALID,
        m_axi_clu_addr_RREADY => grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_m_axi_clu_addr_RREADY,
        m_axi_clu_addr_RDATA => m_axi_clu_addr_RDATA,
        m_axi_clu_addr_RLAST => m_axi_clu_addr_RLAST,
        m_axi_clu_addr_RID => m_axi_clu_addr_RID,
        m_axi_clu_addr_RFIFONUM => m_axi_clu_addr_RFIFONUM,
        m_axi_clu_addr_RUSER => m_axi_clu_addr_RUSER,
        m_axi_clu_addr_RRESP => m_axi_clu_addr_RRESP,
        m_axi_clu_addr_BVALID => ap_const_logic_0,
        m_axi_clu_addr_BREADY => grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_m_axi_clu_addr_BREADY,
        m_axi_clu_addr_BRESP => ap_const_lv2_0,
        m_axi_clu_addr_BID => ap_const_lv1_0,
        m_axi_clu_addr_BUSER => ap_const_lv1_0,
        zext_ln27 => NofBytes_reg_1450,
        zext_ln205 => add115_reg_1455,
        canbase => canbase,
        can_frame_address0 => grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_can_frame_address0,
        can_frame_ce0 => grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_can_frame_ce0,
        can_frame_we0 => grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_can_frame_we0,
        can_frame_d0 => grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_can_frame_d0,
        can_frame_address1 => grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_can_frame_address1,
        can_frame_ce1 => grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_can_frame_ce1,
        can_frame_we1 => grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_can_frame_we1,
        can_frame_d1 => grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_can_frame_d1);

    grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553 : component clu_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_ap_start,
        ap_done => grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_ap_done,
        ap_idle => grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_ap_idle,
        ap_ready => grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_ap_ready,
        m_axi_clu_addr_AWVALID => grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_m_axi_clu_addr_AWVALID,
        m_axi_clu_addr_AWREADY => ap_const_logic_0,
        m_axi_clu_addr_AWADDR => grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_m_axi_clu_addr_AWADDR,
        m_axi_clu_addr_AWID => grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_m_axi_clu_addr_AWID,
        m_axi_clu_addr_AWLEN => grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_m_axi_clu_addr_AWLEN,
        m_axi_clu_addr_AWSIZE => grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_m_axi_clu_addr_AWSIZE,
        m_axi_clu_addr_AWBURST => grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_m_axi_clu_addr_AWBURST,
        m_axi_clu_addr_AWLOCK => grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_m_axi_clu_addr_AWLOCK,
        m_axi_clu_addr_AWCACHE => grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_m_axi_clu_addr_AWCACHE,
        m_axi_clu_addr_AWPROT => grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_m_axi_clu_addr_AWPROT,
        m_axi_clu_addr_AWQOS => grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_m_axi_clu_addr_AWQOS,
        m_axi_clu_addr_AWREGION => grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_m_axi_clu_addr_AWREGION,
        m_axi_clu_addr_AWUSER => grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_m_axi_clu_addr_AWUSER,
        m_axi_clu_addr_WVALID => grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_m_axi_clu_addr_WVALID,
        m_axi_clu_addr_WREADY => ap_const_logic_0,
        m_axi_clu_addr_WDATA => grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_m_axi_clu_addr_WDATA,
        m_axi_clu_addr_WSTRB => grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_m_axi_clu_addr_WSTRB,
        m_axi_clu_addr_WLAST => grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_m_axi_clu_addr_WLAST,
        m_axi_clu_addr_WID => grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_m_axi_clu_addr_WID,
        m_axi_clu_addr_WUSER => grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_m_axi_clu_addr_WUSER,
        m_axi_clu_addr_ARVALID => grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_m_axi_clu_addr_ARVALID,
        m_axi_clu_addr_ARREADY => m_axi_clu_addr_ARREADY,
        m_axi_clu_addr_ARADDR => grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_m_axi_clu_addr_ARADDR,
        m_axi_clu_addr_ARID => grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_m_axi_clu_addr_ARID,
        m_axi_clu_addr_ARLEN => grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_m_axi_clu_addr_ARLEN,
        m_axi_clu_addr_ARSIZE => grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_m_axi_clu_addr_ARSIZE,
        m_axi_clu_addr_ARBURST => grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_m_axi_clu_addr_ARBURST,
        m_axi_clu_addr_ARLOCK => grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_m_axi_clu_addr_ARLOCK,
        m_axi_clu_addr_ARCACHE => grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_m_axi_clu_addr_ARCACHE,
        m_axi_clu_addr_ARPROT => grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_m_axi_clu_addr_ARPROT,
        m_axi_clu_addr_ARQOS => grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_m_axi_clu_addr_ARQOS,
        m_axi_clu_addr_ARREGION => grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_m_axi_clu_addr_ARREGION,
        m_axi_clu_addr_ARUSER => grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_m_axi_clu_addr_ARUSER,
        m_axi_clu_addr_RVALID => m_axi_clu_addr_RVALID,
        m_axi_clu_addr_RREADY => grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_m_axi_clu_addr_RREADY,
        m_axi_clu_addr_RDATA => m_axi_clu_addr_RDATA,
        m_axi_clu_addr_RLAST => m_axi_clu_addr_RLAST,
        m_axi_clu_addr_RID => m_axi_clu_addr_RID,
        m_axi_clu_addr_RFIFONUM => m_axi_clu_addr_RFIFONUM,
        m_axi_clu_addr_RUSER => m_axi_clu_addr_RUSER,
        m_axi_clu_addr_RRESP => m_axi_clu_addr_RRESP,
        m_axi_clu_addr_BVALID => ap_const_logic_0,
        m_axi_clu_addr_BREADY => grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_m_axi_clu_addr_BREADY,
        m_axi_clu_addr_BRESP => ap_const_lv2_0,
        m_axi_clu_addr_BID => ap_const_lv1_0,
        m_axi_clu_addr_BUSER => ap_const_lv1_0,
        add_ln205_1 => add_ln205_1_reg_1477,
        add115 => add115_reg_1455,
        canbase => canbase,
        can_frame_address0 => grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_can_frame_address0,
        can_frame_ce0 => grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_can_frame_ce0,
        can_frame_we0 => grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_can_frame_we0,
        can_frame_d0 => grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_can_frame_d0,
        can_frame_address1 => grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_can_frame_address1,
        can_frame_ce1 => grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_can_frame_ce1,
        can_frame_we1 => grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_can_frame_we1,
        can_frame_d1 => grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_can_frame_d1);

    grp_write_ddr_1_fu_563 : component clu_write_ddr_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_write_ddr_1_fu_563_ap_start,
        ap_done => grp_write_ddr_1_fu_563_ap_done,
        ap_idle => grp_write_ddr_1_fu_563_ap_idle,
        ap_ready => grp_write_ddr_1_fu_563_ap_ready,
        m_axi_ps_ddr_AWVALID => grp_write_ddr_1_fu_563_m_axi_ps_ddr_AWVALID,
        m_axi_ps_ddr_AWREADY => m_axi_ps_ddr_AWREADY,
        m_axi_ps_ddr_AWADDR => grp_write_ddr_1_fu_563_m_axi_ps_ddr_AWADDR,
        m_axi_ps_ddr_AWID => grp_write_ddr_1_fu_563_m_axi_ps_ddr_AWID,
        m_axi_ps_ddr_AWLEN => grp_write_ddr_1_fu_563_m_axi_ps_ddr_AWLEN,
        m_axi_ps_ddr_AWSIZE => grp_write_ddr_1_fu_563_m_axi_ps_ddr_AWSIZE,
        m_axi_ps_ddr_AWBURST => grp_write_ddr_1_fu_563_m_axi_ps_ddr_AWBURST,
        m_axi_ps_ddr_AWLOCK => grp_write_ddr_1_fu_563_m_axi_ps_ddr_AWLOCK,
        m_axi_ps_ddr_AWCACHE => grp_write_ddr_1_fu_563_m_axi_ps_ddr_AWCACHE,
        m_axi_ps_ddr_AWPROT => grp_write_ddr_1_fu_563_m_axi_ps_ddr_AWPROT,
        m_axi_ps_ddr_AWQOS => grp_write_ddr_1_fu_563_m_axi_ps_ddr_AWQOS,
        m_axi_ps_ddr_AWREGION => grp_write_ddr_1_fu_563_m_axi_ps_ddr_AWREGION,
        m_axi_ps_ddr_AWUSER => grp_write_ddr_1_fu_563_m_axi_ps_ddr_AWUSER,
        m_axi_ps_ddr_WVALID => grp_write_ddr_1_fu_563_m_axi_ps_ddr_WVALID,
        m_axi_ps_ddr_WREADY => m_axi_ps_ddr_WREADY,
        m_axi_ps_ddr_WDATA => grp_write_ddr_1_fu_563_m_axi_ps_ddr_WDATA,
        m_axi_ps_ddr_WSTRB => grp_write_ddr_1_fu_563_m_axi_ps_ddr_WSTRB,
        m_axi_ps_ddr_WLAST => grp_write_ddr_1_fu_563_m_axi_ps_ddr_WLAST,
        m_axi_ps_ddr_WID => grp_write_ddr_1_fu_563_m_axi_ps_ddr_WID,
        m_axi_ps_ddr_WUSER => grp_write_ddr_1_fu_563_m_axi_ps_ddr_WUSER,
        m_axi_ps_ddr_ARVALID => grp_write_ddr_1_fu_563_m_axi_ps_ddr_ARVALID,
        m_axi_ps_ddr_ARREADY => m_axi_ps_ddr_ARREADY,
        m_axi_ps_ddr_ARADDR => grp_write_ddr_1_fu_563_m_axi_ps_ddr_ARADDR,
        m_axi_ps_ddr_ARID => grp_write_ddr_1_fu_563_m_axi_ps_ddr_ARID,
        m_axi_ps_ddr_ARLEN => grp_write_ddr_1_fu_563_m_axi_ps_ddr_ARLEN,
        m_axi_ps_ddr_ARSIZE => grp_write_ddr_1_fu_563_m_axi_ps_ddr_ARSIZE,
        m_axi_ps_ddr_ARBURST => grp_write_ddr_1_fu_563_m_axi_ps_ddr_ARBURST,
        m_axi_ps_ddr_ARLOCK => grp_write_ddr_1_fu_563_m_axi_ps_ddr_ARLOCK,
        m_axi_ps_ddr_ARCACHE => grp_write_ddr_1_fu_563_m_axi_ps_ddr_ARCACHE,
        m_axi_ps_ddr_ARPROT => grp_write_ddr_1_fu_563_m_axi_ps_ddr_ARPROT,
        m_axi_ps_ddr_ARQOS => grp_write_ddr_1_fu_563_m_axi_ps_ddr_ARQOS,
        m_axi_ps_ddr_ARREGION => grp_write_ddr_1_fu_563_m_axi_ps_ddr_ARREGION,
        m_axi_ps_ddr_ARUSER => grp_write_ddr_1_fu_563_m_axi_ps_ddr_ARUSER,
        m_axi_ps_ddr_RVALID => m_axi_ps_ddr_RVALID,
        m_axi_ps_ddr_RREADY => grp_write_ddr_1_fu_563_m_axi_ps_ddr_RREADY,
        m_axi_ps_ddr_RDATA => m_axi_ps_ddr_RDATA,
        m_axi_ps_ddr_RLAST => m_axi_ps_ddr_RLAST,
        m_axi_ps_ddr_RID => m_axi_ps_ddr_RID,
        m_axi_ps_ddr_RFIFONUM => m_axi_ps_ddr_RFIFONUM,
        m_axi_ps_ddr_RUSER => m_axi_ps_ddr_RUSER,
        m_axi_ps_ddr_RRESP => m_axi_ps_ddr_RRESP,
        m_axi_ps_ddr_BVALID => m_axi_ps_ddr_BVALID,
        m_axi_ps_ddr_BREADY => grp_write_ddr_1_fu_563_m_axi_ps_ddr_BREADY,
        m_axi_ps_ddr_BRESP => m_axi_ps_ddr_BRESP,
        m_axi_ps_ddr_BID => m_axi_ps_ddr_BID,
        m_axi_ps_ddr_BUSER => m_axi_ps_ddr_BUSER,
        ddr_header => ddr,
        data_address0 => grp_write_ddr_1_fu_563_data_address0,
        data_ce0 => grp_write_ddr_1_fu_563_data_ce0,
        data_q0 => can_frame_q0);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_recvFrame_logic_1_Pipeline_1_fu_537_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_recvFrame_logic_1_Pipeline_1_fu_537_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    grp_recvFrame_logic_1_Pipeline_1_fu_537_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_recvFrame_logic_1_Pipeline_1_fu_537_ap_ready = ap_const_logic_1)) then 
                    grp_recvFrame_logic_1_Pipeline_1_fu_537_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
                    grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_ap_ready = ap_const_logic_1)) then 
                    grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
                    grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_ap_ready = ap_const_logic_1)) then 
                    grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_write_ddr_1_fu_563_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_write_ddr_1_fu_563_ap_start_reg <= ap_const_logic_0;
            else
                if (((m_axi_clu_addr_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state17))) then 
                    grp_write_ddr_1_fu_563_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_write_ddr_1_fu_563_ap_ready = ap_const_logic_1)) then 
                    grp_write_ddr_1_fu_563_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then
                NofBytes_reg_1450 <= NofBytes_fu_1217_p3;
                    add115_reg_1455(14 downto 3) <= add115_fu_1245_p2(14 downto 3);
                icmp_ln205_reg_1461 <= icmp_ln205_fu_1250_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                    add_ln150_2_reg_1338(14 downto 3) <= add_ln150_2_fu_597_p2(14 downto 3);
                clu_addr_addr_reg_1344 <= sext_ln150_fu_647_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then
                add_ln205_1_reg_1477 <= add_ln205_1_fu_1317_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                clu_addr_addr_5_reg_1380 <= sext_ln173_fu_775_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state24)) then
                clu_addr_addr_6_read_reg_1482 <= m_axi_clu_addr_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state15)) then
                clu_addr_addr_6_reg_1470 <= sext_ln233_fu_1304_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then
                frameDLC_reg_1434 <= m_axi_clu_addr_RDATA;
                tmp_7_reg_1440 <= m_axi_clu_addr_RDATA(27 downto 27);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state15_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state15))) then
                internal_can_counter <= add_ln230_fu_1276_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then
                tmp_2_reg_1391 <= m_axi_clu_addr_RDATA(19 downto 19);
                tmp_3_reg_1404 <= m_axi_clu_addr_RDATA(20 downto 20);
                trunc_ln146_reg_1386 <= trunc_ln146_fu_800_p1;
                trunc_ln158_1_reg_1398 <= m_axi_clu_addr_RDATA(31 downto 21);
                trunc_ln161_2_reg_1409 <= m_axi_clu_addr_RDATA(18 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then
                tmp_4_reg_1414 <= FrameID_1_fu_858_p3(28 downto 24);
                trunc_ln168_reg_1429 <= trunc_ln168_fu_900_p1;
                trunc_ln23_reg_1424 <= FrameID_1_fu_858_p3(15 downto 8);
                trunc_ln_reg_1419 <= FrameID_1_fu_858_p3(23 downto 16);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                trunc_ln192_reg_1375 <= trunc_ln192_fu_729_p1;
                trunc_ln26_reg_1350 <= timestamp(47 downto 40);
                trunc_ln28_reg_1355 <= timestamp(39 downto 32);
                trunc_ln29_reg_1360 <= timestamp(31 downto 24);
                trunc_ln30_reg_1365 <= timestamp(23 downto 16);
                trunc_ln31_reg_1370 <= timestamp(15 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln205_fu_1250_p2 = ap_const_lv1_0) and (tmp_7_reg_1440 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state13))) then
                trunc_ln32_reg_1465 <= add_ln205_fu_1256_p2(5 downto 2);
            end if;
        end if;
    end process;
    add_ln150_2_reg_1338(2 downto 0) <= "000";
    add115_reg_1455(2 downto 0) <= "000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, m_axi_clu_addr_AWREADY, m_axi_clu_addr_WREADY, m_axi_clu_addr_ARREADY, m_axi_clu_addr_RVALID, m_axi_clu_addr_BVALID, ap_CS_fsm_state2, ap_CS_fsm_state9, ap_CS_fsm_state5, ap_CS_fsm_state12, ap_CS_fsm_state17, ap_CS_fsm_state24, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state31, tmp_7_reg_1440, ap_CS_fsm_state13, icmp_ln205_fu_1250_p2, ap_CS_fsm_state15, grp_recvFrame_logic_1_Pipeline_1_fu_537_ap_done, grp_write_ddr_1_fu_563_ap_done, ap_CS_fsm_state18, ap_block_state15_on_subcall_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if ((not(((m_axi_clu_addr_ARREADY = ap_const_logic_0) or (grp_recvFrame_logic_1_Pipeline_1_fu_537_ap_done = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                if (((m_axi_clu_addr_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                if (((m_axi_clu_addr_RVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                if (((m_axi_clu_addr_RVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state12))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when ap_ST_fsm_state13 => 
                if (((icmp_ln205_fu_1250_p2 = ap_const_lv1_0) and (tmp_7_reg_1440 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state13))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                elsif (((icmp_ln205_fu_1250_p2 = ap_const_lv1_1) and (tmp_7_reg_1440 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state13))) then
                    ap_NS_fsm <= ap_ST_fsm_state15;
                else
                    ap_NS_fsm <= ap_ST_fsm_state14;
                end if;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                if (((ap_const_boolean_0 = ap_block_state15_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state15))) then
                    ap_NS_fsm <= ap_ST_fsm_state17;
                else
                    ap_NS_fsm <= ap_ST_fsm_state15;
                end if;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state17 => 
                if (((m_axi_clu_addr_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state17))) then
                    ap_NS_fsm <= ap_ST_fsm_state18;
                else
                    ap_NS_fsm <= ap_ST_fsm_state17;
                end if;
            when ap_ST_fsm_state18 => 
                if (((grp_write_ddr_1_fu_563_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state18))) then
                    ap_NS_fsm <= ap_ST_fsm_state19;
                else
                    ap_NS_fsm <= ap_ST_fsm_state18;
                end if;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                if (((m_axi_clu_addr_RVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state24))) then
                    ap_NS_fsm <= ap_ST_fsm_state25;
                else
                    ap_NS_fsm <= ap_ST_fsm_state24;
                end if;
            when ap_ST_fsm_state25 => 
                if (((m_axi_clu_addr_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state25))) then
                    ap_NS_fsm <= ap_ST_fsm_state26;
                else
                    ap_NS_fsm <= ap_ST_fsm_state25;
                end if;
            when ap_ST_fsm_state26 => 
                if (((m_axi_clu_addr_WREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state26))) then
                    ap_NS_fsm <= ap_ST_fsm_state27;
                else
                    ap_NS_fsm <= ap_ST_fsm_state26;
                end if;
            when ap_ST_fsm_state27 => 
                ap_NS_fsm <= ap_ST_fsm_state28;
            when ap_ST_fsm_state28 => 
                ap_NS_fsm <= ap_ST_fsm_state29;
            when ap_ST_fsm_state29 => 
                ap_NS_fsm <= ap_ST_fsm_state30;
            when ap_ST_fsm_state30 => 
                ap_NS_fsm <= ap_ST_fsm_state31;
            when ap_ST_fsm_state31 => 
                if (((m_axi_clu_addr_BVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state31))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state31;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    Dlc_assign_fu_925_p3 <= (tmp_6_fu_916_p4 & ap_const_lv28_0);
    FrameID_1_fu_858_p3 <= 
        FrameID_fu_847_p3 when (tmp_2_reg_1391(0) = '1') else 
        zext_ln158_fu_844_p1;
    FrameID_fu_847_p3 <= (trunc_ln158_1_reg_1398 & trunc_ln161_2_reg_1409);
    NofBytes_fu_1217_p3 <= 
        empty_fu_1203_p3 when (empty_70_fu_1211_p2(0) = '1') else 
        zext_ln32_5_fu_1187_p1;
    add115_fu_1245_p2 <= std_logic_vector(unsigned(add_ln150_2_reg_1338) + unsigned(ap_const_lv15_2108));
    add_ln150_1_fu_631_p2 <= std_logic_vector(unsigned(zext_ln150_2_fu_627_p1) + unsigned(canbase));
    add_ln150_2_fu_597_p2 <= std_logic_vector(unsigned(zext_ln150_fu_581_p1) + unsigned(zext_ln150_1_fu_593_p1));
    add_ln150_fu_603_p2 <= std_logic_vector(unsigned(add_ln150_2_fu_597_p2) + unsigned(ap_const_lv15_2100));
    add_ln173_1_fu_760_p2 <= std_logic_vector(unsigned(zext_ln173_fu_756_p1) + unsigned(canbase));
    add_ln173_fu_733_p2 <= std_logic_vector(unsigned(add_ln150_2_reg_1338) + unsigned(ap_const_lv15_2104));
    add_ln196_fu_1234_p2 <= std_logic_vector(unsigned(NofBytes_fu_1217_p3) + unsigned(ap_const_lv7_8));
    add_ln205_1_fu_1317_p2 <= std_logic_vector(unsigned(zext_ln205_fu_1314_p1) + unsigned(ap_const_lv5_1));
    add_ln205_fu_1256_p2 <= std_logic_vector(unsigned(trunc_ln27_fu_1225_p1) + unsigned(ap_const_lv6_3F));
    add_ln230_fu_1276_p2 <= std_logic_vector(unsigned(internal_can_counter) + unsigned(ap_const_lv32_1));
    add_ln233_fu_1289_p2 <= std_logic_vector(unsigned(canbase) + unsigned(ap_const_lv64_E8));
    and_ln28_fu_943_p2 <= (xor_ln28_fu_933_p2 and icmp_ln28_fu_938_p2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state24 <= ap_CS_fsm(23);
    ap_CS_fsm_state25 <= ap_CS_fsm(24);
    ap_CS_fsm_state26 <= ap_CS_fsm(25);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state31 <= ap_CS_fsm(30);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;
    ap_ST_fsm_state11_blk <= ap_const_logic_0;

    ap_ST_fsm_state12_blk_assign_proc : process(m_axi_clu_addr_RVALID)
    begin
        if ((m_axi_clu_addr_RVALID = ap_const_logic_0)) then 
            ap_ST_fsm_state12_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state12_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state13_blk <= ap_const_logic_0;
    ap_ST_fsm_state14_blk <= ap_const_logic_0;

    ap_ST_fsm_state15_blk_assign_proc : process(ap_block_state15_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state15_on_subcall_done)) then 
            ap_ST_fsm_state15_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state15_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state16_blk <= ap_const_logic_0;

    ap_ST_fsm_state17_blk_assign_proc : process(m_axi_clu_addr_ARREADY)
    begin
        if ((m_axi_clu_addr_ARREADY = ap_const_logic_0)) then 
            ap_ST_fsm_state17_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state17_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state18_blk_assign_proc : process(grp_write_ddr_1_fu_563_ap_done)
    begin
        if ((grp_write_ddr_1_fu_563_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state18_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state18_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state19_blk <= ap_const_logic_0;

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state20_blk <= ap_const_logic_0;
    ap_ST_fsm_state21_blk <= ap_const_logic_0;
    ap_ST_fsm_state22_blk <= ap_const_logic_0;
    ap_ST_fsm_state23_blk <= ap_const_logic_0;

    ap_ST_fsm_state24_blk_assign_proc : process(m_axi_clu_addr_RVALID)
    begin
        if ((m_axi_clu_addr_RVALID = ap_const_logic_0)) then 
            ap_ST_fsm_state24_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state24_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state25_blk_assign_proc : process(m_axi_clu_addr_AWREADY)
    begin
        if ((m_axi_clu_addr_AWREADY = ap_const_logic_0)) then 
            ap_ST_fsm_state25_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state25_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state26_blk_assign_proc : process(m_axi_clu_addr_WREADY)
    begin
        if ((m_axi_clu_addr_WREADY = ap_const_logic_0)) then 
            ap_ST_fsm_state26_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state26_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state27_blk <= ap_const_logic_0;
    ap_ST_fsm_state28_blk <= ap_const_logic_0;
    ap_ST_fsm_state29_blk <= ap_const_logic_0;

    ap_ST_fsm_state2_blk_assign_proc : process(m_axi_clu_addr_ARREADY, grp_recvFrame_logic_1_Pipeline_1_fu_537_ap_done)
    begin
        if (((m_axi_clu_addr_ARREADY = ap_const_logic_0) or (grp_recvFrame_logic_1_Pipeline_1_fu_537_ap_done = ap_const_logic_0))) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state30_blk <= ap_const_logic_0;

    ap_ST_fsm_state31_blk_assign_proc : process(m_axi_clu_addr_BVALID)
    begin
        if ((m_axi_clu_addr_BVALID = ap_const_logic_0)) then 
            ap_ST_fsm_state31_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state31_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;

    ap_ST_fsm_state5_blk_assign_proc : process(m_axi_clu_addr_ARREADY)
    begin
        if ((m_axi_clu_addr_ARREADY = ap_const_logic_0)) then 
            ap_ST_fsm_state5_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state5_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;

    ap_ST_fsm_state9_blk_assign_proc : process(m_axi_clu_addr_RVALID)
    begin
        if ((m_axi_clu_addr_RVALID = ap_const_logic_0)) then 
            ap_ST_fsm_state9_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state9_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_block_state15_on_subcall_done_assign_proc : process(tmp_7_reg_1440, grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_ap_done, grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_ap_done, ap_predicate_op208_call_state15)
    begin
                ap_block_state15_on_subcall_done <= (((ap_predicate_op208_call_state15 = ap_const_boolean_1) and (grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_ap_done = ap_const_logic_0)) or ((grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_ap_done = ap_const_logic_0) and (tmp_7_reg_1440 = ap_const_lv1_0)));
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, m_axi_clu_addr_BVALID, ap_CS_fsm_state31)
    begin
        if ((((m_axi_clu_addr_BVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state31)) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_predicate_op208_call_state15_assign_proc : process(tmp_7_reg_1440, icmp_ln205_reg_1461)
    begin
                ap_predicate_op208_call_state15 <= ((icmp_ln205_reg_1461 = ap_const_lv1_0) and (tmp_7_reg_1440 = ap_const_lv1_1));
    end process;


    ap_ready_assign_proc : process(m_axi_clu_addr_BVALID, ap_CS_fsm_state31)
    begin
        if (((m_axi_clu_addr_BVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state31))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    can_frame_address0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state5, ap_CS_fsm_state12, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state10, tmp_7_reg_1440, ap_CS_fsm_state13, icmp_ln205_reg_1461, ap_CS_fsm_state15, grp_recvFrame_logic_1_Pipeline_1_fu_537_can_frame_address0, grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_can_frame_address0, grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_can_frame_address0, grp_write_ddr_1_fu_563_data_address0, ap_CS_fsm_state18, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            can_frame_address0 <= ap_const_lv64_13(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            can_frame_address0 <= ap_const_lv64_F(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            can_frame_address0 <= ap_const_lv64_D(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            can_frame_address0 <= ap_const_lv64_11(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            can_frame_address0 <= ap_const_lv64_12(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            can_frame_address0 <= ap_const_lv64_9(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            can_frame_address0 <= ap_const_lv64_7(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            can_frame_address0 <= ap_const_lv64_5(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            can_frame_address0 <= ap_const_lv64_3(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            can_frame_address0 <= ap_const_lv64_1(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            can_frame_address0 <= grp_write_ddr_1_fu_563_data_address0;
        elsif (((icmp_ln205_reg_1461 = ap_const_lv1_0) and (tmp_7_reg_1440 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            can_frame_address0 <= grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_can_frame_address0;
        elsif (((tmp_7_reg_1440 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            can_frame_address0 <= grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_can_frame_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            can_frame_address0 <= grp_recvFrame_logic_1_Pipeline_1_fu_537_can_frame_address0;
        else 
            can_frame_address0 <= "XXXXXXX";
        end if; 
    end process;


    can_frame_address1_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state12, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state10, tmp_7_reg_1440, ap_CS_fsm_state13, icmp_ln205_reg_1461, ap_CS_fsm_state15, grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_can_frame_address1, grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_can_frame_address1, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            can_frame_address1 <= ap_const_lv64_B(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            can_frame_address1 <= ap_const_lv64_E(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            can_frame_address1 <= ap_const_lv64_C(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            can_frame_address1 <= ap_const_lv64_10(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            can_frame_address1 <= ap_const_lv64_A(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            can_frame_address1 <= ap_const_lv64_8(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            can_frame_address1 <= ap_const_lv64_6(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            can_frame_address1 <= ap_const_lv64_4(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            can_frame_address1 <= ap_const_lv64_2(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            can_frame_address1 <= ap_const_lv64_0(7 - 1 downto 0);
        elsif (((icmp_ln205_reg_1461 = ap_const_lv1_0) and (tmp_7_reg_1440 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            can_frame_address1 <= grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_can_frame_address1;
        elsif (((tmp_7_reg_1440 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            can_frame_address1 <= grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_can_frame_address1;
        else 
            can_frame_address1 <= "XXXXXXX";
        end if; 
    end process;


    can_frame_ce0_assign_proc : process(m_axi_clu_addr_ARREADY, m_axi_clu_addr_RVALID, ap_CS_fsm_state2, ap_CS_fsm_state5, ap_CS_fsm_state12, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state10, tmp_7_reg_1440, ap_CS_fsm_state13, icmp_ln205_reg_1461, ap_CS_fsm_state15, grp_recvFrame_logic_1_Pipeline_1_fu_537_can_frame_ce0, grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_can_frame_ce0, grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_can_frame_ce0, grp_write_ddr_1_fu_563_data_ce0, ap_CS_fsm_state18, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or ((m_axi_clu_addr_RVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state12)) or ((m_axi_clu_addr_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5)))) then 
            can_frame_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            can_frame_ce0 <= grp_write_ddr_1_fu_563_data_ce0;
        elsif (((icmp_ln205_reg_1461 = ap_const_lv1_0) and (tmp_7_reg_1440 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            can_frame_ce0 <= grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_can_frame_ce0;
        elsif (((tmp_7_reg_1440 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            can_frame_ce0 <= grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_can_frame_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            can_frame_ce0 <= grp_recvFrame_logic_1_Pipeline_1_fu_537_can_frame_ce0;
        else 
            can_frame_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    can_frame_ce1_assign_proc : process(m_axi_clu_addr_ARREADY, m_axi_clu_addr_RVALID, ap_CS_fsm_state5, ap_CS_fsm_state12, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state10, tmp_7_reg_1440, ap_CS_fsm_state13, icmp_ln205_reg_1461, ap_CS_fsm_state15, grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_can_frame_ce1, grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_can_frame_ce1, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or ((m_axi_clu_addr_RVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state12)) or ((m_axi_clu_addr_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5)))) then 
            can_frame_ce1 <= ap_const_logic_1;
        elsif (((icmp_ln205_reg_1461 = ap_const_lv1_0) and (tmp_7_reg_1440 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            can_frame_ce1 <= grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_can_frame_ce1;
        elsif (((tmp_7_reg_1440 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            can_frame_ce1 <= grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_can_frame_ce1;
        else 
            can_frame_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    can_frame_d0_assign_proc : process(timestamp, ap_CS_fsm_state2, ap_CS_fsm_state5, ap_CS_fsm_state12, ap_CS_fsm_state3, trunc_ln28_reg_1355, trunc_ln30_reg_1365, trunc_ln192_reg_1375, ap_CS_fsm_state4, ap_CS_fsm_state10, trunc_ln_reg_1419, trunc_ln168_reg_1429, tmp_7_reg_1440, ap_CS_fsm_state13, icmp_ln205_reg_1461, ap_CS_fsm_state15, grp_recvFrame_logic_1_Pipeline_1_fu_537_can_frame_d0, grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_can_frame_d0, grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_can_frame_d0, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state11, zext_ln179_1_fu_795_p1, zext_ln158_1_fu_865_p1, zext_ln196_fu_1229_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            can_frame_d0 <= zext_ln196_fu_1229_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            can_frame_d0 <= trunc_ln168_reg_1429;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            can_frame_d0 <= trunc_ln_reg_1419;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            can_frame_d0 <= zext_ln158_1_fu_865_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            can_frame_d0 <= ap_const_lv8_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            can_frame_d0 <= zext_ln179_1_fu_795_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            can_frame_d0 <= trunc_ln192_reg_1375;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            can_frame_d0 <= trunc_ln30_reg_1365;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            can_frame_d0 <= trunc_ln28_reg_1355;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            can_frame_d0 <= timestamp(55 downto 48);
        elsif (((icmp_ln205_reg_1461 = ap_const_lv1_0) and (tmp_7_reg_1440 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            can_frame_d0 <= grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_can_frame_d0;
        elsif (((tmp_7_reg_1440 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            can_frame_d0 <= grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_can_frame_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            can_frame_d0 <= grp_recvFrame_logic_1_Pipeline_1_fu_537_can_frame_d0;
        else 
            can_frame_d0 <= "XXXXXXXX";
        end if; 
    end process;


    can_frame_d1_assign_proc : process(timestamp, ap_CS_fsm_state5, ap_CS_fsm_state12, trunc_ln26_reg_1350, ap_CS_fsm_state3, trunc_ln29_reg_1360, trunc_ln31_reg_1370, ap_CS_fsm_state4, ap_CS_fsm_state10, trunc_ln23_reg_1424, tmp_7_reg_1440, ap_CS_fsm_state13, icmp_ln205_reg_1461, ap_CS_fsm_state15, grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_can_frame_d1, grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_can_frame_d1, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state11, zext_ln153_fu_840_p1, zext_ln165_fu_904_p1, zext_ln196_1_fu_1240_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            can_frame_d1 <= zext_ln196_1_fu_1240_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            can_frame_d1 <= trunc_ln23_reg_1424;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            can_frame_d1 <= zext_ln165_fu_904_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            can_frame_d1 <= zext_ln153_fu_840_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            can_frame_d1 <= ap_const_lv8_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            can_frame_d1 <= ap_const_lv8_2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            can_frame_d1 <= trunc_ln31_reg_1370;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            can_frame_d1 <= trunc_ln29_reg_1360;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            can_frame_d1 <= trunc_ln26_reg_1350;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            can_frame_d1 <= timestamp(63 downto 56);
        elsif (((icmp_ln205_reg_1461 = ap_const_lv1_0) and (tmp_7_reg_1440 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            can_frame_d1 <= grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_can_frame_d1;
        elsif (((tmp_7_reg_1440 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            can_frame_d1 <= grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_can_frame_d1;
        else 
            can_frame_d1 <= "XXXXXXXX";
        end if; 
    end process;


    can_frame_we0_assign_proc : process(m_axi_clu_addr_ARREADY, m_axi_clu_addr_RVALID, ap_CS_fsm_state2, ap_CS_fsm_state5, ap_CS_fsm_state12, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state10, tmp_7_reg_1440, ap_CS_fsm_state13, icmp_ln205_reg_1461, ap_CS_fsm_state15, grp_recvFrame_logic_1_Pipeline_1_fu_537_can_frame_we0, grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_can_frame_we0, grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_can_frame_we0, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or ((m_axi_clu_addr_RVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state12)) or ((m_axi_clu_addr_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5)))) then 
            can_frame_we0 <= ap_const_logic_1;
        elsif (((icmp_ln205_reg_1461 = ap_const_lv1_0) and (tmp_7_reg_1440 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            can_frame_we0 <= grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_can_frame_we0;
        elsif (((tmp_7_reg_1440 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            can_frame_we0 <= grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_can_frame_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            can_frame_we0 <= grp_recvFrame_logic_1_Pipeline_1_fu_537_can_frame_we0;
        else 
            can_frame_we0 <= ap_const_logic_0;
        end if; 
    end process;


    can_frame_we1_assign_proc : process(m_axi_clu_addr_ARREADY, m_axi_clu_addr_RVALID, ap_CS_fsm_state5, ap_CS_fsm_state12, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state10, tmp_7_reg_1440, ap_CS_fsm_state13, icmp_ln205_reg_1461, ap_CS_fsm_state15, grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_can_frame_we1, grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_can_frame_we1, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or ((m_axi_clu_addr_RVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state12)) or ((m_axi_clu_addr_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5)))) then 
            can_frame_we1 <= ap_const_logic_1;
        elsif (((icmp_ln205_reg_1461 = ap_const_lv1_0) and (tmp_7_reg_1440 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            can_frame_we1 <= grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_can_frame_we1;
        elsif (((tmp_7_reg_1440 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            can_frame_we1 <= grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_can_frame_we1;
        else 
            can_frame_we1 <= ap_const_logic_0;
        end if; 
    end process;


    clu_addr_blk_n_AR_assign_proc : process(m_axi_clu_addr_ARREADY, ap_CS_fsm_state2, ap_CS_fsm_state5, ap_CS_fsm_state17)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            clu_addr_blk_n_AR <= m_axi_clu_addr_ARREADY;
        else 
            clu_addr_blk_n_AR <= ap_const_logic_1;
        end if; 
    end process;


    clu_addr_blk_n_AW_assign_proc : process(m_axi_clu_addr_AWREADY, ap_CS_fsm_state25)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            clu_addr_blk_n_AW <= m_axi_clu_addr_AWREADY;
        else 
            clu_addr_blk_n_AW <= ap_const_logic_1;
        end if; 
    end process;


    clu_addr_blk_n_B_assign_proc : process(m_axi_clu_addr_BVALID, ap_CS_fsm_state31)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            clu_addr_blk_n_B <= m_axi_clu_addr_BVALID;
        else 
            clu_addr_blk_n_B <= ap_const_logic_1;
        end if; 
    end process;


    clu_addr_blk_n_R_assign_proc : process(m_axi_clu_addr_RVALID, ap_CS_fsm_state9, ap_CS_fsm_state12, ap_CS_fsm_state24)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            clu_addr_blk_n_R <= m_axi_clu_addr_RVALID;
        else 
            clu_addr_blk_n_R <= ap_const_logic_1;
        end if; 
    end process;


    clu_addr_blk_n_W_assign_proc : process(m_axi_clu_addr_WREADY, ap_CS_fsm_state26)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            clu_addr_blk_n_W <= m_axi_clu_addr_WREADY;
        else 
            clu_addr_blk_n_W <= ap_const_logic_1;
        end if; 
    end process;

    empty_70_fu_1211_p2 <= (icmp_ln32_14_fu_1197_p2 or icmp_ln32_13_fu_1191_p2);
    empty_fu_1203_p3 <= 
        ap_const_lv7_40 when (icmp_ln32_14_fu_1197_p2(0) = '1') else 
        ap_const_lv7_30;
    grp_recvFrame_logic_1_Pipeline_1_fu_537_ap_start <= grp_recvFrame_logic_1_Pipeline_1_fu_537_ap_start_reg;
    grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_ap_start <= grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_ap_start_reg;
    grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_ap_start <= grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_ap_start_reg;
    grp_write_ddr_1_fu_563_ap_start <= grp_write_ddr_1_fu_563_ap_start_reg;
    icmp_ln205_fu_1250_p2 <= "1" when (NofBytes_fu_1217_p3 = ap_const_lv7_0) else "0";
    icmp_ln28_fu_938_p2 <= "1" when (unsigned(frameDLC_reg_1434) > unsigned(ap_const_lv32_8FFFFFFF)) else "0";
    icmp_ln32_10_fu_1121_p2 <= "1" when (select_ln28_fu_949_p3 = ap_const_lv32_B0000000) else "0";
    icmp_ln32_11_fu_1153_p2 <= "1" when (select_ln28_fu_949_p3 = ap_const_lv32_C0000000) else "0";
    icmp_ln32_12_fu_1159_p2 <= "1" when (select_ln28_fu_949_p3 = ap_const_lv32_D0000000) else "0";
    icmp_ln32_13_fu_1191_p2 <= "1" when (select_ln28_fu_949_p3 = ap_const_lv32_E0000000) else "0";
    icmp_ln32_14_fu_1197_p2 <= "1" when (select_ln28_fu_949_p3 = ap_const_lv32_F0000000) else "0";
    icmp_ln32_1_fu_967_p2 <= "1" when (select_ln28_fu_949_p3 = ap_const_lv32_20000000) else "0";
    icmp_ln32_2_fu_973_p2 <= "1" when (select_ln28_fu_949_p3 = ap_const_lv32_30000000) else "0";
    icmp_ln32_3_fu_1005_p2 <= "1" when (select_ln28_fu_949_p3 = ap_const_lv32_40000000) else "0";
    icmp_ln32_4_fu_1011_p2 <= "1" when (select_ln28_fu_949_p3 = ap_const_lv32_50000000) else "0";
    icmp_ln32_5_fu_1039_p2 <= "1" when (select_ln28_fu_949_p3 = ap_const_lv32_60000000) else "0";
    icmp_ln32_6_fu_1045_p2 <= "1" when (select_ln28_fu_949_p3 = ap_const_lv32_70000000) else "0";
    icmp_ln32_7_fu_1077_p2 <= "1" when (select_ln28_fu_949_p3 = ap_const_lv32_80000000) else "0";
    icmp_ln32_8_fu_1083_p2 <= "1" when (select_ln28_fu_949_p3 = ap_const_lv32_90000000) else "0";
    icmp_ln32_9_fu_1115_p2 <= "1" when (select_ln28_fu_949_p3 = ap_const_lv32_A0000000) else "0";
    icmp_ln32_fu_957_p2 <= "1" when (select_ln28_fu_949_p3 = ap_const_lv32_10000000) else "0";
    id_can_fu_789_p2 <= std_logic_vector(unsigned(zext_ln179_fu_785_p1) + unsigned(ap_const_lv5_8));

    m_axi_clu_addr_ARADDR_assign_proc : process(m_axi_clu_addr_ARREADY, ap_CS_fsm_state2, ap_CS_fsm_state5, ap_CS_fsm_state17, clu_addr_addr_reg_1344, clu_addr_addr_5_reg_1380, tmp_7_reg_1440, icmp_ln205_reg_1461, clu_addr_addr_6_reg_1470, ap_CS_fsm_state15, ap_CS_fsm_state16, grp_recvFrame_logic_1_Pipeline_1_fu_537_ap_done, grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_m_axi_clu_addr_ARADDR, grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_m_axi_clu_addr_ARADDR, ap_CS_fsm_state14)
    begin
        if (((m_axi_clu_addr_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            m_axi_clu_addr_ARADDR <= clu_addr_addr_6_reg_1470;
        elsif (((m_axi_clu_addr_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            m_axi_clu_addr_ARADDR <= clu_addr_addr_5_reg_1380;
        elsif ((not(((m_axi_clu_addr_ARREADY = ap_const_logic_0) or (grp_recvFrame_logic_1_Pipeline_1_fu_537_ap_done = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            m_axi_clu_addr_ARADDR <= clu_addr_addr_reg_1344;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) or ((icmp_ln205_reg_1461 = ap_const_lv1_0) and (tmp_7_reg_1440 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state15)))) then 
            m_axi_clu_addr_ARADDR <= grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_m_axi_clu_addr_ARADDR;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state14) or ((tmp_7_reg_1440 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state15)))) then 
            m_axi_clu_addr_ARADDR <= grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_m_axi_clu_addr_ARADDR;
        else 
            m_axi_clu_addr_ARADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    m_axi_clu_addr_ARBURST_assign_proc : process(tmp_7_reg_1440, icmp_ln205_reg_1461, ap_CS_fsm_state15, ap_CS_fsm_state16, grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_m_axi_clu_addr_ARBURST, grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_m_axi_clu_addr_ARBURST, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state16) or ((icmp_ln205_reg_1461 = ap_const_lv1_0) and (tmp_7_reg_1440 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state15)))) then 
            m_axi_clu_addr_ARBURST <= grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_m_axi_clu_addr_ARBURST;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state14) or ((tmp_7_reg_1440 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state15)))) then 
            m_axi_clu_addr_ARBURST <= grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_m_axi_clu_addr_ARBURST;
        else 
            m_axi_clu_addr_ARBURST <= ap_const_lv2_0;
        end if; 
    end process;


    m_axi_clu_addr_ARCACHE_assign_proc : process(tmp_7_reg_1440, icmp_ln205_reg_1461, ap_CS_fsm_state15, ap_CS_fsm_state16, grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_m_axi_clu_addr_ARCACHE, grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_m_axi_clu_addr_ARCACHE, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state16) or ((icmp_ln205_reg_1461 = ap_const_lv1_0) and (tmp_7_reg_1440 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state15)))) then 
            m_axi_clu_addr_ARCACHE <= grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_m_axi_clu_addr_ARCACHE;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state14) or ((tmp_7_reg_1440 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state15)))) then 
            m_axi_clu_addr_ARCACHE <= grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_m_axi_clu_addr_ARCACHE;
        else 
            m_axi_clu_addr_ARCACHE <= ap_const_lv4_0;
        end if; 
    end process;


    m_axi_clu_addr_ARID_assign_proc : process(tmp_7_reg_1440, icmp_ln205_reg_1461, ap_CS_fsm_state15, ap_CS_fsm_state16, grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_m_axi_clu_addr_ARID, grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_m_axi_clu_addr_ARID, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state16) or ((icmp_ln205_reg_1461 = ap_const_lv1_0) and (tmp_7_reg_1440 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state15)))) then 
            m_axi_clu_addr_ARID <= grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_m_axi_clu_addr_ARID;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state14) or ((tmp_7_reg_1440 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state15)))) then 
            m_axi_clu_addr_ARID <= grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_m_axi_clu_addr_ARID;
        else 
            m_axi_clu_addr_ARID <= ap_const_lv1_0;
        end if; 
    end process;


    m_axi_clu_addr_ARLEN_assign_proc : process(m_axi_clu_addr_ARREADY, ap_CS_fsm_state2, ap_CS_fsm_state5, ap_CS_fsm_state17, tmp_7_reg_1440, icmp_ln205_reg_1461, ap_CS_fsm_state15, ap_CS_fsm_state16, grp_recvFrame_logic_1_Pipeline_1_fu_537_ap_done, grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_m_axi_clu_addr_ARLEN, grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_m_axi_clu_addr_ARLEN, ap_CS_fsm_state14)
    begin
        if (((not(((m_axi_clu_addr_ARREADY = ap_const_logic_0) or (grp_recvFrame_logic_1_Pipeline_1_fu_537_ap_done = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((m_axi_clu_addr_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state17)) or ((m_axi_clu_addr_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5)))) then 
            m_axi_clu_addr_ARLEN <= ap_const_lv32_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) or ((icmp_ln205_reg_1461 = ap_const_lv1_0) and (tmp_7_reg_1440 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state15)))) then 
            m_axi_clu_addr_ARLEN <= grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_m_axi_clu_addr_ARLEN;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state14) or ((tmp_7_reg_1440 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state15)))) then 
            m_axi_clu_addr_ARLEN <= grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_m_axi_clu_addr_ARLEN;
        else 
            m_axi_clu_addr_ARLEN <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    m_axi_clu_addr_ARLOCK_assign_proc : process(tmp_7_reg_1440, icmp_ln205_reg_1461, ap_CS_fsm_state15, ap_CS_fsm_state16, grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_m_axi_clu_addr_ARLOCK, grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_m_axi_clu_addr_ARLOCK, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state16) or ((icmp_ln205_reg_1461 = ap_const_lv1_0) and (tmp_7_reg_1440 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state15)))) then 
            m_axi_clu_addr_ARLOCK <= grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_m_axi_clu_addr_ARLOCK;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state14) or ((tmp_7_reg_1440 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state15)))) then 
            m_axi_clu_addr_ARLOCK <= grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_m_axi_clu_addr_ARLOCK;
        else 
            m_axi_clu_addr_ARLOCK <= ap_const_lv2_0;
        end if; 
    end process;


    m_axi_clu_addr_ARPROT_assign_proc : process(tmp_7_reg_1440, icmp_ln205_reg_1461, ap_CS_fsm_state15, ap_CS_fsm_state16, grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_m_axi_clu_addr_ARPROT, grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_m_axi_clu_addr_ARPROT, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state16) or ((icmp_ln205_reg_1461 = ap_const_lv1_0) and (tmp_7_reg_1440 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state15)))) then 
            m_axi_clu_addr_ARPROT <= grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_m_axi_clu_addr_ARPROT;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state14) or ((tmp_7_reg_1440 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state15)))) then 
            m_axi_clu_addr_ARPROT <= grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_m_axi_clu_addr_ARPROT;
        else 
            m_axi_clu_addr_ARPROT <= ap_const_lv3_0;
        end if; 
    end process;


    m_axi_clu_addr_ARQOS_assign_proc : process(tmp_7_reg_1440, icmp_ln205_reg_1461, ap_CS_fsm_state15, ap_CS_fsm_state16, grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_m_axi_clu_addr_ARQOS, grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_m_axi_clu_addr_ARQOS, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state16) or ((icmp_ln205_reg_1461 = ap_const_lv1_0) and (tmp_7_reg_1440 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state15)))) then 
            m_axi_clu_addr_ARQOS <= grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_m_axi_clu_addr_ARQOS;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state14) or ((tmp_7_reg_1440 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state15)))) then 
            m_axi_clu_addr_ARQOS <= grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_m_axi_clu_addr_ARQOS;
        else 
            m_axi_clu_addr_ARQOS <= ap_const_lv4_0;
        end if; 
    end process;


    m_axi_clu_addr_ARREGION_assign_proc : process(tmp_7_reg_1440, icmp_ln205_reg_1461, ap_CS_fsm_state15, ap_CS_fsm_state16, grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_m_axi_clu_addr_ARREGION, grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_m_axi_clu_addr_ARREGION, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state16) or ((icmp_ln205_reg_1461 = ap_const_lv1_0) and (tmp_7_reg_1440 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state15)))) then 
            m_axi_clu_addr_ARREGION <= grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_m_axi_clu_addr_ARREGION;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state14) or ((tmp_7_reg_1440 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state15)))) then 
            m_axi_clu_addr_ARREGION <= grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_m_axi_clu_addr_ARREGION;
        else 
            m_axi_clu_addr_ARREGION <= ap_const_lv4_0;
        end if; 
    end process;


    m_axi_clu_addr_ARSIZE_assign_proc : process(tmp_7_reg_1440, icmp_ln205_reg_1461, ap_CS_fsm_state15, ap_CS_fsm_state16, grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_m_axi_clu_addr_ARSIZE, grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_m_axi_clu_addr_ARSIZE, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state16) or ((icmp_ln205_reg_1461 = ap_const_lv1_0) and (tmp_7_reg_1440 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state15)))) then 
            m_axi_clu_addr_ARSIZE <= grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_m_axi_clu_addr_ARSIZE;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state14) or ((tmp_7_reg_1440 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state15)))) then 
            m_axi_clu_addr_ARSIZE <= grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_m_axi_clu_addr_ARSIZE;
        else 
            m_axi_clu_addr_ARSIZE <= ap_const_lv3_0;
        end if; 
    end process;


    m_axi_clu_addr_ARUSER_assign_proc : process(tmp_7_reg_1440, icmp_ln205_reg_1461, ap_CS_fsm_state15, ap_CS_fsm_state16, grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_m_axi_clu_addr_ARUSER, grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_m_axi_clu_addr_ARUSER, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state16) or ((icmp_ln205_reg_1461 = ap_const_lv1_0) and (tmp_7_reg_1440 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state15)))) then 
            m_axi_clu_addr_ARUSER <= grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_m_axi_clu_addr_ARUSER;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state14) or ((tmp_7_reg_1440 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state15)))) then 
            m_axi_clu_addr_ARUSER <= grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_m_axi_clu_addr_ARUSER;
        else 
            m_axi_clu_addr_ARUSER <= ap_const_lv1_0;
        end if; 
    end process;


    m_axi_clu_addr_ARVALID_assign_proc : process(m_axi_clu_addr_ARREADY, ap_CS_fsm_state2, ap_CS_fsm_state5, ap_CS_fsm_state17, tmp_7_reg_1440, icmp_ln205_reg_1461, ap_CS_fsm_state15, ap_CS_fsm_state16, grp_recvFrame_logic_1_Pipeline_1_fu_537_ap_done, grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_m_axi_clu_addr_ARVALID, grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_m_axi_clu_addr_ARVALID, ap_CS_fsm_state14)
    begin
        if (((not(((m_axi_clu_addr_ARREADY = ap_const_logic_0) or (grp_recvFrame_logic_1_Pipeline_1_fu_537_ap_done = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((m_axi_clu_addr_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state17)) or ((m_axi_clu_addr_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5)))) then 
            m_axi_clu_addr_ARVALID <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) or ((icmp_ln205_reg_1461 = ap_const_lv1_0) and (tmp_7_reg_1440 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state15)))) then 
            m_axi_clu_addr_ARVALID <= grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_m_axi_clu_addr_ARVALID;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state14) or ((tmp_7_reg_1440 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state15)))) then 
            m_axi_clu_addr_ARVALID <= grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_m_axi_clu_addr_ARVALID;
        else 
            m_axi_clu_addr_ARVALID <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_clu_addr_AWADDR <= clu_addr_addr_6_reg_1470;
    m_axi_clu_addr_AWBURST <= ap_const_lv2_0;
    m_axi_clu_addr_AWCACHE <= ap_const_lv4_0;
    m_axi_clu_addr_AWID <= ap_const_lv1_0;
    m_axi_clu_addr_AWLEN <= ap_const_lv32_1;
    m_axi_clu_addr_AWLOCK <= ap_const_lv2_0;
    m_axi_clu_addr_AWPROT <= ap_const_lv3_0;
    m_axi_clu_addr_AWQOS <= ap_const_lv4_0;
    m_axi_clu_addr_AWREGION <= ap_const_lv4_0;
    m_axi_clu_addr_AWSIZE <= ap_const_lv3_0;
    m_axi_clu_addr_AWUSER <= ap_const_lv1_0;

    m_axi_clu_addr_AWVALID_assign_proc : process(m_axi_clu_addr_AWREADY, ap_CS_fsm_state25)
    begin
        if (((m_axi_clu_addr_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state25))) then 
            m_axi_clu_addr_AWVALID <= ap_const_logic_1;
        else 
            m_axi_clu_addr_AWVALID <= ap_const_logic_0;
        end if; 
    end process;


    m_axi_clu_addr_BREADY_assign_proc : process(m_axi_clu_addr_BVALID, ap_CS_fsm_state31)
    begin
        if (((m_axi_clu_addr_BVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state31))) then 
            m_axi_clu_addr_BREADY <= ap_const_logic_1;
        else 
            m_axi_clu_addr_BREADY <= ap_const_logic_0;
        end if; 
    end process;


    m_axi_clu_addr_RREADY_assign_proc : process(m_axi_clu_addr_RVALID, ap_CS_fsm_state9, ap_CS_fsm_state12, ap_CS_fsm_state24, tmp_7_reg_1440, icmp_ln205_reg_1461, ap_CS_fsm_state15, ap_CS_fsm_state16, grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_m_axi_clu_addr_RREADY, grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_m_axi_clu_addr_RREADY, ap_CS_fsm_state14)
    begin
        if ((((m_axi_clu_addr_RVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state24)) or ((m_axi_clu_addr_RVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state12)) or ((m_axi_clu_addr_RVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9)))) then 
            m_axi_clu_addr_RREADY <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state16) or ((icmp_ln205_reg_1461 = ap_const_lv1_0) and (tmp_7_reg_1440 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state15)))) then 
            m_axi_clu_addr_RREADY <= grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_553_m_axi_clu_addr_RREADY;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state14) or ((tmp_7_reg_1440 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state15)))) then 
            m_axi_clu_addr_RREADY <= grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_543_m_axi_clu_addr_RREADY;
        else 
            m_axi_clu_addr_RREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_clu_addr_WDATA <= (clu_addr_addr_6_read_reg_1482 or ap_const_lv32_80);
    m_axi_clu_addr_WID <= ap_const_lv1_0;
    m_axi_clu_addr_WLAST <= ap_const_logic_0;
    m_axi_clu_addr_WSTRB <= ap_const_lv4_F;
    m_axi_clu_addr_WUSER <= ap_const_lv1_0;

    m_axi_clu_addr_WVALID_assign_proc : process(m_axi_clu_addr_WREADY, ap_CS_fsm_state26)
    begin
        if (((m_axi_clu_addr_WREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state26))) then 
            m_axi_clu_addr_WVALID <= ap_const_logic_1;
        else 
            m_axi_clu_addr_WVALID <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_ps_ddr_ARADDR <= grp_write_ddr_1_fu_563_m_axi_ps_ddr_ARADDR;
    m_axi_ps_ddr_ARBURST <= grp_write_ddr_1_fu_563_m_axi_ps_ddr_ARBURST;
    m_axi_ps_ddr_ARCACHE <= grp_write_ddr_1_fu_563_m_axi_ps_ddr_ARCACHE;
    m_axi_ps_ddr_ARID <= grp_write_ddr_1_fu_563_m_axi_ps_ddr_ARID;
    m_axi_ps_ddr_ARLEN <= grp_write_ddr_1_fu_563_m_axi_ps_ddr_ARLEN;
    m_axi_ps_ddr_ARLOCK <= grp_write_ddr_1_fu_563_m_axi_ps_ddr_ARLOCK;
    m_axi_ps_ddr_ARPROT <= grp_write_ddr_1_fu_563_m_axi_ps_ddr_ARPROT;
    m_axi_ps_ddr_ARQOS <= grp_write_ddr_1_fu_563_m_axi_ps_ddr_ARQOS;
    m_axi_ps_ddr_ARREGION <= grp_write_ddr_1_fu_563_m_axi_ps_ddr_ARREGION;
    m_axi_ps_ddr_ARSIZE <= grp_write_ddr_1_fu_563_m_axi_ps_ddr_ARSIZE;
    m_axi_ps_ddr_ARUSER <= grp_write_ddr_1_fu_563_m_axi_ps_ddr_ARUSER;

    m_axi_ps_ddr_ARVALID_assign_proc : process(ap_CS_fsm_state17, grp_write_ddr_1_fu_563_m_axi_ps_ddr_ARVALID, ap_CS_fsm_state18)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            m_axi_ps_ddr_ARVALID <= grp_write_ddr_1_fu_563_m_axi_ps_ddr_ARVALID;
        else 
            m_axi_ps_ddr_ARVALID <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_ps_ddr_AWADDR <= grp_write_ddr_1_fu_563_m_axi_ps_ddr_AWADDR;
    m_axi_ps_ddr_AWBURST <= grp_write_ddr_1_fu_563_m_axi_ps_ddr_AWBURST;
    m_axi_ps_ddr_AWCACHE <= grp_write_ddr_1_fu_563_m_axi_ps_ddr_AWCACHE;
    m_axi_ps_ddr_AWID <= grp_write_ddr_1_fu_563_m_axi_ps_ddr_AWID;
    m_axi_ps_ddr_AWLEN <= grp_write_ddr_1_fu_563_m_axi_ps_ddr_AWLEN;
    m_axi_ps_ddr_AWLOCK <= grp_write_ddr_1_fu_563_m_axi_ps_ddr_AWLOCK;
    m_axi_ps_ddr_AWPROT <= grp_write_ddr_1_fu_563_m_axi_ps_ddr_AWPROT;
    m_axi_ps_ddr_AWQOS <= grp_write_ddr_1_fu_563_m_axi_ps_ddr_AWQOS;
    m_axi_ps_ddr_AWREGION <= grp_write_ddr_1_fu_563_m_axi_ps_ddr_AWREGION;
    m_axi_ps_ddr_AWSIZE <= grp_write_ddr_1_fu_563_m_axi_ps_ddr_AWSIZE;
    m_axi_ps_ddr_AWUSER <= grp_write_ddr_1_fu_563_m_axi_ps_ddr_AWUSER;

    m_axi_ps_ddr_AWVALID_assign_proc : process(ap_CS_fsm_state17, grp_write_ddr_1_fu_563_m_axi_ps_ddr_AWVALID, ap_CS_fsm_state18)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            m_axi_ps_ddr_AWVALID <= grp_write_ddr_1_fu_563_m_axi_ps_ddr_AWVALID;
        else 
            m_axi_ps_ddr_AWVALID <= ap_const_logic_0;
        end if; 
    end process;


    m_axi_ps_ddr_BREADY_assign_proc : process(ap_CS_fsm_state17, grp_write_ddr_1_fu_563_m_axi_ps_ddr_BREADY, ap_CS_fsm_state18)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            m_axi_ps_ddr_BREADY <= grp_write_ddr_1_fu_563_m_axi_ps_ddr_BREADY;
        else 
            m_axi_ps_ddr_BREADY <= ap_const_logic_0;
        end if; 
    end process;


    m_axi_ps_ddr_RREADY_assign_proc : process(ap_CS_fsm_state17, grp_write_ddr_1_fu_563_m_axi_ps_ddr_RREADY, ap_CS_fsm_state18)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            m_axi_ps_ddr_RREADY <= grp_write_ddr_1_fu_563_m_axi_ps_ddr_RREADY;
        else 
            m_axi_ps_ddr_RREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_ps_ddr_WDATA <= grp_write_ddr_1_fu_563_m_axi_ps_ddr_WDATA;
    m_axi_ps_ddr_WID <= grp_write_ddr_1_fu_563_m_axi_ps_ddr_WID;
    m_axi_ps_ddr_WLAST <= grp_write_ddr_1_fu_563_m_axi_ps_ddr_WLAST;
    m_axi_ps_ddr_WSTRB <= grp_write_ddr_1_fu_563_m_axi_ps_ddr_WSTRB;
    m_axi_ps_ddr_WUSER <= grp_write_ddr_1_fu_563_m_axi_ps_ddr_WUSER;

    m_axi_ps_ddr_WVALID_assign_proc : process(ap_CS_fsm_state17, grp_write_ddr_1_fu_563_m_axi_ps_ddr_WVALID, ap_CS_fsm_state18)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            m_axi_ps_ddr_WVALID <= grp_write_ddr_1_fu_563_m_axi_ps_ddr_WVALID;
        else 
            m_axi_ps_ddr_WVALID <= ap_const_logic_0;
        end if; 
    end process;

    or_ln32_1_fu_1025_p2 <= (icmp_ln32_4_fu_1011_p2 or icmp_ln32_3_fu_1005_p2);
    or_ln32_2_fu_1059_p2 <= (icmp_ln32_6_fu_1045_p2 or icmp_ln32_5_fu_1039_p2);
    or_ln32_3_fu_1097_p2 <= (icmp_ln32_8_fu_1083_p2 or icmp_ln32_7_fu_1077_p2);
    or_ln32_4_fu_1135_p2 <= (icmp_ln32_9_fu_1115_p2 or icmp_ln32_10_fu_1121_p2);
    or_ln32_5_fu_1173_p2 <= (icmp_ln32_12_fu_1159_p2 or icmp_ln32_11_fu_1153_p2);
    or_ln32_fu_987_p2 <= (icmp_ln32_2_fu_973_p2 or icmp_ln32_1_fu_967_p2);
    received_can <= std_logic_vector(unsigned(internal_can_counter) + unsigned(ap_const_lv32_1));

    received_can_ap_vld_assign_proc : process(ap_CS_fsm_state15, ap_block_state15_on_subcall_done)
    begin
        if (((ap_const_boolean_0 = ap_block_state15_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            received_can_ap_vld <= ap_const_logic_1;
        else 
            received_can_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    select_ln158_fu_853_p3 <= 
        trunc_ln146_reg_1386 when (tmp_2_reg_1391(0) = '1') else 
        tmp_3_reg_1404;
    select_ln28_fu_949_p3 <= 
        ap_const_lv32_80000000 when (and_ln28_fu_943_p2(0) = '1') else 
        Dlc_assign_fu_925_p3;
    select_ln32_10_fu_1165_p3 <= 
        ap_const_lv6_20 when (icmp_ln32_12_fu_1159_p2(0) = '1') else 
        ap_const_lv6_18;
    select_ln32_11_fu_1179_p3 <= 
        select_ln32_10_fu_1165_p3 when (or_ln32_5_fu_1173_p2(0) = '1') else 
        zext_ln32_4_fu_1149_p1;
    select_ln32_1_fu_993_p3 <= 
        select_ln32_fu_979_p3 when (or_ln32_fu_987_p2(0) = '1') else 
        zext_ln32_fu_963_p1;
    select_ln32_2_fu_1017_p3 <= 
        ap_const_lv3_5 when (icmp_ln32_4_fu_1011_p2(0) = '1') else 
        ap_const_lv3_4;
    select_ln32_3_fu_1031_p3 <= 
        select_ln32_2_fu_1017_p3 when (or_ln32_1_fu_1025_p2(0) = '1') else 
        zext_ln32_1_fu_1001_p1;
    select_ln32_4_fu_1051_p3 <= 
        ap_const_lv3_7 when (icmp_ln32_6_fu_1045_p2(0) = '1') else 
        ap_const_lv3_6;
    select_ln32_5_fu_1065_p3 <= 
        select_ln32_4_fu_1051_p3 when (or_ln32_2_fu_1059_p2(0) = '1') else 
        select_ln32_3_fu_1031_p3;
    select_ln32_6_fu_1089_p3 <= 
        ap_const_lv4_C when (icmp_ln32_8_fu_1083_p2(0) = '1') else 
        ap_const_lv4_8;
    select_ln32_7_fu_1103_p3 <= 
        select_ln32_6_fu_1089_p3 when (or_ln32_3_fu_1097_p2(0) = '1') else 
        zext_ln32_2_fu_1073_p1;
    select_ln32_8_fu_1127_p3 <= 
        ap_const_lv5_14 when (icmp_ln32_10_fu_1121_p2(0) = '1') else 
        ap_const_lv5_10;
    select_ln32_9_fu_1141_p3 <= 
        select_ln32_8_fu_1127_p3 when (or_ln32_4_fu_1135_p2(0) = '1') else 
        zext_ln32_3_fu_1111_p1;
    select_ln32_fu_979_p3 <= 
        ap_const_lv2_3 when (icmp_ln32_2_fu_973_p2(0) = '1') else 
        ap_const_lv2_2;
        sext_ln150_fu_647_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln150_1_fu_637_p4),64));

        sext_ln173_fu_775_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln173_1_fu_765_p4),64));

        sext_ln233_fu_1304_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln33_fu_1294_p4),64));

    shl_ln150_1_fu_585_p3 <= (readIndex & ap_const_lv3_0);
    shl_ln150_2_fu_619_p3 <= (tmp_fu_609_p4 & ap_const_lv2_0);
    shl_ln1_fu_748_p3 <= (tmp_5_fu_738_p4 & ap_const_lv2_0);
    shl_ln_fu_573_p3 <= (readIndex & ap_const_lv6_0);
    tmp_5_fu_738_p4 <= add_ln173_fu_733_p2(14 downto 2);
    tmp_6_fu_916_p4 <= frameDLC_reg_1434(31 downto 28);
    tmp_fu_609_p4 <= add_ln150_fu_603_p2(14 downto 2);
    trunc_ln146_fu_800_p1 <= m_axi_clu_addr_RDATA(1 - 1 downto 0);
    trunc_ln150_1_fu_637_p4 <= add_ln150_1_fu_631_p2(63 downto 2);
    trunc_ln168_fu_900_p1 <= FrameID_1_fu_858_p3(8 - 1 downto 0);
    trunc_ln173_1_fu_765_p4 <= add_ln173_1_fu_760_p2(63 downto 2);
    trunc_ln192_fu_729_p1 <= timestamp(8 - 1 downto 0);
    trunc_ln27_fu_1225_p1 <= NofBytes_fu_1217_p3(6 - 1 downto 0);
    trunc_ln33_fu_1294_p4 <= add_ln233_fu_1289_p2(63 downto 2);
    xor_ln28_fu_933_p2 <= (tmp_7_reg_1440 xor ap_const_lv1_1);
    zext_ln150_1_fu_593_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln150_1_fu_585_p3),15));
    zext_ln150_2_fu_627_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln150_2_fu_619_p3),64));
    zext_ln150_fu_581_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln_fu_573_p3),15));
    zext_ln153_fu_840_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_2_reg_1391),8));
    zext_ln158_1_fu_865_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln158_fu_853_p3),8));
    zext_ln158_fu_844_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln158_1_reg_1398),29));
    zext_ln165_fu_904_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_4_reg_1414),8));
    zext_ln173_fu_756_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln1_fu_748_p3),64));
    zext_ln179_1_fu_795_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(id_can_fu_789_p2),8));
    zext_ln179_fu_785_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(EN),5));
    zext_ln196_1_fu_1240_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln196_fu_1234_p2),8));
    zext_ln196_fu_1229_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(NofBytes_fu_1217_p3),8));
    zext_ln205_fu_1314_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln32_reg_1465),5));
    zext_ln32_1_fu_1001_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln32_1_fu_993_p3),3));
    zext_ln32_2_fu_1073_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln32_5_fu_1065_p3),4));
    zext_ln32_3_fu_1111_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln32_7_fu_1103_p3),5));
    zext_ln32_4_fu_1149_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln32_9_fu_1141_p3),6));
    zext_ln32_5_fu_1187_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln32_11_fu_1179_p3),7));
    zext_ln32_fu_963_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(icmp_ln32_fu_957_p2),2));
end behav;
