// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module mac_logger_rx_fifo_Pipeline_rx_macfifo_data (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_fifo_axi_full_AWVALID,
        m_axi_fifo_axi_full_AWREADY,
        m_axi_fifo_axi_full_AWADDR,
        m_axi_fifo_axi_full_AWID,
        m_axi_fifo_axi_full_AWLEN,
        m_axi_fifo_axi_full_AWSIZE,
        m_axi_fifo_axi_full_AWBURST,
        m_axi_fifo_axi_full_AWLOCK,
        m_axi_fifo_axi_full_AWCACHE,
        m_axi_fifo_axi_full_AWPROT,
        m_axi_fifo_axi_full_AWQOS,
        m_axi_fifo_axi_full_AWREGION,
        m_axi_fifo_axi_full_AWUSER,
        m_axi_fifo_axi_full_WVALID,
        m_axi_fifo_axi_full_WREADY,
        m_axi_fifo_axi_full_WDATA,
        m_axi_fifo_axi_full_WSTRB,
        m_axi_fifo_axi_full_WLAST,
        m_axi_fifo_axi_full_WID,
        m_axi_fifo_axi_full_WUSER,
        m_axi_fifo_axi_full_ARVALID,
        m_axi_fifo_axi_full_ARREADY,
        m_axi_fifo_axi_full_ARADDR,
        m_axi_fifo_axi_full_ARID,
        m_axi_fifo_axi_full_ARLEN,
        m_axi_fifo_axi_full_ARSIZE,
        m_axi_fifo_axi_full_ARBURST,
        m_axi_fifo_axi_full_ARLOCK,
        m_axi_fifo_axi_full_ARCACHE,
        m_axi_fifo_axi_full_ARPROT,
        m_axi_fifo_axi_full_ARQOS,
        m_axi_fifo_axi_full_ARREGION,
        m_axi_fifo_axi_full_ARUSER,
        m_axi_fifo_axi_full_RVALID,
        m_axi_fifo_axi_full_RREADY,
        m_axi_fifo_axi_full_RDATA,
        m_axi_fifo_axi_full_RLAST,
        m_axi_fifo_axi_full_RID,
        m_axi_fifo_axi_full_RFIFONUM,
        m_axi_fifo_axi_full_RUSER,
        m_axi_fifo_axi_full_RRESP,
        m_axi_fifo_axi_full_BVALID,
        m_axi_fifo_axi_full_BREADY,
        m_axi_fifo_axi_full_BRESP,
        m_axi_fifo_axi_full_BID,
        m_axi_fifo_axi_full_BUSER,
        sext_ln73,
        sext_ln97,
        sext_ln100,
        data_buf_address0,
        data_buf_ce0,
        data_buf_we0,
        data_buf_d0
);

parameter    ap_ST_fsm_pp0_stage0 = 16'd1;
parameter    ap_ST_fsm_pp0_stage1 = 16'd2;
parameter    ap_ST_fsm_pp0_stage2 = 16'd4;
parameter    ap_ST_fsm_pp0_stage3 = 16'd8;
parameter    ap_ST_fsm_pp0_stage4 = 16'd16;
parameter    ap_ST_fsm_pp0_stage5 = 16'd32;
parameter    ap_ST_fsm_pp0_stage6 = 16'd64;
parameter    ap_ST_fsm_pp0_stage7 = 16'd128;
parameter    ap_ST_fsm_pp0_stage8 = 16'd256;
parameter    ap_ST_fsm_pp0_stage9 = 16'd512;
parameter    ap_ST_fsm_pp0_stage10 = 16'd1024;
parameter    ap_ST_fsm_pp0_stage11 = 16'd2048;
parameter    ap_ST_fsm_pp0_stage12 = 16'd4096;
parameter    ap_ST_fsm_pp0_stage13 = 16'd8192;
parameter    ap_ST_fsm_pp0_stage14 = 16'd16384;
parameter    ap_ST_fsm_pp0_stage15 = 16'd32768;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_fifo_axi_full_AWVALID;
input   m_axi_fifo_axi_full_AWREADY;
output  [63:0] m_axi_fifo_axi_full_AWADDR;
output  [0:0] m_axi_fifo_axi_full_AWID;
output  [31:0] m_axi_fifo_axi_full_AWLEN;
output  [2:0] m_axi_fifo_axi_full_AWSIZE;
output  [1:0] m_axi_fifo_axi_full_AWBURST;
output  [1:0] m_axi_fifo_axi_full_AWLOCK;
output  [3:0] m_axi_fifo_axi_full_AWCACHE;
output  [2:0] m_axi_fifo_axi_full_AWPROT;
output  [3:0] m_axi_fifo_axi_full_AWQOS;
output  [3:0] m_axi_fifo_axi_full_AWREGION;
output  [0:0] m_axi_fifo_axi_full_AWUSER;
output   m_axi_fifo_axi_full_WVALID;
input   m_axi_fifo_axi_full_WREADY;
output  [31:0] m_axi_fifo_axi_full_WDATA;
output  [3:0] m_axi_fifo_axi_full_WSTRB;
output   m_axi_fifo_axi_full_WLAST;
output  [0:0] m_axi_fifo_axi_full_WID;
output  [0:0] m_axi_fifo_axi_full_WUSER;
output   m_axi_fifo_axi_full_ARVALID;
input   m_axi_fifo_axi_full_ARREADY;
output  [63:0] m_axi_fifo_axi_full_ARADDR;
output  [0:0] m_axi_fifo_axi_full_ARID;
output  [31:0] m_axi_fifo_axi_full_ARLEN;
output  [2:0] m_axi_fifo_axi_full_ARSIZE;
output  [1:0] m_axi_fifo_axi_full_ARBURST;
output  [1:0] m_axi_fifo_axi_full_ARLOCK;
output  [3:0] m_axi_fifo_axi_full_ARCACHE;
output  [2:0] m_axi_fifo_axi_full_ARPROT;
output  [3:0] m_axi_fifo_axi_full_ARQOS;
output  [3:0] m_axi_fifo_axi_full_ARREGION;
output  [0:0] m_axi_fifo_axi_full_ARUSER;
input   m_axi_fifo_axi_full_RVALID;
output   m_axi_fifo_axi_full_RREADY;
input  [31:0] m_axi_fifo_axi_full_RDATA;
input   m_axi_fifo_axi_full_RLAST;
input  [0:0] m_axi_fifo_axi_full_RID;
input  [8:0] m_axi_fifo_axi_full_RFIFONUM;
input  [0:0] m_axi_fifo_axi_full_RUSER;
input  [1:0] m_axi_fifo_axi_full_RRESP;
input   m_axi_fifo_axi_full_BVALID;
output   m_axi_fifo_axi_full_BREADY;
input  [1:0] m_axi_fifo_axi_full_BRESP;
input  [0:0] m_axi_fifo_axi_full_BID;
input  [0:0] m_axi_fifo_axi_full_BUSER;
input  [61:0] sext_ln73;
input  [5:0] sext_ln97;
input  [1:0] sext_ln100;
output  [8:0] data_buf_address0;
output   data_buf_ce0;
output   data_buf_we0;
output  [31:0] data_buf_d0;

reg ap_idle;
reg m_axi_fifo_axi_full_ARVALID;
reg m_axi_fifo_axi_full_RREADY;
reg[8:0] data_buf_address0;
reg data_buf_ce0;
reg data_buf_we0;

(* fsm_encoding = "none" *) reg   [15:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage8;
reg   [0:0] icmp_ln100_reg_488;
reg    ap_block_state9_pp0_stage8_iter0;
wire    ap_block_state25_pp0_stage8_iter1;
reg    ap_block_pp0_stage8_subdone;
reg    ap_condition_exit_pp0_iter0_stage8;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_CS_fsm_pp0_stage15;
reg    ap_block_state16_pp0_stage15_iter0;
reg    ap_block_pp0_stage15_subdone;
reg    fifo_axi_full_blk_n_AR;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1;
reg    fifo_axi_full_blk_n_R;
wire    ap_block_pp0_stage8;
wire    ap_CS_fsm_pp0_stage9;
wire    ap_block_pp0_stage9;
wire    ap_CS_fsm_pp0_stage10;
wire    ap_block_pp0_stage10;
wire    ap_CS_fsm_pp0_stage11;
wire    ap_block_pp0_stage11;
wire    ap_CS_fsm_pp0_stage12;
wire    ap_block_pp0_stage12;
wire    ap_CS_fsm_pp0_stage13;
wire    ap_block_pp0_stage13;
wire    ap_CS_fsm_pp0_stage14;
wire    ap_block_pp0_stage14;
wire    ap_block_pp0_stage15;
wire    ap_block_pp0_stage0;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_pp0_stage3;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_pp0_stage4;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_pp0_stage5;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_pp0_stage6;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_pp0_stage7;
reg   [31:0] reg_255;
reg    ap_block_pp0_stage8_11001;
reg    ap_block_state10_pp0_stage9_iter0;
reg    ap_block_pp0_stage9_11001;
reg    ap_block_state11_pp0_stage10_iter0;
reg    ap_block_pp0_stage10_11001;
reg    ap_block_state12_pp0_stage11_iter0;
reg    ap_block_pp0_stage11_11001;
reg    ap_block_state13_pp0_stage12_iter0;
reg    ap_block_pp0_stage12_11001;
reg    ap_block_state14_pp0_stage13_iter0;
reg    ap_block_pp0_stage13_11001;
reg    ap_block_state15_pp0_stage14_iter0;
reg    ap_block_pp0_stage14_11001;
reg    ap_block_pp0_stage15_11001;
wire    ap_block_state1_pp0_stage0_iter0;
reg    ap_block_state17_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
wire    ap_block_state2_pp0_stage1_iter0;
reg    ap_block_state2_io;
reg    ap_block_state18_pp0_stage1_iter1;
reg    ap_block_pp0_stage1_11001;
wire    ap_block_state3_pp0_stage2_iter0;
reg    ap_block_state19_pp0_stage2_iter1;
reg    ap_block_pp0_stage2_11001;
wire    ap_block_state4_pp0_stage3_iter0;
reg    ap_block_state20_pp0_stage3_iter1;
reg    ap_block_pp0_stage3_11001;
wire    ap_block_state5_pp0_stage4_iter0;
reg    ap_block_state21_pp0_stage4_iter1;
reg    ap_block_pp0_stage4_11001;
wire    ap_block_state6_pp0_stage5_iter0;
reg    ap_block_state22_pp0_stage5_iter1;
reg    ap_block_pp0_stage5_11001;
wire    ap_block_state7_pp0_stage6_iter0;
reg    ap_block_state23_pp0_stage6_iter1;
reg    ap_block_pp0_stage6_11001;
wire    ap_block_state8_pp0_stage7_iter0;
reg    ap_block_state24_pp0_stage7_iter1;
reg    ap_block_pp0_stage7_11001;
wire  signed [2:0] sext_ln100_cast_fu_260_p1;
reg  signed [2:0] sext_ln100_cast_reg_477;
reg   [63:0] fifo_axi_full_addr_reg_482;
wire   [0:0] icmp_ln100_fu_286_p2;
wire   [4:0] trunc_ln101_fu_298_p1;
reg   [4:0] trunc_ln101_reg_492;
wire   [8:0] or_ln4_fu_307_p4;
reg   [8:0] or_ln4_reg_497;
reg    ap_enable_reg_pp0_iter0_reg;
wire   [63:0] tmp_1_cast_fu_315_p1;
wire   [63:0] arrayidx94_sum1_1_cast_fu_325_p1;
wire   [63:0] arrayidx94_sum1_2_cast_fu_335_p1;
wire   [63:0] arrayidx94_sum1_3_cast_fu_345_p1;
wire   [63:0] arrayidx94_sum1_4_cast_fu_355_p1;
wire   [63:0] arrayidx94_sum1_5_cast_fu_365_p1;
wire   [63:0] arrayidx94_sum1_6_cast_fu_375_p1;
wire   [63:0] arrayidx94_sum1_7_cast_fu_385_p1;
wire   [63:0] arrayidx94_sum1_85_cast_fu_395_p1;
wire   [63:0] arrayidx94_sum1_9_cast_fu_405_p1;
wire   [63:0] arrayidx94_sum1_10_cast_fu_415_p1;
wire   [63:0] arrayidx94_sum1_11_cast_fu_425_p1;
wire   [63:0] arrayidx94_sum1_12_cast_fu_435_p1;
wire   [63:0] arrayidx94_sum1_13_cast_fu_445_p1;
wire   [63:0] arrayidx94_sum1_14_cast_fu_455_p1;
wire   [63:0] arrayidx94_sum1_15_cast_fu_465_p1;
wire  signed [63:0] sext_ln73_cast_fu_268_p1;
reg   [27:0] i_fu_88;
wire   [27:0] add_ln100_fu_292_p2;
wire    ap_loop_init;
reg   [27:0] ap_sig_allocacmp_i_6;
wire  signed [27:0] sext_ln97_cast_fu_264_p1;
wire   [8:0] arrayidx94_sum1_1_fu_320_p2;
wire   [8:0] arrayidx94_sum1_2_fu_330_p2;
wire   [8:0] arrayidx94_sum1_3_fu_340_p2;
wire   [8:0] arrayidx94_sum1_4_fu_350_p2;
wire   [8:0] arrayidx94_sum1_5_fu_360_p2;
wire   [8:0] arrayidx94_sum1_6_fu_370_p2;
wire   [8:0] arrayidx94_sum1_7_fu_380_p2;
wire   [8:0] arrayidx94_sum1_85_fu_390_p2;
wire   [8:0] arrayidx94_sum1_9_fu_400_p2;
wire   [8:0] arrayidx94_sum1_10_fu_410_p2;
wire   [8:0] arrayidx94_sum1_11_fu_420_p2;
wire   [8:0] arrayidx94_sum1_12_fu_430_p2;
wire   [8:0] arrayidx94_sum1_13_fu_440_p2;
wire   [8:0] arrayidx94_sum1_14_fu_450_p2;
wire   [8:0] arrayidx94_sum1_15_fu_460_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [15:0] ap_NS_fsm;
reg    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to1;
reg    ap_block_pp0_stage1_subdone;
reg    ap_block_pp0_stage2_subdone;
reg    ap_block_pp0_stage3_subdone;
reg    ap_block_pp0_stage4_subdone;
reg    ap_block_pp0_stage5_subdone;
reg    ap_block_pp0_stage6_subdone;
reg    ap_block_pp0_stage7_subdone;
reg    ap_block_pp0_stage9_subdone;
reg    ap_block_pp0_stage10_subdone;
reg    ap_block_pp0_stage11_subdone;
reg    ap_block_pp0_stage12_subdone;
reg    ap_block_pp0_stage13_subdone;
reg    ap_block_pp0_stage14_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 16'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

mac_logger_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage8),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage8) & (ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage8_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage8)) begin
            ap_enable_reg_pp0_iter0_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_subdone))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((icmp_ln100_fu_286_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            i_fu_88 <= add_ln100_fu_292_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_88 <= 28'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        fifo_axi_full_addr_reg_482 <= sext_ln73_cast_fu_268_p1;
        icmp_ln100_reg_488 <= icmp_ln100_fu_286_p2;
        sext_ln100_cast_reg_477 <= sext_ln100_cast_fu_260_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001) & (icmp_ln100_reg_488 == 1'd0))) begin
        or_ln4_reg_497[2 : 0] <= or_ln4_fu_307_p4[2 : 0];
or_ln4_reg_497[8 : 4] <= or_ln4_fu_307_p4[8 : 4];
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001) & (icmp_ln100_reg_488 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14_11001) & (icmp_ln100_reg_488 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13_11001) & (icmp_ln100_reg_488 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12_11001) & (icmp_ln100_reg_488 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11_11001) & (icmp_ln100_reg_488 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_11001) & (icmp_ln100_reg_488 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001) & (icmp_ln100_reg_488 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15_11001) & (icmp_ln100_reg_488 == 1'd0)))) begin
        reg_255 <= m_axi_fifo_axi_full_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln100_fu_286_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        trunc_ln101_reg_492 <= trunc_ln101_fu_298_p1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_subdone) & (icmp_ln100_reg_488 == 1'd1))) begin
        ap_condition_exit_pp0_iter0_stage8 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage8 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage8) & (ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage8_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b0)) begin
        ap_idle_pp0_1to1 = 1'b1;
    end else begin
        ap_idle_pp0_1to1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_i_6 = 28'd0;
    end else begin
        ap_sig_allocacmp_i_6 = i_fu_88;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8))) begin
        data_buf_address0 = arrayidx94_sum1_15_cast_fu_465_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7))) begin
        data_buf_address0 = arrayidx94_sum1_14_cast_fu_455_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6))) begin
        data_buf_address0 = arrayidx94_sum1_13_cast_fu_445_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5))) begin
        data_buf_address0 = arrayidx94_sum1_12_cast_fu_435_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4))) begin
        data_buf_address0 = arrayidx94_sum1_11_cast_fu_425_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
        data_buf_address0 = arrayidx94_sum1_10_cast_fu_415_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        data_buf_address0 = arrayidx94_sum1_9_cast_fu_405_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        data_buf_address0 = arrayidx94_sum1_85_cast_fu_395_p1;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        data_buf_address0 = arrayidx94_sum1_7_cast_fu_385_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15))) begin
        data_buf_address0 = arrayidx94_sum1_6_cast_fu_375_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14))) begin
        data_buf_address0 = arrayidx94_sum1_5_cast_fu_365_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13))) begin
        data_buf_address0 = arrayidx94_sum1_4_cast_fu_355_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12))) begin
        data_buf_address0 = arrayidx94_sum1_3_cast_fu_345_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11))) begin
        data_buf_address0 = arrayidx94_sum1_2_cast_fu_335_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10))) begin
        data_buf_address0 = arrayidx94_sum1_1_cast_fu_325_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9))) begin
        data_buf_address0 = tmp_1_cast_fu_315_p1;
    end else begin
        data_buf_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15_11001)))) begin
        data_buf_ce0 = 1'b1;
    end else begin
        data_buf_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14_11001) & (icmp_ln100_reg_488 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13_11001) & (icmp_ln100_reg_488 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12_11001) & (icmp_ln100_reg_488 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11_11001) & (icmp_ln100_reg_488 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_11001) & (icmp_ln100_reg_488 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001) & (icmp_ln100_reg_488 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15_11001) & (icmp_ln100_reg_488 == 1'd0)))) begin
        data_buf_we0 = 1'b1;
    end else begin
        data_buf_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1) & (icmp_ln100_reg_488 == 1'd0))) begin
        fifo_axi_full_blk_n_AR = m_axi_fifo_axi_full_ARREADY;
    end else begin
        fifo_axi_full_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8) & (icmp_ln100_reg_488 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14) & (icmp_ln100_reg_488 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13) & (icmp_ln100_reg_488 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12) & (icmp_ln100_reg_488 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11) & (icmp_ln100_reg_488 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10) & (icmp_ln100_reg_488 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9) & (icmp_ln100_reg_488 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15) & (icmp_ln100_reg_488 == 1'd0)))) begin
        fifo_axi_full_blk_n_R = m_axi_fifo_axi_full_RVALID;
    end else begin
        fifo_axi_full_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln100_reg_488 == 1'd0))) begin
        m_axi_fifo_axi_full_ARVALID = 1'b1;
    end else begin
        m_axi_fifo_axi_full_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001) & (icmp_ln100_reg_488 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14_11001) & (icmp_ln100_reg_488 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13_11001) & (icmp_ln100_reg_488 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12_11001) & (icmp_ln100_reg_488 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11_11001) & (icmp_ln100_reg_488 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_11001) & (icmp_ln100_reg_488 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001) & (icmp_ln100_reg_488 == 1'd0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15_11001) & (icmp_ln100_reg_488 == 1'd0)))) begin
        m_axi_fifo_axi_full_RREADY = 1'b1;
    end else begin
        m_axi_fifo_axi_full_RREADY = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to1 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b1 == ap_condition_exit_pp0_iter0_stage8)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        ap_ST_fsm_pp0_stage10 : begin
            if ((1'b0 == ap_block_pp0_stage10_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end
        end
        ap_ST_fsm_pp0_stage11 : begin
            if ((1'b0 == ap_block_pp0_stage11_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end
        end
        ap_ST_fsm_pp0_stage12 : begin
            if ((1'b0 == ap_block_pp0_stage12_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end
        end
        ap_ST_fsm_pp0_stage13 : begin
            if ((1'b0 == ap_block_pp0_stage13_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end
        end
        ap_ST_fsm_pp0_stage14 : begin
            if ((1'b0 == ap_block_pp0_stage14_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end
        end
        ap_ST_fsm_pp0_stage15 : begin
            if ((1'b0 == ap_block_pp0_stage15_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln100_fu_292_p2 = (ap_sig_allocacmp_i_6 + 28'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage10 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp0_stage11 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp0_stage12 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp0_stage13 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_pp0_stage14 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_pp0_stage15 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[32'd9];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((m_axi_fifo_axi_full_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((m_axi_fifo_axi_full_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage10_11001 = ((m_axi_fifo_axi_full_RVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln100_reg_488 == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage10_subdone = ((m_axi_fifo_axi_full_RVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln100_reg_488 == 1'd0));
end

assign ap_block_pp0_stage11 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage11_11001 = ((m_axi_fifo_axi_full_RVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln100_reg_488 == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage11_subdone = ((m_axi_fifo_axi_full_RVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln100_reg_488 == 1'd0));
end

assign ap_block_pp0_stage12 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage12_11001 = ((m_axi_fifo_axi_full_RVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln100_reg_488 == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage12_subdone = ((m_axi_fifo_axi_full_RVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln100_reg_488 == 1'd0));
end

assign ap_block_pp0_stage13 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage13_11001 = ((m_axi_fifo_axi_full_RVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln100_reg_488 == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage13_subdone = ((m_axi_fifo_axi_full_RVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln100_reg_488 == 1'd0));
end

assign ap_block_pp0_stage14 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage14_11001 = ((m_axi_fifo_axi_full_RVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln100_reg_488 == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage14_subdone = ((m_axi_fifo_axi_full_RVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln100_reg_488 == 1'd0));
end

assign ap_block_pp0_stage15 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage15_11001 = ((m_axi_fifo_axi_full_RVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln100_reg_488 == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage15_subdone = ((m_axi_fifo_axi_full_RVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln100_reg_488 == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage1_11001 = (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state2_io)) | ((m_axi_fifo_axi_full_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state2_io)) | ((m_axi_fifo_axi_full_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage2_11001 = ((m_axi_fifo_axi_full_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage2_subdone = ((m_axi_fifo_axi_full_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage3_11001 = ((m_axi_fifo_axi_full_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage3_subdone = ((m_axi_fifo_axi_full_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage4_11001 = ((m_axi_fifo_axi_full_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage4_subdone = ((m_axi_fifo_axi_full_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage5_11001 = ((m_axi_fifo_axi_full_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage5_subdone = ((m_axi_fifo_axi_full_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage6_11001 = ((m_axi_fifo_axi_full_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage6_subdone = ((m_axi_fifo_axi_full_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage7_11001 = ((m_axi_fifo_axi_full_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage7_subdone = ((m_axi_fifo_axi_full_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_block_pp0_stage8 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage8_11001 = ((m_axi_fifo_axi_full_RVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln100_reg_488 == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage8_subdone = ((m_axi_fifo_axi_full_RVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln100_reg_488 == 1'd0));
end

assign ap_block_pp0_stage9 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage9_11001 = ((m_axi_fifo_axi_full_RVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln100_reg_488 == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage9_subdone = ((m_axi_fifo_axi_full_RVALID == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln100_reg_488 == 1'd0));
end

always @ (*) begin
    ap_block_state10_pp0_stage9_iter0 = ((m_axi_fifo_axi_full_RVALID == 1'b0) & (icmp_ln100_reg_488 == 1'd0));
end

always @ (*) begin
    ap_block_state11_pp0_stage10_iter0 = ((m_axi_fifo_axi_full_RVALID == 1'b0) & (icmp_ln100_reg_488 == 1'd0));
end

always @ (*) begin
    ap_block_state12_pp0_stage11_iter0 = ((m_axi_fifo_axi_full_RVALID == 1'b0) & (icmp_ln100_reg_488 == 1'd0));
end

always @ (*) begin
    ap_block_state13_pp0_stage12_iter0 = ((m_axi_fifo_axi_full_RVALID == 1'b0) & (icmp_ln100_reg_488 == 1'd0));
end

always @ (*) begin
    ap_block_state14_pp0_stage13_iter0 = ((m_axi_fifo_axi_full_RVALID == 1'b0) & (icmp_ln100_reg_488 == 1'd0));
end

always @ (*) begin
    ap_block_state15_pp0_stage14_iter0 = ((m_axi_fifo_axi_full_RVALID == 1'b0) & (icmp_ln100_reg_488 == 1'd0));
end

always @ (*) begin
    ap_block_state16_pp0_stage15_iter0 = ((m_axi_fifo_axi_full_RVALID == 1'b0) & (icmp_ln100_reg_488 == 1'd0));
end

always @ (*) begin
    ap_block_state17_pp0_stage0_iter1 = (m_axi_fifo_axi_full_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state18_pp0_stage1_iter1 = (m_axi_fifo_axi_full_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state19_pp0_stage2_iter1 = (m_axi_fifo_axi_full_RVALID == 1'b0);
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state20_pp0_stage3_iter1 = (m_axi_fifo_axi_full_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state21_pp0_stage4_iter1 = (m_axi_fifo_axi_full_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state22_pp0_stage5_iter1 = (m_axi_fifo_axi_full_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state23_pp0_stage6_iter1 = (m_axi_fifo_axi_full_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state24_pp0_stage7_iter1 = (m_axi_fifo_axi_full_RVALID == 1'b0);
end

assign ap_block_state25_pp0_stage8_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2_io = ((m_axi_fifo_axi_full_ARREADY == 1'b0) & (icmp_ln100_reg_488 == 1'd0));
end

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state9_pp0_stage8_iter0 = ((m_axi_fifo_axi_full_RVALID == 1'b0) & (icmp_ln100_reg_488 == 1'd0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage8;

assign arrayidx94_sum1_10_cast_fu_415_p1 = arrayidx94_sum1_10_fu_410_p2;

assign arrayidx94_sum1_10_fu_410_p2 = (or_ln4_reg_497 + 9'd10);

assign arrayidx94_sum1_11_cast_fu_425_p1 = arrayidx94_sum1_11_fu_420_p2;

assign arrayidx94_sum1_11_fu_420_p2 = (or_ln4_reg_497 + 9'd11);

assign arrayidx94_sum1_12_cast_fu_435_p1 = arrayidx94_sum1_12_fu_430_p2;

assign arrayidx94_sum1_12_fu_430_p2 = (or_ln4_reg_497 + 9'd12);

assign arrayidx94_sum1_13_cast_fu_445_p1 = arrayidx94_sum1_13_fu_440_p2;

assign arrayidx94_sum1_13_fu_440_p2 = (or_ln4_reg_497 + 9'd13);

assign arrayidx94_sum1_14_cast_fu_455_p1 = arrayidx94_sum1_14_fu_450_p2;

assign arrayidx94_sum1_14_fu_450_p2 = (or_ln4_reg_497 + 9'd14);

assign arrayidx94_sum1_15_cast_fu_465_p1 = arrayidx94_sum1_15_fu_460_p2;

assign arrayidx94_sum1_15_fu_460_p2 = (or_ln4_reg_497 + 9'd15);

assign arrayidx94_sum1_1_cast_fu_325_p1 = arrayidx94_sum1_1_fu_320_p2;

assign arrayidx94_sum1_1_fu_320_p2 = (or_ln4_reg_497 + 9'd1);

assign arrayidx94_sum1_2_cast_fu_335_p1 = arrayidx94_sum1_2_fu_330_p2;

assign arrayidx94_sum1_2_fu_330_p2 = (or_ln4_reg_497 + 9'd2);

assign arrayidx94_sum1_3_cast_fu_345_p1 = arrayidx94_sum1_3_fu_340_p2;

assign arrayidx94_sum1_3_fu_340_p2 = (or_ln4_reg_497 + 9'd3);

assign arrayidx94_sum1_4_cast_fu_355_p1 = arrayidx94_sum1_4_fu_350_p2;

assign arrayidx94_sum1_4_fu_350_p2 = (or_ln4_reg_497 + 9'd4);

assign arrayidx94_sum1_5_cast_fu_365_p1 = arrayidx94_sum1_5_fu_360_p2;

assign arrayidx94_sum1_5_fu_360_p2 = (or_ln4_reg_497 + 9'd5);

assign arrayidx94_sum1_6_cast_fu_375_p1 = arrayidx94_sum1_6_fu_370_p2;

assign arrayidx94_sum1_6_fu_370_p2 = (or_ln4_reg_497 + 9'd6);

assign arrayidx94_sum1_7_cast_fu_385_p1 = arrayidx94_sum1_7_fu_380_p2;

assign arrayidx94_sum1_7_fu_380_p2 = (or_ln4_reg_497 + 9'd7);

assign arrayidx94_sum1_85_cast_fu_395_p1 = arrayidx94_sum1_85_fu_390_p2;

assign arrayidx94_sum1_85_fu_390_p2 = (or_ln4_reg_497 | 9'd8);

assign arrayidx94_sum1_9_cast_fu_405_p1 = arrayidx94_sum1_9_fu_400_p2;

assign arrayidx94_sum1_9_fu_400_p2 = (or_ln4_reg_497 + 9'd9);

assign data_buf_d0 = reg_255;

assign icmp_ln100_fu_286_p2 = ((ap_sig_allocacmp_i_6 == sext_ln97_cast_fu_264_p1) ? 1'b1 : 1'b0);

assign m_axi_fifo_axi_full_ARADDR = fifo_axi_full_addr_reg_482;

assign m_axi_fifo_axi_full_ARBURST = 2'd0;

assign m_axi_fifo_axi_full_ARCACHE = 4'd0;

assign m_axi_fifo_axi_full_ARID = 1'd0;

assign m_axi_fifo_axi_full_ARLEN = 32'd16;

assign m_axi_fifo_axi_full_ARLOCK = 2'd0;

assign m_axi_fifo_axi_full_ARPROT = 3'd0;

assign m_axi_fifo_axi_full_ARQOS = 4'd0;

assign m_axi_fifo_axi_full_ARREGION = 4'd0;

assign m_axi_fifo_axi_full_ARSIZE = 3'd0;

assign m_axi_fifo_axi_full_ARUSER = 1'd0;

assign m_axi_fifo_axi_full_AWADDR = 64'd0;

assign m_axi_fifo_axi_full_AWBURST = 2'd0;

assign m_axi_fifo_axi_full_AWCACHE = 4'd0;

assign m_axi_fifo_axi_full_AWID = 1'd0;

assign m_axi_fifo_axi_full_AWLEN = 32'd0;

assign m_axi_fifo_axi_full_AWLOCK = 2'd0;

assign m_axi_fifo_axi_full_AWPROT = 3'd0;

assign m_axi_fifo_axi_full_AWQOS = 4'd0;

assign m_axi_fifo_axi_full_AWREGION = 4'd0;

assign m_axi_fifo_axi_full_AWSIZE = 3'd0;

assign m_axi_fifo_axi_full_AWUSER = 1'd0;

assign m_axi_fifo_axi_full_AWVALID = 1'b0;

assign m_axi_fifo_axi_full_BREADY = 1'b0;

assign m_axi_fifo_axi_full_WDATA = 32'd0;

assign m_axi_fifo_axi_full_WID = 1'd0;

assign m_axi_fifo_axi_full_WLAST = 1'b0;

assign m_axi_fifo_axi_full_WSTRB = 4'd0;

assign m_axi_fifo_axi_full_WUSER = 1'd0;

assign m_axi_fifo_axi_full_WVALID = 1'b0;

assign or_ln4_fu_307_p4 = {{{trunc_ln101_reg_492}, {1'd0}}, {sext_ln100_cast_reg_477}};

assign sext_ln100_cast_fu_260_p1 = $signed(sext_ln100);

assign sext_ln73_cast_fu_268_p1 = $signed(sext_ln73);

assign sext_ln97_cast_fu_264_p1 = $signed(sext_ln97);

assign tmp_1_cast_fu_315_p1 = or_ln4_fu_307_p4;

assign trunc_ln101_fu_298_p1 = ap_sig_allocacmp_i_6[4:0];

always @ (posedge ap_clk) begin
    or_ln4_reg_497[3] <= 1'b0;
end

endmodule //mac_logger_rx_fifo_Pipeline_rx_macfifo_data
