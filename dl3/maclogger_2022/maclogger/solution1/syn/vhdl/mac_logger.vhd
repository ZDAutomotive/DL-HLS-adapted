-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
-- Version: 2022.2
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity mac_logger is
generic (
    C_S_AXI_AXILITES_ADDR_WIDTH : INTEGER := 9;
    C_S_AXI_AXILITES_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_FIFO_AXI_FULL_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_FIFO_AXI_FULL_ID_WIDTH : INTEGER := 1;
    C_M_AXI_FIFO_AXI_FULL_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_FIFO_AXI_FULL_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_FIFO_AXI_FULL_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_FIFO_AXI_FULL_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_FIFO_AXI_FULL_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_FIFO_AXI_FULL_BUSER_WIDTH : INTEGER := 1;
    C_M_AXI_MAC_FIFO_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_MAC_FIFO_ID_WIDTH : INTEGER := 1;
    C_M_AXI_MAC_FIFO_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_MAC_FIFO_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_MAC_FIFO_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_MAC_FIFO_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_MAC_FIFO_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_MAC_FIFO_BUSER_WIDTH : INTEGER := 1;
    C_M_AXI_PS_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_PS_ID_WIDTH : INTEGER := 1;
    C_M_AXI_PS_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_PS_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_PS_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_PS_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_PS_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_PS_BUSER_WIDTH : INTEGER := 1;
    C_M_AXI_FIFO_AXI_FULL_USER_VALUE : INTEGER := 0;
    C_M_AXI_FIFO_AXI_FULL_PROT_VALUE : INTEGER := 0;
    C_M_AXI_FIFO_AXI_FULL_CACHE_VALUE : INTEGER := 3;
    C_M_AXI_MAC_FIFO_USER_VALUE : INTEGER := 0;
    C_M_AXI_MAC_FIFO_PROT_VALUE : INTEGER := 0;
    C_M_AXI_MAC_FIFO_CACHE_VALUE : INTEGER := 3;
    C_M_AXI_PS_USER_VALUE : INTEGER := 0;
    C_M_AXI_PS_PROT_VALUE : INTEGER := 0;
    C_M_AXI_PS_CACHE_VALUE : INTEGER := 3 );
port (
    s_axi_axilites_AWVALID : IN STD_LOGIC;
    s_axi_axilites_AWREADY : OUT STD_LOGIC;
    s_axi_axilites_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_AXILITES_ADDR_WIDTH-1 downto 0);
    s_axi_axilites_WVALID : IN STD_LOGIC;
    s_axi_axilites_WREADY : OUT STD_LOGIC;
    s_axi_axilites_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_AXILITES_DATA_WIDTH-1 downto 0);
    s_axi_axilites_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_AXILITES_DATA_WIDTH/8-1 downto 0);
    s_axi_axilites_ARVALID : IN STD_LOGIC;
    s_axi_axilites_ARREADY : OUT STD_LOGIC;
    s_axi_axilites_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_AXILITES_ADDR_WIDTH-1 downto 0);
    s_axi_axilites_RVALID : OUT STD_LOGIC;
    s_axi_axilites_RREADY : IN STD_LOGIC;
    s_axi_axilites_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_AXILITES_DATA_WIDTH-1 downto 0);
    s_axi_axilites_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_axilites_BVALID : OUT STD_LOGIC;
    s_axi_axilites_BREADY : IN STD_LOGIC;
    s_axi_axilites_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    interrupt : OUT STD_LOGIC;
    m_axi_fifo_axi_full_AWVALID : OUT STD_LOGIC;
    m_axi_fifo_axi_full_AWREADY : IN STD_LOGIC;
    m_axi_fifo_axi_full_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_FIFO_AXI_FULL_ADDR_WIDTH-1 downto 0);
    m_axi_fifo_axi_full_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_FIFO_AXI_FULL_ID_WIDTH-1 downto 0);
    m_axi_fifo_axi_full_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_fifo_axi_full_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_fifo_axi_full_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_fifo_axi_full_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_fifo_axi_full_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_fifo_axi_full_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_fifo_axi_full_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_fifo_axi_full_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_fifo_axi_full_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_FIFO_AXI_FULL_AWUSER_WIDTH-1 downto 0);
    m_axi_fifo_axi_full_WVALID : OUT STD_LOGIC;
    m_axi_fifo_axi_full_WREADY : IN STD_LOGIC;
    m_axi_fifo_axi_full_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_FIFO_AXI_FULL_DATA_WIDTH-1 downto 0);
    m_axi_fifo_axi_full_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_FIFO_AXI_FULL_DATA_WIDTH/8-1 downto 0);
    m_axi_fifo_axi_full_WLAST : OUT STD_LOGIC;
    m_axi_fifo_axi_full_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_FIFO_AXI_FULL_ID_WIDTH-1 downto 0);
    m_axi_fifo_axi_full_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_FIFO_AXI_FULL_WUSER_WIDTH-1 downto 0);
    m_axi_fifo_axi_full_ARVALID : OUT STD_LOGIC;
    m_axi_fifo_axi_full_ARREADY : IN STD_LOGIC;
    m_axi_fifo_axi_full_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_FIFO_AXI_FULL_ADDR_WIDTH-1 downto 0);
    m_axi_fifo_axi_full_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_FIFO_AXI_FULL_ID_WIDTH-1 downto 0);
    m_axi_fifo_axi_full_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_fifo_axi_full_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_fifo_axi_full_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_fifo_axi_full_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_fifo_axi_full_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_fifo_axi_full_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_fifo_axi_full_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_fifo_axi_full_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_fifo_axi_full_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_FIFO_AXI_FULL_ARUSER_WIDTH-1 downto 0);
    m_axi_fifo_axi_full_RVALID : IN STD_LOGIC;
    m_axi_fifo_axi_full_RREADY : OUT STD_LOGIC;
    m_axi_fifo_axi_full_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_FIFO_AXI_FULL_DATA_WIDTH-1 downto 0);
    m_axi_fifo_axi_full_RLAST : IN STD_LOGIC;
    m_axi_fifo_axi_full_RID : IN STD_LOGIC_VECTOR (C_M_AXI_FIFO_AXI_FULL_ID_WIDTH-1 downto 0);
    m_axi_fifo_axi_full_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_FIFO_AXI_FULL_RUSER_WIDTH-1 downto 0);
    m_axi_fifo_axi_full_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_fifo_axi_full_BVALID : IN STD_LOGIC;
    m_axi_fifo_axi_full_BREADY : OUT STD_LOGIC;
    m_axi_fifo_axi_full_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_fifo_axi_full_BID : IN STD_LOGIC_VECTOR (C_M_AXI_FIFO_AXI_FULL_ID_WIDTH-1 downto 0);
    m_axi_fifo_axi_full_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_FIFO_AXI_FULL_BUSER_WIDTH-1 downto 0);
    m_axi_mac_fifo_AWVALID : OUT STD_LOGIC;
    m_axi_mac_fifo_AWREADY : IN STD_LOGIC;
    m_axi_mac_fifo_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_MAC_FIFO_ADDR_WIDTH-1 downto 0);
    m_axi_mac_fifo_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_MAC_FIFO_ID_WIDTH-1 downto 0);
    m_axi_mac_fifo_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_mac_fifo_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_mac_fifo_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_mac_fifo_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_mac_fifo_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_mac_fifo_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_mac_fifo_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_mac_fifo_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_mac_fifo_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_MAC_FIFO_AWUSER_WIDTH-1 downto 0);
    m_axi_mac_fifo_WVALID : OUT STD_LOGIC;
    m_axi_mac_fifo_WREADY : IN STD_LOGIC;
    m_axi_mac_fifo_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_MAC_FIFO_DATA_WIDTH-1 downto 0);
    m_axi_mac_fifo_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_MAC_FIFO_DATA_WIDTH/8-1 downto 0);
    m_axi_mac_fifo_WLAST : OUT STD_LOGIC;
    m_axi_mac_fifo_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_MAC_FIFO_ID_WIDTH-1 downto 0);
    m_axi_mac_fifo_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_MAC_FIFO_WUSER_WIDTH-1 downto 0);
    m_axi_mac_fifo_ARVALID : OUT STD_LOGIC;
    m_axi_mac_fifo_ARREADY : IN STD_LOGIC;
    m_axi_mac_fifo_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_MAC_FIFO_ADDR_WIDTH-1 downto 0);
    m_axi_mac_fifo_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_MAC_FIFO_ID_WIDTH-1 downto 0);
    m_axi_mac_fifo_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_mac_fifo_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_mac_fifo_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_mac_fifo_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_mac_fifo_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_mac_fifo_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_mac_fifo_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_mac_fifo_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_mac_fifo_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_MAC_FIFO_ARUSER_WIDTH-1 downto 0);
    m_axi_mac_fifo_RVALID : IN STD_LOGIC;
    m_axi_mac_fifo_RREADY : OUT STD_LOGIC;
    m_axi_mac_fifo_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_MAC_FIFO_DATA_WIDTH-1 downto 0);
    m_axi_mac_fifo_RLAST : IN STD_LOGIC;
    m_axi_mac_fifo_RID : IN STD_LOGIC_VECTOR (C_M_AXI_MAC_FIFO_ID_WIDTH-1 downto 0);
    m_axi_mac_fifo_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_MAC_FIFO_RUSER_WIDTH-1 downto 0);
    m_axi_mac_fifo_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_mac_fifo_BVALID : IN STD_LOGIC;
    m_axi_mac_fifo_BREADY : OUT STD_LOGIC;
    m_axi_mac_fifo_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_mac_fifo_BID : IN STD_LOGIC_VECTOR (C_M_AXI_MAC_FIFO_ID_WIDTH-1 downto 0);
    m_axi_mac_fifo_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_MAC_FIFO_BUSER_WIDTH-1 downto 0);
    m_axi_ps_AWVALID : OUT STD_LOGIC;
    m_axi_ps_AWREADY : IN STD_LOGIC;
    m_axi_ps_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_PS_ADDR_WIDTH-1 downto 0);
    m_axi_ps_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_PS_ID_WIDTH-1 downto 0);
    m_axi_ps_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_ps_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_ps_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_ps_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_ps_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_ps_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_ps_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_ps_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_ps_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_PS_AWUSER_WIDTH-1 downto 0);
    m_axi_ps_WVALID : OUT STD_LOGIC;
    m_axi_ps_WREADY : IN STD_LOGIC;
    m_axi_ps_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_PS_DATA_WIDTH-1 downto 0);
    m_axi_ps_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_PS_DATA_WIDTH/8-1 downto 0);
    m_axi_ps_WLAST : OUT STD_LOGIC;
    m_axi_ps_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_PS_ID_WIDTH-1 downto 0);
    m_axi_ps_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_PS_WUSER_WIDTH-1 downto 0);
    m_axi_ps_ARVALID : OUT STD_LOGIC;
    m_axi_ps_ARREADY : IN STD_LOGIC;
    m_axi_ps_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_PS_ADDR_WIDTH-1 downto 0);
    m_axi_ps_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_PS_ID_WIDTH-1 downto 0);
    m_axi_ps_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_ps_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_ps_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_ps_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_ps_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_ps_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_ps_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_ps_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_ps_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_PS_ARUSER_WIDTH-1 downto 0);
    m_axi_ps_RVALID : IN STD_LOGIC;
    m_axi_ps_RREADY : OUT STD_LOGIC;
    m_axi_ps_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_PS_DATA_WIDTH-1 downto 0);
    m_axi_ps_RLAST : IN STD_LOGIC;
    m_axi_ps_RID : IN STD_LOGIC_VECTOR (C_M_AXI_PS_ID_WIDTH-1 downto 0);
    m_axi_ps_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_PS_RUSER_WIDTH-1 downto 0);
    m_axi_ps_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_ps_BVALID : IN STD_LOGIC;
    m_axi_ps_BREADY : OUT STD_LOGIC;
    m_axi_ps_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_ps_BID : IN STD_LOGIC_VECTOR (C_M_AXI_PS_ID_WIDTH-1 downto 0);
    m_axi_ps_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_PS_BUSER_WIDTH-1 downto 0);
    timestamp : IN STD_LOGIC_VECTOR (63 downto 0) );
end;


architecture behav of mac_logger is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "mac_logger_mac_logger,hls_ip_2022_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu5ev-sfvc784-2-i,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.977000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=4,HLS_SYN_DSP=0,HLS_SYN_FF=11307,HLS_SYN_LUT=17176,HLS_VERSION=2022_2}";
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant C_M_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_lv16_FFFF : STD_LOGIC_VECTOR (15 downto 0) := "1111111111111111";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_rst_n_inv : STD_LOGIC;
    signal fifo : STD_LOGIC_VECTOR (63 downto 0);
    signal ddr : STD_LOGIC_VECTOR (63 downto 0);
    signal status : STD_LOGIC_VECTOR (31 downto 0);
    signal writeStatus : STD_LOGIC_VECTOR (15 downto 0);
    signal logger_vlan_enable_mask : STD_LOGIC_VECTOR (31 downto 0);
    signal multicast_recv_enable : STD_LOGIC_VECTOR (31 downto 0);
    signal unicast_filter_enable : STD_LOGIC_VECTOR (31 downto 0);
    signal unicast_vlan100_macaddr_lsb : STD_LOGIC_VECTOR (31 downto 0);
    signal unicast_vlan100_macaddr_msb : STD_LOGIC_VECTOR (31 downto 0);
    signal unicast_vlan101_macaddr_lsb : STD_LOGIC_VECTOR (31 downto 0);
    signal unicast_vlan101_macaddr_msb : STD_LOGIC_VECTOR (31 downto 0);
    signal unicast_vlan102_macaddr_lsb : STD_LOGIC_VECTOR (31 downto 0);
    signal unicast_vlan102_macaddr_msb : STD_LOGIC_VECTOR (31 downto 0);
    signal unicast_vlan103_macaddr_lsb : STD_LOGIC_VECTOR (31 downto 0);
    signal unicast_vlan103_macaddr_msb : STD_LOGIC_VECTOR (31 downto 0);
    signal unicast_vlan104_macaddr_lsb : STD_LOGIC_VECTOR (31 downto 0);
    signal unicast_vlan104_macaddr_msb : STD_LOGIC_VECTOR (31 downto 0);
    signal unicast_vlan105_macaddr_lsb : STD_LOGIC_VECTOR (31 downto 0);
    signal unicast_vlan105_macaddr_msb : STD_LOGIC_VECTOR (31 downto 0);
    signal unicast_vlan106_macaddr_lsb : STD_LOGIC_VECTOR (31 downto 0);
    signal unicast_vlan106_macaddr_msb : STD_LOGIC_VECTOR (31 downto 0);
    signal unicast_vlan107_macaddr_lsb : STD_LOGIC_VECTOR (31 downto 0);
    signal unicast_vlan107_macaddr_msb : STD_LOGIC_VECTOR (31 downto 0);
    signal unicast_vlan108_macaddr_lsb : STD_LOGIC_VECTOR (31 downto 0);
    signal unicast_vlan108_macaddr_msb : STD_LOGIC_VECTOR (31 downto 0);
    signal unicast_vlan109_macaddr_lsb : STD_LOGIC_VECTOR (31 downto 0);
    signal unicast_vlan109_macaddr_msb : STD_LOGIC_VECTOR (31 downto 0);
    signal log_all_mask : STD_LOGIC_VECTOR (31 downto 0);
    signal driver : STD_LOGIC_VECTOR (63 downto 0);
    signal fifo_axi_full_offset : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_start : STD_LOGIC;
    signal ap_ready : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_continue : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal fifo_axi_full_AWREADY : STD_LOGIC;
    signal fifo_axi_full_WREADY : STD_LOGIC;
    signal fifo_axi_full_ARREADY : STD_LOGIC;
    signal fifo_axi_full_RVALID : STD_LOGIC;
    signal fifo_axi_full_RDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal fifo_axi_full_RLAST : STD_LOGIC;
    signal fifo_axi_full_RID : STD_LOGIC_VECTOR (0 downto 0);
    signal fifo_axi_full_RFIFONUM : STD_LOGIC_VECTOR (8 downto 0);
    signal fifo_axi_full_RUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal fifo_axi_full_RRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal fifo_axi_full_BVALID : STD_LOGIC;
    signal mac_fifo_AWREADY : STD_LOGIC;
    signal mac_fifo_WREADY : STD_LOGIC;
    signal mac_fifo_ARREADY : STD_LOGIC;
    signal mac_fifo_RVALID : STD_LOGIC;
    signal mac_fifo_RDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal mac_fifo_RLAST : STD_LOGIC;
    signal mac_fifo_RID : STD_LOGIC_VECTOR (0 downto 0);
    signal mac_fifo_RFIFONUM : STD_LOGIC_VECTOR (8 downto 0);
    signal mac_fifo_RUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal mac_fifo_RRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal mac_fifo_BVALID : STD_LOGIC;
    signal ps_AWREADY : STD_LOGIC;
    signal ps_WREADY : STD_LOGIC;
    signal ps_ARREADY : STD_LOGIC;
    signal ps_RVALID : STD_LOGIC;
    signal ps_RDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal ps_RLAST : STD_LOGIC;
    signal ps_RID : STD_LOGIC_VECTOR (0 downto 0);
    signal ps_RFIFONUM : STD_LOGIC_VECTOR (8 downto 0);
    signal ps_RUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal ps_RRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal ps_BVALID : STD_LOGIC;
    signal ps_BRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal ps_BID : STD_LOGIC_VECTOR (0 downto 0);
    signal ps_BUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_ps_AWVALID : STD_LOGIC;
    signal dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_ps_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_ps_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_ps_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_ps_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_ps_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_ps_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_ps_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_ps_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_ps_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_ps_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_ps_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_ps_WVALID : STD_LOGIC;
    signal dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_ps_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_ps_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_ps_WLAST : STD_LOGIC;
    signal dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_ps_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_ps_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_ps_ARVALID : STD_LOGIC;
    signal dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_ps_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_ps_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_ps_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_ps_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_ps_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_ps_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_ps_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_ps_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_ps_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_ps_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_ps_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_ps_RREADY : STD_LOGIC;
    signal dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_ps_BREADY : STD_LOGIC;
    signal dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_mac_fifo_AWVALID : STD_LOGIC;
    signal dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_mac_fifo_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_mac_fifo_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_mac_fifo_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_mac_fifo_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_mac_fifo_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_mac_fifo_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_mac_fifo_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_mac_fifo_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_mac_fifo_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_mac_fifo_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_mac_fifo_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_mac_fifo_WVALID : STD_LOGIC;
    signal dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_mac_fifo_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_mac_fifo_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_mac_fifo_WLAST : STD_LOGIC;
    signal dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_mac_fifo_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_mac_fifo_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_mac_fifo_ARVALID : STD_LOGIC;
    signal dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_mac_fifo_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_mac_fifo_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_mac_fifo_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_mac_fifo_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_mac_fifo_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_mac_fifo_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_mac_fifo_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_mac_fifo_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_mac_fifo_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_mac_fifo_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_mac_fifo_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_mac_fifo_RREADY : STD_LOGIC;
    signal dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_mac_fifo_BREADY : STD_LOGIC;
    signal dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_fifo_axi_full_AWVALID : STD_LOGIC;
    signal dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_fifo_axi_full_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_fifo_axi_full_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_fifo_axi_full_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_fifo_axi_full_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_fifo_axi_full_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_fifo_axi_full_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_fifo_axi_full_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_fifo_axi_full_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_fifo_axi_full_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_fifo_axi_full_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_fifo_axi_full_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_fifo_axi_full_WVALID : STD_LOGIC;
    signal dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_fifo_axi_full_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_fifo_axi_full_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_fifo_axi_full_WLAST : STD_LOGIC;
    signal dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_fifo_axi_full_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_fifo_axi_full_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_fifo_axi_full_ARVALID : STD_LOGIC;
    signal dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_fifo_axi_full_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_fifo_axi_full_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_fifo_axi_full_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_fifo_axi_full_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_fifo_axi_full_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_fifo_axi_full_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_fifo_axi_full_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_fifo_axi_full_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_fifo_axi_full_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_fifo_axi_full_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_fifo_axi_full_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_fifo_axi_full_RREADY : STD_LOGIC;
    signal dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_fifo_axi_full_BREADY : STD_LOGIC;
    signal dataflow_in_loop_VITIS_LOOP_697_1_U0_vlan100_received : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_697_1_U0_vlan101_received : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_697_1_U0_vlan102_received : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_697_1_U0_vlan103_received : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_697_1_U0_vlan104_received : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_697_1_U0_vlan105_received : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_697_1_U0_vlan106_received : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_697_1_U0_vlan107_received : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_697_1_U0_vlan108_received : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_697_1_U0_vlan109_received : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_697_1_U0_droped : STD_LOGIC_VECTOR (31 downto 0);
    signal dataflow_in_loop_VITIS_LOOP_697_1_U0_ap_start : STD_LOGIC;
    signal dataflow_in_loop_VITIS_LOOP_697_1_U0_vlan100_received_ap_vld : STD_LOGIC;
    signal dataflow_in_loop_VITIS_LOOP_697_1_U0_vlan101_received_ap_vld : STD_LOGIC;
    signal dataflow_in_loop_VITIS_LOOP_697_1_U0_vlan102_received_ap_vld : STD_LOGIC;
    signal dataflow_in_loop_VITIS_LOOP_697_1_U0_vlan103_received_ap_vld : STD_LOGIC;
    signal dataflow_in_loop_VITIS_LOOP_697_1_U0_vlan104_received_ap_vld : STD_LOGIC;
    signal dataflow_in_loop_VITIS_LOOP_697_1_U0_vlan105_received_ap_vld : STD_LOGIC;
    signal dataflow_in_loop_VITIS_LOOP_697_1_U0_vlan106_received_ap_vld : STD_LOGIC;
    signal dataflow_in_loop_VITIS_LOOP_697_1_U0_vlan107_received_ap_vld : STD_LOGIC;
    signal dataflow_in_loop_VITIS_LOOP_697_1_U0_vlan108_received_ap_vld : STD_LOGIC;
    signal dataflow_in_loop_VITIS_LOOP_697_1_U0_vlan109_received_ap_vld : STD_LOGIC;
    signal dataflow_in_loop_VITIS_LOOP_697_1_U0_droped_ap_vld : STD_LOGIC;
    signal dataflow_in_loop_VITIS_LOOP_697_1_U0_ap_done : STD_LOGIC;
    signal dataflow_in_loop_VITIS_LOOP_697_1_U0_ap_ready : STD_LOGIC;
    signal dataflow_in_loop_VITIS_LOOP_697_1_U0_ap_idle : STD_LOGIC;
    signal dataflow_in_loop_VITIS_LOOP_697_1_U0_ap_continue : STD_LOGIC;
    signal loop_dataflow_input_count : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal loop_dataflow_output_count : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal bound_minus_1 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component mac_logger_dataflow_in_loop_VITIS_LOOP_697_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        m_axi_ps_AWVALID : OUT STD_LOGIC;
        m_axi_ps_AWREADY : IN STD_LOGIC;
        m_axi_ps_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_ps_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_ps_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_ps_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_ps_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_ps_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_ps_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_ps_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_ps_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_ps_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_ps_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_ps_WVALID : OUT STD_LOGIC;
        m_axi_ps_WREADY : IN STD_LOGIC;
        m_axi_ps_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_ps_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_ps_WLAST : OUT STD_LOGIC;
        m_axi_ps_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_ps_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_ps_ARVALID : OUT STD_LOGIC;
        m_axi_ps_ARREADY : IN STD_LOGIC;
        m_axi_ps_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_ps_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_ps_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_ps_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_ps_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_ps_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_ps_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_ps_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_ps_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_ps_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_ps_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_ps_RVALID : IN STD_LOGIC;
        m_axi_ps_RREADY : OUT STD_LOGIC;
        m_axi_ps_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_ps_RLAST : IN STD_LOGIC;
        m_axi_ps_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_ps_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_ps_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_ps_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_ps_BVALID : IN STD_LOGIC;
        m_axi_ps_BREADY : OUT STD_LOGIC;
        m_axi_ps_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_ps_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_ps_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        ddr : IN STD_LOGIC_VECTOR (63 downto 0);
        driver : IN STD_LOGIC_VECTOR (63 downto 0);
        m_axi_mac_fifo_AWVALID : OUT STD_LOGIC;
        m_axi_mac_fifo_AWREADY : IN STD_LOGIC;
        m_axi_mac_fifo_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_mac_fifo_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_mac_fifo_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_mac_fifo_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_mac_fifo_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_mac_fifo_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_mac_fifo_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_mac_fifo_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_mac_fifo_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_mac_fifo_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_mac_fifo_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_mac_fifo_WVALID : OUT STD_LOGIC;
        m_axi_mac_fifo_WREADY : IN STD_LOGIC;
        m_axi_mac_fifo_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_mac_fifo_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_mac_fifo_WLAST : OUT STD_LOGIC;
        m_axi_mac_fifo_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_mac_fifo_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_mac_fifo_ARVALID : OUT STD_LOGIC;
        m_axi_mac_fifo_ARREADY : IN STD_LOGIC;
        m_axi_mac_fifo_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_mac_fifo_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_mac_fifo_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_mac_fifo_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_mac_fifo_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_mac_fifo_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_mac_fifo_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_mac_fifo_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_mac_fifo_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_mac_fifo_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_mac_fifo_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_mac_fifo_RVALID : IN STD_LOGIC;
        m_axi_mac_fifo_RREADY : OUT STD_LOGIC;
        m_axi_mac_fifo_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_mac_fifo_RLAST : IN STD_LOGIC;
        m_axi_mac_fifo_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_mac_fifo_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_mac_fifo_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_mac_fifo_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_mac_fifo_BVALID : IN STD_LOGIC;
        m_axi_mac_fifo_BREADY : OUT STD_LOGIC;
        m_axi_mac_fifo_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_mac_fifo_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_mac_fifo_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        fifo : IN STD_LOGIC_VECTOR (63 downto 0);
        m_axi_fifo_axi_full_AWVALID : OUT STD_LOGIC;
        m_axi_fifo_axi_full_AWREADY : IN STD_LOGIC;
        m_axi_fifo_axi_full_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_fifo_axi_full_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_fifo_axi_full_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_fifo_axi_full_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_fifo_axi_full_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_fifo_axi_full_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_fifo_axi_full_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_fifo_axi_full_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_fifo_axi_full_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_fifo_axi_full_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_fifo_axi_full_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_fifo_axi_full_WVALID : OUT STD_LOGIC;
        m_axi_fifo_axi_full_WREADY : IN STD_LOGIC;
        m_axi_fifo_axi_full_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_fifo_axi_full_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_fifo_axi_full_WLAST : OUT STD_LOGIC;
        m_axi_fifo_axi_full_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_fifo_axi_full_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_fifo_axi_full_ARVALID : OUT STD_LOGIC;
        m_axi_fifo_axi_full_ARREADY : IN STD_LOGIC;
        m_axi_fifo_axi_full_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_fifo_axi_full_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_fifo_axi_full_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_fifo_axi_full_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_fifo_axi_full_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_fifo_axi_full_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_fifo_axi_full_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_fifo_axi_full_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_fifo_axi_full_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_fifo_axi_full_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_fifo_axi_full_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_fifo_axi_full_RVALID : IN STD_LOGIC;
        m_axi_fifo_axi_full_RREADY : OUT STD_LOGIC;
        m_axi_fifo_axi_full_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_fifo_axi_full_RLAST : IN STD_LOGIC;
        m_axi_fifo_axi_full_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_fifo_axi_full_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_fifo_axi_full_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_fifo_axi_full_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_fifo_axi_full_BVALID : IN STD_LOGIC;
        m_axi_fifo_axi_full_BREADY : OUT STD_LOGIC;
        m_axi_fifo_axi_full_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_fifo_axi_full_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_fifo_axi_full_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        fifo_axi_full_offset : IN STD_LOGIC_VECTOR (63 downto 0);
        timestamp : IN STD_LOGIC_VECTOR (63 downto 0);
        logger_vlan_enable_mask : IN STD_LOGIC_VECTOR (31 downto 0);
        multicast_recv_enable : IN STD_LOGIC_VECTOR (31 downto 0);
        unicast_filter_enable : IN STD_LOGIC_VECTOR (31 downto 0);
        unicast_vlan100_macaddr_lsb : IN STD_LOGIC_VECTOR (31 downto 0);
        unicast_vlan100_macaddr_msb : IN STD_LOGIC_VECTOR (31 downto 0);
        unicast_vlan101_macaddr_lsb : IN STD_LOGIC_VECTOR (31 downto 0);
        unicast_vlan101_macaddr_msb : IN STD_LOGIC_VECTOR (31 downto 0);
        unicast_vlan102_macaddr_lsb : IN STD_LOGIC_VECTOR (31 downto 0);
        unicast_vlan102_macaddr_msb : IN STD_LOGIC_VECTOR (31 downto 0);
        unicast_vlan103_macaddr_lsb : IN STD_LOGIC_VECTOR (31 downto 0);
        unicast_vlan103_macaddr_msb : IN STD_LOGIC_VECTOR (31 downto 0);
        unicast_vlan104_macaddr_lsb : IN STD_LOGIC_VECTOR (31 downto 0);
        unicast_vlan104_macaddr_msb : IN STD_LOGIC_VECTOR (31 downto 0);
        unicast_vlan105_macaddr_lsb : IN STD_LOGIC_VECTOR (31 downto 0);
        unicast_vlan105_macaddr_msb : IN STD_LOGIC_VECTOR (31 downto 0);
        unicast_vlan106_macaddr_lsb : IN STD_LOGIC_VECTOR (31 downto 0);
        unicast_vlan106_macaddr_msb : IN STD_LOGIC_VECTOR (31 downto 0);
        unicast_vlan107_macaddr_lsb : IN STD_LOGIC_VECTOR (31 downto 0);
        unicast_vlan107_macaddr_msb : IN STD_LOGIC_VECTOR (31 downto 0);
        unicast_vlan108_macaddr_lsb : IN STD_LOGIC_VECTOR (31 downto 0);
        unicast_vlan108_macaddr_msb : IN STD_LOGIC_VECTOR (31 downto 0);
        unicast_vlan109_macaddr_lsb : IN STD_LOGIC_VECTOR (31 downto 0);
        unicast_vlan109_macaddr_msb : IN STD_LOGIC_VECTOR (31 downto 0);
        log_all_mask : IN STD_LOGIC_VECTOR (31 downto 0);
        vlan100_received : OUT STD_LOGIC_VECTOR (31 downto 0);
        vlan101_received : OUT STD_LOGIC_VECTOR (31 downto 0);
        vlan102_received : OUT STD_LOGIC_VECTOR (31 downto 0);
        vlan103_received : OUT STD_LOGIC_VECTOR (31 downto 0);
        vlan104_received : OUT STD_LOGIC_VECTOR (31 downto 0);
        vlan105_received : OUT STD_LOGIC_VECTOR (31 downto 0);
        vlan106_received : OUT STD_LOGIC_VECTOR (31 downto 0);
        vlan107_received : OUT STD_LOGIC_VECTOR (31 downto 0);
        vlan108_received : OUT STD_LOGIC_VECTOR (31 downto 0);
        vlan109_received : OUT STD_LOGIC_VECTOR (31 downto 0);
        droped : OUT STD_LOGIC_VECTOR (31 downto 0);
        logger_vlan_enable_mask_ap_vld : IN STD_LOGIC;
        multicast_recv_enable_ap_vld : IN STD_LOGIC;
        unicast_filter_enable_ap_vld : IN STD_LOGIC;
        unicast_vlan100_macaddr_lsb_ap_vld : IN STD_LOGIC;
        unicast_vlan100_macaddr_msb_ap_vld : IN STD_LOGIC;
        unicast_vlan101_macaddr_lsb_ap_vld : IN STD_LOGIC;
        unicast_vlan101_macaddr_msb_ap_vld : IN STD_LOGIC;
        unicast_vlan102_macaddr_lsb_ap_vld : IN STD_LOGIC;
        unicast_vlan102_macaddr_msb_ap_vld : IN STD_LOGIC;
        unicast_vlan103_macaddr_lsb_ap_vld : IN STD_LOGIC;
        unicast_vlan103_macaddr_msb_ap_vld : IN STD_LOGIC;
        unicast_vlan104_macaddr_lsb_ap_vld : IN STD_LOGIC;
        unicast_vlan104_macaddr_msb_ap_vld : IN STD_LOGIC;
        unicast_vlan105_macaddr_lsb_ap_vld : IN STD_LOGIC;
        unicast_vlan105_macaddr_msb_ap_vld : IN STD_LOGIC;
        unicast_vlan106_macaddr_lsb_ap_vld : IN STD_LOGIC;
        unicast_vlan106_macaddr_msb_ap_vld : IN STD_LOGIC;
        unicast_vlan107_macaddr_lsb_ap_vld : IN STD_LOGIC;
        unicast_vlan107_macaddr_msb_ap_vld : IN STD_LOGIC;
        unicast_vlan108_macaddr_lsb_ap_vld : IN STD_LOGIC;
        unicast_vlan108_macaddr_msb_ap_vld : IN STD_LOGIC;
        unicast_vlan109_macaddr_lsb_ap_vld : IN STD_LOGIC;
        unicast_vlan109_macaddr_msb_ap_vld : IN STD_LOGIC;
        log_all_mask_ap_vld : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ddr_ap_vld : IN STD_LOGIC;
        driver_ap_vld : IN STD_LOGIC;
        fifo_ap_vld : IN STD_LOGIC;
        fifo_axi_full_offset_ap_vld : IN STD_LOGIC;
        timestamp_ap_vld : IN STD_LOGIC;
        vlan100_received_ap_vld : OUT STD_LOGIC;
        vlan101_received_ap_vld : OUT STD_LOGIC;
        vlan102_received_ap_vld : OUT STD_LOGIC;
        vlan103_received_ap_vld : OUT STD_LOGIC;
        vlan104_received_ap_vld : OUT STD_LOGIC;
        vlan105_received_ap_vld : OUT STD_LOGIC;
        vlan106_received_ap_vld : OUT STD_LOGIC;
        vlan107_received_ap_vld : OUT STD_LOGIC;
        vlan108_received_ap_vld : OUT STD_LOGIC;
        vlan109_received_ap_vld : OUT STD_LOGIC;
        droped_ap_vld : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC );
    end component;


    component mac_logger_axilites_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        fifo : OUT STD_LOGIC_VECTOR (63 downto 0);
        ddr : OUT STD_LOGIC_VECTOR (63 downto 0);
        status : OUT STD_LOGIC_VECTOR (31 downto 0);
        writeStatus : OUT STD_LOGIC_VECTOR (15 downto 0);
        logger_vlan_enable_mask : OUT STD_LOGIC_VECTOR (31 downto 0);
        vlan100_received : IN STD_LOGIC_VECTOR (31 downto 0);
        vlan100_received_ap_vld : IN STD_LOGIC;
        vlan101_received : IN STD_LOGIC_VECTOR (31 downto 0);
        vlan101_received_ap_vld : IN STD_LOGIC;
        vlan102_received : IN STD_LOGIC_VECTOR (31 downto 0);
        vlan102_received_ap_vld : IN STD_LOGIC;
        vlan103_received : IN STD_LOGIC_VECTOR (31 downto 0);
        vlan103_received_ap_vld : IN STD_LOGIC;
        vlan104_received : IN STD_LOGIC_VECTOR (31 downto 0);
        vlan104_received_ap_vld : IN STD_LOGIC;
        vlan105_received : IN STD_LOGIC_VECTOR (31 downto 0);
        vlan105_received_ap_vld : IN STD_LOGIC;
        vlan106_received : IN STD_LOGIC_VECTOR (31 downto 0);
        vlan106_received_ap_vld : IN STD_LOGIC;
        vlan107_received : IN STD_LOGIC_VECTOR (31 downto 0);
        vlan107_received_ap_vld : IN STD_LOGIC;
        vlan108_received : IN STD_LOGIC_VECTOR (31 downto 0);
        vlan108_received_ap_vld : IN STD_LOGIC;
        vlan109_received : IN STD_LOGIC_VECTOR (31 downto 0);
        vlan109_received_ap_vld : IN STD_LOGIC;
        droped : IN STD_LOGIC_VECTOR (31 downto 0);
        droped_ap_vld : IN STD_LOGIC;
        multicast_recv_enable : OUT STD_LOGIC_VECTOR (31 downto 0);
        unicast_filter_enable : OUT STD_LOGIC_VECTOR (31 downto 0);
        unicast_vlan100_macaddr_lsb : OUT STD_LOGIC_VECTOR (31 downto 0);
        unicast_vlan100_macaddr_msb : OUT STD_LOGIC_VECTOR (31 downto 0);
        unicast_vlan101_macaddr_lsb : OUT STD_LOGIC_VECTOR (31 downto 0);
        unicast_vlan101_macaddr_msb : OUT STD_LOGIC_VECTOR (31 downto 0);
        unicast_vlan102_macaddr_lsb : OUT STD_LOGIC_VECTOR (31 downto 0);
        unicast_vlan102_macaddr_msb : OUT STD_LOGIC_VECTOR (31 downto 0);
        unicast_vlan103_macaddr_lsb : OUT STD_LOGIC_VECTOR (31 downto 0);
        unicast_vlan103_macaddr_msb : OUT STD_LOGIC_VECTOR (31 downto 0);
        unicast_vlan104_macaddr_lsb : OUT STD_LOGIC_VECTOR (31 downto 0);
        unicast_vlan104_macaddr_msb : OUT STD_LOGIC_VECTOR (31 downto 0);
        unicast_vlan105_macaddr_lsb : OUT STD_LOGIC_VECTOR (31 downto 0);
        unicast_vlan105_macaddr_msb : OUT STD_LOGIC_VECTOR (31 downto 0);
        unicast_vlan106_macaddr_lsb : OUT STD_LOGIC_VECTOR (31 downto 0);
        unicast_vlan106_macaddr_msb : OUT STD_LOGIC_VECTOR (31 downto 0);
        unicast_vlan107_macaddr_lsb : OUT STD_LOGIC_VECTOR (31 downto 0);
        unicast_vlan107_macaddr_msb : OUT STD_LOGIC_VECTOR (31 downto 0);
        unicast_vlan108_macaddr_lsb : OUT STD_LOGIC_VECTOR (31 downto 0);
        unicast_vlan108_macaddr_msb : OUT STD_LOGIC_VECTOR (31 downto 0);
        unicast_vlan109_macaddr_lsb : OUT STD_LOGIC_VECTOR (31 downto 0);
        unicast_vlan109_macaddr_msb : OUT STD_LOGIC_VECTOR (31 downto 0);
        log_all_mask : OUT STD_LOGIC_VECTOR (31 downto 0);
        driver : OUT STD_LOGIC_VECTOR (63 downto 0);
        fifo_axi_full_offset : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_continue : OUT STD_LOGIC;
        ap_idle : IN STD_LOGIC );
    end component;


    component mac_logger_fifo_axi_full_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_MAXREQS : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER;
        USER_RFIFONUM_WIDTH : INTEGER;
        USER_DW : INTEGER;
        USER_AW : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        I_RFIFONUM : OUT STD_LOGIC_VECTOR (8 downto 0);
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        I_WSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC );
    end component;


    component mac_logger_mac_fifo_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_MAXREQS : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER;
        USER_RFIFONUM_WIDTH : INTEGER;
        USER_DW : INTEGER;
        USER_AW : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        I_RFIFONUM : OUT STD_LOGIC_VECTOR (8 downto 0);
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        I_WSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC );
    end component;


    component mac_logger_ps_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_MAXREQS : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER;
        USER_RFIFONUM_WIDTH : INTEGER;
        USER_DW : INTEGER;
        USER_AW : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        I_RFIFONUM : OUT STD_LOGIC_VECTOR (8 downto 0);
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        I_WSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC );
    end component;



begin
    axilites_s_axi_U : component mac_logger_axilites_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_AXILITES_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_AXILITES_DATA_WIDTH)
    port map (
        AWVALID => s_axi_axilites_AWVALID,
        AWREADY => s_axi_axilites_AWREADY,
        AWADDR => s_axi_axilites_AWADDR,
        WVALID => s_axi_axilites_WVALID,
        WREADY => s_axi_axilites_WREADY,
        WDATA => s_axi_axilites_WDATA,
        WSTRB => s_axi_axilites_WSTRB,
        ARVALID => s_axi_axilites_ARVALID,
        ARREADY => s_axi_axilites_ARREADY,
        ARADDR => s_axi_axilites_ARADDR,
        RVALID => s_axi_axilites_RVALID,
        RREADY => s_axi_axilites_RREADY,
        RDATA => s_axi_axilites_RDATA,
        RRESP => s_axi_axilites_RRESP,
        BVALID => s_axi_axilites_BVALID,
        BREADY => s_axi_axilites_BREADY,
        BRESP => s_axi_axilites_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        fifo => fifo,
        ddr => ddr,
        status => status,
        writeStatus => writeStatus,
        logger_vlan_enable_mask => logger_vlan_enable_mask,
        vlan100_received => dataflow_in_loop_VITIS_LOOP_697_1_U0_vlan100_received,
        vlan100_received_ap_vld => dataflow_in_loop_VITIS_LOOP_697_1_U0_vlan100_received_ap_vld,
        vlan101_received => dataflow_in_loop_VITIS_LOOP_697_1_U0_vlan101_received,
        vlan101_received_ap_vld => dataflow_in_loop_VITIS_LOOP_697_1_U0_vlan101_received_ap_vld,
        vlan102_received => dataflow_in_loop_VITIS_LOOP_697_1_U0_vlan102_received,
        vlan102_received_ap_vld => dataflow_in_loop_VITIS_LOOP_697_1_U0_vlan102_received_ap_vld,
        vlan103_received => dataflow_in_loop_VITIS_LOOP_697_1_U0_vlan103_received,
        vlan103_received_ap_vld => dataflow_in_loop_VITIS_LOOP_697_1_U0_vlan103_received_ap_vld,
        vlan104_received => dataflow_in_loop_VITIS_LOOP_697_1_U0_vlan104_received,
        vlan104_received_ap_vld => dataflow_in_loop_VITIS_LOOP_697_1_U0_vlan104_received_ap_vld,
        vlan105_received => dataflow_in_loop_VITIS_LOOP_697_1_U0_vlan105_received,
        vlan105_received_ap_vld => dataflow_in_loop_VITIS_LOOP_697_1_U0_vlan105_received_ap_vld,
        vlan106_received => dataflow_in_loop_VITIS_LOOP_697_1_U0_vlan106_received,
        vlan106_received_ap_vld => dataflow_in_loop_VITIS_LOOP_697_1_U0_vlan106_received_ap_vld,
        vlan107_received => dataflow_in_loop_VITIS_LOOP_697_1_U0_vlan107_received,
        vlan107_received_ap_vld => dataflow_in_loop_VITIS_LOOP_697_1_U0_vlan107_received_ap_vld,
        vlan108_received => dataflow_in_loop_VITIS_LOOP_697_1_U0_vlan108_received,
        vlan108_received_ap_vld => dataflow_in_loop_VITIS_LOOP_697_1_U0_vlan108_received_ap_vld,
        vlan109_received => dataflow_in_loop_VITIS_LOOP_697_1_U0_vlan109_received,
        vlan109_received_ap_vld => dataflow_in_loop_VITIS_LOOP_697_1_U0_vlan109_received_ap_vld,
        droped => dataflow_in_loop_VITIS_LOOP_697_1_U0_droped,
        droped_ap_vld => dataflow_in_loop_VITIS_LOOP_697_1_U0_droped_ap_vld,
        multicast_recv_enable => multicast_recv_enable,
        unicast_filter_enable => unicast_filter_enable,
        unicast_vlan100_macaddr_lsb => unicast_vlan100_macaddr_lsb,
        unicast_vlan100_macaddr_msb => unicast_vlan100_macaddr_msb,
        unicast_vlan101_macaddr_lsb => unicast_vlan101_macaddr_lsb,
        unicast_vlan101_macaddr_msb => unicast_vlan101_macaddr_msb,
        unicast_vlan102_macaddr_lsb => unicast_vlan102_macaddr_lsb,
        unicast_vlan102_macaddr_msb => unicast_vlan102_macaddr_msb,
        unicast_vlan103_macaddr_lsb => unicast_vlan103_macaddr_lsb,
        unicast_vlan103_macaddr_msb => unicast_vlan103_macaddr_msb,
        unicast_vlan104_macaddr_lsb => unicast_vlan104_macaddr_lsb,
        unicast_vlan104_macaddr_msb => unicast_vlan104_macaddr_msb,
        unicast_vlan105_macaddr_lsb => unicast_vlan105_macaddr_lsb,
        unicast_vlan105_macaddr_msb => unicast_vlan105_macaddr_msb,
        unicast_vlan106_macaddr_lsb => unicast_vlan106_macaddr_lsb,
        unicast_vlan106_macaddr_msb => unicast_vlan106_macaddr_msb,
        unicast_vlan107_macaddr_lsb => unicast_vlan107_macaddr_lsb,
        unicast_vlan107_macaddr_msb => unicast_vlan107_macaddr_msb,
        unicast_vlan108_macaddr_lsb => unicast_vlan108_macaddr_lsb,
        unicast_vlan108_macaddr_msb => unicast_vlan108_macaddr_msb,
        unicast_vlan109_macaddr_lsb => unicast_vlan109_macaddr_lsb,
        unicast_vlan109_macaddr_msb => unicast_vlan109_macaddr_msb,
        log_all_mask => log_all_mask,
        driver => driver,
        fifo_axi_full_offset => fifo_axi_full_offset,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_continue => ap_continue,
        ap_idle => ap_idle);

    fifo_axi_full_m_axi_U : component mac_logger_fifo_axi_full_m_axi
    generic map (
        CONSERVATIVE => 1,
        USER_MAXREQS => 5,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        C_M_AXI_ID_WIDTH => C_M_AXI_FIFO_AXI_FULL_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_FIFO_AXI_FULL_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_FIFO_AXI_FULL_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_FIFO_AXI_FULL_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_FIFO_AXI_FULL_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_FIFO_AXI_FULL_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_FIFO_AXI_FULL_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_FIFO_AXI_FULL_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_FIFO_AXI_FULL_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_FIFO_AXI_FULL_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_FIFO_AXI_FULL_CACHE_VALUE,
        USER_RFIFONUM_WIDTH => 9,
        USER_DW => 32,
        USER_AW => 64,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16)
    port map (
        AWVALID => m_axi_fifo_axi_full_AWVALID,
        AWREADY => m_axi_fifo_axi_full_AWREADY,
        AWADDR => m_axi_fifo_axi_full_AWADDR,
        AWID => m_axi_fifo_axi_full_AWID,
        AWLEN => m_axi_fifo_axi_full_AWLEN,
        AWSIZE => m_axi_fifo_axi_full_AWSIZE,
        AWBURST => m_axi_fifo_axi_full_AWBURST,
        AWLOCK => m_axi_fifo_axi_full_AWLOCK,
        AWCACHE => m_axi_fifo_axi_full_AWCACHE,
        AWPROT => m_axi_fifo_axi_full_AWPROT,
        AWQOS => m_axi_fifo_axi_full_AWQOS,
        AWREGION => m_axi_fifo_axi_full_AWREGION,
        AWUSER => m_axi_fifo_axi_full_AWUSER,
        WVALID => m_axi_fifo_axi_full_WVALID,
        WREADY => m_axi_fifo_axi_full_WREADY,
        WDATA => m_axi_fifo_axi_full_WDATA,
        WSTRB => m_axi_fifo_axi_full_WSTRB,
        WLAST => m_axi_fifo_axi_full_WLAST,
        WID => m_axi_fifo_axi_full_WID,
        WUSER => m_axi_fifo_axi_full_WUSER,
        ARVALID => m_axi_fifo_axi_full_ARVALID,
        ARREADY => m_axi_fifo_axi_full_ARREADY,
        ARADDR => m_axi_fifo_axi_full_ARADDR,
        ARID => m_axi_fifo_axi_full_ARID,
        ARLEN => m_axi_fifo_axi_full_ARLEN,
        ARSIZE => m_axi_fifo_axi_full_ARSIZE,
        ARBURST => m_axi_fifo_axi_full_ARBURST,
        ARLOCK => m_axi_fifo_axi_full_ARLOCK,
        ARCACHE => m_axi_fifo_axi_full_ARCACHE,
        ARPROT => m_axi_fifo_axi_full_ARPROT,
        ARQOS => m_axi_fifo_axi_full_ARQOS,
        ARREGION => m_axi_fifo_axi_full_ARREGION,
        ARUSER => m_axi_fifo_axi_full_ARUSER,
        RVALID => m_axi_fifo_axi_full_RVALID,
        RREADY => m_axi_fifo_axi_full_RREADY,
        RDATA => m_axi_fifo_axi_full_RDATA,
        RLAST => m_axi_fifo_axi_full_RLAST,
        RID => m_axi_fifo_axi_full_RID,
        RUSER => m_axi_fifo_axi_full_RUSER,
        RRESP => m_axi_fifo_axi_full_RRESP,
        BVALID => m_axi_fifo_axi_full_BVALID,
        BREADY => m_axi_fifo_axi_full_BREADY,
        BRESP => m_axi_fifo_axi_full_BRESP,
        BID => m_axi_fifo_axi_full_BID,
        BUSER => m_axi_fifo_axi_full_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_ARVALID => dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_fifo_axi_full_ARVALID,
        I_ARREADY => fifo_axi_full_ARREADY,
        I_ARADDR => dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_fifo_axi_full_ARADDR,
        I_ARLEN => dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_fifo_axi_full_ARLEN,
        I_RVALID => fifo_axi_full_RVALID,
        I_RREADY => dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_fifo_axi_full_RREADY,
        I_RDATA => fifo_axi_full_RDATA,
        I_RFIFONUM => fifo_axi_full_RFIFONUM,
        I_AWVALID => ap_const_logic_0,
        I_AWREADY => fifo_axi_full_AWREADY,
        I_AWADDR => ap_const_lv64_0,
        I_AWLEN => ap_const_lv32_0,
        I_WVALID => ap_const_logic_0,
        I_WREADY => fifo_axi_full_WREADY,
        I_WDATA => ap_const_lv32_0,
        I_WSTRB => ap_const_lv4_0,
        I_BVALID => fifo_axi_full_BVALID,
        I_BREADY => ap_const_logic_0);

    mac_fifo_m_axi_U : component mac_logger_mac_fifo_m_axi
    generic map (
        CONSERVATIVE => 1,
        USER_MAXREQS => 5,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        C_M_AXI_ID_WIDTH => C_M_AXI_MAC_FIFO_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_MAC_FIFO_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_MAC_FIFO_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_MAC_FIFO_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_MAC_FIFO_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_MAC_FIFO_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_MAC_FIFO_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_MAC_FIFO_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_MAC_FIFO_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_MAC_FIFO_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_MAC_FIFO_CACHE_VALUE,
        USER_RFIFONUM_WIDTH => 9,
        USER_DW => 32,
        USER_AW => 64,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16)
    port map (
        AWVALID => m_axi_mac_fifo_AWVALID,
        AWREADY => m_axi_mac_fifo_AWREADY,
        AWADDR => m_axi_mac_fifo_AWADDR,
        AWID => m_axi_mac_fifo_AWID,
        AWLEN => m_axi_mac_fifo_AWLEN,
        AWSIZE => m_axi_mac_fifo_AWSIZE,
        AWBURST => m_axi_mac_fifo_AWBURST,
        AWLOCK => m_axi_mac_fifo_AWLOCK,
        AWCACHE => m_axi_mac_fifo_AWCACHE,
        AWPROT => m_axi_mac_fifo_AWPROT,
        AWQOS => m_axi_mac_fifo_AWQOS,
        AWREGION => m_axi_mac_fifo_AWREGION,
        AWUSER => m_axi_mac_fifo_AWUSER,
        WVALID => m_axi_mac_fifo_WVALID,
        WREADY => m_axi_mac_fifo_WREADY,
        WDATA => m_axi_mac_fifo_WDATA,
        WSTRB => m_axi_mac_fifo_WSTRB,
        WLAST => m_axi_mac_fifo_WLAST,
        WID => m_axi_mac_fifo_WID,
        WUSER => m_axi_mac_fifo_WUSER,
        ARVALID => m_axi_mac_fifo_ARVALID,
        ARREADY => m_axi_mac_fifo_ARREADY,
        ARADDR => m_axi_mac_fifo_ARADDR,
        ARID => m_axi_mac_fifo_ARID,
        ARLEN => m_axi_mac_fifo_ARLEN,
        ARSIZE => m_axi_mac_fifo_ARSIZE,
        ARBURST => m_axi_mac_fifo_ARBURST,
        ARLOCK => m_axi_mac_fifo_ARLOCK,
        ARCACHE => m_axi_mac_fifo_ARCACHE,
        ARPROT => m_axi_mac_fifo_ARPROT,
        ARQOS => m_axi_mac_fifo_ARQOS,
        ARREGION => m_axi_mac_fifo_ARREGION,
        ARUSER => m_axi_mac_fifo_ARUSER,
        RVALID => m_axi_mac_fifo_RVALID,
        RREADY => m_axi_mac_fifo_RREADY,
        RDATA => m_axi_mac_fifo_RDATA,
        RLAST => m_axi_mac_fifo_RLAST,
        RID => m_axi_mac_fifo_RID,
        RUSER => m_axi_mac_fifo_RUSER,
        RRESP => m_axi_mac_fifo_RRESP,
        BVALID => m_axi_mac_fifo_BVALID,
        BREADY => m_axi_mac_fifo_BREADY,
        BRESP => m_axi_mac_fifo_BRESP,
        BID => m_axi_mac_fifo_BID,
        BUSER => m_axi_mac_fifo_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_ARVALID => dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_mac_fifo_ARVALID,
        I_ARREADY => mac_fifo_ARREADY,
        I_ARADDR => dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_mac_fifo_ARADDR,
        I_ARLEN => dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_mac_fifo_ARLEN,
        I_RVALID => mac_fifo_RVALID,
        I_RREADY => dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_mac_fifo_RREADY,
        I_RDATA => mac_fifo_RDATA,
        I_RFIFONUM => mac_fifo_RFIFONUM,
        I_AWVALID => ap_const_logic_0,
        I_AWREADY => mac_fifo_AWREADY,
        I_AWADDR => ap_const_lv64_0,
        I_AWLEN => ap_const_lv32_0,
        I_WVALID => ap_const_logic_0,
        I_WREADY => mac_fifo_WREADY,
        I_WDATA => ap_const_lv32_0,
        I_WSTRB => ap_const_lv4_0,
        I_BVALID => mac_fifo_BVALID,
        I_BREADY => ap_const_logic_0);

    ps_m_axi_U : component mac_logger_ps_m_axi
    generic map (
        CONSERVATIVE => 1,
        USER_MAXREQS => 5,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 64,
        C_M_AXI_ID_WIDTH => C_M_AXI_PS_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_PS_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_PS_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_PS_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_PS_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_PS_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_PS_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_PS_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_PS_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_PS_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_PS_CACHE_VALUE,
        USER_RFIFONUM_WIDTH => 9,
        USER_DW => 32,
        USER_AW => 64,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16)
    port map (
        AWVALID => m_axi_ps_AWVALID,
        AWREADY => m_axi_ps_AWREADY,
        AWADDR => m_axi_ps_AWADDR,
        AWID => m_axi_ps_AWID,
        AWLEN => m_axi_ps_AWLEN,
        AWSIZE => m_axi_ps_AWSIZE,
        AWBURST => m_axi_ps_AWBURST,
        AWLOCK => m_axi_ps_AWLOCK,
        AWCACHE => m_axi_ps_AWCACHE,
        AWPROT => m_axi_ps_AWPROT,
        AWQOS => m_axi_ps_AWQOS,
        AWREGION => m_axi_ps_AWREGION,
        AWUSER => m_axi_ps_AWUSER,
        WVALID => m_axi_ps_WVALID,
        WREADY => m_axi_ps_WREADY,
        WDATA => m_axi_ps_WDATA,
        WSTRB => m_axi_ps_WSTRB,
        WLAST => m_axi_ps_WLAST,
        WID => m_axi_ps_WID,
        WUSER => m_axi_ps_WUSER,
        ARVALID => m_axi_ps_ARVALID,
        ARREADY => m_axi_ps_ARREADY,
        ARADDR => m_axi_ps_ARADDR,
        ARID => m_axi_ps_ARID,
        ARLEN => m_axi_ps_ARLEN,
        ARSIZE => m_axi_ps_ARSIZE,
        ARBURST => m_axi_ps_ARBURST,
        ARLOCK => m_axi_ps_ARLOCK,
        ARCACHE => m_axi_ps_ARCACHE,
        ARPROT => m_axi_ps_ARPROT,
        ARQOS => m_axi_ps_ARQOS,
        ARREGION => m_axi_ps_ARREGION,
        ARUSER => m_axi_ps_ARUSER,
        RVALID => m_axi_ps_RVALID,
        RREADY => m_axi_ps_RREADY,
        RDATA => m_axi_ps_RDATA,
        RLAST => m_axi_ps_RLAST,
        RID => m_axi_ps_RID,
        RUSER => m_axi_ps_RUSER,
        RRESP => m_axi_ps_RRESP,
        BVALID => m_axi_ps_BVALID,
        BREADY => m_axi_ps_BREADY,
        BRESP => m_axi_ps_BRESP,
        BID => m_axi_ps_BID,
        BUSER => m_axi_ps_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_ARVALID => dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_ps_ARVALID,
        I_ARREADY => ps_ARREADY,
        I_ARADDR => dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_ps_ARADDR,
        I_ARLEN => dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_ps_ARLEN,
        I_RVALID => ps_RVALID,
        I_RREADY => dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_ps_RREADY,
        I_RDATA => ps_RDATA,
        I_RFIFONUM => ps_RFIFONUM,
        I_AWVALID => dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_ps_AWVALID,
        I_AWREADY => ps_AWREADY,
        I_AWADDR => dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_ps_AWADDR,
        I_AWLEN => dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_ps_AWLEN,
        I_WVALID => dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_ps_WVALID,
        I_WREADY => ps_WREADY,
        I_WDATA => dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_ps_WDATA,
        I_WSTRB => dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_ps_WSTRB,
        I_BVALID => ps_BVALID,
        I_BREADY => dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_ps_BREADY);

    dataflow_in_loop_VITIS_LOOP_697_1_U0 : component mac_logger_dataflow_in_loop_VITIS_LOOP_697_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        m_axi_ps_AWVALID => dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_ps_AWVALID,
        m_axi_ps_AWREADY => ps_AWREADY,
        m_axi_ps_AWADDR => dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_ps_AWADDR,
        m_axi_ps_AWID => dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_ps_AWID,
        m_axi_ps_AWLEN => dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_ps_AWLEN,
        m_axi_ps_AWSIZE => dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_ps_AWSIZE,
        m_axi_ps_AWBURST => dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_ps_AWBURST,
        m_axi_ps_AWLOCK => dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_ps_AWLOCK,
        m_axi_ps_AWCACHE => dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_ps_AWCACHE,
        m_axi_ps_AWPROT => dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_ps_AWPROT,
        m_axi_ps_AWQOS => dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_ps_AWQOS,
        m_axi_ps_AWREGION => dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_ps_AWREGION,
        m_axi_ps_AWUSER => dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_ps_AWUSER,
        m_axi_ps_WVALID => dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_ps_WVALID,
        m_axi_ps_WREADY => ps_WREADY,
        m_axi_ps_WDATA => dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_ps_WDATA,
        m_axi_ps_WSTRB => dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_ps_WSTRB,
        m_axi_ps_WLAST => dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_ps_WLAST,
        m_axi_ps_WID => dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_ps_WID,
        m_axi_ps_WUSER => dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_ps_WUSER,
        m_axi_ps_ARVALID => dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_ps_ARVALID,
        m_axi_ps_ARREADY => ps_ARREADY,
        m_axi_ps_ARADDR => dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_ps_ARADDR,
        m_axi_ps_ARID => dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_ps_ARID,
        m_axi_ps_ARLEN => dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_ps_ARLEN,
        m_axi_ps_ARSIZE => dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_ps_ARSIZE,
        m_axi_ps_ARBURST => dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_ps_ARBURST,
        m_axi_ps_ARLOCK => dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_ps_ARLOCK,
        m_axi_ps_ARCACHE => dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_ps_ARCACHE,
        m_axi_ps_ARPROT => dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_ps_ARPROT,
        m_axi_ps_ARQOS => dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_ps_ARQOS,
        m_axi_ps_ARREGION => dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_ps_ARREGION,
        m_axi_ps_ARUSER => dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_ps_ARUSER,
        m_axi_ps_RVALID => ps_RVALID,
        m_axi_ps_RREADY => dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_ps_RREADY,
        m_axi_ps_RDATA => ps_RDATA,
        m_axi_ps_RLAST => ps_RLAST,
        m_axi_ps_RID => ps_RID,
        m_axi_ps_RFIFONUM => ps_RFIFONUM,
        m_axi_ps_RUSER => ps_RUSER,
        m_axi_ps_RRESP => ps_RRESP,
        m_axi_ps_BVALID => ps_BVALID,
        m_axi_ps_BREADY => dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_ps_BREADY,
        m_axi_ps_BRESP => ps_BRESP,
        m_axi_ps_BID => ps_BID,
        m_axi_ps_BUSER => ps_BUSER,
        ddr => ddr,
        driver => driver,
        m_axi_mac_fifo_AWVALID => dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_mac_fifo_AWVALID,
        m_axi_mac_fifo_AWREADY => ap_const_logic_0,
        m_axi_mac_fifo_AWADDR => dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_mac_fifo_AWADDR,
        m_axi_mac_fifo_AWID => dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_mac_fifo_AWID,
        m_axi_mac_fifo_AWLEN => dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_mac_fifo_AWLEN,
        m_axi_mac_fifo_AWSIZE => dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_mac_fifo_AWSIZE,
        m_axi_mac_fifo_AWBURST => dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_mac_fifo_AWBURST,
        m_axi_mac_fifo_AWLOCK => dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_mac_fifo_AWLOCK,
        m_axi_mac_fifo_AWCACHE => dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_mac_fifo_AWCACHE,
        m_axi_mac_fifo_AWPROT => dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_mac_fifo_AWPROT,
        m_axi_mac_fifo_AWQOS => dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_mac_fifo_AWQOS,
        m_axi_mac_fifo_AWREGION => dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_mac_fifo_AWREGION,
        m_axi_mac_fifo_AWUSER => dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_mac_fifo_AWUSER,
        m_axi_mac_fifo_WVALID => dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_mac_fifo_WVALID,
        m_axi_mac_fifo_WREADY => ap_const_logic_0,
        m_axi_mac_fifo_WDATA => dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_mac_fifo_WDATA,
        m_axi_mac_fifo_WSTRB => dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_mac_fifo_WSTRB,
        m_axi_mac_fifo_WLAST => dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_mac_fifo_WLAST,
        m_axi_mac_fifo_WID => dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_mac_fifo_WID,
        m_axi_mac_fifo_WUSER => dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_mac_fifo_WUSER,
        m_axi_mac_fifo_ARVALID => dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_mac_fifo_ARVALID,
        m_axi_mac_fifo_ARREADY => mac_fifo_ARREADY,
        m_axi_mac_fifo_ARADDR => dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_mac_fifo_ARADDR,
        m_axi_mac_fifo_ARID => dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_mac_fifo_ARID,
        m_axi_mac_fifo_ARLEN => dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_mac_fifo_ARLEN,
        m_axi_mac_fifo_ARSIZE => dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_mac_fifo_ARSIZE,
        m_axi_mac_fifo_ARBURST => dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_mac_fifo_ARBURST,
        m_axi_mac_fifo_ARLOCK => dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_mac_fifo_ARLOCK,
        m_axi_mac_fifo_ARCACHE => dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_mac_fifo_ARCACHE,
        m_axi_mac_fifo_ARPROT => dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_mac_fifo_ARPROT,
        m_axi_mac_fifo_ARQOS => dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_mac_fifo_ARQOS,
        m_axi_mac_fifo_ARREGION => dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_mac_fifo_ARREGION,
        m_axi_mac_fifo_ARUSER => dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_mac_fifo_ARUSER,
        m_axi_mac_fifo_RVALID => mac_fifo_RVALID,
        m_axi_mac_fifo_RREADY => dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_mac_fifo_RREADY,
        m_axi_mac_fifo_RDATA => mac_fifo_RDATA,
        m_axi_mac_fifo_RLAST => mac_fifo_RLAST,
        m_axi_mac_fifo_RID => mac_fifo_RID,
        m_axi_mac_fifo_RFIFONUM => mac_fifo_RFIFONUM,
        m_axi_mac_fifo_RUSER => mac_fifo_RUSER,
        m_axi_mac_fifo_RRESP => mac_fifo_RRESP,
        m_axi_mac_fifo_BVALID => ap_const_logic_0,
        m_axi_mac_fifo_BREADY => dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_mac_fifo_BREADY,
        m_axi_mac_fifo_BRESP => ap_const_lv2_0,
        m_axi_mac_fifo_BID => ap_const_lv1_0,
        m_axi_mac_fifo_BUSER => ap_const_lv1_0,
        fifo => fifo,
        m_axi_fifo_axi_full_AWVALID => dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_fifo_axi_full_AWVALID,
        m_axi_fifo_axi_full_AWREADY => ap_const_logic_0,
        m_axi_fifo_axi_full_AWADDR => dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_fifo_axi_full_AWADDR,
        m_axi_fifo_axi_full_AWID => dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_fifo_axi_full_AWID,
        m_axi_fifo_axi_full_AWLEN => dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_fifo_axi_full_AWLEN,
        m_axi_fifo_axi_full_AWSIZE => dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_fifo_axi_full_AWSIZE,
        m_axi_fifo_axi_full_AWBURST => dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_fifo_axi_full_AWBURST,
        m_axi_fifo_axi_full_AWLOCK => dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_fifo_axi_full_AWLOCK,
        m_axi_fifo_axi_full_AWCACHE => dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_fifo_axi_full_AWCACHE,
        m_axi_fifo_axi_full_AWPROT => dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_fifo_axi_full_AWPROT,
        m_axi_fifo_axi_full_AWQOS => dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_fifo_axi_full_AWQOS,
        m_axi_fifo_axi_full_AWREGION => dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_fifo_axi_full_AWREGION,
        m_axi_fifo_axi_full_AWUSER => dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_fifo_axi_full_AWUSER,
        m_axi_fifo_axi_full_WVALID => dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_fifo_axi_full_WVALID,
        m_axi_fifo_axi_full_WREADY => ap_const_logic_0,
        m_axi_fifo_axi_full_WDATA => dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_fifo_axi_full_WDATA,
        m_axi_fifo_axi_full_WSTRB => dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_fifo_axi_full_WSTRB,
        m_axi_fifo_axi_full_WLAST => dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_fifo_axi_full_WLAST,
        m_axi_fifo_axi_full_WID => dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_fifo_axi_full_WID,
        m_axi_fifo_axi_full_WUSER => dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_fifo_axi_full_WUSER,
        m_axi_fifo_axi_full_ARVALID => dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_fifo_axi_full_ARVALID,
        m_axi_fifo_axi_full_ARREADY => fifo_axi_full_ARREADY,
        m_axi_fifo_axi_full_ARADDR => dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_fifo_axi_full_ARADDR,
        m_axi_fifo_axi_full_ARID => dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_fifo_axi_full_ARID,
        m_axi_fifo_axi_full_ARLEN => dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_fifo_axi_full_ARLEN,
        m_axi_fifo_axi_full_ARSIZE => dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_fifo_axi_full_ARSIZE,
        m_axi_fifo_axi_full_ARBURST => dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_fifo_axi_full_ARBURST,
        m_axi_fifo_axi_full_ARLOCK => dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_fifo_axi_full_ARLOCK,
        m_axi_fifo_axi_full_ARCACHE => dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_fifo_axi_full_ARCACHE,
        m_axi_fifo_axi_full_ARPROT => dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_fifo_axi_full_ARPROT,
        m_axi_fifo_axi_full_ARQOS => dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_fifo_axi_full_ARQOS,
        m_axi_fifo_axi_full_ARREGION => dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_fifo_axi_full_ARREGION,
        m_axi_fifo_axi_full_ARUSER => dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_fifo_axi_full_ARUSER,
        m_axi_fifo_axi_full_RVALID => fifo_axi_full_RVALID,
        m_axi_fifo_axi_full_RREADY => dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_fifo_axi_full_RREADY,
        m_axi_fifo_axi_full_RDATA => fifo_axi_full_RDATA,
        m_axi_fifo_axi_full_RLAST => fifo_axi_full_RLAST,
        m_axi_fifo_axi_full_RID => fifo_axi_full_RID,
        m_axi_fifo_axi_full_RFIFONUM => fifo_axi_full_RFIFONUM,
        m_axi_fifo_axi_full_RUSER => fifo_axi_full_RUSER,
        m_axi_fifo_axi_full_RRESP => fifo_axi_full_RRESP,
        m_axi_fifo_axi_full_BVALID => ap_const_logic_0,
        m_axi_fifo_axi_full_BREADY => dataflow_in_loop_VITIS_LOOP_697_1_U0_m_axi_fifo_axi_full_BREADY,
        m_axi_fifo_axi_full_BRESP => ap_const_lv2_0,
        m_axi_fifo_axi_full_BID => ap_const_lv1_0,
        m_axi_fifo_axi_full_BUSER => ap_const_lv1_0,
        fifo_axi_full_offset => fifo_axi_full_offset,
        timestamp => timestamp,
        logger_vlan_enable_mask => logger_vlan_enable_mask,
        multicast_recv_enable => multicast_recv_enable,
        unicast_filter_enable => unicast_filter_enable,
        unicast_vlan100_macaddr_lsb => unicast_vlan100_macaddr_lsb,
        unicast_vlan100_macaddr_msb => unicast_vlan100_macaddr_msb,
        unicast_vlan101_macaddr_lsb => unicast_vlan101_macaddr_lsb,
        unicast_vlan101_macaddr_msb => unicast_vlan101_macaddr_msb,
        unicast_vlan102_macaddr_lsb => unicast_vlan102_macaddr_lsb,
        unicast_vlan102_macaddr_msb => unicast_vlan102_macaddr_msb,
        unicast_vlan103_macaddr_lsb => unicast_vlan103_macaddr_lsb,
        unicast_vlan103_macaddr_msb => unicast_vlan103_macaddr_msb,
        unicast_vlan104_macaddr_lsb => unicast_vlan104_macaddr_lsb,
        unicast_vlan104_macaddr_msb => unicast_vlan104_macaddr_msb,
        unicast_vlan105_macaddr_lsb => unicast_vlan105_macaddr_lsb,
        unicast_vlan105_macaddr_msb => unicast_vlan105_macaddr_msb,
        unicast_vlan106_macaddr_lsb => unicast_vlan106_macaddr_lsb,
        unicast_vlan106_macaddr_msb => unicast_vlan106_macaddr_msb,
        unicast_vlan107_macaddr_lsb => unicast_vlan107_macaddr_lsb,
        unicast_vlan107_macaddr_msb => unicast_vlan107_macaddr_msb,
        unicast_vlan108_macaddr_lsb => unicast_vlan108_macaddr_lsb,
        unicast_vlan108_macaddr_msb => unicast_vlan108_macaddr_msb,
        unicast_vlan109_macaddr_lsb => unicast_vlan109_macaddr_lsb,
        unicast_vlan109_macaddr_msb => unicast_vlan109_macaddr_msb,
        log_all_mask => log_all_mask,
        vlan100_received => dataflow_in_loop_VITIS_LOOP_697_1_U0_vlan100_received,
        vlan101_received => dataflow_in_loop_VITIS_LOOP_697_1_U0_vlan101_received,
        vlan102_received => dataflow_in_loop_VITIS_LOOP_697_1_U0_vlan102_received,
        vlan103_received => dataflow_in_loop_VITIS_LOOP_697_1_U0_vlan103_received,
        vlan104_received => dataflow_in_loop_VITIS_LOOP_697_1_U0_vlan104_received,
        vlan105_received => dataflow_in_loop_VITIS_LOOP_697_1_U0_vlan105_received,
        vlan106_received => dataflow_in_loop_VITIS_LOOP_697_1_U0_vlan106_received,
        vlan107_received => dataflow_in_loop_VITIS_LOOP_697_1_U0_vlan107_received,
        vlan108_received => dataflow_in_loop_VITIS_LOOP_697_1_U0_vlan108_received,
        vlan109_received => dataflow_in_loop_VITIS_LOOP_697_1_U0_vlan109_received,
        droped => dataflow_in_loop_VITIS_LOOP_697_1_U0_droped,
        logger_vlan_enable_mask_ap_vld => ap_const_logic_1,
        multicast_recv_enable_ap_vld => ap_const_logic_1,
        unicast_filter_enable_ap_vld => ap_const_logic_1,
        unicast_vlan100_macaddr_lsb_ap_vld => ap_const_logic_1,
        unicast_vlan100_macaddr_msb_ap_vld => ap_const_logic_1,
        unicast_vlan101_macaddr_lsb_ap_vld => ap_const_logic_1,
        unicast_vlan101_macaddr_msb_ap_vld => ap_const_logic_1,
        unicast_vlan102_macaddr_lsb_ap_vld => ap_const_logic_1,
        unicast_vlan102_macaddr_msb_ap_vld => ap_const_logic_1,
        unicast_vlan103_macaddr_lsb_ap_vld => ap_const_logic_1,
        unicast_vlan103_macaddr_msb_ap_vld => ap_const_logic_1,
        unicast_vlan104_macaddr_lsb_ap_vld => ap_const_logic_1,
        unicast_vlan104_macaddr_msb_ap_vld => ap_const_logic_1,
        unicast_vlan105_macaddr_lsb_ap_vld => ap_const_logic_1,
        unicast_vlan105_macaddr_msb_ap_vld => ap_const_logic_1,
        unicast_vlan106_macaddr_lsb_ap_vld => ap_const_logic_1,
        unicast_vlan106_macaddr_msb_ap_vld => ap_const_logic_1,
        unicast_vlan107_macaddr_lsb_ap_vld => ap_const_logic_1,
        unicast_vlan107_macaddr_msb_ap_vld => ap_const_logic_1,
        unicast_vlan108_macaddr_lsb_ap_vld => ap_const_logic_1,
        unicast_vlan108_macaddr_msb_ap_vld => ap_const_logic_1,
        unicast_vlan109_macaddr_lsb_ap_vld => ap_const_logic_1,
        unicast_vlan109_macaddr_msb_ap_vld => ap_const_logic_1,
        log_all_mask_ap_vld => ap_const_logic_1,
        ap_start => dataflow_in_loop_VITIS_LOOP_697_1_U0_ap_start,
        ddr_ap_vld => ap_const_logic_1,
        driver_ap_vld => ap_const_logic_1,
        fifo_ap_vld => ap_const_logic_1,
        fifo_axi_full_offset_ap_vld => ap_const_logic_1,
        timestamp_ap_vld => ap_const_logic_1,
        vlan100_received_ap_vld => dataflow_in_loop_VITIS_LOOP_697_1_U0_vlan100_received_ap_vld,
        vlan101_received_ap_vld => dataflow_in_loop_VITIS_LOOP_697_1_U0_vlan101_received_ap_vld,
        vlan102_received_ap_vld => dataflow_in_loop_VITIS_LOOP_697_1_U0_vlan102_received_ap_vld,
        vlan103_received_ap_vld => dataflow_in_loop_VITIS_LOOP_697_1_U0_vlan103_received_ap_vld,
        vlan104_received_ap_vld => dataflow_in_loop_VITIS_LOOP_697_1_U0_vlan104_received_ap_vld,
        vlan105_received_ap_vld => dataflow_in_loop_VITIS_LOOP_697_1_U0_vlan105_received_ap_vld,
        vlan106_received_ap_vld => dataflow_in_loop_VITIS_LOOP_697_1_U0_vlan106_received_ap_vld,
        vlan107_received_ap_vld => dataflow_in_loop_VITIS_LOOP_697_1_U0_vlan107_received_ap_vld,
        vlan108_received_ap_vld => dataflow_in_loop_VITIS_LOOP_697_1_U0_vlan108_received_ap_vld,
        vlan109_received_ap_vld => dataflow_in_loop_VITIS_LOOP_697_1_U0_vlan109_received_ap_vld,
        droped_ap_vld => dataflow_in_loop_VITIS_LOOP_697_1_U0_droped_ap_vld,
        ap_done => dataflow_in_loop_VITIS_LOOP_697_1_U0_ap_done,
        ap_ready => dataflow_in_loop_VITIS_LOOP_697_1_U0_ap_ready,
        ap_idle => dataflow_in_loop_VITIS_LOOP_697_1_U0_ap_idle,
        ap_continue => dataflow_in_loop_VITIS_LOOP_697_1_U0_ap_continue);





    loop_dataflow_input_count_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                loop_dataflow_input_count <= ap_const_lv16_0;
            else
                if ((not((loop_dataflow_input_count = bound_minus_1)) and (ap_start = ap_const_logic_1) and (dataflow_in_loop_VITIS_LOOP_697_1_U0_ap_ready = ap_const_logic_1))) then 
                    loop_dataflow_input_count <= std_logic_vector(unsigned(loop_dataflow_input_count) + unsigned(ap_const_lv16_1));
                elsif (((ap_start = ap_const_logic_1) and (loop_dataflow_input_count = bound_minus_1) and (dataflow_in_loop_VITIS_LOOP_697_1_U0_ap_ready = ap_const_logic_1))) then 
                    loop_dataflow_input_count <= ap_const_lv16_0;
                end if; 
            end if;
        end if;
    end process;


    loop_dataflow_output_count_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                loop_dataflow_output_count <= ap_const_lv16_0;
            else
                if ((not((loop_dataflow_output_count = bound_minus_1)) and (dataflow_in_loop_VITIS_LOOP_697_1_U0_ap_continue = ap_const_logic_1) and (dataflow_in_loop_VITIS_LOOP_697_1_U0_ap_done = ap_const_logic_1))) then 
                    loop_dataflow_output_count <= std_logic_vector(unsigned(loop_dataflow_output_count) + unsigned(ap_const_lv16_1));
                elsif (((loop_dataflow_output_count = bound_minus_1) and (dataflow_in_loop_VITIS_LOOP_697_1_U0_ap_continue = ap_const_logic_1) and (dataflow_in_loop_VITIS_LOOP_697_1_U0_ap_done = ap_const_logic_1))) then 
                    loop_dataflow_output_count <= ap_const_lv16_0;
                end if; 
            end if;
        end if;
    end process;


    ap_done_assign_proc : process(dataflow_in_loop_VITIS_LOOP_697_1_U0_ap_done, loop_dataflow_output_count, bound_minus_1)
    begin
        if (((loop_dataflow_output_count = bound_minus_1) and (dataflow_in_loop_VITIS_LOOP_697_1_U0_ap_done = ap_const_logic_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, dataflow_in_loop_VITIS_LOOP_697_1_U0_ap_idle, loop_dataflow_output_count)
    begin
        if (((ap_start = ap_const_logic_0) and (loop_dataflow_output_count = ap_const_lv16_0) and (dataflow_in_loop_VITIS_LOOP_697_1_U0_ap_idle = ap_const_logic_1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_start, dataflow_in_loop_VITIS_LOOP_697_1_U0_ap_ready, loop_dataflow_input_count, bound_minus_1)
    begin
        if (((ap_start = ap_const_logic_1) and (loop_dataflow_input_count = bound_minus_1) and (dataflow_in_loop_VITIS_LOOP_697_1_U0_ap_ready = ap_const_logic_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    bound_minus_1 <= std_logic_vector(unsigned(ap_const_lv16_FFFF) - unsigned(ap_const_lv16_1));

    dataflow_in_loop_VITIS_LOOP_697_1_U0_ap_continue_assign_proc : process(ap_continue, loop_dataflow_output_count, bound_minus_1)
    begin
        if ((not((loop_dataflow_output_count = bound_minus_1)) or (ap_continue = ap_const_logic_1))) then 
            dataflow_in_loop_VITIS_LOOP_697_1_U0_ap_continue <= ap_const_logic_1;
        else 
            dataflow_in_loop_VITIS_LOOP_697_1_U0_ap_continue <= ap_const_logic_0;
        end if; 
    end process;

    dataflow_in_loop_VITIS_LOOP_697_1_U0_ap_start <= ap_start;
    fifo_axi_full_RID <= ap_const_lv1_0;
    fifo_axi_full_RLAST <= ap_const_logic_0;
    fifo_axi_full_RRESP <= ap_const_lv2_0;
    fifo_axi_full_RUSER <= ap_const_lv1_0;
    mac_fifo_RID <= ap_const_lv1_0;
    mac_fifo_RLAST <= ap_const_logic_0;
    mac_fifo_RRESP <= ap_const_lv2_0;
    mac_fifo_RUSER <= ap_const_lv1_0;
    ps_BID <= ap_const_lv1_0;
    ps_BRESP <= ap_const_lv2_0;
    ps_BUSER <= ap_const_lv1_0;
    ps_RID <= ap_const_lv1_0;
    ps_RLAST <= ap_const_logic_0;
    ps_RRESP <= ap_const_lv2_0;
    ps_RUSER <= ap_const_lv1_0;
end behav;
