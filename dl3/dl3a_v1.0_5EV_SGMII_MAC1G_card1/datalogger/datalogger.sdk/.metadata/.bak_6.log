!SESSION 2022-09-26 14:57:07.045 -----------------------------------------------
eclipse.buildId=2020.2
java.version=11.0.2
java.vendor=Oracle Corporation
BootLoader constants: OS=linux, ARCH=x86_64, WS=gtk, NL=en_US
Command-line arguments:  -os linux -ws gtk -arch x86_64

This is a continuation of log file /export/zd-fs/00_shared_folder/projects/02-NG-Datalogger/20-Baseline/13.proj_dl3_v1r1/fpga/dl3a_v1.0_5EV_SGMII_MAC1G/datalogger/datalogger.sdk/.metadata/.bak_5.log
Created Time: 2022-09-26 14:58:36.563

!ENTRY com.xilinx.sdk.utils 0 0 2022-09-26 14:58:36.563
!MESSAGE XSCT Command: [::hsi::utils::get_all_register_data -json /export/zd-fs/00_shared_folder/projects/02-NG-Datalogger/20-Baseline/13.proj_dl3_v1r1/fpga/dl3a_v1.0_5EV_SGMII_MAC1G/datalogger/design_1_wrapper.xsa psu_pmu_0], Thread: main

!ENTRY com.xilinx.sdk.utils 0 0 2022-09-26 14:58:37.561
!MESSAGE XSCT command with result: [::hsi::utils::get_all_register_data -json /export/zd-fs/00_shared_folder/projects/02-NG-Datalogger/20-Baseline/13.proj_dl3_v1r1/fpga/dl3a_v1.0_5EV_SGMII_MAC1G/datalogger/design_1_wrapper.xsa psu_pmu_0], Result: [null, {"CHIPDLIN_0": {},
"CHIPDLIN_1": {},
"CHIPDLIN_2": {},
"CHIPDLIN_3": {},
"CHIPDLIN_4": {},
"CHIPDLIN_5": {},
"CHIPDLIN_6": {},
"CHIPDLIN_7": {},
"CHIPDLIN_8": {},
"CHIPDLIN_9": {},
"axi_ethernet_0": {"RESET_AND_ADDRESS_FILTER_REG": {"description": "Reset and Address Filter Register",
"address_offset": "0x0",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"MCSTREJ": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Reject Receive Multicast Destination Address.
  0  Accept receive multicast destination address Ethernet frames that meet address filtering specified in FMI register and/or the multicast address table.
  1  Reject all receive multicast destination address Ethernet frames regardless of FMI register and multicast address table.For each I/O bit programmed as input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"BCSTREJ": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Reject Receive Broadcast Destination Address.
  0  Accept receive broadcast destination address Ethernet frames.
  1  Reject all receive broadcast destination address Ethernet frames. This is the only method available for blocking broadcast Ethernet frames.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TXVTAGMODE": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "2",
"desc": "Transmit VLAN Tag Mode.
  00  No VLAN tags are added to transmit frames.
  01  VLAN tags are added to all transmit frames.
  10  VLAN tags are added to all transmit frames that already have a VLAN tag.
  11  VLAN tags are added to select transmit frames that already have VLAN tags.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXVTAGMODE": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "2",
"desc": "Receive VLAN Tag Mode.
  00  No VLAN tags are added to receive frames.
  01  VLAN tags are added to all receive frames.
  10  VLAN tags are added to all receive frames that already have a VLAN tag.
  11  VLAN tags are added to select receive frames that already have VLAN tags.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TXVSTRPMODE": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "2",
"desc": "Transmit VLAN Strip Mode.
  00  No VLAN tags are stripped to transmit frames.
  01  One VLAN tag is stripped from all transmit frames that have VLAN tags.
  10  Reserved.
  11  One VLAN tag is stripped from select transmit frames that already have VLAN tags.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXVSTRPMODE": {"access": "read-write",
"bit_offset": "9",
"bit_range": "",
"bit_width": "2",
"desc": "Receive VLAN Strip Mode.
  00  No VLAN tags are stripped to receive frames.
  01  One VLAN tag is stripped from all receive frames that have VLAN tags.
  10  Reserved.
  11  One VLAN tag is stripped from select receive frames that already have VLAN tags.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"NEWFNCENBL": {"access": "read-write",
"bit_offset": "11",
"bit_range": "",
"bit_width": "1",
"desc": "New Functions Enable.
  0  Disable new functions.
  1  Enable new functions if present.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EMULTIFLTRENBL": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "Enhanced Multicast Filter Enable.
  0  Disable enhanced multicast address filtering mode.
  1  Enable enhanced multicast address filtering mode if present.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXBADFRMEN": {"access": "read-write",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "Receive Bad Frame Enable.
  0  Normal operation, bad frames are rejected.
  1  Bad frames are accepted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952790016,
},
"TRANSMIT_PAUSE_FRAME_REG": {"description": "Transmit Pause Frame Register",
"address_offset": "0x4",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"TPFV": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "Transmit Pause Frame Value.
  These bits denote the value of the transmit pause frame pause time in units of 512 bit times. If enabled by the FCC register, writing a value into this register initiates the transmission of a single pause frame with the pause value defined in this field.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952790020,
},
"TRANSMIT_IFG_ADJUST_REG": {"description": "Transmit Inter Frame Gap Adjustment Register",
"address_offset": "0x8",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"IFGP0": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Transmit Inter Frame Gap Adjustment Value.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952790024,
},
"INTERRUPT_STATUS_REG": {"description": "Interrupt Status Register",
"address_offset": "0xC",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"HARDACSCMPLT": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Hard register Access Complete.
  0  Hard register access is not complete.
  1  Hard register access is complete.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"AUTONEG": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Auto-Negotiation Complete.
  0  auto-negotiation not complete.
  1  auto-negotiation complete.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXCMPLT": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Receive Complete.
  0  no frame received.
  1  frame received.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXRJECT": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Receive Frame Rejected.
  0  no receive frame rejected.
  1  receive frame was rejected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXMEMOVR": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Receive Memory Overrun.
  0  normal operation, no overflow occurred.
  1  receive Memory overflow occurred and data was lost.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TXCMPLT": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "Transmit Complete.
  0  no frame transmitted.
  1  frame transmitted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXDCMLOCK": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "Receive DCM Lock.
  0  RX digital clock manager (DCM) not locked.
  1  RX DCM Locked.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"MGTRDY": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "Serial Transceiver Ready.
  0  Serial transceiver / TEMAC not ready.
  1  Serial transceiver / TEMAC ready.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PHYRSTCMPLT": {"access": "read-write",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "PHY Reset Complete.
  0  PHY not ready.
  1  PHY ready.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952790028,
},
"INTERRUPT_PENDING_REG": {"description": "Interrupt Pending Register",
"address_offset": "0x10",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"HARDACSCMPLT": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Hard register Access Complete.
  0  Hard register access is not complete.
  1  Hard register access is complete.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"AUTONEG": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Auto-Negotiation Complete.
  0  auto-negotiation not complete.
  1  auto-negotiation complete.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXCMPLT": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Receive Complete.
  0  no frame received.
  1  frame received.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXRJECT": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Receive Frame Rejected.
  0  no receive frame rejected.
  1  receive frame was rejected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXMEMOVR": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Receive Memory Overrun.
  0  normal operation, no overflow occurred.
  1  receive Memory overflow occurred and data was lost.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TXCMPLT": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "Transmit Complete.
  0  no frame transmitted.
  1  frame transmitted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXDCMLOCK": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "Receive DCM Lock.
  0  RX digital clock manager (DCM) not locked.
  1  RX DCM Locked.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"MGTRDY": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "MGT Ready.
  0  Serial transceiver / TEMAC not ready.
  1  Serial transceiver / TEMAC ready.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PHYRSTCMPLT": {"access": "read-write",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "PHY Reset Complete.
  0  PHY not ready.
  1  PHY ready.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952790032,
},
"INTERRUPT_ENABLE_REG": {"description": "Interrupt Enable Register",
"address_offset": "0x14",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"HARDACSCMPLT": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Hard register Access Complete.
  0  Hard register access is not complete.
  1  Hard register access is complete.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"AUTONEG": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Auto-Negotiation Complete.
  0  auto-negotiation not complete.
  1  auto-negotiation complete.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXCMPLT": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Receive Complete.
  0  no frame received.
  1  frame received.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXRJECT": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Receive Frame Rejected.
  0  no receive frame rejected.
  1  receive frame was rejected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXMEMOVR": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Receive Memory Overrun.
  0  normal operation, no overflow occurred.
  1  receive Memory overflow occurred and data was lost.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TXCMPLT": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "Transmit Complete.
  0  no frame transmitted.
  1  frame transmitted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXDCMLOCK": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "Receive DCM Lock.
  0  RX digital clock manager (DCM) not locked.
  1  RX DCM Locked.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"MGTRDY": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "MGT Ready.
  0  Serial transceiver / TEMAC not ready.
  1  Serial transceiver / TEMAC ready.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PHYRSTCMPLT": {"access": "read-write",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "PHY Reset Complete.
  0  PHY not ready.
  1  PHY ready.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952790036,
},
"TRANSMIT_VLAN_TAG_REG": {"description": "Transmit VLAN Tag Register",
"address_offset": "0x18",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"VID": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "12",
"desc": "VLAN identifier.
  Uniquely identifies the VLAN to which the frame belongs.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CFI": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "Canonical Format Indicator.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PRIORITY": {"access": "read-write",
"bit_offset": "13",
"bit_range": "",
"bit_width": "3",
"desc": "User Priority.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TPID": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "16",
"desc": "Tag Protocol Identifier.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952790040,
},
"RECEIVE_VLAN_TAG_REG": {"description": "Receive VLAN Tag Register",
"address_offset": "0x1C",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"VID": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "12",
"desc": "VLAN identifier.
  Uniquely identifies the VLAN to which the frame belongs.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CFI": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "Canonical Format Indicator.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PRIORITY": {"access": "read-write",
"bit_offset": "13",
"bit_range": "",
"bit_width": "3",
"desc": "User Priority.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TPID": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "16",
"desc": "Tag Protocol Identifier.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952790044,
},
"UNICAST_ADDRESS_WORD_LOWER_REG": {"description": "Unicast Address Word Lower Register",
"address_offset": "0x20",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"UNICASTADDR": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Unicast Address.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952790048,
},
"UNICAST_ADDRESS_WORD_UPPER_REG": {"description": "Unicast Address Word Upper Register",
"address_offset": "0x24",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"UNICASTADDR": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "Unicast Address.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952790052,
},
"VLAN_TPID_WORD0_REG": {"description": "VLAN TPID Word 0 Register",
"address_offset": "0x28",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"TPID0": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "TPID Value 0.
  These bits represent one TPID value that is used for recognizing VLAN frames for both the transmit and receive paths.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TPID1": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "16",
"desc": "TPID Value 1.
  These bits represent one TPID value that is used for recognizing VLAN frames for both the transmit and receive paths.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952790056,
},
"VLAN_TPID_WORD1_REG": {"description": "VLAN TPID Word 1 Register",
"address_offset": "0x2C",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"TPID2": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "TPID Value 2.
  These bits represent one TPID value that is used for recognizing VLAN frames for both the transmit and receive paths.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TPID3": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "16",
"desc": "TPID Value 3.
  These bits represent one TPID value that is used for recognizing VLAN frames for both the transmit and receive paths.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952790060,
},
"PCS_PMA_TEMAC_STATUS_REG": {"description": "PCS PMA TEMAC Status Register",
"address_offset": "0x30",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"LINKSTATUS": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Link Status.
  0  No Link.
  1  Link is up.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"LINKSYNC": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Link Synchronization.
  0  Synchronization failed.
  1  Synchronization obtained.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RUDI_C": {"access": "read-only",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "RUDI(/C/).
  0  /C/ ordered sets(AN Configuration sequences) not there.
  1  Receiving /C/ ordered sets.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RUDI_I": {"access": "read-only",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "RUDI(/I/).
  0  /I/ ordered sets(Idles) not there.
  1  Receiving /I/ ordered sets.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RUDI_INVLD": {"access": "read-only",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "RUDI(/INVALID/).
  0  No invalid data.
  1  Receiving invalid data while receiving/C/ or/I/ ordered set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXDISPERR": {"access": "read-only",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "Receive Disparity Error.
  0  No running disparity error.
  1  Receiving running disparity error during the 8B/10B decoding function.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXNOTINTABLE": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "Receive Not In Table.
  0  No receive not in table error.
  1  Receiving code group which is not recognized from the 8B/10B coding tables.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PHYLINKSTATUS": {"access": "read-only",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "PHY Link Status (SGMII only).   0  Indicates that it has not linked with its link partner.   1  Indicates that the PHY has obtained a link with its link partner. When operating in 1000BASE-X mode this bit remains Low and should be ignored.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RMTFLTENC": {"access": "read-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "2",
"desc": "Remote Fault Encoding (1000BASE-X only).   00  No error, link OK.   01 - Offline.   10 - Link failure.   11 - Auto-Negotiation error. This signal has no significance when the core is in SGMII mode with PHY side implementation and indicates 00.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SPEED": {"access": "read-only",
"bit_offset": "10",
"bit_range": "",
"bit_width": "2",
"desc": "This signal indicates the speed negotiated and is only valid when Auto-Negotiation is enabled. The signal encoding is:   11 - Reserved.   10 - 1000 Mb/s.   01 - 100 Mb/s.   00  10 Mb/s.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DUPLEX": {"access": "read-only",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "This bit indicates the Duplex mode negotiated with the link partner.
  1 - Full-Duplex.
  0 - Half-Duplex.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RMTFLT": {"access": "read-only",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "Remote Fault (1000BASE-X only)
  1 - Remote fault is detected.
  0 - No remote fault.
This signal has no significance in SGMII PHY mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952790064,
},
"RECEIVED_BYTES_COUNTER_WORD_0_REG": {"description": "Received Bytes Counter Word 0",
"address_offset": "0x200",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"RECEIVED_BYTES_COUNTER_WORD_0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Received Bytes Counter Word 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952790528,
},
"RECEIVED_BYTES_COUNTER_WORD_1_REG": {"description": "Received Bytes Counter Word 1",
"address_offset": "0x204",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"RECEIVED_BYTES_COUNTER_WORD_1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Received Bytes Counter Word 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952790532,
},
"TRANSMITTED_BYTES_COUNTER_WORD_0_REG": {"description": "Transmitted Bytes Counter Word 0",
"address_offset": "0x208",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"TRANSMITTED_BYTES_COUNTER_WORD_0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Transmitted Bytes Counter Word 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952790536,
},
"TRANSMITTED_BYTES_COUNTER_WORD_1_REG": {"description": "Transmitted Bytes Counter Word 1",
"address_offset": "0x20C",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"TRANSMITTED_BYTES_COUNTER_WORD_1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Transmitted Bytes Counter Word 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952790540,
},
"UNDERSIZE_FRAMES_COUNTER_WORD_0_REG": {"description": "Undersize Frames Counter Word 0",
"address_offset": "0x210",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"UNDERSIZE_FRAMES_COUNTER_WORD_0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Undersize Frames Counter Word 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952790544,
},
"UNDERSIZE_FRAMES_COUNTER_WORD_1_REG": {"description": "Undersize Frames Counter Word 1",
"address_offset": "0x214",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"UNDERSIZE_FRAMES_COUNTER_WORD_1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Undersize Frames Counter Word 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952790548,
},
"FRAGMENT_FRAMES_COUNTER_WORD_0_REG": {"description": "Fragment Frames Counter Word 0",
"address_offset": "0x218",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"FRAGMENT_FRAMES_COUNTER_WORD_0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Fragment Frames Counter Word 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952790552,
},
"FRAGMENT_FRAMES_COUNTER_WORD_1_REG": {"description": "Fragment Frames Counter Word 1",
"address_offset": "0x21C",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"FRAGMENT_FRAMES_COUNTER_WORD_1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Fragment Frames Counter Word 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952790556,
},
"RX_64BYTE_FRAMES_COUNTER_WORD_0_REG": {"description": "RX 64-Byte Frames Counter Word 0",
"address_offset": "0x220",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"RX_64BYTE_FRAMES_COUNTER_WORD_0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "RX 64-Byte Frames Counter Word 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952790560,
},
"RX_64BYTE_FRAMES_COUNTER_WORD_1_REG": {"description": "RX 64-Byte Frames Counter Word 1",
"address_offset": "0x224",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"RX_64BYTE_FRAMES_COUNTER_WORD_1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "RX 64-Byte Frames Counter Word 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952790564,
},
"RX_65_127_BYTE_FRAMES_COUNTER_WORD_0_REG": {"description": "RX 65-127-Byte Frames Counter Word 0",
"address_offset": "0x228",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"RX_65_127_BYTE_FRAMES_COUNTER_WORD_0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "RX 65-127-Byte Frames Counter Word 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952790568,
},
"RX_65_127_BYTE_FRAMES_COUNTER_WORD_1_REG": {"description": "RX 65-127-Byte Frames Counter Word 1",
"address_offset": "0x22C",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"RX_65_127_BYTE_FRAMES_COUNTER_WORD_1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "RX 65-127-Byte Frames Counter Word 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952790572,
},
"RX_128_255_BYTE_FRAMES_COUNTER_WORD_0_REG": {"description": "RX 128-255-Byte Frames Counter Word 0",
"address_offset": "0x230",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"RX_128_255_BYTE_FRAMES_COUNTER_WORD_0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "RX 128-255-Byte Frames Counter Word 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952790576,
},
"RX_128_255_BYTE_FRAMES_COUNTER_WORD_1_REG": {"description": "RX 128-255-Byte Frames Counter Word 1",
"address_offset": "0x234",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"RX_128_255_BYTE_FRAMES_COUNTER_WORD_1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "RX 128-255-Byte Frames Counter Word 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952790580,
},
"RX_256_511_BYTE_FRAMES_COUNTER_WORD_0_REG": {"description": "RX 256-511-Byte Frames Counter Word 0",
"address_offset": "0x238",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"RX_256_511_BYTE_FRAMES_COUNTER_WORD_0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "RX 256-511-Byte Frames Counter Word 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952790584,
},
"RX_256_511_BYTE_FRAMES_COUNTER_WORD_1_REG": {"description": "RX 256-511-Byte Frames Counter Word 1",
"address_offset": "0x23C",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"RX_256_511_BYTE_FRAMES_COUNTER_WORD_1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "RX 256-511-Byte Frames Counter Word 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952790588,
},
"RX_512_1023_BYTE_FRAMES_COUNTER_WORD_0_REG": {"description": "RX 512-1023-Byte Frames Counter Word 0",
"address_offset": "0x240",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"RX_512_1023_BYTE_FRAMES_COUNTER_WORD_0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "RX 512-1023-Byte Frames Counter Word 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952790592,
},
"RX_512_1023_BYTE_FRAMES_COUNTER_WORD_1_REG": {"description": "RX 512-1023-Byte Frames Counter Word 1",
"address_offset": "0x244",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"RX_512_1023_BYTE_FRAMES_COUNTER_WORD_1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "RX 512-1023-Byte Frames Counter Word 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952790596,
},
"RX_1024_MAX_BYTE_FRAMES_COUNTER_WORD_0_REG": {"description": "RX 1024-Max Frames Size Byte Frames Counter Word 0",
"address_offset": "0x248",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"RX_1024_MAX_BYTE_FRAMES_COUNTER_WORD_0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "RX 1024-Max Frames Size Byte Frames Counter Word 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952790600,
},
"RX_1024_MAX_BYTE_FRAMES_COUNTER_WORD_1_REG": {"description": "RX 1024-Max Frames Size Byte Frames Counter Word 1",
"address_offset": "0x24C",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"RX_1024_MAX_BYTE_FRAMES_COUNTER_WORD_1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "RX 1024-Max Frames Size Byte Frames Counter Word 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952790604,
},
"RX_OVERSIZE_FRAMES_COUNTER_WORD_0_REG": {"description": "RX Oversize Frames Counter Word 0",
"address_offset": "0x250",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"RX_OVERSIZE_FRAMES_COUNTER_WORD_0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "RX Oversize Frames Counter Word 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952790608,
},
"RX_OVERSIZE_FRAMES_COUNTER_WORD_1_REG": {"description": "RX Oversize Frames Counter Word 1",
"address_offset": "0x254",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"RX_OVERSIZE_FRAMES_COUNTER_WORD_1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "RX Oversize Frames Counter Word 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952790612,
},
"TX_64BYTE_FRAMES_COUNTER_WORD_0_REG": {"description": "TX 64-Byte Frames Counter Word 0",
"address_offset": "0x258",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"TX_64BYTE_FRAMES_COUNTER_WORD_0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "TX 64-Byte Frames Counter Word 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952790616,
},
"TX_64BYTE_FRAMES_COUNTER_WORD_1_REG": {"description": "TX 64-Byte Frames Counter Word 1",
"address_offset": "0x25C",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"TX_64BYTE_FRAMES_COUNTER_WORD_1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "TX 64-Byte Frames Counter Word 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952790620,
},
"TX_65_127_BYTE_FRAMES_COUNTER_WORD_0_REG": {"description": "TX 65-127-Byte Frames Counter Word 0",
"address_offset": "0x260",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"TX_65_127_BYTE_FRAMES_COUNTER_WORD_0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "TX 65-127-Byte Frames Counter Word 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952790624,
},
"TX_65_127_BYTE_FRAMES_COUNTER_WORD_1_REG": {"description": "TX 65-127-Byte Frames Counter Word 1",
"address_offset": "0x264",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"TX_65_127_BYTE_FRAMES_COUNTER_WORD_1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "TX 65-127-Byte Frames Counter Word 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952790628,
},
"TX_128_255_BYTE_FRAMES_COUNTER_WORD_0_REG": {"description": "TX 128-255-Byte Frames Counter Word 0",
"address_offset": "0x268",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"TX_128_255_BYTE_FRAMES_COUNTER_WORD_0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "TX 128-255-Byte Frames Counter Word 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952790632,
},
"TX_128_255_BYTE_FRAMES_COUNTER_WORD_1_REG": {"description": "TX 128-255-Byte Frames Counter Word 1",
"address_offset": "0x26C",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"TX_128_255_BYTE_FRAMES_COUNTER_WORD_1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "TX 128-255-Byte Frames Counter Word 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952790636,
},
"TX_256_511_BYTE_FRAMES_COUNTER_WORD_0_REG": {"description": "TX 256-511-Byte Frames Counter Word 0",
"address_offset": "0x270",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"TX_256_511_BYTE_FRAMES_COUNTER_WORD_0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "TX 256-511-Byte Frames Counter Word 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952790640,
},
"TX_256_511_BYTE_FRAMES_COUNTER_WORD_1_REG": {"description": "TX 256-511-Byte Frames Counter Word 1",
"address_offset": "0x274",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"TX_256_511_BYTE_FRAMES_COUNTER_WORD_1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "TX 256-511-Byte Frames Counter Word 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952790644,
},
"TX_512_1023_BYTE_FRAMES_COUNTER_WORD_0_REG": {"description": "TX 512-1023-Byte Frames Counter Word 0",
"address_offset": "0x278",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"TX_512_1023_BYTE_FRAMES_COUNTER_WORD_0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "TX 512-1023-Byte Frames Counter Word 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952790648,
},
"TX_512_1023_BYTE_FRAMES_COUNTER_WORD_1_REG": {"description": "TX 512-1023-Byte Frames Counter Word 1",
"address_offset": "0x27C",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"TX_512_1023_BYTE_FRAMES_COUNTER_WORD_1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "TX 512-1023-Byte Frames Counter Word 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952790652,
},
"TX_1024_MAX_BYTE_FRAMES_COUNTER_WORD_0_REG": {"description": "TX 1024-Max Frames Size Byte Frames Counter Word 0",
"address_offset": "0x280",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"TX_1024_MAX_BYTE_FRAMES_COUNTER_WORD_0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "TX 1024-Max Frames Size Byte Frames Counter Word 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952790656,
},
"TX_1024_MAX_BYTE_FRAMES_COUNTER_WORD_1_REG": {"description": "TX 1024-Max Frames Size Byte Frames Counter Word 1",
"address_offset": "0x284",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"TX_1024_MAX_BYTE_FRAMES_COUNTER_WORD_1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "TX 1024-Max Frames Size Byte Frames Counter Word 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952790660,
},
"TX_OVERSIZE_FRAMES_COUNTER_WORD_0_REG": {"description": "TX Oversize Frames Counter Word 0",
"address_offset": "0x288",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"TX_OVERSIZE_FRAMES_COUNTER_WORD_0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "TX Oversize Frames Counter Word 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952790664,
},
"TX_OVERSIZE_FRAMES_COUNTER_WORD_1_REG": {"description": "TX Oversize Frames Counter Word 1",
"address_offset": "0x28C",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"TX_OVERSIZE_FRAMES_COUNTER_WORD_1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "TX Oversize Frames Counter Word 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952790668,
},
"RX_GOOD_FRAMES_COUNTER_WORD_0_REG": {"description": "RX Good Frames Counter Word 0",
"address_offset": "0x290",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"RX_GOOD_FRAMES_COUNTER_WORD_0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "RX Good Frames Counter Word 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952790672,
},
"RX_GOOD_FRAMES_COUNTER_WORD_1_REG": {"description": "RX Good Frames Counter Word 1",
"address_offset": "0x294",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"RX_GOOD_FRAMES_COUNTER_WORD_1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "RX Good Frames Counter Word 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952790676,
},
"RX_FRAME_CHECK_SEQUENCE_ERROR_COUNTER_WORD_0_REG": {"description": "RX Frame Check Sequence Errors Counter Word 0",
"address_offset": "0x298",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"RX_FRAME_CHECK_SEQUENCE_ERROR_COUNTER_WORD_0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "RX Frame Check Sequence Errors Counter Word 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952790680,
},
"RX_FRAME_CHECK_SEQUENCE_ERROR_COUNTER_WORD_1_REG": {"description": "RX Frame Check Sequence Errors Counter Word 1",
"address_offset": "0x29C",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"RX_FRAME_CHECK_SEQUENCE_ERROR_COUNTER_WORD_1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "RX Frame Check Sequence Errors Counter Word 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952790684,
},
"RX_GOOD_BROADCAST_FRAMES_COUNTER_WORD_0_REG": {"description": "RX Good Broadcast Frames Counter Word 0",
"address_offset": "0x2A0",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"RX_GOOD_BROADCAST_FRAMES_COUNTER_WORD_0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "RX Good Broadcast Frames Counter Word 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952790688,
},
"RX_GOOD_BROADCAST_FRAMES_COUNTER_WORD_1_REG": {"description": "RX Good Broadcast Frames Counter Word 1",
"address_offset": "0x2A4",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"RX_GOOD_BROADCAST_FRAMES_COUNTER_WORD_1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "RX Good Broadcast Frames Counter Word 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952790692,
},
"RX_GOOD_MULTICAST_FRAMES_COUNTER_WORD_0_REG": {"description": "RX Good Multicast Frames Counter Word 0",
"address_offset": "0x2A8",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"RX_GOOD_MULTICAST_FRAMES_COUNTER_WORD_0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "RX Good Multicast Frames Counter Word 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952790696,
},
"RX_GOOD_MULTICAST_FRAMES_COUNTER_WORD_1_REG": {"description": "RX Good Multicast Frames Counter Word 1",
"address_offset": "0x2AC",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"RX_GOOD_MULTICAST_FRAMES_COUNTER_WORD_1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "RX Good Multicast Frames Counter Word 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952790700,
},
"RX_GOOD_CONTROL_FRAMES_COUNTER_WORD_0_REG": {"description": "RX Good Control Frames Counter Word 0",
"address_offset": "0x2B0",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"RX_GOOD_CONTROL_FRAMES_COUNTER_WORD_0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "RX Good Control Frames Counter Word 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952790704,
},
"RX_GOOD_CONTROL_FRAMES_COUNTER_WORD_1_REG": {"description": "RX Good Control Frames Counter Word 1",
"address_offset": "0x2B4",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"RX_GOOD_CONTROL_FRAMES_COUNTER_WORD_1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "RX Good Control Frames Counter Word 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952790708,
},
"RX_LT_OUT_OF_RANGE_ERRORS_COUNTER_WORD_0_REG": {"description": "RX Length/Type Out of Range Errors Counter Word 0",
"address_offset": "0x2B8",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"RX_LT_OUT_OF_RANGE_ERRORS_COUNTER_WORD_0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "RX Length/Type Out of Range Errors Counter Word 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952790712,
},
"RX_LT_OUT_OF_RANGE_ERRORS_COUNTER_WORD_1_REG": {"description": "RX Length/Type Out of Range Errors Counter Word 1",
"address_offset": "0x2BC",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"RX_LT_OUT_OF_RANGE_ERRORS_COUNTER_WORD_1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "RX Length/Type Out of Range Errors Counter Word 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952790716,
},
"RX_GOOD_VLAN_FRAMES_COUNTER_WORD_0_REG": {"description": "RX Good VLAN Tagged Frames Counter Word 0",
"address_offset": "0x2C0",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"RX_GOOD_VLAN_FRAMES_COUNTER_WORD_0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "RX Good VLAN Tagged Frames Counter Word 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952790720,
},
"RX_GOOD_VLAN_FRAMES_COUNTER_WORD_1_REG": {"description": "RX Good VLAN Tagged Frames Counter Word 1",
"address_offset": "0x2C4",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"RX_GOOD_VLAN_FRAMES_COUNTER_WORD_1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "RX Good VLAN Tagged Frames Counter Word 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952790724,
},
"RX_GOOD_PAUSE_FRAMES_COUNTER_WORD_0_REG": {"description": "RX Good Pause Frames Counter Word 0",
"address_offset": "0x2C8",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"RX_GOOD_PAUSE_FRAMES_COUNTER_WORD_0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "RX Good Pause Frames Counter Word 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952790728,
},
"RX_GOOD_PAUSE_FRAMES_COUNTER_WORD_1_REG": {"description": "RX Good Pause Frames Counter Word 1",
"address_offset": "0x2CC",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"RX_GOOD_PAUSE_FRAMES_COUNTER_WORD_1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "RX Good Pause Frames Counter Word 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952790732,
},
"RX_BAD_OPCODE_FRAMES_COUNTER_WORD_0_REG": {"description": "RX Bad Opcode Frames Counter Word 0",
"address_offset": "0x2D0",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"RX_BAD_OPCODE_FRAMES_COUNTER_WORD_0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "RX Bad Opcode Frames Counter Word 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952790736,
},
"RX_BAD_OPCODE_FRAMES_COUNTER_WORD_1_REG": {"description": "RX Bad Opcode Frames Counter Word 1",
"address_offset": "0x2D4",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"RX_BAD_OPCODE_FRAMES_COUNTER_WORD_1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "RX Bad Opcode Frames Counter Word 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952790740,
},
"TX_GOOD_FRAMES_COUNTER_WORD_0_REG": {"description": "TX Good Frames Counter Word 0",
"address_offset": "0x2D8",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"TX_GOOD_FRAMES_COUNTER_WORD_0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "TX Good Frames Counter Word 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952790744,
},
"TX_GOOD_FRAMES_COUNTER_WORD_1_REG": {"description": "TX Good Frames Counter Word 1",
"address_offset": "0x2DC",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"TX_GOOD_FRAMES_COUNTER_WORD_1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "TX Good Frames Counter Word 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952790748,
},
"TX_GOOD_BROADCAST_FRAMES_COUNTER_WORD_0_REG": {"description": "TX Good Broadcast Frames Counter Word 0",
"address_offset": "0x2E0",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"TX_GOOD_BROADCAST_FRAMES_COUNTER_WORD_0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "TX Good Broadcast Frames Counter Word 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952790752,
},
"TX_GOOD_BROADCAST_FRAMES_COUNTER_WORD_1_REG": {"description": "TX Good Broadcast Frames Counter Word 1",
"address_offset": "0x2E4",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"TX_GOOD_BROADCAST_FRAMES_COUNTER_WORD_1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "TX Good Broadcast Frames Counter Word 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952790756,
},
"TX_GOOD_MULTICAST_FRAMES_COUNTER_WORD_0_REG": {"description": "TX Good Multicast Frames Counter Word 0",
"address_offset": "0x2E8",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"TX_GOOD_MULTICAST_FRAMES_COUNTER_WORD_0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "TX Good Multicast Frames Counter Word 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952790760,
},
"TX_GOOD_MULTICAST_FRAMES_COUNTER_WORD_1_REG": {"description": "TX Good Multicast Frames Counter Word 1",
"address_offset": "0x2EC",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"TX_GOOD_MULTICAST_FRAMES_COUNTER_WORD_1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "TX Good Multicast Frames Counter Word 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952790764,
},
"TX_UNDERRUN_ERRORS_COUNTER_WORD_0_REG": {"description": "TX Underrun Errors Counter Word 0",
"address_offset": "0x2F0",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"TX_UNDERRUN_ERRORS_COUNTER_WORD_0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "TX Underrun Errors Counter Word 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952790768,
},
"TX_UNDERRUN_ERRORS_COUNTER_WORD_1_REG": {"description": "TX Underrun Errors Counter Word 1",
"address_offset": "0x2F4",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"TX_UNDERRUN_ERRORS_COUNTER_WORD_1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "TX Underrun Errors Counter Word 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952790772,
},
"TX_GOOD_CONTROL_FRAMES_COUNTER_WORD_0_REG": {"description": "TX Good Control Frames Counter Word 0",
"address_offset": "0x2F8",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"TX_GOOD_CONTROL_FRAMES_COUNTER_WORD_0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "TX Good Control Frames Counter Word 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952790776,
},
"TX_GOOD_CONTROL_FRAMES_COUNTER_WORD_1_REG": {"description": "TX Good Control Frames Counter Word 1",
"address_offset": "0x2FC",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"TX_GOOD_CONTROL_FRAMES_COUNTER_WORD_1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "TX Good Control Frames Counter Word 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952790780,
},
"TX_GOOD_VLAN_FRAMES_COUNTER_WORD_0_REG": {"description": "TX Good VLAN Frames Counter Word 0",
"address_offset": "0x300",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"TX_GOOD_VLAN_FRAMES_COUNTER_WORD_0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "TX Good VLAN Frames Counter Word 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952790784,
},
"TX_GOOD_VLAN_FRAMES_COUNTER_WORD_1_REG": {"description": "TX Good VLAN Frames Counter Word 1",
"address_offset": "0x304",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"TX_GOOD_VLAN_FRAMES_COUNTER_WORD_1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "TX Good VLAN Frames Counter Word 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952790788,
},
"TX_GOOD_PAUSE_FRAMES_COUNTER_WORD_0_REG": {"description": "TX Good Pause Frames Counter Word 0",
"address_offset": "0x308",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"TX_GOOD_PAUSE_FRAMES_COUNTER_WORD_0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "TX Good Pause Frames Counter Word 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952790792,
},
"TX_GOOD_PAUSE_FRAMES_COUNTER_WORD_1_REG": {"description": "TX Good Pause Frames Counter Word 1",
"address_offset": "0x30C",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"TX_GOOD_PAUSE_FRAMES_COUNTER_WORD_1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "TX Good Pause Frames Counter Word 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952790796,
},
"TX_SINGLE_COLL_FRAMES_COUNTER_WORD_0_REG": {"description": "TX Single Collision Frames Counter Word 0",
"address_offset": "0x310",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"TX_SINGLE_COLL_FRAMES_COUNTER_WORD_0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "TX Single Collision Frames Counter Word 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952790800,
},
"TX_SINGLE_COLL_FRAMES_COUNTER_WORD_1_REG": {"description": "TX Single Collision Frames Counter Word 1",
"address_offset": "0x314",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"TX_SINGLE_COLL_FRAMES_COUNTER_WORD_1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "TX Single Collision Frames Counter Word 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952790804,
},
"TX_MULTIPLE_COLL_FRAMES_COUNTER_WORD_0_REG": {"description": "TX Multiple Collision Frames Counter Word 0",
"address_offset": "0x318",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"TX_MULTIPLE_COLL_FRAMES_COUNTER_WORD_0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "TX Multiple Collision Frames Counter Word 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952790808,
},
"TX_MULTIPLE_COLL_FRAMES_COUNTER_WORD_1_REG": {"description": "TX Multiple Collision Frames Counter Word 1",
"address_offset": "0x31C",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"TX_MULTIPLE_COLL_FRAMES_COUNTER_WORD_1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "TX Multiple Collision Frames Counter Word 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952790812,
},
"TX_DEFERRED_FRAMES_COUNTER_WORD_0_REG": {"description": "TX Deferred Frames Counter Word 0",
"address_offset": "0x320",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"TX_DEFERRED_FRAMES_COUNTER_WORD_0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "TX Deferred Frames Counter Word 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952790816,
},
"TX_DEFERRED_FRAMES_COUNTER_WORD_1_REG": {"description": "TX Deferred Frames Counter Word 1",
"address_offset": "0x324",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"TX_DEFERRED_FRAMES_COUNTER_WORD_1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "TX Deferred Frames Counter Word 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952790820,
},
"TX_LATE_COLL_COUNTER_WORD_0_REG": {"description": "TX Late Collision Counter Word 0",
"address_offset": "0x328",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"TX_LATE_COLL_COUNTER_WORD_0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "TX Late Collision Counter Word 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952790824,
},
"TX_LATE_COLL_COUNTER_WORD_1_REG": {"description": "TX Late Collision Counter Word 1",
"address_offset": "0x32C",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"TX_LATE_COLL_COUNTER_WORD_1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "TX Late Collision Counter Word 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952790828,
},
"TX_EXCESS_COLL_COUNTER_WORD_0_REG": {"description": "TX Excess Collision Counter Word 0",
"address_offset": "0x330",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"TX_EXCESS_COLL_COUNTER_WORD_0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "TX Excess Collision Counter Word 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952790832,
},
"TX_EXCESS_COLL_COUNTER_WORD_1_REG": {"description": "TX Excess Collision Counter Word 1",
"address_offset": "0x334",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"TX_EXCESS_COLL_COUNTER_WORD_1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "TX Excess Collision Counter Word 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952790836,
},
"TX_EXCESS_DEF_COUNTER_WORD_0_REG": {"description": "TX Excess Deferral Counter Word 0",
"address_offset": "0x338",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"TX_EXCESS_DEF_COUNTER_WORD_0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "TX Excess Deferral Counter Word 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952790840,
},
"TX_EXCESS_DEF_COUNTER_WORD_1_REG": {"description": "TX Excess Deferral Counter Word 1",
"address_offset": "0x33C",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"TX_EXCESS_DEF_COUNTER_WORD_1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "TX Excess Deferral Counter Word 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952790844,
},
"RX_ALIGNMENT_ERR_COUNTER_WORD_0_REG": {"description": "RX Alignment Errors Counter Word 0",
"address_offset": "0x340",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"RX_ALIGNMENT_ERR_COUNTER_WORD_0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "RX Alignment Errors Counter Word 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952790848,
},
"RX_ALIGNMENT_ERR_COUNTER_WORD_1_REG": {"description": "RX Alignment Errors Counter Word 1",
"address_offset": "0x344",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"RX_ALIGNMENT_ERR_COUNTER_WORD_1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "RX Alignment Errors Counter Word 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952790852,
},
"TX_PFC_FRAMES_COUNTER_WORD_0_REG": {"description": "TX PFC Frames Counter Word 0",
"address_offset": "0x348",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"TX_PFC_FRAMES_COUNTER_WORD_0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "TX PFC Frames Counter Word 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952790856,
},
"TX_PFC_FRAMES_COUNTER_WORD_1_REG": {"description": "TX PFC Frames Counter Word 1",
"address_offset": "0x34C",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"TX_PFC_FRAMES_COUNTER_WORD_1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "TX PFC Frames Counter Word 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952790860,
},
"RX_PFC_FRAMES_COUNTER_WORD_0_REG": {"description": "RX PFC Frames Counter Word 0",
"address_offset": "0x350",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"RX_PFC_FRAMES_COUNTER_WORD_0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "RX PFC Frames Counter Word 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952790864,
},
"RX_PFC_FRAMES_COUNTER_WORD_1_REG": {"description": "RX PFC Frames Counter Word 1",
"address_offset": "0x354",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"RX_PFC_FRAMES_COUNTER_WORD_1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "RX PFC Frames Counter Word 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952790868,
},
"RX_CONF_WORD_0_REG": {"description": "Pause frame MAC Source Address[31:0]",
"address_offset": "0x400",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"RX_CONF_WORD_0": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Pause frame MAC Source Address[31:0].
  The address is ordered so the first byte transmitted/received is the lowest positioned byte in the register; for example, a MAC address of AA-BB-CC-DD-EE-FF would be stored in Address[47:0] as 0xFFEEDDCCBBAA.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952791040,
},
"RX_CONF_WORD_1_REG": {"description": "Receiver Configuration Word 1",
"address_offset": "0x404",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"PAUSE_FRM_MAC_SA": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "Pause frame MAC Source Address[47:32].
  Refer the RX_CONF_WORD_0 register description.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_FRM_LEN_CHK_DISABLE": {"access": "read-write",
"bit_offset": "24",
"bit_range": "",
"bit_width": "1",
"desc": "Control Frame Length Check Disable.
  When this bit is set to 1, the core does not mark control frames as bad if they are greater than the minimum frame length.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"LT_ERR_CHK_DISABLE": {"access": "read-write",
"bit_offset": "25",
"bit_range": "",
"bit_width": "1",
"desc": "Length/Type Error Check Disable.
  1 - Core does not perform the length/type field error checks.
  0 - Core performs the length/type field error checks. Normal operation.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"HALF_DUPLEX": {"access": "read-write",
"bit_offset": "26",
"bit_range": "",
"bit_width": "1",
"desc": "Half Duplex.
  1 - Half Duplex.
  0 - Full Duplex.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"VLAN_ENABLE": {"access": "read-write",
"bit_offset": "27",
"bit_range": "",
"bit_width": "1",
"desc": "VLAN Enable.
  When this bit is set to 1, VLAN tagged frames are accepted by the receiver.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RX_ENABLE": {"access": "read-write",
"bit_offset": "28",
"bit_range": "",
"bit_width": "1",
"desc": "Receiver Enable.
  If set to 1, the receiver block is operational. If set to 0, the block ignores activity on the physical interface RX port.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"INBAND_FCS_ENBALE": {"access": "read-write",
"bit_offset": "29",
"bit_range": "",
"bit_width": "1",
"desc": "In-band FCS Enable.
  1 - MAC receiver passes the FCS field up to the client.
  0 - Client is not passed to the FCS.
In both cases, the FCS is verified on the frame.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"JUMBO_FRAME_ENBALE": {"access": "read-write",
"bit_offset": "30",
"bit_range": "",
"bit_width": "1",
"desc": "Jumbo Frame Enable.
  1 - MAC receiver accepts frames over the specified IEEE 802.3-2008 maximum legal length.
  0 - MAC only accepts frames up to the specified maximum.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RESET": {"access": "read-write",
"bit_offset": "31",
"bit_range": "",
"bit_width": "1",
"desc": "Reset.
  When this bit is set to 1, the receiver is reset. The bit then automatically reverts to 0. This reset also sets all of the receiver configuration registers to their default values.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952791044,
},
"TX_CONF_WORD_0_REG": {"description": "Transmitter Configuration Word",
"address_offset": "0x408",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"IFG_ADJUST_ENABLE": {"access": "read-write",
"bit_offset": "25",
"bit_range": "",
"bit_width": "1",
"desc": "Interframe Gap Adjust Enable.
  If 1, the transmitter reads the value on the port tx_ifg_delay at the start of frame transmission and adjusts the interframe gap following the frame accordingly. If 0, the transmitter outputs a minimum interframe gap of at least twelve clock cycles, as specified in IEEE 802.3-2008.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"HALF_DUPLEX": {"access": "read-write",
"bit_offset": "26",
"bit_range": "",
"bit_width": "1",
"desc": "Half Duplex.
  1 - Half Duplex.
  0 - Full Duplex.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"VLAN_ENABLE": {"access": "read-write",
"bit_offset": "27",
"bit_range": "",
"bit_width": "1",
"desc": "VLAN Enable.
  When this bit is set to 1, the transmitter recognizes the transmission of VLAN tagged frames.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TX_ENABLE": {"access": "read-write",
"bit_offset": "28",
"bit_range": "",
"bit_width": "1",
"desc": "Transmit Enable.
  1 - Transmitter is operational.
  0 - Transmitter is disabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"INBAND_FCS_ENBALE": {"access": "read-write",
"bit_offset": "29",
"bit_range": "",
"bit_width": "1",
"desc": "In-band FCS Enable.
  1 - MAC transmitter expects the FCS field to be passed in by the client.
  0 - MAC transmitter appends padding as required, computes the FCS and appends it to the frame.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"JUMBO_FRAME_ENBALE": {"access": "read-write",
"bit_offset": "30",
"bit_range": "",
"bit_width": "1",
"desc": "Jumbo Frame Enable.
  1 - MAC transmitter sends frames that are greater than the specified IEEE 802.3-2008 maximum legal length.
  0 - MAC only sends frames up to the specified maximum.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RESET": {"access": "read-write",
"bit_offset": "31",
"bit_range": "",
"bit_width": "1",
"desc": "Reset.
  When this bit is set to 1, the transmitter is reset. The bit then automatically reverts to 0. This reset also sets all of the transmitter configuration registers to their default values.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952791048,
},
"FLOW_CONTROL_CONF_WORD_REG": {"description": "Flow Control Configuration Word",
"address_offset": "0x40C",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"RX_P0_PAUSE_ENABLE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "RX Priority 0 pause enable.
  When this bit is 1, and RX PFC is enabled, reception of a PFC frame with a valid quanta for priority 0 is processed as described in Receiving a PFC Frame When this bit is 0, the rx_pfc_p0_tvalid remains at 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RX_P1_PAUSE_ENABLE": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "RX Priority 1 pause enable.
  When this bit is 1, and RX PFC is enabled, reception of a PFC frame with a valid quanta for priority 1 is processed as described in Receiving a PFC Frame When this bit is 0, the rx_pfc_p1_tvalid remains at 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RX_P2_PAUSE_ENABLE": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "RX Priority 2 pause enable.
  When this bit is 1, and RX PFC is enabled, reception of a PFC frame with a valid quanta for priority 2 is processed as described in Receiving a PFC Frame When this bit is 0, the rx_pfc_p2_tvalid remains at 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RX_P3_PAUSE_ENABLE": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "RX Priority 3 pause enable.
  When this bit is 1, and RX PFC is enabled, reception of a PFC frame with a valid quanta for priority 3 is processed as described in Receiving a PFC Frame When this bit is 0, the rx_pfc_p3_tvalid remains at 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RX_P4_PAUSE_ENABLE": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "RX Priority 4 pause enable.
  When this bit is 1, and RX PFC is enabled, reception of a PFC frame with a valid quanta for priority 4 is processed as described in Receiving a PFC Frame When this bit is 0, the rx_pfc_p4_tvalid remains at 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RX_P5_PAUSE_ENABLE": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "RX Priority 5 pause enable.
  When this bit is 1, and RX PFC is enabled, reception of a PFC frame with a valid quanta for priority 5 is processed as described in Receiving a PFC Frame When this bit is 0, the rx_pfc_p5_tvalid remains at 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RX_P6_PAUSE_ENABLE": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "RX Priority 6 pause enable.
  When this bit is 1, and RX PFC is enabled, reception of a PFC frame with a valid quanta for priority 6 is processed as described in Receiving a PFC Frame When this bit is 0, the rx_pfc_p6_tvalid remains at 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RX_P7_PAUSE_ENABLE": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "RX Priority 7 pause enable.
  When this bit is 1, and RX PFC is enabled, reception of a PFC frame with a valid quanta for priority 7 is processed as described in Receiving a PFC Frame When this bit is 0, the rx_pfc_p7_tvalid remains at 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TX_P0_PAUSE_ENABLE": {"access": "read-write",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "TX Priority 0 pause enable.
  When this bit is 1, and TX PFC is enabled, assertion or deassertion of the TX PFC tvalid signal results in a PFC frame being transmitted. When this bit is 0 tx_pfc_p0_tvalid is ignored.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TX_P1_PAUSE_ENABLE": {"access": "read-write",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "TX Priority 1 pause enable.
  When this bit is 1, and TX PFC is enabled, assertion or deassertion of the TX PFC tvalid signal results in a PFC frame being transmitted. When this bit is 0 tx_pfc_p1_tvalid is ignored.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TX_P2_PAUSE_ENABLE": {"access": "read-write",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "TX Priority 2 pause enable.
  When this bit is 1, and TX PFC is enabled, assertion or deassertion of the TX PFC tvalid signal results in a PFC frame being transmitted. When this bit is 0 tx_pfc_p2_tvalid is ignored.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TX_P3_PAUSE_ENABLE": {"access": "read-write",
"bit_offset": "11",
"bit_range": "",
"bit_width": "1",
"desc": "TX Priority 3 pause enable.
  When this bit is 1, and TX PFC is enabled, assertion or deassertion of the TX PFC tvalid signal results in a PFC frame being transmitted. When this bit is 0 tx_pfc_p3_tvalid is ignored.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TX_P4_PAUSE_ENABLE": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "TX Priority 4 pause enable.
  When this bit is 1, and TX PFC is enabled, assertion or deassertion of the TX PFC tvalid signal results in a PFC frame being transmitted. When this bit is 0 tx_pfc_p4_tvalid is ignored.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TX_P5_PAUSE_ENABLE": {"access": "read-write",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "TX Priority 5 pause enable.
  When this bit is 1, and TX PFC is enabled, assertion or deassertion of the TX PFC tvalid signal results in a PFC frame being transmitted. When this bit is 0 tx_pfc_p5_tvalid is ignored.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TX_P6_PAUSE_ENABLE": {"access": "read-write",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "TX Priority 6 pause enable.
  When this bit is 1, and TX PFC is enabled, assertion or deassertion of the TX PFC tvalid signal results in a PFC frame being transmitted. When this bit is 0 tx_pfc_p6_tvalid is ignored.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TX_P7_PAUSE_ENABLE": {"access": "read-write",
"bit_offset": "15",
"bit_range": "",
"bit_width": "1",
"desc": "TX Priority 7 pause enable.
  When this bit is 1, and TX PFC is enabled, assertion or deassertion of the TX PFC tvalid signal results in a PFC frame being transmitted. When this bit is 0 tx_pfc_p7_tvalid is ignored.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TX_AUTO_XON": {"access": "read-write",
"bit_offset": "20",
"bit_range": "",
"bit_width": "1",
"desc": "TX Auto XON.
  Only present when the core has been generated with PFC support  this bit defaults to 0 if PFC is not supported. Send a flow control or PFC frame with the relevant quanta set to zero (XON frame) when the relevant, enabled pause request is dropped.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PFC_ENABLE_RX": {"access": "read-write",
"bit_offset": "25",
"bit_range": "",
"bit_width": "1",
"desc": "Priority pause flow control enable (RX).
  Only present when the core has been generated with PFC support. When this bit is 1, received PFC frames assert the relevant, enabled RX PFC tvalid outputs as described in Receiving a PFC Frame. When this bit is 0, received PFC frames are ignored and passed to the client. This mode should not be enabled at the same time as Flow Control (RX) (Bit[29]).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PFC_ENABLE_TX": {"access": "read-write",
"bit_offset": "26",
"bit_range": "",
"bit_width": "1",
"desc": "Priority pause flow control enable (TX).
  Only present when the core has been generated with PFC support. When this bit is 1, asserting an enabled TX PFC tvalid signal results in a PFC frame being sent from the transmitter. When this bit is 0,the TX PFC tvalid inputs are ignored. This mode should not be enabled at the same time as Flow Control (TX) (Bit[30]).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FLOW_CONTROL_ENABLE_RX": {"access": "read-write",
"bit_offset": "29",
"bit_range": "",
"bit_width": "1",
"desc": "Flow Control Enable (RX).
  When this bit is 1, received flow control frames inhibit the transmitter operation as described in Receiving a Pause Frame. When this bit is 0, received flow control frames are always passed up to the client. This mode should not be enabled at the same time as PFC (Bit[25]).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FLOW_CONTROL_ENABLE_TX": {"access": "read-write",
"bit_offset": "30",
"bit_range": "",
"bit_width": "1",
"desc": "Flow Control Enable (TX).
  When this bit is 1, asserting the pause_req signal sends a flow control frame out from the transmitter as described in Transmitting a Pause Control Frame. When this bit is 0, asserting the pause_req signal has no effect. This mode should not be enabled at the same time as PFC (Bit[26]).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952791052,
},
"MAC_SPEED_CONF_WORD_REG": {"description": "MAC Speed Configuration Word",
"address_offset": "0x410",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"MAC_SPEED_CONF": {"access": "read-write",
"bit_offset": "30",
"bit_range": "",
"bit_width": "2",
"desc": "MAC Speed Configuration.
  00 - 10 Mb/s
  01 - 100 Mb/s
  10 - 1 Gb/s
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952791056,
},
"RX_MAC_FRAME_CONF_WORD_REG": {"description": "RX Max Frame Configuration Word",
"address_offset": "0x414",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"RX_MAX_FRAME_LENGTH": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "15",
"desc": "RX Max Frame Length.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RX_MAX_FRAME_ENABLE": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "1",
"desc": "RX Max Frame Enable.
  When Low, the MAC assumes use of the standard 1518/1522 depending upon the setting of VLAN enable. When High, the MAC allows frames up to RX Max Frame Length irrespective of the value of VLAN enable. If Jumbo Enable is set then this register has no effect.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952791060,
},
"TX_MAC_FRAME_CONF_WORD_REG": {"description": "TX Max Frame Configuration Word",
"address_offset": "0x418",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"TX_MAX_FRAME_LENGTH": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "15",
"desc": "TX Max Frame Length.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TX_MAX_FRAME_ENABLE": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "1",
"desc": "TX Max Frame Enable.
  When Low the MAC assumes use of the standard 1518/1522 depending upon the setting of VLAN enable. When High the MAC allows frames up to TX Max Frame Length irrespective of the value of VLAN enable. If Jumbo Enable is set then this register has no effect.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952791064,
},
"TX_TIMESTAMP_ADJUST_CONTROL_REG": {"description": "Transmitter Timestamp Adjust Control Register",
"address_offset": "0x41C",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"TX_LATENCY_ADJUST": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "TX latency adjust value.
  In ToD mode: This value is in units of nanoseconds and is initialized to reflect the delay following the timestamping position through the MAC, 1000BASE-X FPGA logic, and GTX transceiver components.
  In Correction Field Format: The default value is 387ns decimal value.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TX_TS_CORRECTION_ENABLE": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "1",
"desc": "Transmitter Timestamp Correction Enable.
  0 - Transmitter timestamp is not adjusted.
  1 - Transmitter timestamp is adjusted by the TX latency adjust value.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952791068,
},
"PRIORITY_0_QUANTA_REFRESH_REG": {"description": "Priority 0 Quanta/Refresh Register",
"address_offset": "0x480",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"PER_QUANTA_VALUE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "Pause Quanta 0 value.
  This register is only present when PFC is enabled at core customization time. When enabled, this register sets the quanta value to be inserted in the PFC frame for this priority.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PER_QUANTA_REFRESH_VALUE": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "16",
"desc": "Pause Quanta 0 refresh value.
  This register is only present when PFC is enabled at the core customization time. When enabled, this register controls how frequently a PF quanta is refreshed by the transmission of a new PFC frame. When a refresh occurs, all currently active (TX PFC tvalid is High and enabled) priorities are refreshed.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952791168,
},
"PRIORITY_1_QUANTA_REFRESH_REG": {"description": "Priority 1 Quanta/Refresh Register",
"address_offset": "0x484",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"PER_QUANTA_VALUE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "Pause Quanta 1 value.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PER_QUANTA_REFRESH_VALUE": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "16",
"desc": "Pause Quanta 1 refresh value.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952791172,
},
"PRIORITY_2_QUANTA_REFRESH_REG": {"description": "Priority 2 Quanta/Refresh Register",
"address_offset": "0x488",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"PER_QUANTA_VALUE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "Pause Quanta 2 value.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PER_QUANTA_REFRESH_VALUE": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "16",
"desc": "Pause Quanta 2 refresh value.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952791176,
},
"PRIORITY_3_QUANTA_REFRESH_REG": {"description": "Priority 3 Quanta/Refresh Register",
"address_offset": "0x48C",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"PER_QUANTA_VALUE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "Pause Quanta 3 value.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PER_QUANTA_REFRESH_VALUE": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "16",
"desc": "Pause Quanta 3 refresh value.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952791180,
},
"PRIORITY_4_QUANTA_REFRESH_REG": {"description": "Priority 4 Quanta/Refresh Register",
"address_offset": "0x490",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"PER_QUANTA_VALUE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "Pause Quanta 4 value.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PER_QUANTA_REFRESH_VALUE": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "16",
"desc": "Pause Quanta 4 refresh value.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952791184,
},
"PRIORITY_5_QUANTA_REFRESH_REG": {"description": "Priority 5 Quanta/Refresh Register",
"address_offset": "0x494",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"PER_QUANTA_VALUE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "Pause Quanta 5 value.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PER_QUANTA_REFRESH_VALUE": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "16",
"desc": "Pause Quanta 5 refresh value.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952791188,
},
"PRIORITY_6_QUANTA_REFRESH_REG": {"description": "Priority 6 Quanta/Refresh Register",
"address_offset": "0x498",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"PER_QUANTA_VALUE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "Pause Quanta value 6.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PER_QUANTA_REFRESH_VALUE": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "16",
"desc": "Pause Quanta 6 refresh value.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952791192,
},
"PRIORITY_7_QUANTA_REFRESH_REG": {"description": "Priority 7 Quanta/Refresh Register",
"address_offset": "0x49C",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"PER_QUANTA_VALUE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "Pause Quanta 7 value.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PER_QUANTA_REFRESH_VALUE": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "16",
"desc": "Pause Quanta 7 refresh value.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952791196,
},
"LEGACY_PAUSE_REFRESH_REG": {"description": "Legacy Pause Refresh Register",
"address_offset": "0x4A0",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"PAUSE_QUANTA_REFRESH_VALUE": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "16",
"desc": "Pause Quanta refresh value.
  This register is only present when PFC is enabled at the core customization time. When PFC is supported, the 802.3 pause request can also support XON/XOFF Extended Functionality. This controls the frequency of the automatic pause refresh.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952791200,
},
"ID_REG": {"description": "ID Register",
"address_offset": "0x4F8",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"PATCH_LEVEL": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Patch Level.
  0 - No patch.
  1 - Rev1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"MINOR_REV": {"access": "read-only",
"bit_offset": "16",
"bit_range": "",
"bit_width": "8",
"desc": "Minor Rev.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"MAJOR_REV": {"access": "read-only",
"bit_offset": "24",
"bit_range": "",
"bit_width": "8",
"desc": "Minor Rev.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952791288,
},
"ABILITY_REG": {"description": "Ability Register",
"address_offset": "0x4FC",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"TEN_M_ABILITY": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "10M_Ability.
  If set, the core is 10M capable.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"HUNDRED_M_ABILITY": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "100M_Ability.
  If set, the core is 100M capable.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ONE_G_ABILITY": {"access": "read-only",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "1G_Ability.
  If set, the core is 1G capable.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TWO_P_FIVE_G_ABILITY": {"access": "read-only",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "2_5G_Ability.
  If set, the core is 2.5G capable.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STATISTICS_COUNTERS_AVAILABLE": {"access": "read-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "Statistics Counters available.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"HALF_DUPLEX_CAPABLE": {"access": "read-only",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "Half duplex capable.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FRAME_FILTER_AVAILABLE": {"access": "read-only",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "Frame filter available.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PFC_SUPPORT": {"access": "read-only",
"bit_offset": "16",
"bit_range": "",
"bit_width": "1",
"desc": "PFC Support.
  This bit indicates that the core has been generated with PFC support.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952791292,
},
"MDIO_SETUP_WORD_REG": {"description": "MDIO Setup Word",
"address_offset": "0x500",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"CLOCK_DIVIDE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "6",
"desc": "Clock Divide.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"MDIO_ENABLE": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "MDIO Enable.   1 - MDIO interface can be used to access attached PHY devices.    0 - MDIO interface is disabled and the MDIO signals remain inactive.  A write to this bit only takes effect if Clock Divide is set to a nonzero value.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952791296,
},
"MDIO_CONTROL_WORD_REG": {"description": "MDIO Control Word",
"address_offset": "0x504",
"access": "",
"size": "32",
"interface": "s_axi",
"fields": {"MDIO_READY": {"access": "read-only",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "MDIO ready.
  When set the MDIO is enabled and ready for a new transfer.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"INITIATE": {"access": "write-only",
"bit_offset": "11",
"bit_range": "",
"bit_width": "1",
"desc": "Initiate.
  Writing a 1 to this bit starts an MDIO transfer.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TX_OP": {"access": "read-write",
"bit_offset": "14",
"bit_range": "",
"bit_width": "2",
"desc": "TX_OP.
  01 - Write Access.
  10 - Read Access.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TX_REGAD": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "5",
"desc": "TX_REGAD.
  This controls the register address being accessed.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TX_PHYAD": {"access": "read-write",
"bit_offset": "24",
"bit_range": "",
"bit_width": "5",
"desc": "TX_PHYAD.
  This controls the PHY address being accessed.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952791300,
},
"MDIO_WRITE_DATA_REG": {"description": "MDIO Write Data",
"address_offset": "0x508",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"MDIO_WRITE_DATA": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "MDIO_Write_Data.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952791304,
},
"MDIO_READ_DATA_REG": {"description": "MDIO Read Data",
"address_offset": "0x50C",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"MDIO_READ_DATA": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "MDIO_Read_Data.
  Valid when MDIO ready is sampled High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"MDIO_READY": {"access": "read-only",
"bit_offset": "16",
"bit_range": "",
"bit_width": "1",
"desc": "MDIO Ready.
  This is a copy of Bit[7] of the MDIO Control Word.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952791308,
},
"INTR_STATUS_REG": {"description": "Indicates the status of an interrupt.",
"address_offset": "0x600",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"MDIO": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "MDIO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PTP_TX": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "PTP_TX.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PTP_RX": {"access": "read-only",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "PTP_RX.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PTP_TIMER": {"access": "read-only",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "PTP_TIMER.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952791552,
},
"INTR_PENDING_REG": {"description": "Indicates the pending status of an interrupt",
"address_offset": "0x610",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"MDIO": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "MDIO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PTP_TX": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "PTP_TX.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PTP_RX": {"access": "read-only",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "PTP_RX.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PTP_TIMER": {"access": "read-only",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "PTP_TIMER.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952791568,
},
"INTR_ENABLE_REG": {"description": "Indicates the enable state of an interrupt. Writing a 1 to any bit enables that particular interrupt.",
"address_offset": "0x620",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"MDIO": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "MDIO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PTP_TX": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "PTP_TX.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PTP_RX": {"access": "read-only",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "PTP_RX.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PTP_TIMER": {"access": "read-only",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "PTP_TIMER.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952791584,
},
"INTR_CLEAR_REG": {"description": "Writing a 1 to any bit of this register clears that particular interrupt.",
"address_offset": "0x630",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"MDIO": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "MDIO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PTP_TX": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "PTP_TX.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PTP_RX": {"access": "read-only",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "PTP_RX.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PTP_TIMER": {"access": "read-only",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "PTP_TIMER.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952791600,
},
"UNICAST_ADDRESS_WORD_0_REG": {"description": "Frame filter unicast address[31:0]",
"address_offset": "0x700",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"UNICAST_ADDRESS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Frame filter unicast address[31:0].
  This address is used by the MAC to match against the destination address of any incoming frames. The address is ordered so the first byte transmitted/received is the lowest positioned byte in the register; for example, a MAC address of AA-BB-CC-DD-EE-FF would be stored in Address[47:0] as 0xFFEEDDCCBBAA.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952791808,
},
"UNICAST_ADDRESS_WORD_1_REG": {"description": "Frame filter unicast address[47:32]",
"address_offset": "0x704",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"UNICAST_ADDRESS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "Frame filter unicast address[47:32].
  See description for UNICAST_ADDRESS_WORD_0_REG.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952791812,
},
"FRAME_FILTER_CONTROL_REG": {"description": "Frame Filter Control",
"address_offset": "0x708",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"FILTER_INDEX": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "4",
"desc": "Filter Index.
  All frame filters are mapped to the same location with the filter index and AVB Select specifying which physical filter is to be accessed. When an AVB filter (bit[8] of the register) is being selected only indexes of 0-2 are allowed.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"AVB_SELECT": {"access": "read-write",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "AVB Select.
  If the AVB Endpoint is present this is used to indicate that the filter to be selected is one of the three dedicated filters.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PROMISCUOUS_MODE": {"access": "read-write",
"bit_offset": "31",
"bit_range": "",
"bit_width": "1",
"desc": "Promiscuous Mode.
  If this bit is set to 1, the frame filter is set to operate in promiscuous mode. All frames are passed to the receiver client regardless of the destination address.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952791816,
},
"FRAME_FILTER_ENABLE_REG": {"description": "Frame Filter Enable",
"address_offset": "0x70C",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"FILTER_ENABLE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Filter Enable.
  This enable relates to the physical frame filter pointed to by the Filter index and take the value of AVB Select into account. If clear, the filter passes all packets.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952791820,
},
"FRAME_FILTER_VALUE_BYTES_3_0_REG": {"description": "Frame Filter Value",
"address_offset": "0x710",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"FILTER_VALUE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Filter Value.
  All filter value registers have the same format. The lower 31 bits of filter value, at address 0x710, relating to the filter at physical Frame Filter index, that is to be written to the address table. The value is ordered so that the first byte transmitted/received is the lowest positioned byte in the register; for example, a MAC address of AA-BB-CC-DD-EE-FF would be stored in Filter Value[47:0] as 0xFFEEDDCCBBAA.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952791824,
},
"FRAME_FILTER_VALUE_BYTES_7_4_REG": {"description": "Frame Filter Value",
"address_offset": "0x714",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"FILTER_VALUE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Filter Value.
  See descriptions for FRAME_FILTER_VALUE_BYTES_3_0_REG.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952791828,
},
"FRAME_FILTER_VALUE_BYTES_11_8_REG": {"description": "Frame Filter Value",
"address_offset": "0x718",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"FILTER_VALUE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Filter Value.
  See descriptions for FRAME_FILTER_VALUE_BYTES_3_0_REG.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952791832,
},
"FRAME_FILTER_VALUE_BYTES_15_12_REG": {"description": "Frame Filter Value",
"address_offset": "0x71C",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"FILTER_VALUE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Filter Value.
  See descriptions for FRAME_FILTER_VALUE_BYTES_3_0_REG.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952791836,
},
"FRAME_FILTER_VALUE_BYTES_19_16_REG": {"description": "Frame Filter Value",
"address_offset": "0x720",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"FILTER_VALUE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Filter Value.
  See descriptions for FRAME_FILTER_VALUE_BYTES_3_0_REG.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952791840,
},
"FRAME_FILTER_VALUE_BYTES_23_20_REG": {"description": "Frame Filter Value",
"address_offset": "0x724",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"FILTER_VALUE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Filter Value.
  See descriptions for FRAME_FILTER_VALUE_BYTES_3_0_REG.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952791844,
},
"FRAME_FILTER_VALUE_BYTES_27_24_REG": {"description": "Frame Filter Value",
"address_offset": "0x728",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"FILTER_VALUE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Filter Value.
  See descriptions for FRAME_FILTER_VALUE_BYTES_3_0_REG.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952791848,
},
"FRAME_FILTER_VALUE_BYTES_31_28_REG": {"description": "Frame Filter Value",
"address_offset": "0x72C",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"FILTER_VALUE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Filter Value.
  See descriptions for FRAME_FILTER_VALUE_BYTES_3_0_REG.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952791852,
},
"FRAME_FILTER_VALUE_BYTES_35_32_REG": {"description": "Frame Filter Value",
"address_offset": "0x730",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"FILTER_VALUE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Filter Value.
  See descriptions for FRAME_FILTER_VALUE_BYTES_3_0_REG.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952791856,
},
"FRAME_FILTER_VALUE_BYTES_39_36_REG": {"description": "Frame Filter Value",
"address_offset": "0x734",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"FILTER_VALUE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Filter Value.
  See descriptions for FRAME_FILTER_VALUE_BYTES_3_0_REG.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952791860,
},
"FRAME_FILTER_VALUE_BYTES_43_40_REG": {"description": "Frame Filter Value",
"address_offset": "0x738",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"FILTER_VALUE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Filter Value.
  See descriptions for FRAME_FILTER_VALUE_BYTES_3_0_REG.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952791864,
},
"FRAME_FILTER_VALUE_BYTES_47_44_REG": {"description": "Frame Filter Value",
"address_offset": "0x73C",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"FILTER_VALUE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Filter Value.
  See descriptions for FRAME_FILTER_VALUE_BYTES_3_0_REG.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952791868,
},
"FRAME_FILTER_VALUE_BYTES_51_48_REG": {"description": "Frame Filter Value",
"address_offset": "0x740",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"FILTER_VALUE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Filter Value.
  See descriptions for FRAME_FILTER_VALUE_BYTES_3_0_REG.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952791872,
},
"FRAME_FILTER_VALUE_BYTES_55_52_REG": {"description": "Frame Filter Value",
"address_offset": "0x744",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"FILTER_VALUE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Filter Value.
  See descriptions for FRAME_FILTER_VALUE_BYTES_3_0_REG.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952791876,
},
"FRAME_FILTER_VALUE_BYTES_59_56_REG": {"description": "Frame Filter Value",
"address_offset": "0x748",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"FILTER_VALUE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Filter Value.
  See descriptions for FRAME_FILTER_VALUE_BYTES_3_0_REG.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952791880,
},
"FRAME_FILTER_VALUE_BYTES_63_60_REG": {"description": "Frame Filter Value",
"address_offset": "0x74C",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"FILTER_VALUE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Filter Value.
  See descriptions for FRAME_FILTER_VALUE_BYTES_3_0_REG.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952791884,
},
"FRAME_FILTER_MASK_VALUE_BYTES_3_0_REG": {"description": "Frame Filter Mask Value",
"address_offset": "0x750",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"FILTER_MASK_VALUE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Filter Mask Value.
  All mask value registers have the same format.
  If a mask bit is set to 1 then the corresponding bit of the Filter Value is compared by the frame filter. For example, if a basic Destination address comparison was desired then Bits[47:0] should be written to 1 and all other bits to 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952791888,
},
"FRAME_FILTER_MASK_VALUE_BYTES_7_4_REG": {"description": "Frame Filter Mask Value",
"address_offset": "0x754",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"FILTER_MASK_VALUE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Filter Mask Value.
  See descriptions for FRAME_FILTER_MASK_VALUE_BYTES_3_0_REG.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952791892,
},
"FRAME_FILTER_MASK_VALUE_BYTES_11_8_REG": {"description": "Frame Filter Mask Value",
"address_offset": "0x758",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"FILTER_MASK_VALUE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Filter Mask Value.
  See descriptions for FRAME_FILTER_MASK_VALUE_BYTES_3_0_REG.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952791896,
},
"FRAME_FILTER_MASK_VALUE_BYTES_15_12_REG": {"description": "Frame Filter Mask Value",
"address_offset": "0x75C",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"FILTER_MASK_VALUE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Filter Mask Value.
  See descriptions for FRAME_FILTER_MASK_VALUE_BYTES_3_0_REG.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952791900,
},
"FRAME_FILTER_MASK_VALUE_BYTES_19_16_REG": {"description": "Frame Filter Mask Value",
"address_offset": "0x760",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"FILTER_MASK_VALUE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Filter Mask Value.
  See descriptions for FRAME_FILTER_MASK_VALUE_BYTES_3_0_REG.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952791904,
},
"FRAME_FILTER_MASK_VALUE_BYTES_23_20_REG": {"description": "Frame Filter Mask Value",
"address_offset": "0x764",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"FILTER_MASK_VALUE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Filter Mask Value.
  See descriptions for FRAME_FILTER_MASK_VALUE_BYTES_3_0_REG.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952791908,
},
"FRAME_FILTER_MASK_VALUE_BYTES_27_24_REG": {"description": "Frame Filter Mask Value",
"address_offset": "0x768",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"FILTER_MASK_VALUE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Filter Mask Value.
  See descriptions for FRAME_FILTER_MASK_VALUE_BYTES_3_0_REG.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952791912,
},
"FRAME_FILTER_MASK_VALUE_BYTES_31_28_REG": {"description": "Frame Filter Mask Value",
"address_offset": "0x76C",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"FILTER_MASK_VALUE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Filter Mask Value.
  See descriptions for FRAME_FILTER_MASK_VALUE_BYTES_3_0_REG.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952791916,
},
"FRAME_FILTER_MASK_VALUE_BYTES_35_32_REG": {"description": "Frame Filter Mask Value",
"address_offset": "0x770",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"FILTER_MASK_VALUE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Filter Mask Value.
  See descriptions for FRAME_FILTER_MASK_VALUE_BYTES_3_0_REG.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952791920,
},
"FRAME_FILTER_MASK_VALUE_BYTES_39_36_REG": {"description": "Frame Filter Mask Value",
"address_offset": "0x774",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"FILTER_MASK_VALUE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Filter Mask Value.
  See descriptions for FRAME_FILTER_MASK_VALUE_BYTES_3_0_REG.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952791924,
},
"FRAME_FILTER_MASK_VALUE_BYTES_43_40_REG": {"description": "Frame Filter Mask Value",
"address_offset": "0x778",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"FILTER_MASK_VALUE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Filter Mask Value.
  See descriptions for FRAME_FILTER_MASK_VALUE_BYTES_3_0_REG.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952791928,
},
"FRAME_FILTER_MASK_VALUE_BYTES_47_44_REG": {"description": "Frame Filter Mask Value",
"address_offset": "0x77C",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"FILTER_MASK_VALUE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Filter Mask Value.
  See descriptions for FRAME_FILTER_MASK_VALUE_BYTES_3_0_REG.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952791932,
},
"FRAME_FILTER_MASK_VALUE_BYTES_51_48_REG": {"description": "Frame Filter Mask Value",
"address_offset": "0x780",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"FILTER_MASK_VALUE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Filter Mask Value.
  See descriptions for FRAME_FILTER_MASK_VALUE_BYTES_3_0_REG.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952791936,
},
"FRAME_FILTER_MASK_VALUE_BYTES_55_52_REG": {"description": "Frame Filter Mask Value",
"address_offset": "0x784",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"FILTER_MASK_VALUE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Filter Mask Value.
  See descriptions for FRAME_FILTER_MASK_VALUE_BYTES_3_0_REG.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952791940,
},
"FRAME_FILTER_MASK_VALUE_BYTES_59_56_REG": {"description": "Frame Filter Mask Value",
"address_offset": "0x788",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"FILTER_MASK_VALUE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Filter Mask Value.
  See descriptions for FRAME_FILTER_MASK_VALUE_BYTES_3_0_REG.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952791944,
},
"FRAME_FILTER_MASK_VALUE_BYTES_63_60_REG": {"description": "Frame Filter Mask Value",
"address_offset": "0x78C",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"FILTER_MASK_VALUE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Filter Mask Value.
  See descriptions for FRAME_FILTER_MASK_VALUE_BYTES_3_0_REG.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952791948,
},
"TX_PTP_PKT_BUFFER_CTRL_REG": {"description": "TX PTP Packet Buffer Control Register",
"address_offset": "0x12000",
"access": "",
"size": "32",
"interface": "s_axi",
"fields": {"TX_SEND_FRAME_BITS": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "tx_send_frame Bits.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TX_FRAME_WAITING_INDICATION": {"access": "read-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "8",
"desc": "tx_frame_waiting Indication.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TX_PACKET": {"access": "read-only",
"bit_offset": "16",
"bit_range": "",
"bit_width": "3",
"desc": "tx_packet.
  Indicates the number (block RAM bin position) of the most recently transmitted PTP packet.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952863744,
},
"RX_PTP_PKT_BUFFER_CTRL_REG": {"description": "RX PTP Packet Buffer Control Register",
"address_offset": "0x12004",
"access": "",
"size": "32",
"interface": "s_axi",
"fields": {"RX_CLEAR": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "rx_clear.
  When written with a 1, forces the buffer to empty, in practice moving the write address to the same value as the read address. If read, always returns 0.tx_send_frame Bitstx_send_frame Bits.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RX_PACKET": {"access": "read-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "4",
"desc": "rx_packet.
  Indicates the number (block RAM bin position) of the most recently received PTP packet
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952863748,
},
"TX_ARBITER_SEND_SLOPE_CTL_REG": {"description": "TX Arbiter Send Slope Control Register",
"address_offset": "0x1200C",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"VAL_SEND_SLOPE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "20",
"desc": "Value of sendSlope.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952863756,
},
"TX_ARBITER_IDLE_SLOPE_CTL_REG": {"description": "TX Arbiter Idle Slope Control Register",
"address_offset": "0x12010",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"VAL_SEND_SLOPE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "20",
"desc": "Value of sendSlope.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952863760,
},
"RTC_NANOSEC_FIELD_OFFSET_REG": {"description": "RTC Nanoseconds Field Offset",
"address_offset": "0x12800",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"OFFSET_NANOSEC": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "30",
"desc": "30-bit offset value for the RTC nanoseconds.
  Used by the microprocessor to initialize the RTC, then afterwards to perform the regular RTC corrections (when in slave mode).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952865792,
},
"RTC_SEC_FIELD_OFFSET_BITS_31_0_REG": {"description": "Seconds Field Offset Bits[31:0]",
"address_offset": "0x12808",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"OFFSET_SEC": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "32-bit offset value for the RTC seconds field.
  Used by the microprocessor to initialize the RTC, then afterwards to perform the regular RTC corrections (when in slave mode).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952865800,
},
"RTC_SEC_FIELD_OFFSET_BITS_47_32_REG": {"description": "Seconds Field Offset Bits[47:32]",
"address_offset": "0x1280C",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"OFFSET_SEC": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "16-bit offset value for the RTC seconds field.
  Used by the microprocessor to initialize the RTC, then afterwards to perform the regular RTC corrections (when in slave mode).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952865804,
},
"RTC_INCREMENT_VAL_REG": {"description": "RTC Increment Value Control Register",
"address_offset": "0x12810",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"NANOSEC": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "26",
"desc": "RTC Increment Value Control Register.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952865808,
},
"CURRENT_RTC_NANOSEC_FIELD_VAL_REG": {"description": "Current RTC Nanoseconds Value",
"address_offset": "0x12814",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"VAL_RTC_NANOSEC_FIELD": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "30",
"desc": "Current Value of the synchronized RTC nanoseconds field.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952865812,
},
"CURRENT_RTC_SEC_FIELD_VAL_BITS_31_0_REG": {"description": "Current RTC Seconds Field Value Bits [31:0]",
"address_offset": "0x12818",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"VAL_RTC_SEC": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Sampled Value of the synchronized RTC Seconds field (Bits[31:0]).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952865816,
},
"CURRENT_RTC_SEC_FIELD_VAL_BITS_47_32_REG": {"description": "Current RTC Seconds Field Value Bits [47:32]",
"address_offset": "0x1281C",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"VAL_RTC_SEC": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "Sampled Value of the synchronized RTC Seconds field (Bits[47:32]).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952865820,
},
"RTC_INTR_CLEAR_REG": {"description": "RTC Interrupt Clear Register",
"address_offset": "0x12820",
"access": "write-only",
"size": "32",
"interface": "s_axi",
"fields": {"CLEAR": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "RTC Interrupt Clear Register.
  Write ANY value to Bit[0] of this register to clear the interrupt_ptp_timer Interrupt signal. This bit always returns 0 on read.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952865824,
},
"RTC_PHASE_ADJ_REG": {"description": "RTC Interrupt Clear Register",
"address_offset": "0x12824",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"VAL_RTC_NANOSEC_FIELD": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "30",
"desc": "RTC Phase Adjustment Register.
  ns value relating to the phase offset for all RTC derived timing signals (clk8k).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2952865828,
},
},
"axi_ethernet_1": {"RESET_AND_ADDRESS_FILTER_REG": {"description": "Reset and Address Filter Register",
"address_offset": "0x0",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"MCSTREJ": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Reject Receive Multicast Destination Address.
  0  Accept receive multicast destination address Ethernet frames that meet address filtering specified in FMI register and/or the multicast address table.
  1  Reject all receive multicast destination address Ethernet frames regardless of FMI register and multicast address table.For each I/O bit programmed as input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"BCSTREJ": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Reject Receive Broadcast Destination Address.
  0  Accept receive broadcast destination address Ethernet frames.
  1  Reject all receive broadcast destination address Ethernet frames. This is the only method available for blocking broadcast Ethernet frames.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TXVTAGMODE": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "2",
"desc": "Transmit VLAN Tag Mode.
  00  No VLAN tags are added to transmit frames.
  01  VLAN tags are added to all transmit frames.
  10  VLAN tags are added to all transmit frames that already have a VLAN tag.
  11  VLAN tags are added to select transmit frames that already have VLAN tags.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXVTAGMODE": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "2",
"desc": "Receive VLAN Tag Mode.
  00  No VLAN tags are added to receive frames.
  01  VLAN tags are added to all receive frames.
  10  VLAN tags are added to all receive frames that already have a VLAN tag.
  11  VLAN tags are added to select receive frames that already have VLAN tags.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TXVSTRPMODE": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "2",
"desc": "Transmit VLAN Strip Mode.
  00  No VLAN tags are stripped to transmit frames.
  01  One VLAN tag is stripped from all transmit frames that have VLAN tags.
  10  Reserved.
  11  One VLAN tag is stripped from select transmit frames that already have VLAN tags.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXVSTRPMODE": {"access": "read-write",
"bit_offset": "9",
"bit_range": "",
"bit_width": "2",
"desc": "Receive VLAN Strip Mode.
  00  No VLAN tags are stripped to receive frames.
  01  One VLAN tag is stripped from all receive frames that have VLAN tags.
  10  Reserved.
  11  One VLAN tag is stripped from select receive frames that already have VLAN tags.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"NEWFNCENBL": {"access": "read-write",
"bit_offset": "11",
"bit_range": "",
"bit_width": "1",
"desc": "New Functions Enable.
  0  Disable new functions.
  1  Enable new functions if present.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EMULTIFLTRENBL": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "Enhanced Multicast Filter Enable.
  0  Disable enhanced multicast address filtering mode.
  1  Enable enhanced multicast address filtering mode if present.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXBADFRMEN": {"access": "read-write",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "Receive Bad Frame Enable.
  0  Normal operation, bad frames are rejected.
  1  Bad frames are accepted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953052160,
},
"TRANSMIT_PAUSE_FRAME_REG": {"description": "Transmit Pause Frame Register",
"address_offset": "0x4",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"TPFV": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "Transmit Pause Frame Value.
  These bits denote the value of the transmit pause frame pause time in units of 512 bit times. If enabled by the FCC register, writing a value into this register initiates the transmission of a single pause frame with the pause value defined in this field.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953052164,
},
"TRANSMIT_IFG_ADJUST_REG": {"description": "Transmit Inter Frame Gap Adjustment Register",
"address_offset": "0x8",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"IFGP0": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Transmit Inter Frame Gap Adjustment Value.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953052168,
},
"INTERRUPT_STATUS_REG": {"description": "Interrupt Status Register",
"address_offset": "0xC",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"HARDACSCMPLT": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Hard register Access Complete.
  0  Hard register access is not complete.
  1  Hard register access is complete.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"AUTONEG": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Auto-Negotiation Complete.
  0  auto-negotiation not complete.
  1  auto-negotiation complete.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXCMPLT": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Receive Complete.
  0  no frame received.
  1  frame received.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXRJECT": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Receive Frame Rejected.
  0  no receive frame rejected.
  1  receive frame was rejected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXMEMOVR": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Receive Memory Overrun.
  0  normal operation, no overflow occurred.
  1  receive Memory overflow occurred and data was lost.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TXCMPLT": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "Transmit Complete.
  0  no frame transmitted.
  1  frame transmitted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXDCMLOCK": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "Receive DCM Lock.
  0  RX digital clock manager (DCM) not locked.
  1  RX DCM Locked.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"MGTRDY": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "Serial Transceiver Ready.
  0  Serial transceiver / TEMAC not ready.
  1  Serial transceiver / TEMAC ready.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PHYRSTCMPLT": {"access": "read-write",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "PHY Reset Complete.
  0  PHY not ready.
  1  PHY ready.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953052172,
},
"INTERRUPT_PENDING_REG": {"description": "Interrupt Pending Register",
"address_offset": "0x10",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"HARDACSCMPLT": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Hard register Access Complete.
  0  Hard register access is not complete.
  1  Hard register access is complete.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"AUTONEG": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Auto-Negotiation Complete.
  0  auto-negotiation not complete.
  1  auto-negotiation complete.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXCMPLT": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Receive Complete.
  0  no frame received.
  1  frame received.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXRJECT": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Receive Frame Rejected.
  0  no receive frame rejected.
  1  receive frame was rejected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXMEMOVR": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Receive Memory Overrun.
  0  normal operation, no overflow occurred.
  1  receive Memory overflow occurred and data was lost.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TXCMPLT": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "Transmit Complete.
  0  no frame transmitted.
  1  frame transmitted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXDCMLOCK": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "Receive DCM Lock.
  0  RX digital clock manager (DCM) not locked.
  1  RX DCM Locked.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"MGTRDY": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "MGT Ready.
  0  Serial transceiver / TEMAC not ready.
  1  Serial transceiver / TEMAC ready.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PHYRSTCMPLT": {"access": "read-write",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "PHY Reset Complete.
  0  PHY not ready.
  1  PHY ready.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953052176,
},
"INTERRUPT_ENABLE_REG": {"description": "Interrupt Enable Register",
"address_offset": "0x14",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"HARDACSCMPLT": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Hard register Access Complete.
  0  Hard register access is not complete.
  1  Hard register access is complete.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"AUTONEG": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Auto-Negotiation Complete.
  0  auto-negotiation not complete.
  1  auto-negotiation complete.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXCMPLT": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Receive Complete.
  0  no frame received.
  1  frame received.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXRJECT": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Receive Frame Rejected.
  0  no receive frame rejected.
  1  receive frame was rejected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXMEMOVR": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Receive Memory Overrun.
  0  normal operation, no overflow occurred.
  1  receive Memory overflow occurred and data was lost.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TXCMPLT": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "Transmit Complete.
  0  no frame transmitted.
  1  frame transmitted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXDCMLOCK": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "Receive DCM Lock.
  0  RX digital clock manager (DCM) not locked.
  1  RX DCM Locked.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"MGTRDY": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "MGT Ready.
  0  Serial transceiver / TEMAC not ready.
  1  Serial transceiver / TEMAC ready.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PHYRSTCMPLT": {"access": "read-write",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "PHY Reset Complete.
  0  PHY not ready.
  1  PHY ready.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953052180,
},
"TRANSMIT_VLAN_TAG_REG": {"description": "Transmit VLAN Tag Register",
"address_offset": "0x18",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"VID": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "12",
"desc": "VLAN identifier.
  Uniquely identifies the VLAN to which the frame belongs.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CFI": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "Canonical Format Indicator.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PRIORITY": {"access": "read-write",
"bit_offset": "13",
"bit_range": "",
"bit_width": "3",
"desc": "User Priority.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TPID": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "16",
"desc": "Tag Protocol Identifier.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953052184,
},
"RECEIVE_VLAN_TAG_REG": {"description": "Receive VLAN Tag Register",
"address_offset": "0x1C",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"VID": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "12",
"desc": "VLAN identifier.
  Uniquely identifies the VLAN to which the frame belongs.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CFI": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "Canonical Format Indicator.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PRIORITY": {"access": "read-write",
"bit_offset": "13",
"bit_range": "",
"bit_width": "3",
"desc": "User Priority.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TPID": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "16",
"desc": "Tag Protocol Identifier.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953052188,
},
"UNICAST_ADDRESS_WORD_LOWER_REG": {"description": "Unicast Address Word Lower Register",
"address_offset": "0x20",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"UNICASTADDR": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Unicast Address.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953052192,
},
"UNICAST_ADDRESS_WORD_UPPER_REG": {"description": "Unicast Address Word Upper Register",
"address_offset": "0x24",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"UNICASTADDR": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "Unicast Address.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953052196,
},
"VLAN_TPID_WORD0_REG": {"description": "VLAN TPID Word 0 Register",
"address_offset": "0x28",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"TPID0": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "TPID Value 0.
  These bits represent one TPID value that is used for recognizing VLAN frames for both the transmit and receive paths.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TPID1": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "16",
"desc": "TPID Value 1.
  These bits represent one TPID value that is used for recognizing VLAN frames for both the transmit and receive paths.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953052200,
},
"VLAN_TPID_WORD1_REG": {"description": "VLAN TPID Word 1 Register",
"address_offset": "0x2C",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"TPID2": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "TPID Value 2.
  These bits represent one TPID value that is used for recognizing VLAN frames for both the transmit and receive paths.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TPID3": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "16",
"desc": "TPID Value 3.
  These bits represent one TPID value that is used for recognizing VLAN frames for both the transmit and receive paths.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953052204,
},
"PCS_PMA_TEMAC_STATUS_REG": {"description": "PCS PMA TEMAC Status Register",
"address_offset": "0x30",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"LINKSTATUS": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Link Status.
  0  No Link.
  1  Link is up.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"LINKSYNC": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Link Synchronization.
  0  Synchronization failed.
  1  Synchronization obtained.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RUDI_C": {"access": "read-only",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "RUDI(/C/).
  0  /C/ ordered sets(AN Configuration sequences) not there.
  1  Receiving /C/ ordered sets.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RUDI_I": {"access": "read-only",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "RUDI(/I/).
  0  /I/ ordered sets(Idles) not there.
  1  Receiving /I/ ordered sets.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RUDI_INVLD": {"access": "read-only",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "RUDI(/INVALID/).
  0  No invalid data.
  1  Receiving invalid data while receiving/C/ or/I/ ordered set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXDISPERR": {"access": "read-only",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "Receive Disparity Error.
  0  No running disparity error.
  1  Receiving running disparity error during the 8B/10B decoding function.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXNOTINTABLE": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "Receive Not In Table.
  0  No receive not in table error.
  1  Receiving code group which is not recognized from the 8B/10B coding tables.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PHYLINKSTATUS": {"access": "read-only",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "PHY Link Status (SGMII only).   0  Indicates that it has not linked with its link partner.   1  Indicates that the PHY has obtained a link with its link partner. When operating in 1000BASE-X mode this bit remains Low and should be ignored.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RMTFLTENC": {"access": "read-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "2",
"desc": "Remote Fault Encoding (1000BASE-X only).   00  No error, link OK.   01 - Offline.   10 - Link failure.   11 - Auto-Negotiation error. This signal has no significance when the core is in SGMII mode with PHY side implementation and indicates 00.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SPEED": {"access": "read-only",
"bit_offset": "10",
"bit_range": "",
"bit_width": "2",
"desc": "This signal indicates the speed negotiated and is only valid when Auto-Negotiation is enabled. The signal encoding is:   11 - Reserved.   10 - 1000 Mb/s.   01 - 100 Mb/s.   00  10 Mb/s.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DUPLEX": {"access": "read-only",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "This bit indicates the Duplex mode negotiated with the link partner.
  1 - Full-Duplex.
  0 - Half-Duplex.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RMTFLT": {"access": "read-only",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "Remote Fault (1000BASE-X only)
  1 - Remote fault is detected.
  0 - No remote fault.
This signal has no significance in SGMII PHY mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953052208,
},
"RECEIVED_BYTES_COUNTER_WORD_0_REG": {"description": "Received Bytes Counter Word 0",
"address_offset": "0x200",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"RECEIVED_BYTES_COUNTER_WORD_0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Received Bytes Counter Word 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953052672,
},
"RECEIVED_BYTES_COUNTER_WORD_1_REG": {"description": "Received Bytes Counter Word 1",
"address_offset": "0x204",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"RECEIVED_BYTES_COUNTER_WORD_1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Received Bytes Counter Word 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953052676,
},
"TRANSMITTED_BYTES_COUNTER_WORD_0_REG": {"description": "Transmitted Bytes Counter Word 0",
"address_offset": "0x208",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"TRANSMITTED_BYTES_COUNTER_WORD_0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Transmitted Bytes Counter Word 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953052680,
},
"TRANSMITTED_BYTES_COUNTER_WORD_1_REG": {"description": "Transmitted Bytes Counter Word 1",
"address_offset": "0x20C",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"TRANSMITTED_BYTES_COUNTER_WORD_1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Transmitted Bytes Counter Word 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953052684,
},
"UNDERSIZE_FRAMES_COUNTER_WORD_0_REG": {"description": "Undersize Frames Counter Word 0",
"address_offset": "0x210",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"UNDERSIZE_FRAMES_COUNTER_WORD_0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Undersize Frames Counter Word 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953052688,
},
"UNDERSIZE_FRAMES_COUNTER_WORD_1_REG": {"description": "Undersize Frames Counter Word 1",
"address_offset": "0x214",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"UNDERSIZE_FRAMES_COUNTER_WORD_1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Undersize Frames Counter Word 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953052692,
},
"FRAGMENT_FRAMES_COUNTER_WORD_0_REG": {"description": "Fragment Frames Counter Word 0",
"address_offset": "0x218",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"FRAGMENT_FRAMES_COUNTER_WORD_0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Fragment Frames Counter Word 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953052696,
},
"FRAGMENT_FRAMES_COUNTER_WORD_1_REG": {"description": "Fragment Frames Counter Word 1",
"address_offset": "0x21C",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"FRAGMENT_FRAMES_COUNTER_WORD_1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Fragment Frames Counter Word 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953052700,
},
"RX_64BYTE_FRAMES_COUNTER_WORD_0_REG": {"description": "RX 64-Byte Frames Counter Word 0",
"address_offset": "0x220",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"RX_64BYTE_FRAMES_COUNTER_WORD_0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "RX 64-Byte Frames Counter Word 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953052704,
},
"RX_64BYTE_FRAMES_COUNTER_WORD_1_REG": {"description": "RX 64-Byte Frames Counter Word 1",
"address_offset": "0x224",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"RX_64BYTE_FRAMES_COUNTER_WORD_1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "RX 64-Byte Frames Counter Word 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953052708,
},
"RX_65_127_BYTE_FRAMES_COUNTER_WORD_0_REG": {"description": "RX 65-127-Byte Frames Counter Word 0",
"address_offset": "0x228",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"RX_65_127_BYTE_FRAMES_COUNTER_WORD_0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "RX 65-127-Byte Frames Counter Word 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953052712,
},
"RX_65_127_BYTE_FRAMES_COUNTER_WORD_1_REG": {"description": "RX 65-127-Byte Frames Counter Word 1",
"address_offset": "0x22C",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"RX_65_127_BYTE_FRAMES_COUNTER_WORD_1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "RX 65-127-Byte Frames Counter Word 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953052716,
},
"RX_128_255_BYTE_FRAMES_COUNTER_WORD_0_REG": {"description": "RX 128-255-Byte Frames Counter Word 0",
"address_offset": "0x230",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"RX_128_255_BYTE_FRAMES_COUNTER_WORD_0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "RX 128-255-Byte Frames Counter Word 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953052720,
},
"RX_128_255_BYTE_FRAMES_COUNTER_WORD_1_REG": {"description": "RX 128-255-Byte Frames Counter Word 1",
"address_offset": "0x234",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"RX_128_255_BYTE_FRAMES_COUNTER_WORD_1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "RX 128-255-Byte Frames Counter Word 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953052724,
},
"RX_256_511_BYTE_FRAMES_COUNTER_WORD_0_REG": {"description": "RX 256-511-Byte Frames Counter Word 0",
"address_offset": "0x238",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"RX_256_511_BYTE_FRAMES_COUNTER_WORD_0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "RX 256-511-Byte Frames Counter Word 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953052728,
},
"RX_256_511_BYTE_FRAMES_COUNTER_WORD_1_REG": {"description": "RX 256-511-Byte Frames Counter Word 1",
"address_offset": "0x23C",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"RX_256_511_BYTE_FRAMES_COUNTER_WORD_1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "RX 256-511-Byte Frames Counter Word 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953052732,
},
"RX_512_1023_BYTE_FRAMES_COUNTER_WORD_0_REG": {"description": "RX 512-1023-Byte Frames Counter Word 0",
"address_offset": "0x240",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"RX_512_1023_BYTE_FRAMES_COUNTER_WORD_0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "RX 512-1023-Byte Frames Counter Word 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953052736,
},
"RX_512_1023_BYTE_FRAMES_COUNTER_WORD_1_REG": {"description": "RX 512-1023-Byte Frames Counter Word 1",
"address_offset": "0x244",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"RX_512_1023_BYTE_FRAMES_COUNTER_WORD_1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "RX 512-1023-Byte Frames Counter Word 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953052740,
},
"RX_1024_MAX_BYTE_FRAMES_COUNTER_WORD_0_REG": {"description": "RX 1024-Max Frames Size Byte Frames Counter Word 0",
"address_offset": "0x248",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"RX_1024_MAX_BYTE_FRAMES_COUNTER_WORD_0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "RX 1024-Max Frames Size Byte Frames Counter Word 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953052744,
},
"RX_1024_MAX_BYTE_FRAMES_COUNTER_WORD_1_REG": {"description": "RX 1024-Max Frames Size Byte Frames Counter Word 1",
"address_offset": "0x24C",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"RX_1024_MAX_BYTE_FRAMES_COUNTER_WORD_1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "RX 1024-Max Frames Size Byte Frames Counter Word 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953052748,
},
"RX_OVERSIZE_FRAMES_COUNTER_WORD_0_REG": {"description": "RX Oversize Frames Counter Word 0",
"address_offset": "0x250",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"RX_OVERSIZE_FRAMES_COUNTER_WORD_0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "RX Oversize Frames Counter Word 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953052752,
},
"RX_OVERSIZE_FRAMES_COUNTER_WORD_1_REG": {"description": "RX Oversize Frames Counter Word 1",
"address_offset": "0x254",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"RX_OVERSIZE_FRAMES_COUNTER_WORD_1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "RX Oversize Frames Counter Word 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953052756,
},
"TX_64BYTE_FRAMES_COUNTER_WORD_0_REG": {"description": "TX 64-Byte Frames Counter Word 0",
"address_offset": "0x258",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"TX_64BYTE_FRAMES_COUNTER_WORD_0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "TX 64-Byte Frames Counter Word 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953052760,
},
"TX_64BYTE_FRAMES_COUNTER_WORD_1_REG": {"description": "TX 64-Byte Frames Counter Word 1",
"address_offset": "0x25C",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"TX_64BYTE_FRAMES_COUNTER_WORD_1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "TX 64-Byte Frames Counter Word 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953052764,
},
"TX_65_127_BYTE_FRAMES_COUNTER_WORD_0_REG": {"description": "TX 65-127-Byte Frames Counter Word 0",
"address_offset": "0x260",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"TX_65_127_BYTE_FRAMES_COUNTER_WORD_0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "TX 65-127-Byte Frames Counter Word 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953052768,
},
"TX_65_127_BYTE_FRAMES_COUNTER_WORD_1_REG": {"description": "TX 65-127-Byte Frames Counter Word 1",
"address_offset": "0x264",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"TX_65_127_BYTE_FRAMES_COUNTER_WORD_1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "TX 65-127-Byte Frames Counter Word 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953052772,
},
"TX_128_255_BYTE_FRAMES_COUNTER_WORD_0_REG": {"description": "TX 128-255-Byte Frames Counter Word 0",
"address_offset": "0x268",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"TX_128_255_BYTE_FRAMES_COUNTER_WORD_0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "TX 128-255-Byte Frames Counter Word 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953052776,
},
"TX_128_255_BYTE_FRAMES_COUNTER_WORD_1_REG": {"description": "TX 128-255-Byte Frames Counter Word 1",
"address_offset": "0x26C",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"TX_128_255_BYTE_FRAMES_COUNTER_WORD_1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "TX 128-255-Byte Frames Counter Word 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953052780,
},
"TX_256_511_BYTE_FRAMES_COUNTER_WORD_0_REG": {"description": "TX 256-511-Byte Frames Counter Word 0",
"address_offset": "0x270",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"TX_256_511_BYTE_FRAMES_COUNTER_WORD_0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "TX 256-511-Byte Frames Counter Word 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953052784,
},
"TX_256_511_BYTE_FRAMES_COUNTER_WORD_1_REG": {"description": "TX 256-511-Byte Frames Counter Word 1",
"address_offset": "0x274",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"TX_256_511_BYTE_FRAMES_COUNTER_WORD_1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "TX 256-511-Byte Frames Counter Word 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953052788,
},
"TX_512_1023_BYTE_FRAMES_COUNTER_WORD_0_REG": {"description": "TX 512-1023-Byte Frames Counter Word 0",
"address_offset": "0x278",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"TX_512_1023_BYTE_FRAMES_COUNTER_WORD_0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "TX 512-1023-Byte Frames Counter Word 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953052792,
},
"TX_512_1023_BYTE_FRAMES_COUNTER_WORD_1_REG": {"description": "TX 512-1023-Byte Frames Counter Word 1",
"address_offset": "0x27C",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"TX_512_1023_BYTE_FRAMES_COUNTER_WORD_1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "TX 512-1023-Byte Frames Counter Word 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953052796,
},
"TX_1024_MAX_BYTE_FRAMES_COUNTER_WORD_0_REG": {"description": "TX 1024-Max Frames Size Byte Frames Counter Word 0",
"address_offset": "0x280",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"TX_1024_MAX_BYTE_FRAMES_COUNTER_WORD_0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "TX 1024-Max Frames Size Byte Frames Counter Word 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953052800,
},
"TX_1024_MAX_BYTE_FRAMES_COUNTER_WORD_1_REG": {"description": "TX 1024-Max Frames Size Byte Frames Counter Word 1",
"address_offset": "0x284",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"TX_1024_MAX_BYTE_FRAMES_COUNTER_WORD_1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "TX 1024-Max Frames Size Byte Frames Counter Word 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953052804,
},
"TX_OVERSIZE_FRAMES_COUNTER_WORD_0_REG": {"description": "TX Oversize Frames Counter Word 0",
"address_offset": "0x288",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"TX_OVERSIZE_FRAMES_COUNTER_WORD_0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "TX Oversize Frames Counter Word 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953052808,
},
"TX_OVERSIZE_FRAMES_COUNTER_WORD_1_REG": {"description": "TX Oversize Frames Counter Word 1",
"address_offset": "0x28C",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"TX_OVERSIZE_FRAMES_COUNTER_WORD_1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "TX Oversize Frames Counter Word 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953052812,
},
"RX_GOOD_FRAMES_COUNTER_WORD_0_REG": {"description": "RX Good Frames Counter Word 0",
"address_offset": "0x290",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"RX_GOOD_FRAMES_COUNTER_WORD_0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "RX Good Frames Counter Word 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953052816,
},
"RX_GOOD_FRAMES_COUNTER_WORD_1_REG": {"description": "RX Good Frames Counter Word 1",
"address_offset": "0x294",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"RX_GOOD_FRAMES_COUNTER_WORD_1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "RX Good Frames Counter Word 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953052820,
},
"RX_FRAME_CHECK_SEQUENCE_ERROR_COUNTER_WORD_0_REG": {"description": "RX Frame Check Sequence Errors Counter Word 0",
"address_offset": "0x298",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"RX_FRAME_CHECK_SEQUENCE_ERROR_COUNTER_WORD_0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "RX Frame Check Sequence Errors Counter Word 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953052824,
},
"RX_FRAME_CHECK_SEQUENCE_ERROR_COUNTER_WORD_1_REG": {"description": "RX Frame Check Sequence Errors Counter Word 1",
"address_offset": "0x29C",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"RX_FRAME_CHECK_SEQUENCE_ERROR_COUNTER_WORD_1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "RX Frame Check Sequence Errors Counter Word 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953052828,
},
"RX_GOOD_BROADCAST_FRAMES_COUNTER_WORD_0_REG": {"description": "RX Good Broadcast Frames Counter Word 0",
"address_offset": "0x2A0",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"RX_GOOD_BROADCAST_FRAMES_COUNTER_WORD_0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "RX Good Broadcast Frames Counter Word 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953052832,
},
"RX_GOOD_BROADCAST_FRAMES_COUNTER_WORD_1_REG": {"description": "RX Good Broadcast Frames Counter Word 1",
"address_offset": "0x2A4",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"RX_GOOD_BROADCAST_FRAMES_COUNTER_WORD_1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "RX Good Broadcast Frames Counter Word 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953052836,
},
"RX_GOOD_MULTICAST_FRAMES_COUNTER_WORD_0_REG": {"description": "RX Good Multicast Frames Counter Word 0",
"address_offset": "0x2A8",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"RX_GOOD_MULTICAST_FRAMES_COUNTER_WORD_0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "RX Good Multicast Frames Counter Word 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953052840,
},
"RX_GOOD_MULTICAST_FRAMES_COUNTER_WORD_1_REG": {"description": "RX Good Multicast Frames Counter Word 1",
"address_offset": "0x2AC",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"RX_GOOD_MULTICAST_FRAMES_COUNTER_WORD_1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "RX Good Multicast Frames Counter Word 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953052844,
},
"RX_GOOD_CONTROL_FRAMES_COUNTER_WORD_0_REG": {"description": "RX Good Control Frames Counter Word 0",
"address_offset": "0x2B0",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"RX_GOOD_CONTROL_FRAMES_COUNTER_WORD_0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "RX Good Control Frames Counter Word 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953052848,
},
"RX_GOOD_CONTROL_FRAMES_COUNTER_WORD_1_REG": {"description": "RX Good Control Frames Counter Word 1",
"address_offset": "0x2B4",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"RX_GOOD_CONTROL_FRAMES_COUNTER_WORD_1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "RX Good Control Frames Counter Word 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953052852,
},
"RX_LT_OUT_OF_RANGE_ERRORS_COUNTER_WORD_0_REG": {"description": "RX Length/Type Out of Range Errors Counter Word 0",
"address_offset": "0x2B8",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"RX_LT_OUT_OF_RANGE_ERRORS_COUNTER_WORD_0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "RX Length/Type Out of Range Errors Counter Word 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953052856,
},
"RX_LT_OUT_OF_RANGE_ERRORS_COUNTER_WORD_1_REG": {"description": "RX Length/Type Out of Range Errors Counter Word 1",
"address_offset": "0x2BC",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"RX_LT_OUT_OF_RANGE_ERRORS_COUNTER_WORD_1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "RX Length/Type Out of Range Errors Counter Word 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953052860,
},
"RX_GOOD_VLAN_FRAMES_COUNTER_WORD_0_REG": {"description": "RX Good VLAN Tagged Frames Counter Word 0",
"address_offset": "0x2C0",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"RX_GOOD_VLAN_FRAMES_COUNTER_WORD_0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "RX Good VLAN Tagged Frames Counter Word 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953052864,
},
"RX_GOOD_VLAN_FRAMES_COUNTER_WORD_1_REG": {"description": "RX Good VLAN Tagged Frames Counter Word 1",
"address_offset": "0x2C4",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"RX_GOOD_VLAN_FRAMES_COUNTER_WORD_1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "RX Good VLAN Tagged Frames Counter Word 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953052868,
},
"RX_GOOD_PAUSE_FRAMES_COUNTER_WORD_0_REG": {"description": "RX Good Pause Frames Counter Word 0",
"address_offset": "0x2C8",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"RX_GOOD_PAUSE_FRAMES_COUNTER_WORD_0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "RX Good Pause Frames Counter Word 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953052872,
},
"RX_GOOD_PAUSE_FRAMES_COUNTER_WORD_1_REG": {"description": "RX Good Pause Frames Counter Word 1",
"address_offset": "0x2CC",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"RX_GOOD_PAUSE_FRAMES_COUNTER_WORD_1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "RX Good Pause Frames Counter Word 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953052876,
},
"RX_BAD_OPCODE_FRAMES_COUNTER_WORD_0_REG": {"description": "RX Bad Opcode Frames Counter Word 0",
"address_offset": "0x2D0",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"RX_BAD_OPCODE_FRAMES_COUNTER_WORD_0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "RX Bad Opcode Frames Counter Word 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953052880,
},
"RX_BAD_OPCODE_FRAMES_COUNTER_WORD_1_REG": {"description": "RX Bad Opcode Frames Counter Word 1",
"address_offset": "0x2D4",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"RX_BAD_OPCODE_FRAMES_COUNTER_WORD_1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "RX Bad Opcode Frames Counter Word 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953052884,
},
"TX_GOOD_FRAMES_COUNTER_WORD_0_REG": {"description": "TX Good Frames Counter Word 0",
"address_offset": "0x2D8",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"TX_GOOD_FRAMES_COUNTER_WORD_0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "TX Good Frames Counter Word 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953052888,
},
"TX_GOOD_FRAMES_COUNTER_WORD_1_REG": {"description": "TX Good Frames Counter Word 1",
"address_offset": "0x2DC",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"TX_GOOD_FRAMES_COUNTER_WORD_1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "TX Good Frames Counter Word 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953052892,
},
"TX_GOOD_BROADCAST_FRAMES_COUNTER_WORD_0_REG": {"description": "TX Good Broadcast Frames Counter Word 0",
"address_offset": "0x2E0",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"TX_GOOD_BROADCAST_FRAMES_COUNTER_WORD_0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "TX Good Broadcast Frames Counter Word 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953052896,
},
"TX_GOOD_BROADCAST_FRAMES_COUNTER_WORD_1_REG": {"description": "TX Good Broadcast Frames Counter Word 1",
"address_offset": "0x2E4",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"TX_GOOD_BROADCAST_FRAMES_COUNTER_WORD_1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "TX Good Broadcast Frames Counter Word 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953052900,
},
"TX_GOOD_MULTICAST_FRAMES_COUNTER_WORD_0_REG": {"description": "TX Good Multicast Frames Counter Word 0",
"address_offset": "0x2E8",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"TX_GOOD_MULTICAST_FRAMES_COUNTER_WORD_0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "TX Good Multicast Frames Counter Word 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953052904,
},
"TX_GOOD_MULTICAST_FRAMES_COUNTER_WORD_1_REG": {"description": "TX Good Multicast Frames Counter Word 1",
"address_offset": "0x2EC",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"TX_GOOD_MULTICAST_FRAMES_COUNTER_WORD_1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "TX Good Multicast Frames Counter Word 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953052908,
},
"TX_UNDERRUN_ERRORS_COUNTER_WORD_0_REG": {"description": "TX Underrun Errors Counter Word 0",
"address_offset": "0x2F0",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"TX_UNDERRUN_ERRORS_COUNTER_WORD_0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "TX Underrun Errors Counter Word 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953052912,
},
"TX_UNDERRUN_ERRORS_COUNTER_WORD_1_REG": {"description": "TX Underrun Errors Counter Word 1",
"address_offset": "0x2F4",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"TX_UNDERRUN_ERRORS_COUNTER_WORD_1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "TX Underrun Errors Counter Word 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953052916,
},
"TX_GOOD_CONTROL_FRAMES_COUNTER_WORD_0_REG": {"description": "TX Good Control Frames Counter Word 0",
"address_offset": "0x2F8",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"TX_GOOD_CONTROL_FRAMES_COUNTER_WORD_0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "TX Good Control Frames Counter Word 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953052920,
},
"TX_GOOD_CONTROL_FRAMES_COUNTER_WORD_1_REG": {"description": "TX Good Control Frames Counter Word 1",
"address_offset": "0x2FC",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"TX_GOOD_CONTROL_FRAMES_COUNTER_WORD_1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "TX Good Control Frames Counter Word 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953052924,
},
"TX_GOOD_VLAN_FRAMES_COUNTER_WORD_0_REG": {"description": "TX Good VLAN Frames Counter Word 0",
"address_offset": "0x300",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"TX_GOOD_VLAN_FRAMES_COUNTER_WORD_0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "TX Good VLAN Frames Counter Word 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953052928,
},
"TX_GOOD_VLAN_FRAMES_COUNTER_WORD_1_REG": {"description": "TX Good VLAN Frames Counter Word 1",
"address_offset": "0x304",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"TX_GOOD_VLAN_FRAMES_COUNTER_WORD_1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "TX Good VLAN Frames Counter Word 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953052932,
},
"TX_GOOD_PAUSE_FRAMES_COUNTER_WORD_0_REG": {"description": "TX Good Pause Frames Counter Word 0",
"address_offset": "0x308",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"TX_GOOD_PAUSE_FRAMES_COUNTER_WORD_0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "TX Good Pause Frames Counter Word 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953052936,
},
"TX_GOOD_PAUSE_FRAMES_COUNTER_WORD_1_REG": {"description": "TX Good Pause Frames Counter Word 1",
"address_offset": "0x30C",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"TX_GOOD_PAUSE_FRAMES_COUNTER_WORD_1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "TX Good Pause Frames Counter Word 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953052940,
},
"TX_SINGLE_COLL_FRAMES_COUNTER_WORD_0_REG": {"description": "TX Single Collision Frames Counter Word 0",
"address_offset": "0x310",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"TX_SINGLE_COLL_FRAMES_COUNTER_WORD_0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "TX Single Collision Frames Counter Word 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953052944,
},
"TX_SINGLE_COLL_FRAMES_COUNTER_WORD_1_REG": {"description": "TX Single Collision Frames Counter Word 1",
"address_offset": "0x314",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"TX_SINGLE_COLL_FRAMES_COUNTER_WORD_1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "TX Single Collision Frames Counter Word 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953052948,
},
"TX_MULTIPLE_COLL_FRAMES_COUNTER_WORD_0_REG": {"description": "TX Multiple Collision Frames Counter Word 0",
"address_offset": "0x318",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"TX_MULTIPLE_COLL_FRAMES_COUNTER_WORD_0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "TX Multiple Collision Frames Counter Word 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953052952,
},
"TX_MULTIPLE_COLL_FRAMES_COUNTER_WORD_1_REG": {"description": "TX Multiple Collision Frames Counter Word 1",
"address_offset": "0x31C",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"TX_MULTIPLE_COLL_FRAMES_COUNTER_WORD_1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "TX Multiple Collision Frames Counter Word 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953052956,
},
"TX_DEFERRED_FRAMES_COUNTER_WORD_0_REG": {"description": "TX Deferred Frames Counter Word 0",
"address_offset": "0x320",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"TX_DEFERRED_FRAMES_COUNTER_WORD_0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "TX Deferred Frames Counter Word 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953052960,
},
"TX_DEFERRED_FRAMES_COUNTER_WORD_1_REG": {"description": "TX Deferred Frames Counter Word 1",
"address_offset": "0x324",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"TX_DEFERRED_FRAMES_COUNTER_WORD_1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "TX Deferred Frames Counter Word 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953052964,
},
"TX_LATE_COLL_COUNTER_WORD_0_REG": {"description": "TX Late Collision Counter Word 0",
"address_offset": "0x328",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"TX_LATE_COLL_COUNTER_WORD_0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "TX Late Collision Counter Word 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953052968,
},
"TX_LATE_COLL_COUNTER_WORD_1_REG": {"description": "TX Late Collision Counter Word 1",
"address_offset": "0x32C",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"TX_LATE_COLL_COUNTER_WORD_1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "TX Late Collision Counter Word 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953052972,
},
"TX_EXCESS_COLL_COUNTER_WORD_0_REG": {"description": "TX Excess Collision Counter Word 0",
"address_offset": "0x330",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"TX_EXCESS_COLL_COUNTER_WORD_0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "TX Excess Collision Counter Word 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953052976,
},
"TX_EXCESS_COLL_COUNTER_WORD_1_REG": {"description": "TX Excess Collision Counter Word 1",
"address_offset": "0x334",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"TX_EXCESS_COLL_COUNTER_WORD_1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "TX Excess Collision Counter Word 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953052980,
},
"TX_EXCESS_DEF_COUNTER_WORD_0_REG": {"description": "TX Excess Deferral Counter Word 0",
"address_offset": "0x338",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"TX_EXCESS_DEF_COUNTER_WORD_0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "TX Excess Deferral Counter Word 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953052984,
},
"TX_EXCESS_DEF_COUNTER_WORD_1_REG": {"description": "TX Excess Deferral Counter Word 1",
"address_offset": "0x33C",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"TX_EXCESS_DEF_COUNTER_WORD_1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "TX Excess Deferral Counter Word 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953052988,
},
"RX_ALIGNMENT_ERR_COUNTER_WORD_0_REG": {"description": "RX Alignment Errors Counter Word 0",
"address_offset": "0x340",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"RX_ALIGNMENT_ERR_COUNTER_WORD_0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "RX Alignment Errors Counter Word 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953052992,
},
"RX_ALIGNMENT_ERR_COUNTER_WORD_1_REG": {"description": "RX Alignment Errors Counter Word 1",
"address_offset": "0x344",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"RX_ALIGNMENT_ERR_COUNTER_WORD_1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "RX Alignment Errors Counter Word 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953052996,
},
"TX_PFC_FRAMES_COUNTER_WORD_0_REG": {"description": "TX PFC Frames Counter Word 0",
"address_offset": "0x348",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"TX_PFC_FRAMES_COUNTER_WORD_0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "TX PFC Frames Counter Word 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953053000,
},
"TX_PFC_FRAMES_COUNTER_WORD_1_REG": {"description": "TX PFC Frames Counter Word 1",
"address_offset": "0x34C",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"TX_PFC_FRAMES_COUNTER_WORD_1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "TX PFC Frames Counter Word 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953053004,
},
"RX_PFC_FRAMES_COUNTER_WORD_0_REG": {"description": "RX PFC Frames Counter Word 0",
"address_offset": "0x350",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"RX_PFC_FRAMES_COUNTER_WORD_0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "RX PFC Frames Counter Word 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953053008,
},
"RX_PFC_FRAMES_COUNTER_WORD_1_REG": {"description": "RX PFC Frames Counter Word 1",
"address_offset": "0x354",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"RX_PFC_FRAMES_COUNTER_WORD_1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "RX PFC Frames Counter Word 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953053012,
},
"RX_CONF_WORD_0_REG": {"description": "Pause frame MAC Source Address[31:0]",
"address_offset": "0x400",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"RX_CONF_WORD_0": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Pause frame MAC Source Address[31:0].
  The address is ordered so the first byte transmitted/received is the lowest positioned byte in the register; for example, a MAC address of AA-BB-CC-DD-EE-FF would be stored in Address[47:0] as 0xFFEEDDCCBBAA.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953053184,
},
"RX_CONF_WORD_1_REG": {"description": "Receiver Configuration Word 1",
"address_offset": "0x404",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"PAUSE_FRM_MAC_SA": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "Pause frame MAC Source Address[47:32].
  Refer the RX_CONF_WORD_0 register description.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_FRM_LEN_CHK_DISABLE": {"access": "read-write",
"bit_offset": "24",
"bit_range": "",
"bit_width": "1",
"desc": "Control Frame Length Check Disable.
  When this bit is set to 1, the core does not mark control frames as bad if they are greater than the minimum frame length.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"LT_ERR_CHK_DISABLE": {"access": "read-write",
"bit_offset": "25",
"bit_range": "",
"bit_width": "1",
"desc": "Length/Type Error Check Disable.
  1 - Core does not perform the length/type field error checks.
  0 - Core performs the length/type field error checks. Normal operation.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"HALF_DUPLEX": {"access": "read-write",
"bit_offset": "26",
"bit_range": "",
"bit_width": "1",
"desc": "Half Duplex.
  1 - Half Duplex.
  0 - Full Duplex.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"VLAN_ENABLE": {"access": "read-write",
"bit_offset": "27",
"bit_range": "",
"bit_width": "1",
"desc": "VLAN Enable.
  When this bit is set to 1, VLAN tagged frames are accepted by the receiver.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RX_ENABLE": {"access": "read-write",
"bit_offset": "28",
"bit_range": "",
"bit_width": "1",
"desc": "Receiver Enable.
  If set to 1, the receiver block is operational. If set to 0, the block ignores activity on the physical interface RX port.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"INBAND_FCS_ENBALE": {"access": "read-write",
"bit_offset": "29",
"bit_range": "",
"bit_width": "1",
"desc": "In-band FCS Enable.
  1 - MAC receiver passes the FCS field up to the client.
  0 - Client is not passed to the FCS.
In both cases, the FCS is verified on the frame.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"JUMBO_FRAME_ENBALE": {"access": "read-write",
"bit_offset": "30",
"bit_range": "",
"bit_width": "1",
"desc": "Jumbo Frame Enable.
  1 - MAC receiver accepts frames over the specified IEEE 802.3-2008 maximum legal length.
  0 - MAC only accepts frames up to the specified maximum.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RESET": {"access": "read-write",
"bit_offset": "31",
"bit_range": "",
"bit_width": "1",
"desc": "Reset.
  When this bit is set to 1, the receiver is reset. The bit then automatically reverts to 0. This reset also sets all of the receiver configuration registers to their default values.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953053188,
},
"TX_CONF_WORD_0_REG": {"description": "Transmitter Configuration Word",
"address_offset": "0x408",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"IFG_ADJUST_ENABLE": {"access": "read-write",
"bit_offset": "25",
"bit_range": "",
"bit_width": "1",
"desc": "Interframe Gap Adjust Enable.
  If 1, the transmitter reads the value on the port tx_ifg_delay at the start of frame transmission and adjusts the interframe gap following the frame accordingly. If 0, the transmitter outputs a minimum interframe gap of at least twelve clock cycles, as specified in IEEE 802.3-2008.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"HALF_DUPLEX": {"access": "read-write",
"bit_offset": "26",
"bit_range": "",
"bit_width": "1",
"desc": "Half Duplex.
  1 - Half Duplex.
  0 - Full Duplex.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"VLAN_ENABLE": {"access": "read-write",
"bit_offset": "27",
"bit_range": "",
"bit_width": "1",
"desc": "VLAN Enable.
  When this bit is set to 1, the transmitter recognizes the transmission of VLAN tagged frames.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TX_ENABLE": {"access": "read-write",
"bit_offset": "28",
"bit_range": "",
"bit_width": "1",
"desc": "Transmit Enable.
  1 - Transmitter is operational.
  0 - Transmitter is disabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"INBAND_FCS_ENBALE": {"access": "read-write",
"bit_offset": "29",
"bit_range": "",
"bit_width": "1",
"desc": "In-band FCS Enable.
  1 - MAC transmitter expects the FCS field to be passed in by the client.
  0 - MAC transmitter appends padding as required, computes the FCS and appends it to the frame.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"JUMBO_FRAME_ENBALE": {"access": "read-write",
"bit_offset": "30",
"bit_range": "",
"bit_width": "1",
"desc": "Jumbo Frame Enable.
  1 - MAC transmitter sends frames that are greater than the specified IEEE 802.3-2008 maximum legal length.
  0 - MAC only sends frames up to the specified maximum.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RESET": {"access": "read-write",
"bit_offset": "31",
"bit_range": "",
"bit_width": "1",
"desc": "Reset.
  When this bit is set to 1, the transmitter is reset. The bit then automatically reverts to 0. This reset also sets all of the transmitter configuration registers to their default values.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953053192,
},
"FLOW_CONTROL_CONF_WORD_REG": {"description": "Flow Control Configuration Word",
"address_offset": "0x40C",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"RX_P0_PAUSE_ENABLE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "RX Priority 0 pause enable.
  When this bit is 1, and RX PFC is enabled, reception of a PFC frame with a valid quanta for priority 0 is processed as described in Receiving a PFC Frame When this bit is 0, the rx_pfc_p0_tvalid remains at 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RX_P1_PAUSE_ENABLE": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "RX Priority 1 pause enable.
  When this bit is 1, and RX PFC is enabled, reception of a PFC frame with a valid quanta for priority 1 is processed as described in Receiving a PFC Frame When this bit is 0, the rx_pfc_p1_tvalid remains at 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RX_P2_PAUSE_ENABLE": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "RX Priority 2 pause enable.
  When this bit is 1, and RX PFC is enabled, reception of a PFC frame with a valid quanta for priority 2 is processed as described in Receiving a PFC Frame When this bit is 0, the rx_pfc_p2_tvalid remains at 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RX_P3_PAUSE_ENABLE": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "RX Priority 3 pause enable.
  When this bit is 1, and RX PFC is enabled, reception of a PFC frame with a valid quanta for priority 3 is processed as described in Receiving a PFC Frame When this bit is 0, the rx_pfc_p3_tvalid remains at 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RX_P4_PAUSE_ENABLE": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "RX Priority 4 pause enable.
  When this bit is 1, and RX PFC is enabled, reception of a PFC frame with a valid quanta for priority 4 is processed as described in Receiving a PFC Frame When this bit is 0, the rx_pfc_p4_tvalid remains at 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RX_P5_PAUSE_ENABLE": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "RX Priority 5 pause enable.
  When this bit is 1, and RX PFC is enabled, reception of a PFC frame with a valid quanta for priority 5 is processed as described in Receiving a PFC Frame When this bit is 0, the rx_pfc_p5_tvalid remains at 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RX_P6_PAUSE_ENABLE": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "RX Priority 6 pause enable.
  When this bit is 1, and RX PFC is enabled, reception of a PFC frame with a valid quanta for priority 6 is processed as described in Receiving a PFC Frame When this bit is 0, the rx_pfc_p6_tvalid remains at 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RX_P7_PAUSE_ENABLE": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "RX Priority 7 pause enable.
  When this bit is 1, and RX PFC is enabled, reception of a PFC frame with a valid quanta for priority 7 is processed as described in Receiving a PFC Frame When this bit is 0, the rx_pfc_p7_tvalid remains at 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TX_P0_PAUSE_ENABLE": {"access": "read-write",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "TX Priority 0 pause enable.
  When this bit is 1, and TX PFC is enabled, assertion or deassertion of the TX PFC tvalid signal results in a PFC frame being transmitted. When this bit is 0 tx_pfc_p0_tvalid is ignored.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TX_P1_PAUSE_ENABLE": {"access": "read-write",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "TX Priority 1 pause enable.
  When this bit is 1, and TX PFC is enabled, assertion or deassertion of the TX PFC tvalid signal results in a PFC frame being transmitted. When this bit is 0 tx_pfc_p1_tvalid is ignored.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TX_P2_PAUSE_ENABLE": {"access": "read-write",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "TX Priority 2 pause enable.
  When this bit is 1, and TX PFC is enabled, assertion or deassertion of the TX PFC tvalid signal results in a PFC frame being transmitted. When this bit is 0 tx_pfc_p2_tvalid is ignored.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TX_P3_PAUSE_ENABLE": {"access": "read-write",
"bit_offset": "11",
"bit_range": "",
"bit_width": "1",
"desc": "TX Priority 3 pause enable.
  When this bit is 1, and TX PFC is enabled, assertion or deassertion of the TX PFC tvalid signal results in a PFC frame being transmitted. When this bit is 0 tx_pfc_p3_tvalid is ignored.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TX_P4_PAUSE_ENABLE": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "TX Priority 4 pause enable.
  When this bit is 1, and TX PFC is enabled, assertion or deassertion of the TX PFC tvalid signal results in a PFC frame being transmitted. When this bit is 0 tx_pfc_p4_tvalid is ignored.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TX_P5_PAUSE_ENABLE": {"access": "read-write",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "TX Priority 5 pause enable.
  When this bit is 1, and TX PFC is enabled, assertion or deassertion of the TX PFC tvalid signal results in a PFC frame being transmitted. When this bit is 0 tx_pfc_p5_tvalid is ignored.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TX_P6_PAUSE_ENABLE": {"access": "read-write",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "TX Priority 6 pause enable.
  When this bit is 1, and TX PFC is enabled, assertion or deassertion of the TX PFC tvalid signal results in a PFC frame being transmitted. When this bit is 0 tx_pfc_p6_tvalid is ignored.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TX_P7_PAUSE_ENABLE": {"access": "read-write",
"bit_offset": "15",
"bit_range": "",
"bit_width": "1",
"desc": "TX Priority 7 pause enable.
  When this bit is 1, and TX PFC is enabled, assertion or deassertion of the TX PFC tvalid signal results in a PFC frame being transmitted. When this bit is 0 tx_pfc_p7_tvalid is ignored.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TX_AUTO_XON": {"access": "read-write",
"bit_offset": "20",
"bit_range": "",
"bit_width": "1",
"desc": "TX Auto XON.
  Only present when the core has been generated with PFC support  this bit defaults to 0 if PFC is not supported. Send a flow control or PFC frame with the relevant quanta set to zero (XON frame) when the relevant, enabled pause request is dropped.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PFC_ENABLE_RX": {"access": "read-write",
"bit_offset": "25",
"bit_range": "",
"bit_width": "1",
"desc": "Priority pause flow control enable (RX).
  Only present when the core has been generated with PFC support. When this bit is 1, received PFC frames assert the relevant, enabled RX PFC tvalid outputs as described in Receiving a PFC Frame. When this bit is 0, received PFC frames are ignored and passed to the client. This mode should not be enabled at the same time as Flow Control (RX) (Bit[29]).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PFC_ENABLE_TX": {"access": "read-write",
"bit_offset": "26",
"bit_range": "",
"bit_width": "1",
"desc": "Priority pause flow control enable (TX).
  Only present when the core has been generated with PFC support. When this bit is 1, asserting an enabled TX PFC tvalid signal results in a PFC frame being sent from the transmitter. When this bit is 0,the TX PFC tvalid inputs are ignored. This mode should not be enabled at the same time as Flow Control (TX) (Bit[30]).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FLOW_CONTROL_ENABLE_RX": {"access": "read-write",
"bit_offset": "29",
"bit_range": "",
"bit_width": "1",
"desc": "Flow Control Enable (RX).
  When this bit is 1, received flow control frames inhibit the transmitter operation as described in Receiving a Pause Frame. When this bit is 0, received flow control frames are always passed up to the client. This mode should not be enabled at the same time as PFC (Bit[25]).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FLOW_CONTROL_ENABLE_TX": {"access": "read-write",
"bit_offset": "30",
"bit_range": "",
"bit_width": "1",
"desc": "Flow Control Enable (TX).
  When this bit is 1, asserting the pause_req signal sends a flow control frame out from the transmitter as described in Transmitting a Pause Control Frame. When this bit is 0, asserting the pause_req signal has no effect. This mode should not be enabled at the same time as PFC (Bit[26]).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953053196,
},
"MAC_SPEED_CONF_WORD_REG": {"description": "MAC Speed Configuration Word",
"address_offset": "0x410",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"MAC_SPEED_CONF": {"access": "read-write",
"bit_offset": "30",
"bit_range": "",
"bit_width": "2",
"desc": "MAC Speed Configuration.
  00 - 10 Mb/s
  01 - 100 Mb/s
  10 - 1 Gb/s
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953053200,
},
"RX_MAC_FRAME_CONF_WORD_REG": {"description": "RX Max Frame Configuration Word",
"address_offset": "0x414",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"RX_MAX_FRAME_LENGTH": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "15",
"desc": "RX Max Frame Length.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RX_MAX_FRAME_ENABLE": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "1",
"desc": "RX Max Frame Enable.
  When Low, the MAC assumes use of the standard 1518/1522 depending upon the setting of VLAN enable. When High, the MAC allows frames up to RX Max Frame Length irrespective of the value of VLAN enable. If Jumbo Enable is set then this register has no effect.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953053204,
},
"TX_MAC_FRAME_CONF_WORD_REG": {"description": "TX Max Frame Configuration Word",
"address_offset": "0x418",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"TX_MAX_FRAME_LENGTH": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "15",
"desc": "TX Max Frame Length.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TX_MAX_FRAME_ENABLE": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "1",
"desc": "TX Max Frame Enable.
  When Low the MAC assumes use of the standard 1518/1522 depending upon the setting of VLAN enable. When High the MAC allows frames up to TX Max Frame Length irrespective of the value of VLAN enable. If Jumbo Enable is set then this register has no effect.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953053208,
},
"TX_TIMESTAMP_ADJUST_CONTROL_REG": {"description": "Transmitter Timestamp Adjust Control Register",
"address_offset": "0x41C",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"TX_LATENCY_ADJUST": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "TX latency adjust value.
  In ToD mode: This value is in units of nanoseconds and is initialized to reflect the delay following the timestamping position through the MAC, 1000BASE-X FPGA logic, and GTX transceiver components.
  In Correction Field Format: The default value is 387ns decimal value.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TX_TS_CORRECTION_ENABLE": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "1",
"desc": "Transmitter Timestamp Correction Enable.
  0 - Transmitter timestamp is not adjusted.
  1 - Transmitter timestamp is adjusted by the TX latency adjust value.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953053212,
},
"PRIORITY_0_QUANTA_REFRESH_REG": {"description": "Priority 0 Quanta/Refresh Register",
"address_offset": "0x480",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"PER_QUANTA_VALUE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "Pause Quanta 0 value.
  This register is only present when PFC is enabled at core customization time. When enabled, this register sets the quanta value to be inserted in the PFC frame for this priority.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PER_QUANTA_REFRESH_VALUE": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "16",
"desc": "Pause Quanta 0 refresh value.
  This register is only present when PFC is enabled at the core customization time. When enabled, this register controls how frequently a PF quanta is refreshed by the transmission of a new PFC frame. When a refresh occurs, all currently active (TX PFC tvalid is High and enabled) priorities are refreshed.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953053312,
},
"PRIORITY_1_QUANTA_REFRESH_REG": {"description": "Priority 1 Quanta/Refresh Register",
"address_offset": "0x484",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"PER_QUANTA_VALUE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "Pause Quanta 1 value.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PER_QUANTA_REFRESH_VALUE": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "16",
"desc": "Pause Quanta 1 refresh value.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953053316,
},
"PRIORITY_2_QUANTA_REFRESH_REG": {"description": "Priority 2 Quanta/Refresh Register",
"address_offset": "0x488",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"PER_QUANTA_VALUE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "Pause Quanta 2 value.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PER_QUANTA_REFRESH_VALUE": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "16",
"desc": "Pause Quanta 2 refresh value.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953053320,
},
"PRIORITY_3_QUANTA_REFRESH_REG": {"description": "Priority 3 Quanta/Refresh Register",
"address_offset": "0x48C",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"PER_QUANTA_VALUE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "Pause Quanta 3 value.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PER_QUANTA_REFRESH_VALUE": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "16",
"desc": "Pause Quanta 3 refresh value.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953053324,
},
"PRIORITY_4_QUANTA_REFRESH_REG": {"description": "Priority 4 Quanta/Refresh Register",
"address_offset": "0x490",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"PER_QUANTA_VALUE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "Pause Quanta 4 value.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PER_QUANTA_REFRESH_VALUE": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "16",
"desc": "Pause Quanta 4 refresh value.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953053328,
},
"PRIORITY_5_QUANTA_REFRESH_REG": {"description": "Priority 5 Quanta/Refresh Register",
"address_offset": "0x494",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"PER_QUANTA_VALUE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "Pause Quanta 5 value.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PER_QUANTA_REFRESH_VALUE": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "16",
"desc": "Pause Quanta 5 refresh value.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953053332,
},
"PRIORITY_6_QUANTA_REFRESH_REG": {"description": "Priority 6 Quanta/Refresh Register",
"address_offset": "0x498",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"PER_QUANTA_VALUE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "Pause Quanta value 6.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PER_QUANTA_REFRESH_VALUE": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "16",
"desc": "Pause Quanta 6 refresh value.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953053336,
},
"PRIORITY_7_QUANTA_REFRESH_REG": {"description": "Priority 7 Quanta/Refresh Register",
"address_offset": "0x49C",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"PER_QUANTA_VALUE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "Pause Quanta 7 value.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PER_QUANTA_REFRESH_VALUE": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "16",
"desc": "Pause Quanta 7 refresh value.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953053340,
},
"LEGACY_PAUSE_REFRESH_REG": {"description": "Legacy Pause Refresh Register",
"address_offset": "0x4A0",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"PAUSE_QUANTA_REFRESH_VALUE": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "16",
"desc": "Pause Quanta refresh value.
  This register is only present when PFC is enabled at the core customization time. When PFC is supported, the 802.3 pause request can also support XON/XOFF Extended Functionality. This controls the frequency of the automatic pause refresh.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953053344,
},
"ID_REG": {"description": "ID Register",
"address_offset": "0x4F8",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"PATCH_LEVEL": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Patch Level.
  0 - No patch.
  1 - Rev1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"MINOR_REV": {"access": "read-only",
"bit_offset": "16",
"bit_range": "",
"bit_width": "8",
"desc": "Minor Rev.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"MAJOR_REV": {"access": "read-only",
"bit_offset": "24",
"bit_range": "",
"bit_width": "8",
"desc": "Minor Rev.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953053432,
},
"ABILITY_REG": {"description": "Ability Register",
"address_offset": "0x4FC",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"TEN_M_ABILITY": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "10M_Ability.
  If set, the core is 10M capable.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"HUNDRED_M_ABILITY": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "100M_Ability.
  If set, the core is 100M capable.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ONE_G_ABILITY": {"access": "read-only",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "1G_Ability.
  If set, the core is 1G capable.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TWO_P_FIVE_G_ABILITY": {"access": "read-only",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "2_5G_Ability.
  If set, the core is 2.5G capable.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STATISTICS_COUNTERS_AVAILABLE": {"access": "read-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "Statistics Counters available.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"HALF_DUPLEX_CAPABLE": {"access": "read-only",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "Half duplex capable.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FRAME_FILTER_AVAILABLE": {"access": "read-only",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "Frame filter available.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PFC_SUPPORT": {"access": "read-only",
"bit_offset": "16",
"bit_range": "",
"bit_width": "1",
"desc": "PFC Support.
  This bit indicates that the core has been generated with PFC support.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953053436,
},
"MDIO_SETUP_WORD_REG": {"description": "MDIO Setup Word",
"address_offset": "0x500",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"CLOCK_DIVIDE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "6",
"desc": "Clock Divide.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"MDIO_ENABLE": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "MDIO Enable.   1 - MDIO interface can be used to access attached PHY devices.    0 - MDIO interface is disabled and the MDIO signals remain inactive.  A write to this bit only takes effect if Clock Divide is set to a nonzero value.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953053440,
},
"MDIO_CONTROL_WORD_REG": {"description": "MDIO Control Word",
"address_offset": "0x504",
"access": "",
"size": "32",
"interface": "s_axi",
"fields": {"MDIO_READY": {"access": "read-only",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "MDIO ready.
  When set the MDIO is enabled and ready for a new transfer.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"INITIATE": {"access": "write-only",
"bit_offset": "11",
"bit_range": "",
"bit_width": "1",
"desc": "Initiate.
  Writing a 1 to this bit starts an MDIO transfer.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TX_OP": {"access": "read-write",
"bit_offset": "14",
"bit_range": "",
"bit_width": "2",
"desc": "TX_OP.
  01 - Write Access.
  10 - Read Access.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TX_REGAD": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "5",
"desc": "TX_REGAD.
  This controls the register address being accessed.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TX_PHYAD": {"access": "read-write",
"bit_offset": "24",
"bit_range": "",
"bit_width": "5",
"desc": "TX_PHYAD.
  This controls the PHY address being accessed.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953053444,
},
"MDIO_WRITE_DATA_REG": {"description": "MDIO Write Data",
"address_offset": "0x508",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"MDIO_WRITE_DATA": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "MDIO_Write_Data.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953053448,
},
"MDIO_READ_DATA_REG": {"description": "MDIO Read Data",
"address_offset": "0x50C",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"MDIO_READ_DATA": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "MDIO_Read_Data.
  Valid when MDIO ready is sampled High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"MDIO_READY": {"access": "read-only",
"bit_offset": "16",
"bit_range": "",
"bit_width": "1",
"desc": "MDIO Ready.
  This is a copy of Bit[7] of the MDIO Control Word.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953053452,
},
"INTR_STATUS_REG": {"description": "Indicates the status of an interrupt.",
"address_offset": "0x600",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"MDIO": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "MDIO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PTP_TX": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "PTP_TX.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PTP_RX": {"access": "read-only",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "PTP_RX.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PTP_TIMER": {"access": "read-only",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "PTP_TIMER.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953053696,
},
"INTR_PENDING_REG": {"description": "Indicates the pending status of an interrupt",
"address_offset": "0x610",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"MDIO": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "MDIO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PTP_TX": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "PTP_TX.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PTP_RX": {"access": "read-only",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "PTP_RX.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PTP_TIMER": {"access": "read-only",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "PTP_TIMER.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953053712,
},
"INTR_ENABLE_REG": {"description": "Indicates the enable state of an interrupt. Writing a 1 to any bit enables that particular interrupt.",
"address_offset": "0x620",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"MDIO": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "MDIO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PTP_TX": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "PTP_TX.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PTP_RX": {"access": "read-only",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "PTP_RX.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PTP_TIMER": {"access": "read-only",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "PTP_TIMER.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953053728,
},
"INTR_CLEAR_REG": {"description": "Writing a 1 to any bit of this register clears that particular interrupt.",
"address_offset": "0x630",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"MDIO": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "MDIO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PTP_TX": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "PTP_TX.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PTP_RX": {"access": "read-only",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "PTP_RX.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PTP_TIMER": {"access": "read-only",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "PTP_TIMER.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953053744,
},
"UNICAST_ADDRESS_WORD_0_REG": {"description": "Frame filter unicast address[31:0]",
"address_offset": "0x700",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"UNICAST_ADDRESS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Frame filter unicast address[31:0].
  This address is used by the MAC to match against the destination address of any incoming frames. The address is ordered so the first byte transmitted/received is the lowest positioned byte in the register; for example, a MAC address of AA-BB-CC-DD-EE-FF would be stored in Address[47:0] as 0xFFEEDDCCBBAA.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953053952,
},
"UNICAST_ADDRESS_WORD_1_REG": {"description": "Frame filter unicast address[47:32]",
"address_offset": "0x704",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"UNICAST_ADDRESS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "Frame filter unicast address[47:32].
  See description for UNICAST_ADDRESS_WORD_0_REG.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953053956,
},
"FRAME_FILTER_CONTROL_REG": {"description": "Frame Filter Control",
"address_offset": "0x708",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"FILTER_INDEX": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "4",
"desc": "Filter Index.
  All frame filters are mapped to the same location with the filter index and AVB Select specifying which physical filter is to be accessed. When an AVB filter (bit[8] of the register) is being selected only indexes of 0-2 are allowed.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"AVB_SELECT": {"access": "read-write",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "AVB Select.
  If the AVB Endpoint is present this is used to indicate that the filter to be selected is one of the three dedicated filters.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PROMISCUOUS_MODE": {"access": "read-write",
"bit_offset": "31",
"bit_range": "",
"bit_width": "1",
"desc": "Promiscuous Mode.
  If this bit is set to 1, the frame filter is set to operate in promiscuous mode. All frames are passed to the receiver client regardless of the destination address.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953053960,
},
"FRAME_FILTER_ENABLE_REG": {"description": "Frame Filter Enable",
"address_offset": "0x70C",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"FILTER_ENABLE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Filter Enable.
  This enable relates to the physical frame filter pointed to by the Filter index and take the value of AVB Select into account. If clear, the filter passes all packets.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953053964,
},
"FRAME_FILTER_VALUE_BYTES_3_0_REG": {"description": "Frame Filter Value",
"address_offset": "0x710",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"FILTER_VALUE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Filter Value.
  All filter value registers have the same format. The lower 31 bits of filter value, at address 0x710, relating to the filter at physical Frame Filter index, that is to be written to the address table. The value is ordered so that the first byte transmitted/received is the lowest positioned byte in the register; for example, a MAC address of AA-BB-CC-DD-EE-FF would be stored in Filter Value[47:0] as 0xFFEEDDCCBBAA.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953053968,
},
"FRAME_FILTER_VALUE_BYTES_7_4_REG": {"description": "Frame Filter Value",
"address_offset": "0x714",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"FILTER_VALUE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Filter Value.
  See descriptions for FRAME_FILTER_VALUE_BYTES_3_0_REG.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953053972,
},
"FRAME_FILTER_VALUE_BYTES_11_8_REG": {"description": "Frame Filter Value",
"address_offset": "0x718",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"FILTER_VALUE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Filter Value.
  See descriptions for FRAME_FILTER_VALUE_BYTES_3_0_REG.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953053976,
},
"FRAME_FILTER_VALUE_BYTES_15_12_REG": {"description": "Frame Filter Value",
"address_offset": "0x71C",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"FILTER_VALUE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Filter Value.
  See descriptions for FRAME_FILTER_VALUE_BYTES_3_0_REG.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953053980,
},
"FRAME_FILTER_VALUE_BYTES_19_16_REG": {"description": "Frame Filter Value",
"address_offset": "0x720",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"FILTER_VALUE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Filter Value.
  See descriptions for FRAME_FILTER_VALUE_BYTES_3_0_REG.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953053984,
},
"FRAME_FILTER_VALUE_BYTES_23_20_REG": {"description": "Frame Filter Value",
"address_offset": "0x724",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"FILTER_VALUE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Filter Value.
  See descriptions for FRAME_FILTER_VALUE_BYTES_3_0_REG.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953053988,
},
"FRAME_FILTER_VALUE_BYTES_27_24_REG": {"description": "Frame Filter Value",
"address_offset": "0x728",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"FILTER_VALUE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Filter Value.
  See descriptions for FRAME_FILTER_VALUE_BYTES_3_0_REG.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953053992,
},
"FRAME_FILTER_VALUE_BYTES_31_28_REG": {"description": "Frame Filter Value",
"address_offset": "0x72C",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"FILTER_VALUE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Filter Value.
  See descriptions for FRAME_FILTER_VALUE_BYTES_3_0_REG.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953053996,
},
"FRAME_FILTER_VALUE_BYTES_35_32_REG": {"description": "Frame Filter Value",
"address_offset": "0x730",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"FILTER_VALUE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Filter Value.
  See descriptions for FRAME_FILTER_VALUE_BYTES_3_0_REG.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953054000,
},
"FRAME_FILTER_VALUE_BYTES_39_36_REG": {"description": "Frame Filter Value",
"address_offset": "0x734",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"FILTER_VALUE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Filter Value.
  See descriptions for FRAME_FILTER_VALUE_BYTES_3_0_REG.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953054004,
},
"FRAME_FILTER_VALUE_BYTES_43_40_REG": {"description": "Frame Filter Value",
"address_offset": "0x738",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"FILTER_VALUE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Filter Value.
  See descriptions for FRAME_FILTER_VALUE_BYTES_3_0_REG.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953054008,
},
"FRAME_FILTER_VALUE_BYTES_47_44_REG": {"description": "Frame Filter Value",
"address_offset": "0x73C",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"FILTER_VALUE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Filter Value.
  See descriptions for FRAME_FILTER_VALUE_BYTES_3_0_REG.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953054012,
},
"FRAME_FILTER_VALUE_BYTES_51_48_REG": {"description": "Frame Filter Value",
"address_offset": "0x740",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"FILTER_VALUE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Filter Value.
  See descriptions for FRAME_FILTER_VALUE_BYTES_3_0_REG.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953054016,
},
"FRAME_FILTER_VALUE_BYTES_55_52_REG": {"description": "Frame Filter Value",
"address_offset": "0x744",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"FILTER_VALUE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Filter Value.
  See descriptions for FRAME_FILTER_VALUE_BYTES_3_0_REG.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953054020,
},
"FRAME_FILTER_VALUE_BYTES_59_56_REG": {"description": "Frame Filter Value",
"address_offset": "0x748",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"FILTER_VALUE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Filter Value.
  See descriptions for FRAME_FILTER_VALUE_BYTES_3_0_REG.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953054024,
},
"FRAME_FILTER_VALUE_BYTES_63_60_REG": {"description": "Frame Filter Value",
"address_offset": "0x74C",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"FILTER_VALUE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Filter Value.
  See descriptions for FRAME_FILTER_VALUE_BYTES_3_0_REG.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953054028,
},
"FRAME_FILTER_MASK_VALUE_BYTES_3_0_REG": {"description": "Frame Filter Mask Value",
"address_offset": "0x750",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"FILTER_MASK_VALUE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Filter Mask Value.
  All mask value registers have the same format.
  If a mask bit is set to 1 then the corresponding bit of the Filter Value is compared by the frame filter. For example, if a basic Destination address comparison was desired then Bits[47:0] should be written to 1 and all other bits to 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953054032,
},
"FRAME_FILTER_MASK_VALUE_BYTES_7_4_REG": {"description": "Frame Filter Mask Value",
"address_offset": "0x754",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"FILTER_MASK_VALUE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Filter Mask Value.
  See descriptions for FRAME_FILTER_MASK_VALUE_BYTES_3_0_REG.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953054036,
},
"FRAME_FILTER_MASK_VALUE_BYTES_11_8_REG": {"description": "Frame Filter Mask Value",
"address_offset": "0x758",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"FILTER_MASK_VALUE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Filter Mask Value.
  See descriptions for FRAME_FILTER_MASK_VALUE_BYTES_3_0_REG.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953054040,
},
"FRAME_FILTER_MASK_VALUE_BYTES_15_12_REG": {"description": "Frame Filter Mask Value",
"address_offset": "0x75C",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"FILTER_MASK_VALUE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Filter Mask Value.
  See descriptions for FRAME_FILTER_MASK_VALUE_BYTES_3_0_REG.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953054044,
},
"FRAME_FILTER_MASK_VALUE_BYTES_19_16_REG": {"description": "Frame Filter Mask Value",
"address_offset": "0x760",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"FILTER_MASK_VALUE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Filter Mask Value.
  See descriptions for FRAME_FILTER_MASK_VALUE_BYTES_3_0_REG.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953054048,
},
"FRAME_FILTER_MASK_VALUE_BYTES_23_20_REG": {"description": "Frame Filter Mask Value",
"address_offset": "0x764",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"FILTER_MASK_VALUE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Filter Mask Value.
  See descriptions for FRAME_FILTER_MASK_VALUE_BYTES_3_0_REG.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953054052,
},
"FRAME_FILTER_MASK_VALUE_BYTES_27_24_REG": {"description": "Frame Filter Mask Value",
"address_offset": "0x768",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"FILTER_MASK_VALUE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Filter Mask Value.
  See descriptions for FRAME_FILTER_MASK_VALUE_BYTES_3_0_REG.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953054056,
},
"FRAME_FILTER_MASK_VALUE_BYTES_31_28_REG": {"description": "Frame Filter Mask Value",
"address_offset": "0x76C",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"FILTER_MASK_VALUE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Filter Mask Value.
  See descriptions for FRAME_FILTER_MASK_VALUE_BYTES_3_0_REG.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953054060,
},
"FRAME_FILTER_MASK_VALUE_BYTES_35_32_REG": {"description": "Frame Filter Mask Value",
"address_offset": "0x770",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"FILTER_MASK_VALUE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Filter Mask Value.
  See descriptions for FRAME_FILTER_MASK_VALUE_BYTES_3_0_REG.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953054064,
},
"FRAME_FILTER_MASK_VALUE_BYTES_39_36_REG": {"description": "Frame Filter Mask Value",
"address_offset": "0x774",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"FILTER_MASK_VALUE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Filter Mask Value.
  See descriptions for FRAME_FILTER_MASK_VALUE_BYTES_3_0_REG.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953054068,
},
"FRAME_FILTER_MASK_VALUE_BYTES_43_40_REG": {"description": "Frame Filter Mask Value",
"address_offset": "0x778",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"FILTER_MASK_VALUE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Filter Mask Value.
  See descriptions for FRAME_FILTER_MASK_VALUE_BYTES_3_0_REG.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953054072,
},
"FRAME_FILTER_MASK_VALUE_BYTES_47_44_REG": {"description": "Frame Filter Mask Value",
"address_offset": "0x77C",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"FILTER_MASK_VALUE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Filter Mask Value.
  See descriptions for FRAME_FILTER_MASK_VALUE_BYTES_3_0_REG.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953054076,
},
"FRAME_FILTER_MASK_VALUE_BYTES_51_48_REG": {"description": "Frame Filter Mask Value",
"address_offset": "0x780",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"FILTER_MASK_VALUE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Filter Mask Value.
  See descriptions for FRAME_FILTER_MASK_VALUE_BYTES_3_0_REG.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953054080,
},
"FRAME_FILTER_MASK_VALUE_BYTES_55_52_REG": {"description": "Frame Filter Mask Value",
"address_offset": "0x784",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"FILTER_MASK_VALUE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Filter Mask Value.
  See descriptions for FRAME_FILTER_MASK_VALUE_BYTES_3_0_REG.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953054084,
},
"FRAME_FILTER_MASK_VALUE_BYTES_59_56_REG": {"description": "Frame Filter Mask Value",
"address_offset": "0x788",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"FILTER_MASK_VALUE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Filter Mask Value.
  See descriptions for FRAME_FILTER_MASK_VALUE_BYTES_3_0_REG.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953054088,
},
"FRAME_FILTER_MASK_VALUE_BYTES_63_60_REG": {"description": "Frame Filter Mask Value",
"address_offset": "0x78C",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"FILTER_MASK_VALUE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Filter Mask Value.
  See descriptions for FRAME_FILTER_MASK_VALUE_BYTES_3_0_REG.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953054092,
},
"TX_PTP_PKT_BUFFER_CTRL_REG": {"description": "TX PTP Packet Buffer Control Register",
"address_offset": "0x12000",
"access": "",
"size": "32",
"interface": "s_axi",
"fields": {"TX_SEND_FRAME_BITS": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "tx_send_frame Bits.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TX_FRAME_WAITING_INDICATION": {"access": "read-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "8",
"desc": "tx_frame_waiting Indication.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TX_PACKET": {"access": "read-only",
"bit_offset": "16",
"bit_range": "",
"bit_width": "3",
"desc": "tx_packet.
  Indicates the number (block RAM bin position) of the most recently transmitted PTP packet.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953125888,
},
"RX_PTP_PKT_BUFFER_CTRL_REG": {"description": "RX PTP Packet Buffer Control Register",
"address_offset": "0x12004",
"access": "",
"size": "32",
"interface": "s_axi",
"fields": {"RX_CLEAR": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "rx_clear.
  When written with a 1, forces the buffer to empty, in practice moving the write address to the same value as the read address. If read, always returns 0.tx_send_frame Bitstx_send_frame Bits.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RX_PACKET": {"access": "read-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "4",
"desc": "rx_packet.
  Indicates the number (block RAM bin position) of the most recently received PTP packet
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953125892,
},
"TX_ARBITER_SEND_SLOPE_CTL_REG": {"description": "TX Arbiter Send Slope Control Register",
"address_offset": "0x1200C",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"VAL_SEND_SLOPE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "20",
"desc": "Value of sendSlope.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953125900,
},
"TX_ARBITER_IDLE_SLOPE_CTL_REG": {"description": "TX Arbiter Idle Slope Control Register",
"address_offset": "0x12010",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"VAL_SEND_SLOPE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "20",
"desc": "Value of sendSlope.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953125904,
},
"RTC_NANOSEC_FIELD_OFFSET_REG": {"description": "RTC Nanoseconds Field Offset",
"address_offset": "0x12800",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"OFFSET_NANOSEC": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "30",
"desc": "30-bit offset value for the RTC nanoseconds.
  Used by the microprocessor to initialize the RTC, then afterwards to perform the regular RTC corrections (when in slave mode).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953127936,
},
"RTC_SEC_FIELD_OFFSET_BITS_31_0_REG": {"description": "Seconds Field Offset Bits[31:0]",
"address_offset": "0x12808",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"OFFSET_SEC": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "32-bit offset value for the RTC seconds field.
  Used by the microprocessor to initialize the RTC, then afterwards to perform the regular RTC corrections (when in slave mode).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953127944,
},
"RTC_SEC_FIELD_OFFSET_BITS_47_32_REG": {"description": "Seconds Field Offset Bits[47:32]",
"address_offset": "0x1280C",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"OFFSET_SEC": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "16-bit offset value for the RTC seconds field.
  Used by the microprocessor to initialize the RTC, then afterwards to perform the regular RTC corrections (when in slave mode).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953127948,
},
"RTC_INCREMENT_VAL_REG": {"description": "RTC Increment Value Control Register",
"address_offset": "0x12810",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"NANOSEC": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "26",
"desc": "RTC Increment Value Control Register.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953127952,
},
"CURRENT_RTC_NANOSEC_FIELD_VAL_REG": {"description": "Current RTC Nanoseconds Value",
"address_offset": "0x12814",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"VAL_RTC_NANOSEC_FIELD": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "30",
"desc": "Current Value of the synchronized RTC nanoseconds field.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953127956,
},
"CURRENT_RTC_SEC_FIELD_VAL_BITS_31_0_REG": {"description": "Current RTC Seconds Field Value Bits [31:0]",
"address_offset": "0x12818",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"VAL_RTC_SEC": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Sampled Value of the synchronized RTC Seconds field (Bits[31:0]).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953127960,
},
"CURRENT_RTC_SEC_FIELD_VAL_BITS_47_32_REG": {"description": "Current RTC Seconds Field Value Bits [47:32]",
"address_offset": "0x1281C",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"VAL_RTC_SEC": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "Sampled Value of the synchronized RTC Seconds field (Bits[47:32]).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953127964,
},
"RTC_INTR_CLEAR_REG": {"description": "RTC Interrupt Clear Register",
"address_offset": "0x12820",
"access": "write-only",
"size": "32",
"interface": "s_axi",
"fields": {"CLEAR": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "RTC Interrupt Clear Register.
  Write ANY value to Bit[0] of this register to clear the interrupt_ptp_timer Interrupt signal. This bit always returns 0 on read.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953127968,
},
"RTC_PHASE_ADJ_REG": {"description": "RTC Interrupt Clear Register",
"address_offset": "0x12824",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"VAL_RTC_NANOSEC_FIELD": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "30",
"desc": "RTC Phase Adjustment Register.
  ns value relating to the phase offset for all RTC derived timing signals (clk8k).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953127972,
},
},
"axi_ethernet_2": {"RESET_AND_ADDRESS_FILTER_REG": {"description": "Reset and Address Filter Register",
"address_offset": "0x0",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"MCSTREJ": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Reject Receive Multicast Destination Address.
  0  Accept receive multicast destination address Ethernet frames that meet address filtering specified in FMI register and/or the multicast address table.
  1  Reject all receive multicast destination address Ethernet frames regardless of FMI register and multicast address table.For each I/O bit programmed as input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"BCSTREJ": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Reject Receive Broadcast Destination Address.
  0  Accept receive broadcast destination address Ethernet frames.
  1  Reject all receive broadcast destination address Ethernet frames. This is the only method available for blocking broadcast Ethernet frames.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TXVTAGMODE": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "2",
"desc": "Transmit VLAN Tag Mode.
  00  No VLAN tags are added to transmit frames.
  01  VLAN tags are added to all transmit frames.
  10  VLAN tags are added to all transmit frames that already have a VLAN tag.
  11  VLAN tags are added to select transmit frames that already have VLAN tags.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXVTAGMODE": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "2",
"desc": "Receive VLAN Tag Mode.
  00  No VLAN tags are added to receive frames.
  01  VLAN tags are added to all receive frames.
  10  VLAN tags are added to all receive frames that already have a VLAN tag.
  11  VLAN tags are added to select receive frames that already have VLAN tags.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TXVSTRPMODE": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "2",
"desc": "Transmit VLAN Strip Mode.
  00  No VLAN tags are stripped to transmit frames.
  01  One VLAN tag is stripped from all transmit frames that have VLAN tags.
  10  Reserved.
  11  One VLAN tag is stripped from select transmit frames that already have VLAN tags.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXVSTRPMODE": {"access": "read-write",
"bit_offset": "9",
"bit_range": "",
"bit_width": "2",
"desc": "Receive VLAN Strip Mode.
  00  No VLAN tags are stripped to receive frames.
  01  One VLAN tag is stripped from all receive frames that have VLAN tags.
  10  Reserved.
  11  One VLAN tag is stripped from select receive frames that already have VLAN tags.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"NEWFNCENBL": {"access": "read-write",
"bit_offset": "11",
"bit_range": "",
"bit_width": "1",
"desc": "New Functions Enable.
  0  Disable new functions.
  1  Enable new functions if present.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EMULTIFLTRENBL": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "Enhanced Multicast Filter Enable.
  0  Disable enhanced multicast address filtering mode.
  1  Enable enhanced multicast address filtering mode if present.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXBADFRMEN": {"access": "read-write",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "Receive Bad Frame Enable.
  0  Normal operation, bad frames are rejected.
  1  Bad frames are accepted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953314304,
},
"TRANSMIT_PAUSE_FRAME_REG": {"description": "Transmit Pause Frame Register",
"address_offset": "0x4",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"TPFV": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "Transmit Pause Frame Value.
  These bits denote the value of the transmit pause frame pause time in units of 512 bit times. If enabled by the FCC register, writing a value into this register initiates the transmission of a single pause frame with the pause value defined in this field.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953314308,
},
"TRANSMIT_IFG_ADJUST_REG": {"description": "Transmit Inter Frame Gap Adjustment Register",
"address_offset": "0x8",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"IFGP0": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Transmit Inter Frame Gap Adjustment Value.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953314312,
},
"INTERRUPT_STATUS_REG": {"description": "Interrupt Status Register",
"address_offset": "0xC",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"HARDACSCMPLT": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Hard register Access Complete.
  0  Hard register access is not complete.
  1  Hard register access is complete.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"AUTONEG": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Auto-Negotiation Complete.
  0  auto-negotiation not complete.
  1  auto-negotiation complete.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXCMPLT": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Receive Complete.
  0  no frame received.
  1  frame received.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXRJECT": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Receive Frame Rejected.
  0  no receive frame rejected.
  1  receive frame was rejected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXMEMOVR": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Receive Memory Overrun.
  0  normal operation, no overflow occurred.
  1  receive Memory overflow occurred and data was lost.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TXCMPLT": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "Transmit Complete.
  0  no frame transmitted.
  1  frame transmitted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXDCMLOCK": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "Receive DCM Lock.
  0  RX digital clock manager (DCM) not locked.
  1  RX DCM Locked.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"MGTRDY": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "Serial Transceiver Ready.
  0  Serial transceiver / TEMAC not ready.
  1  Serial transceiver / TEMAC ready.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PHYRSTCMPLT": {"access": "read-write",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "PHY Reset Complete.
  0  PHY not ready.
  1  PHY ready.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953314316,
},
"INTERRUPT_PENDING_REG": {"description": "Interrupt Pending Register",
"address_offset": "0x10",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"HARDACSCMPLT": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Hard register Access Complete.
  0  Hard register access is not complete.
  1  Hard register access is complete.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"AUTONEG": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Auto-Negotiation Complete.
  0  auto-negotiation not complete.
  1  auto-negotiation complete.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXCMPLT": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Receive Complete.
  0  no frame received.
  1  frame received.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXRJECT": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Receive Frame Rejected.
  0  no receive frame rejected.
  1  receive frame was rejected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXMEMOVR": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Receive Memory Overrun.
  0  normal operation, no overflow occurred.
  1  receive Memory overflow occurred and data was lost.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TXCMPLT": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "Transmit Complete.
  0  no frame transmitted.
  1  frame transmitted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXDCMLOCK": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "Receive DCM Lock.
  0  RX digital clock manager (DCM) not locked.
  1  RX DCM Locked.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"MGTRDY": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "MGT Ready.
  0  Serial transceiver / TEMAC not ready.
  1  Serial transceiver / TEMAC ready.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PHYRSTCMPLT": {"access": "read-write",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "PHY Reset Complete.
  0  PHY not ready.
  1  PHY ready.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953314320,
},
"INTERRUPT_ENABLE_REG": {"description": "Interrupt Enable Register",
"address_offset": "0x14",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"HARDACSCMPLT": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Hard register Access Complete.
  0  Hard register access is not complete.
  1  Hard register access is complete.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"AUTONEG": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Auto-Negotiation Complete.
  0  auto-negotiation not complete.
  1  auto-negotiation complete.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXCMPLT": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Receive Complete.
  0  no frame received.
  1  frame received.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXRJECT": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Receive Frame Rejected.
  0  no receive frame rejected.
  1  receive frame was rejected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXMEMOVR": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Receive Memory Overrun.
  0  normal operation, no overflow occurred.
  1  receive Memory overflow occurred and data was lost.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TXCMPLT": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "Transmit Complete.
  0  no frame transmitted.
  1  frame transmitted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXDCMLOCK": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "Receive DCM Lock.
  0  RX digital clock manager (DCM) not locked.
  1  RX DCM Locked.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"MGTRDY": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "MGT Ready.
  0  Serial transceiver / TEMAC not ready.
  1  Serial transceiver / TEMAC ready.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PHYRSTCMPLT": {"access": "read-write",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "PHY Reset Complete.
  0  PHY not ready.
  1  PHY ready.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953314324,
},
"TRANSMIT_VLAN_TAG_REG": {"description": "Transmit VLAN Tag Register",
"address_offset": "0x18",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"VID": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "12",
"desc": "VLAN identifier.
  Uniquely identifies the VLAN to which the frame belongs.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CFI": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "Canonical Format Indicator.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PRIORITY": {"access": "read-write",
"bit_offset": "13",
"bit_range": "",
"bit_width": "3",
"desc": "User Priority.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TPID": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "16",
"desc": "Tag Protocol Identifier.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953314328,
},
"RECEIVE_VLAN_TAG_REG": {"description": "Receive VLAN Tag Register",
"address_offset": "0x1C",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"VID": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "12",
"desc": "VLAN identifier.
  Uniquely identifies the VLAN to which the frame belongs.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CFI": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "Canonical Format Indicator.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PRIORITY": {"access": "read-write",
"bit_offset": "13",
"bit_range": "",
"bit_width": "3",
"desc": "User Priority.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TPID": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "16",
"desc": "Tag Protocol Identifier.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953314332,
},
"UNICAST_ADDRESS_WORD_LOWER_REG": {"description": "Unicast Address Word Lower Register",
"address_offset": "0x20",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"UNICASTADDR": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Unicast Address.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953314336,
},
"UNICAST_ADDRESS_WORD_UPPER_REG": {"description": "Unicast Address Word Upper Register",
"address_offset": "0x24",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"UNICASTADDR": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "Unicast Address.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953314340,
},
"VLAN_TPID_WORD0_REG": {"description": "VLAN TPID Word 0 Register",
"address_offset": "0x28",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"TPID0": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "TPID Value 0.
  These bits represent one TPID value that is used for recognizing VLAN frames for both the transmit and receive paths.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TPID1": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "16",
"desc": "TPID Value 1.
  These bits represent one TPID value that is used for recognizing VLAN frames for both the transmit and receive paths.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953314344,
},
"VLAN_TPID_WORD1_REG": {"description": "VLAN TPID Word 1 Register",
"address_offset": "0x2C",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"TPID2": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "TPID Value 2.
  These bits represent one TPID value that is used for recognizing VLAN frames for both the transmit and receive paths.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TPID3": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "16",
"desc": "TPID Value 3.
  These bits represent one TPID value that is used for recognizing VLAN frames for both the transmit and receive paths.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953314348,
},
"PCS_PMA_TEMAC_STATUS_REG": {"description": "PCS PMA TEMAC Status Register",
"address_offset": "0x30",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"LINKSTATUS": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Link Status.
  0  No Link.
  1  Link is up.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"LINKSYNC": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Link Synchronization.
  0  Synchronization failed.
  1  Synchronization obtained.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RUDI_C": {"access": "read-only",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "RUDI(/C/).
  0  /C/ ordered sets(AN Configuration sequences) not there.
  1  Receiving /C/ ordered sets.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RUDI_I": {"access": "read-only",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "RUDI(/I/).
  0  /I/ ordered sets(Idles) not there.
  1  Receiving /I/ ordered sets.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RUDI_INVLD": {"access": "read-only",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "RUDI(/INVALID/).
  0  No invalid data.
  1  Receiving invalid data while receiving/C/ or/I/ ordered set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXDISPERR": {"access": "read-only",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "Receive Disparity Error.
  0  No running disparity error.
  1  Receiving running disparity error during the 8B/10B decoding function.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXNOTINTABLE": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "Receive Not In Table.
  0  No receive not in table error.
  1  Receiving code group which is not recognized from the 8B/10B coding tables.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PHYLINKSTATUS": {"access": "read-only",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "PHY Link Status (SGMII only).   0  Indicates that it has not linked with its link partner.   1  Indicates that the PHY has obtained a link with its link partner. When operating in 1000BASE-X mode this bit remains Low and should be ignored.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RMTFLTENC": {"access": "read-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "2",
"desc": "Remote Fault Encoding (1000BASE-X only).   00  No error, link OK.   01 - Offline.   10 - Link failure.   11 - Auto-Negotiation error. This signal has no significance when the core is in SGMII mode with PHY side implementation and indicates 00.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SPEED": {"access": "read-only",
"bit_offset": "10",
"bit_range": "",
"bit_width": "2",
"desc": "This signal indicates the speed negotiated and is only valid when Auto-Negotiation is enabled. The signal encoding is:   11 - Reserved.   10 - 1000 Mb/s.   01 - 100 Mb/s.   00  10 Mb/s.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DUPLEX": {"access": "read-only",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "This bit indicates the Duplex mode negotiated with the link partner.
  1 - Full-Duplex.
  0 - Half-Duplex.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RMTFLT": {"access": "read-only",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "Remote Fault (1000BASE-X only)
  1 - Remote fault is detected.
  0 - No remote fault.
This signal has no significance in SGMII PHY mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953314352,
},
"RECEIVED_BYTES_COUNTER_WORD_0_REG": {"description": "Received Bytes Counter Word 0",
"address_offset": "0x200",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"RECEIVED_BYTES_COUNTER_WORD_0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Received Bytes Counter Word 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953314816,
},
"RECEIVED_BYTES_COUNTER_WORD_1_REG": {"description": "Received Bytes Counter Word 1",
"address_offset": "0x204",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"RECEIVED_BYTES_COUNTER_WORD_1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Received Bytes Counter Word 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953314820,
},
"TRANSMITTED_BYTES_COUNTER_WORD_0_REG": {"description": "Transmitted Bytes Counter Word 0",
"address_offset": "0x208",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"TRANSMITTED_BYTES_COUNTER_WORD_0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Transmitted Bytes Counter Word 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953314824,
},
"TRANSMITTED_BYTES_COUNTER_WORD_1_REG": {"description": "Transmitted Bytes Counter Word 1",
"address_offset": "0x20C",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"TRANSMITTED_BYTES_COUNTER_WORD_1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Transmitted Bytes Counter Word 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953314828,
},
"UNDERSIZE_FRAMES_COUNTER_WORD_0_REG": {"description": "Undersize Frames Counter Word 0",
"address_offset": "0x210",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"UNDERSIZE_FRAMES_COUNTER_WORD_0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Undersize Frames Counter Word 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953314832,
},
"UNDERSIZE_FRAMES_COUNTER_WORD_1_REG": {"description": "Undersize Frames Counter Word 1",
"address_offset": "0x214",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"UNDERSIZE_FRAMES_COUNTER_WORD_1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Undersize Frames Counter Word 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953314836,
},
"FRAGMENT_FRAMES_COUNTER_WORD_0_REG": {"description": "Fragment Frames Counter Word 0",
"address_offset": "0x218",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"FRAGMENT_FRAMES_COUNTER_WORD_0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Fragment Frames Counter Word 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953314840,
},
"FRAGMENT_FRAMES_COUNTER_WORD_1_REG": {"description": "Fragment Frames Counter Word 1",
"address_offset": "0x21C",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"FRAGMENT_FRAMES_COUNTER_WORD_1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Fragment Frames Counter Word 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953314844,
},
"RX_64BYTE_FRAMES_COUNTER_WORD_0_REG": {"description": "RX 64-Byte Frames Counter Word 0",
"address_offset": "0x220",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"RX_64BYTE_FRAMES_COUNTER_WORD_0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "RX 64-Byte Frames Counter Word 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953314848,
},
"RX_64BYTE_FRAMES_COUNTER_WORD_1_REG": {"description": "RX 64-Byte Frames Counter Word 1",
"address_offset": "0x224",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"RX_64BYTE_FRAMES_COUNTER_WORD_1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "RX 64-Byte Frames Counter Word 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953314852,
},
"RX_65_127_BYTE_FRAMES_COUNTER_WORD_0_REG": {"description": "RX 65-127-Byte Frames Counter Word 0",
"address_offset": "0x228",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"RX_65_127_BYTE_FRAMES_COUNTER_WORD_0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "RX 65-127-Byte Frames Counter Word 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953314856,
},
"RX_65_127_BYTE_FRAMES_COUNTER_WORD_1_REG": {"description": "RX 65-127-Byte Frames Counter Word 1",
"address_offset": "0x22C",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"RX_65_127_BYTE_FRAMES_COUNTER_WORD_1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "RX 65-127-Byte Frames Counter Word 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953314860,
},
"RX_128_255_BYTE_FRAMES_COUNTER_WORD_0_REG": {"description": "RX 128-255-Byte Frames Counter Word 0",
"address_offset": "0x230",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"RX_128_255_BYTE_FRAMES_COUNTER_WORD_0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "RX 128-255-Byte Frames Counter Word 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953314864,
},
"RX_128_255_BYTE_FRAMES_COUNTER_WORD_1_REG": {"description": "RX 128-255-Byte Frames Counter Word 1",
"address_offset": "0x234",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"RX_128_255_BYTE_FRAMES_COUNTER_WORD_1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "RX 128-255-Byte Frames Counter Word 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953314868,
},
"RX_256_511_BYTE_FRAMES_COUNTER_WORD_0_REG": {"description": "RX 256-511-Byte Frames Counter Word 0",
"address_offset": "0x238",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"RX_256_511_BYTE_FRAMES_COUNTER_WORD_0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "RX 256-511-Byte Frames Counter Word 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953314872,
},
"RX_256_511_BYTE_FRAMES_COUNTER_WORD_1_REG": {"description": "RX 256-511-Byte Frames Counter Word 1",
"address_offset": "0x23C",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"RX_256_511_BYTE_FRAMES_COUNTER_WORD_1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "RX 256-511-Byte Frames Counter Word 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953314876,
},
"RX_512_1023_BYTE_FRAMES_COUNTER_WORD_0_REG": {"description": "RX 512-1023-Byte Frames Counter Word 0",
"address_offset": "0x240",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"RX_512_1023_BYTE_FRAMES_COUNTER_WORD_0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "RX 512-1023-Byte Frames Counter Word 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953314880,
},
"RX_512_1023_BYTE_FRAMES_COUNTER_WORD_1_REG": {"description": "RX 512-1023-Byte Frames Counter Word 1",
"address_offset": "0x244",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"RX_512_1023_BYTE_FRAMES_COUNTER_WORD_1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "RX 512-1023-Byte Frames Counter Word 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953314884,
},
"RX_1024_MAX_BYTE_FRAMES_COUNTER_WORD_0_REG": {"description": "RX 1024-Max Frames Size Byte Frames Counter Word 0",
"address_offset": "0x248",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"RX_1024_MAX_BYTE_FRAMES_COUNTER_WORD_0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "RX 1024-Max Frames Size Byte Frames Counter Word 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953314888,
},
"RX_1024_MAX_BYTE_FRAMES_COUNTER_WORD_1_REG": {"description": "RX 1024-Max Frames Size Byte Frames Counter Word 1",
"address_offset": "0x24C",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"RX_1024_MAX_BYTE_FRAMES_COUNTER_WORD_1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "RX 1024-Max Frames Size Byte Frames Counter Word 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953314892,
},
"RX_OVERSIZE_FRAMES_COUNTER_WORD_0_REG": {"description": "RX Oversize Frames Counter Word 0",
"address_offset": "0x250",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"RX_OVERSIZE_FRAMES_COUNTER_WORD_0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "RX Oversize Frames Counter Word 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953314896,
},
"RX_OVERSIZE_FRAMES_COUNTER_WORD_1_REG": {"description": "RX Oversize Frames Counter Word 1",
"address_offset": "0x254",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"RX_OVERSIZE_FRAMES_COUNTER_WORD_1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "RX Oversize Frames Counter Word 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953314900,
},
"TX_64BYTE_FRAMES_COUNTER_WORD_0_REG": {"description": "TX 64-Byte Frames Counter Word 0",
"address_offset": "0x258",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"TX_64BYTE_FRAMES_COUNTER_WORD_0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "TX 64-Byte Frames Counter Word 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953314904,
},
"TX_64BYTE_FRAMES_COUNTER_WORD_1_REG": {"description": "TX 64-Byte Frames Counter Word 1",
"address_offset": "0x25C",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"TX_64BYTE_FRAMES_COUNTER_WORD_1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "TX 64-Byte Frames Counter Word 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953314908,
},
"TX_65_127_BYTE_FRAMES_COUNTER_WORD_0_REG": {"description": "TX 65-127-Byte Frames Counter Word 0",
"address_offset": "0x260",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"TX_65_127_BYTE_FRAMES_COUNTER_WORD_0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "TX 65-127-Byte Frames Counter Word 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953314912,
},
"TX_65_127_BYTE_FRAMES_COUNTER_WORD_1_REG": {"description": "TX 65-127-Byte Frames Counter Word 1",
"address_offset": "0x264",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"TX_65_127_BYTE_FRAMES_COUNTER_WORD_1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "TX 65-127-Byte Frames Counter Word 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953314916,
},
"TX_128_255_BYTE_FRAMES_COUNTER_WORD_0_REG": {"description": "TX 128-255-Byte Frames Counter Word 0",
"address_offset": "0x268",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"TX_128_255_BYTE_FRAMES_COUNTER_WORD_0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "TX 128-255-Byte Frames Counter Word 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953314920,
},
"TX_128_255_BYTE_FRAMES_COUNTER_WORD_1_REG": {"description": "TX 128-255-Byte Frames Counter Word 1",
"address_offset": "0x26C",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"TX_128_255_BYTE_FRAMES_COUNTER_WORD_1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "TX 128-255-Byte Frames Counter Word 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953314924,
},
"TX_256_511_BYTE_FRAMES_COUNTER_WORD_0_REG": {"description": "TX 256-511-Byte Frames Counter Word 0",
"address_offset": "0x270",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"TX_256_511_BYTE_FRAMES_COUNTER_WORD_0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "TX 256-511-Byte Frames Counter Word 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953314928,
},
"TX_256_511_BYTE_FRAMES_COUNTER_WORD_1_REG": {"description": "TX 256-511-Byte Frames Counter Word 1",
"address_offset": "0x274",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"TX_256_511_BYTE_FRAMES_COUNTER_WORD_1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "TX 256-511-Byte Frames Counter Word 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953314932,
},
"TX_512_1023_BYTE_FRAMES_COUNTER_WORD_0_REG": {"description": "TX 512-1023-Byte Frames Counter Word 0",
"address_offset": "0x278",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"TX_512_1023_BYTE_FRAMES_COUNTER_WORD_0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "TX 512-1023-Byte Frames Counter Word 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953314936,
},
"TX_512_1023_BYTE_FRAMES_COUNTER_WORD_1_REG": {"description": "TX 512-1023-Byte Frames Counter Word 1",
"address_offset": "0x27C",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"TX_512_1023_BYTE_FRAMES_COUNTER_WORD_1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "TX 512-1023-Byte Frames Counter Word 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953314940,
},
"TX_1024_MAX_BYTE_FRAMES_COUNTER_WORD_0_REG": {"description": "TX 1024-Max Frames Size Byte Frames Counter Word 0",
"address_offset": "0x280",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"TX_1024_MAX_BYTE_FRAMES_COUNTER_WORD_0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "TX 1024-Max Frames Size Byte Frames Counter Word 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953314944,
},
"TX_1024_MAX_BYTE_FRAMES_COUNTER_WORD_1_REG": {"description": "TX 1024-Max Frames Size Byte Frames Counter Word 1",
"address_offset": "0x284",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"TX_1024_MAX_BYTE_FRAMES_COUNTER_WORD_1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "TX 1024-Max Frames Size Byte Frames Counter Word 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953314948,
},
"TX_OVERSIZE_FRAMES_COUNTER_WORD_0_REG": {"description": "TX Oversize Frames Counter Word 0",
"address_offset": "0x288",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"TX_OVERSIZE_FRAMES_COUNTER_WORD_0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "TX Oversize Frames Counter Word 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953314952,
},
"TX_OVERSIZE_FRAMES_COUNTER_WORD_1_REG": {"description": "TX Oversize Frames Counter Word 1",
"address_offset": "0x28C",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"TX_OVERSIZE_FRAMES_COUNTER_WORD_1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "TX Oversize Frames Counter Word 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953314956,
},
"RX_GOOD_FRAMES_COUNTER_WORD_0_REG": {"description": "RX Good Frames Counter Word 0",
"address_offset": "0x290",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"RX_GOOD_FRAMES_COUNTER_WORD_0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "RX Good Frames Counter Word 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953314960,
},
"RX_GOOD_FRAMES_COUNTER_WORD_1_REG": {"description": "RX Good Frames Counter Word 1",
"address_offset": "0x294",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"RX_GOOD_FRAMES_COUNTER_WORD_1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "RX Good Frames Counter Word 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953314964,
},
"RX_FRAME_CHECK_SEQUENCE_ERROR_COUNTER_WORD_0_REG": {"description": "RX Frame Check Sequence Errors Counter Word 0",
"address_offset": "0x298",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"RX_FRAME_CHECK_SEQUENCE_ERROR_COUNTER_WORD_0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "RX Frame Check Sequence Errors Counter Word 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953314968,
},
"RX_FRAME_CHECK_SEQUENCE_ERROR_COUNTER_WORD_1_REG": {"description": "RX Frame Check Sequence Errors Counter Word 1",
"address_offset": "0x29C",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"RX_FRAME_CHECK_SEQUENCE_ERROR_COUNTER_WORD_1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "RX Frame Check Sequence Errors Counter Word 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953314972,
},
"RX_GOOD_BROADCAST_FRAMES_COUNTER_WORD_0_REG": {"description": "RX Good Broadcast Frames Counter Word 0",
"address_offset": "0x2A0",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"RX_GOOD_BROADCAST_FRAMES_COUNTER_WORD_0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "RX Good Broadcast Frames Counter Word 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953314976,
},
"RX_GOOD_BROADCAST_FRAMES_COUNTER_WORD_1_REG": {"description": "RX Good Broadcast Frames Counter Word 1",
"address_offset": "0x2A4",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"RX_GOOD_BROADCAST_FRAMES_COUNTER_WORD_1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "RX Good Broadcast Frames Counter Word 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953314980,
},
"RX_GOOD_MULTICAST_FRAMES_COUNTER_WORD_0_REG": {"description": "RX Good Multicast Frames Counter Word 0",
"address_offset": "0x2A8",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"RX_GOOD_MULTICAST_FRAMES_COUNTER_WORD_0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "RX Good Multicast Frames Counter Word 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953314984,
},
"RX_GOOD_MULTICAST_FRAMES_COUNTER_WORD_1_REG": {"description": "RX Good Multicast Frames Counter Word 1",
"address_offset": "0x2AC",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"RX_GOOD_MULTICAST_FRAMES_COUNTER_WORD_1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "RX Good Multicast Frames Counter Word 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953314988,
},
"RX_GOOD_CONTROL_FRAMES_COUNTER_WORD_0_REG": {"description": "RX Good Control Frames Counter Word 0",
"address_offset": "0x2B0",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"RX_GOOD_CONTROL_FRAMES_COUNTER_WORD_0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "RX Good Control Frames Counter Word 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953314992,
},
"RX_GOOD_CONTROL_FRAMES_COUNTER_WORD_1_REG": {"description": "RX Good Control Frames Counter Word 1",
"address_offset": "0x2B4",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"RX_GOOD_CONTROL_FRAMES_COUNTER_WORD_1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "RX Good Control Frames Counter Word 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953314996,
},
"RX_LT_OUT_OF_RANGE_ERRORS_COUNTER_WORD_0_REG": {"description": "RX Length/Type Out of Range Errors Counter Word 0",
"address_offset": "0x2B8",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"RX_LT_OUT_OF_RANGE_ERRORS_COUNTER_WORD_0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "RX Length/Type Out of Range Errors Counter Word 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953315000,
},
"RX_LT_OUT_OF_RANGE_ERRORS_COUNTER_WORD_1_REG": {"description": "RX Length/Type Out of Range Errors Counter Word 1",
"address_offset": "0x2BC",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"RX_LT_OUT_OF_RANGE_ERRORS_COUNTER_WORD_1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "RX Length/Type Out of Range Errors Counter Word 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953315004,
},
"RX_GOOD_VLAN_FRAMES_COUNTER_WORD_0_REG": {"description": "RX Good VLAN Tagged Frames Counter Word 0",
"address_offset": "0x2C0",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"RX_GOOD_VLAN_FRAMES_COUNTER_WORD_0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "RX Good VLAN Tagged Frames Counter Word 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953315008,
},
"RX_GOOD_VLAN_FRAMES_COUNTER_WORD_1_REG": {"description": "RX Good VLAN Tagged Frames Counter Word 1",
"address_offset": "0x2C4",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"RX_GOOD_VLAN_FRAMES_COUNTER_WORD_1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "RX Good VLAN Tagged Frames Counter Word 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953315012,
},
"RX_GOOD_PAUSE_FRAMES_COUNTER_WORD_0_REG": {"description": "RX Good Pause Frames Counter Word 0",
"address_offset": "0x2C8",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"RX_GOOD_PAUSE_FRAMES_COUNTER_WORD_0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "RX Good Pause Frames Counter Word 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953315016,
},
"RX_GOOD_PAUSE_FRAMES_COUNTER_WORD_1_REG": {"description": "RX Good Pause Frames Counter Word 1",
"address_offset": "0x2CC",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"RX_GOOD_PAUSE_FRAMES_COUNTER_WORD_1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "RX Good Pause Frames Counter Word 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953315020,
},
"RX_BAD_OPCODE_FRAMES_COUNTER_WORD_0_REG": {"description": "RX Bad Opcode Frames Counter Word 0",
"address_offset": "0x2D0",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"RX_BAD_OPCODE_FRAMES_COUNTER_WORD_0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "RX Bad Opcode Frames Counter Word 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953315024,
},
"RX_BAD_OPCODE_FRAMES_COUNTER_WORD_1_REG": {"description": "RX Bad Opcode Frames Counter Word 1",
"address_offset": "0x2D4",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"RX_BAD_OPCODE_FRAMES_COUNTER_WORD_1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "RX Bad Opcode Frames Counter Word 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953315028,
},
"TX_GOOD_FRAMES_COUNTER_WORD_0_REG": {"description": "TX Good Frames Counter Word 0",
"address_offset": "0x2D8",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"TX_GOOD_FRAMES_COUNTER_WORD_0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "TX Good Frames Counter Word 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953315032,
},
"TX_GOOD_FRAMES_COUNTER_WORD_1_REG": {"description": "TX Good Frames Counter Word 1",
"address_offset": "0x2DC",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"TX_GOOD_FRAMES_COUNTER_WORD_1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "TX Good Frames Counter Word 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953315036,
},
"TX_GOOD_BROADCAST_FRAMES_COUNTER_WORD_0_REG": {"description": "TX Good Broadcast Frames Counter Word 0",
"address_offset": "0x2E0",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"TX_GOOD_BROADCAST_FRAMES_COUNTER_WORD_0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "TX Good Broadcast Frames Counter Word 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953315040,
},
"TX_GOOD_BROADCAST_FRAMES_COUNTER_WORD_1_REG": {"description": "TX Good Broadcast Frames Counter Word 1",
"address_offset": "0x2E4",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"TX_GOOD_BROADCAST_FRAMES_COUNTER_WORD_1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "TX Good Broadcast Frames Counter Word 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953315044,
},
"TX_GOOD_MULTICAST_FRAMES_COUNTER_WORD_0_REG": {"description": "TX Good Multicast Frames Counter Word 0",
"address_offset": "0x2E8",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"TX_GOOD_MULTICAST_FRAMES_COUNTER_WORD_0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "TX Good Multicast Frames Counter Word 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953315048,
},
"TX_GOOD_MULTICAST_FRAMES_COUNTER_WORD_1_REG": {"description": "TX Good Multicast Frames Counter Word 1",
"address_offset": "0x2EC",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"TX_GOOD_MULTICAST_FRAMES_COUNTER_WORD_1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "TX Good Multicast Frames Counter Word 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953315052,
},
"TX_UNDERRUN_ERRORS_COUNTER_WORD_0_REG": {"description": "TX Underrun Errors Counter Word 0",
"address_offset": "0x2F0",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"TX_UNDERRUN_ERRORS_COUNTER_WORD_0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "TX Underrun Errors Counter Word 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953315056,
},
"TX_UNDERRUN_ERRORS_COUNTER_WORD_1_REG": {"description": "TX Underrun Errors Counter Word 1",
"address_offset": "0x2F4",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"TX_UNDERRUN_ERRORS_COUNTER_WORD_1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "TX Underrun Errors Counter Word 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953315060,
},
"TX_GOOD_CONTROL_FRAMES_COUNTER_WORD_0_REG": {"description": "TX Good Control Frames Counter Word 0",
"address_offset": "0x2F8",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"TX_GOOD_CONTROL_FRAMES_COUNTER_WORD_0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "TX Good Control Frames Counter Word 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953315064,
},
"TX_GOOD_CONTROL_FRAMES_COUNTER_WORD_1_REG": {"description": "TX Good Control Frames Counter Word 1",
"address_offset": "0x2FC",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"TX_GOOD_CONTROL_FRAMES_COUNTER_WORD_1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "TX Good Control Frames Counter Word 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953315068,
},
"TX_GOOD_VLAN_FRAMES_COUNTER_WORD_0_REG": {"description": "TX Good VLAN Frames Counter Word 0",
"address_offset": "0x300",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"TX_GOOD_VLAN_FRAMES_COUNTER_WORD_0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "TX Good VLAN Frames Counter Word 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953315072,
},
"TX_GOOD_VLAN_FRAMES_COUNTER_WORD_1_REG": {"description": "TX Good VLAN Frames Counter Word 1",
"address_offset": "0x304",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"TX_GOOD_VLAN_FRAMES_COUNTER_WORD_1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "TX Good VLAN Frames Counter Word 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953315076,
},
"TX_GOOD_PAUSE_FRAMES_COUNTER_WORD_0_REG": {"description": "TX Good Pause Frames Counter Word 0",
"address_offset": "0x308",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"TX_GOOD_PAUSE_FRAMES_COUNTER_WORD_0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "TX Good Pause Frames Counter Word 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953315080,
},
"TX_GOOD_PAUSE_FRAMES_COUNTER_WORD_1_REG": {"description": "TX Good Pause Frames Counter Word 1",
"address_offset": "0x30C",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"TX_GOOD_PAUSE_FRAMES_COUNTER_WORD_1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "TX Good Pause Frames Counter Word 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953315084,
},
"TX_SINGLE_COLL_FRAMES_COUNTER_WORD_0_REG": {"description": "TX Single Collision Frames Counter Word 0",
"address_offset": "0x310",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"TX_SINGLE_COLL_FRAMES_COUNTER_WORD_0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "TX Single Collision Frames Counter Word 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953315088,
},
"TX_SINGLE_COLL_FRAMES_COUNTER_WORD_1_REG": {"description": "TX Single Collision Frames Counter Word 1",
"address_offset": "0x314",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"TX_SINGLE_COLL_FRAMES_COUNTER_WORD_1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "TX Single Collision Frames Counter Word 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953315092,
},
"TX_MULTIPLE_COLL_FRAMES_COUNTER_WORD_0_REG": {"description": "TX Multiple Collision Frames Counter Word 0",
"address_offset": "0x318",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"TX_MULTIPLE_COLL_FRAMES_COUNTER_WORD_0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "TX Multiple Collision Frames Counter Word 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953315096,
},
"TX_MULTIPLE_COLL_FRAMES_COUNTER_WORD_1_REG": {"description": "TX Multiple Collision Frames Counter Word 1",
"address_offset": "0x31C",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"TX_MULTIPLE_COLL_FRAMES_COUNTER_WORD_1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "TX Multiple Collision Frames Counter Word 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953315100,
},
"TX_DEFERRED_FRAMES_COUNTER_WORD_0_REG": {"description": "TX Deferred Frames Counter Word 0",
"address_offset": "0x320",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"TX_DEFERRED_FRAMES_COUNTER_WORD_0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "TX Deferred Frames Counter Word 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953315104,
},
"TX_DEFERRED_FRAMES_COUNTER_WORD_1_REG": {"description": "TX Deferred Frames Counter Word 1",
"address_offset": "0x324",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"TX_DEFERRED_FRAMES_COUNTER_WORD_1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "TX Deferred Frames Counter Word 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953315108,
},
"TX_LATE_COLL_COUNTER_WORD_0_REG": {"description": "TX Late Collision Counter Word 0",
"address_offset": "0x328",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"TX_LATE_COLL_COUNTER_WORD_0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "TX Late Collision Counter Word 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953315112,
},
"TX_LATE_COLL_COUNTER_WORD_1_REG": {"description": "TX Late Collision Counter Word 1",
"address_offset": "0x32C",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"TX_LATE_COLL_COUNTER_WORD_1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "TX Late Collision Counter Word 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953315116,
},
"TX_EXCESS_COLL_COUNTER_WORD_0_REG": {"description": "TX Excess Collision Counter Word 0",
"address_offset": "0x330",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"TX_EXCESS_COLL_COUNTER_WORD_0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "TX Excess Collision Counter Word 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953315120,
},
"TX_EXCESS_COLL_COUNTER_WORD_1_REG": {"description": "TX Excess Collision Counter Word 1",
"address_offset": "0x334",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"TX_EXCESS_COLL_COUNTER_WORD_1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "TX Excess Collision Counter Word 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953315124,
},
"TX_EXCESS_DEF_COUNTER_WORD_0_REG": {"description": "TX Excess Deferral Counter Word 0",
"address_offset": "0x338",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"TX_EXCESS_DEF_COUNTER_WORD_0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "TX Excess Deferral Counter Word 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953315128,
},
"TX_EXCESS_DEF_COUNTER_WORD_1_REG": {"description": "TX Excess Deferral Counter Word 1",
"address_offset": "0x33C",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"TX_EXCESS_DEF_COUNTER_WORD_1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "TX Excess Deferral Counter Word 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953315132,
},
"RX_ALIGNMENT_ERR_COUNTER_WORD_0_REG": {"description": "RX Alignment Errors Counter Word 0",
"address_offset": "0x340",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"RX_ALIGNMENT_ERR_COUNTER_WORD_0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "RX Alignment Errors Counter Word 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953315136,
},
"RX_ALIGNMENT_ERR_COUNTER_WORD_1_REG": {"description": "RX Alignment Errors Counter Word 1",
"address_offset": "0x344",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"RX_ALIGNMENT_ERR_COUNTER_WORD_1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "RX Alignment Errors Counter Word 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953315140,
},
"TX_PFC_FRAMES_COUNTER_WORD_0_REG": {"description": "TX PFC Frames Counter Word 0",
"address_offset": "0x348",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"TX_PFC_FRAMES_COUNTER_WORD_0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "TX PFC Frames Counter Word 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953315144,
},
"TX_PFC_FRAMES_COUNTER_WORD_1_REG": {"description": "TX PFC Frames Counter Word 1",
"address_offset": "0x34C",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"TX_PFC_FRAMES_COUNTER_WORD_1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "TX PFC Frames Counter Word 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953315148,
},
"RX_PFC_FRAMES_COUNTER_WORD_0_REG": {"description": "RX PFC Frames Counter Word 0",
"address_offset": "0x350",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"RX_PFC_FRAMES_COUNTER_WORD_0": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "RX PFC Frames Counter Word 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953315152,
},
"RX_PFC_FRAMES_COUNTER_WORD_1_REG": {"description": "RX PFC Frames Counter Word 1",
"address_offset": "0x354",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"RX_PFC_FRAMES_COUNTER_WORD_1": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "RX PFC Frames Counter Word 1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953315156,
},
"RX_CONF_WORD_0_REG": {"description": "Pause frame MAC Source Address[31:0]",
"address_offset": "0x400",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"RX_CONF_WORD_0": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Pause frame MAC Source Address[31:0].
  The address is ordered so the first byte transmitted/received is the lowest positioned byte in the register; for example, a MAC address of AA-BB-CC-DD-EE-FF would be stored in Address[47:0] as 0xFFEEDDCCBBAA.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953315328,
},
"RX_CONF_WORD_1_REG": {"description": "Receiver Configuration Word 1",
"address_offset": "0x404",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"PAUSE_FRM_MAC_SA": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "Pause frame MAC Source Address[47:32].
  Refer the RX_CONF_WORD_0 register description.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTL_FRM_LEN_CHK_DISABLE": {"access": "read-write",
"bit_offset": "24",
"bit_range": "",
"bit_width": "1",
"desc": "Control Frame Length Check Disable.
  When this bit is set to 1, the core does not mark control frames as bad if they are greater than the minimum frame length.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"LT_ERR_CHK_DISABLE": {"access": "read-write",
"bit_offset": "25",
"bit_range": "",
"bit_width": "1",
"desc": "Length/Type Error Check Disable.
  1 - Core does not perform the length/type field error checks.
  0 - Core performs the length/type field error checks. Normal operation.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"HALF_DUPLEX": {"access": "read-write",
"bit_offset": "26",
"bit_range": "",
"bit_width": "1",
"desc": "Half Duplex.
  1 - Half Duplex.
  0 - Full Duplex.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"VLAN_ENABLE": {"access": "read-write",
"bit_offset": "27",
"bit_range": "",
"bit_width": "1",
"desc": "VLAN Enable.
  When this bit is set to 1, VLAN tagged frames are accepted by the receiver.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RX_ENABLE": {"access": "read-write",
"bit_offset": "28",
"bit_range": "",
"bit_width": "1",
"desc": "Receiver Enable.
  If set to 1, the receiver block is operational. If set to 0, the block ignores activity on the physical interface RX port.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"INBAND_FCS_ENBALE": {"access": "read-write",
"bit_offset": "29",
"bit_range": "",
"bit_width": "1",
"desc": "In-band FCS Enable.
  1 - MAC receiver passes the FCS field up to the client.
  0 - Client is not passed to the FCS.
In both cases, the FCS is verified on the frame.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"JUMBO_FRAME_ENBALE": {"access": "read-write",
"bit_offset": "30",
"bit_range": "",
"bit_width": "1",
"desc": "Jumbo Frame Enable.
  1 - MAC receiver accepts frames over the specified IEEE 802.3-2008 maximum legal length.
  0 - MAC only accepts frames up to the specified maximum.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RESET": {"access": "read-write",
"bit_offset": "31",
"bit_range": "",
"bit_width": "1",
"desc": "Reset.
  When this bit is set to 1, the receiver is reset. The bit then automatically reverts to 0. This reset also sets all of the receiver configuration registers to their default values.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953315332,
},
"TX_CONF_WORD_0_REG": {"description": "Transmitter Configuration Word",
"address_offset": "0x408",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"IFG_ADJUST_ENABLE": {"access": "read-write",
"bit_offset": "25",
"bit_range": "",
"bit_width": "1",
"desc": "Interframe Gap Adjust Enable.
  If 1, the transmitter reads the value on the port tx_ifg_delay at the start of frame transmission and adjusts the interframe gap following the frame accordingly. If 0, the transmitter outputs a minimum interframe gap of at least twelve clock cycles, as specified in IEEE 802.3-2008.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"HALF_DUPLEX": {"access": "read-write",
"bit_offset": "26",
"bit_range": "",
"bit_width": "1",
"desc": "Half Duplex.
  1 - Half Duplex.
  0 - Full Duplex.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"VLAN_ENABLE": {"access": "read-write",
"bit_offset": "27",
"bit_range": "",
"bit_width": "1",
"desc": "VLAN Enable.
  When this bit is set to 1, the transmitter recognizes the transmission of VLAN tagged frames.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TX_ENABLE": {"access": "read-write",
"bit_offset": "28",
"bit_range": "",
"bit_width": "1",
"desc": "Transmit Enable.
  1 - Transmitter is operational.
  0 - Transmitter is disabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"INBAND_FCS_ENBALE": {"access": "read-write",
"bit_offset": "29",
"bit_range": "",
"bit_width": "1",
"desc": "In-band FCS Enable.
  1 - MAC transmitter expects the FCS field to be passed in by the client.
  0 - MAC transmitter appends padding as required, computes the FCS and appends it to the frame.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"JUMBO_FRAME_ENBALE": {"access": "read-write",
"bit_offset": "30",
"bit_range": "",
"bit_width": "1",
"desc": "Jumbo Frame Enable.
  1 - MAC transmitter sends frames that are greater than the specified IEEE 802.3-2008 maximum legal length.
  0 - MAC only sends frames up to the specified maximum.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RESET": {"access": "read-write",
"bit_offset": "31",
"bit_range": "",
"bit_width": "1",
"desc": "Reset.
  When this bit is set to 1, the transmitter is reset. The bit then automatically reverts to 0. This reset also sets all of the transmitter configuration registers to their default values.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953315336,
},
"FLOW_CONTROL_CONF_WORD_REG": {"description": "Flow Control Configuration Word",
"address_offset": "0x40C",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"RX_P0_PAUSE_ENABLE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "RX Priority 0 pause enable.
  When this bit is 1, and RX PFC is enabled, reception of a PFC frame with a valid quanta for priority 0 is processed as described in Receiving a PFC Frame When this bit is 0, the rx_pfc_p0_tvalid remains at 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RX_P1_PAUSE_ENABLE": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "RX Priority 1 pause enable.
  When this bit is 1, and RX PFC is enabled, reception of a PFC frame with a valid quanta for priority 1 is processed as described in Receiving a PFC Frame When this bit is 0, the rx_pfc_p1_tvalid remains at 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RX_P2_PAUSE_ENABLE": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "RX Priority 2 pause enable.
  When this bit is 1, and RX PFC is enabled, reception of a PFC frame with a valid quanta for priority 2 is processed as described in Receiving a PFC Frame When this bit is 0, the rx_pfc_p2_tvalid remains at 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RX_P3_PAUSE_ENABLE": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "RX Priority 3 pause enable.
  When this bit is 1, and RX PFC is enabled, reception of a PFC frame with a valid quanta for priority 3 is processed as described in Receiving a PFC Frame When this bit is 0, the rx_pfc_p3_tvalid remains at 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RX_P4_PAUSE_ENABLE": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "RX Priority 4 pause enable.
  When this bit is 1, and RX PFC is enabled, reception of a PFC frame with a valid quanta for priority 4 is processed as described in Receiving a PFC Frame When this bit is 0, the rx_pfc_p4_tvalid remains at 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RX_P5_PAUSE_ENABLE": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "RX Priority 5 pause enable.
  When this bit is 1, and RX PFC is enabled, reception of a PFC frame with a valid quanta for priority 5 is processed as described in Receiving a PFC Frame When this bit is 0, the rx_pfc_p5_tvalid remains at 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RX_P6_PAUSE_ENABLE": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "RX Priority 6 pause enable.
  When this bit is 1, and RX PFC is enabled, reception of a PFC frame with a valid quanta for priority 6 is processed as described in Receiving a PFC Frame When this bit is 0, the rx_pfc_p6_tvalid remains at 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RX_P7_PAUSE_ENABLE": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "RX Priority 7 pause enable.
  When this bit is 1, and RX PFC is enabled, reception of a PFC frame with a valid quanta for priority 7 is processed as described in Receiving a PFC Frame When this bit is 0, the rx_pfc_p7_tvalid remains at 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TX_P0_PAUSE_ENABLE": {"access": "read-write",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "TX Priority 0 pause enable.
  When this bit is 1, and TX PFC is enabled, assertion or deassertion of the TX PFC tvalid signal results in a PFC frame being transmitted. When this bit is 0 tx_pfc_p0_tvalid is ignored.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TX_P1_PAUSE_ENABLE": {"access": "read-write",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "TX Priority 1 pause enable.
  When this bit is 1, and TX PFC is enabled, assertion or deassertion of the TX PFC tvalid signal results in a PFC frame being transmitted. When this bit is 0 tx_pfc_p1_tvalid is ignored.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TX_P2_PAUSE_ENABLE": {"access": "read-write",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "TX Priority 2 pause enable.
  When this bit is 1, and TX PFC is enabled, assertion or deassertion of the TX PFC tvalid signal results in a PFC frame being transmitted. When this bit is 0 tx_pfc_p2_tvalid is ignored.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TX_P3_PAUSE_ENABLE": {"access": "read-write",
"bit_offset": "11",
"bit_range": "",
"bit_width": "1",
"desc": "TX Priority 3 pause enable.
  When this bit is 1, and TX PFC is enabled, assertion or deassertion of the TX PFC tvalid signal results in a PFC frame being transmitted. When this bit is 0 tx_pfc_p3_tvalid is ignored.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TX_P4_PAUSE_ENABLE": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "TX Priority 4 pause enable.
  When this bit is 1, and TX PFC is enabled, assertion or deassertion of the TX PFC tvalid signal results in a PFC frame being transmitted. When this bit is 0 tx_pfc_p4_tvalid is ignored.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TX_P5_PAUSE_ENABLE": {"access": "read-write",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "TX Priority 5 pause enable.
  When this bit is 1, and TX PFC is enabled, assertion or deassertion of the TX PFC tvalid signal results in a PFC frame being transmitted. When this bit is 0 tx_pfc_p5_tvalid is ignored.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TX_P6_PAUSE_ENABLE": {"access": "read-write",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "TX Priority 6 pause enable.
  When this bit is 1, and TX PFC is enabled, assertion or deassertion of the TX PFC tvalid signal results in a PFC frame being transmitted. When this bit is 0 tx_pfc_p6_tvalid is ignored.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TX_P7_PAUSE_ENABLE": {"access": "read-write",
"bit_offset": "15",
"bit_range": "",
"bit_width": "1",
"desc": "TX Priority 7 pause enable.
  When this bit is 1, and TX PFC is enabled, assertion or deassertion of the TX PFC tvalid signal results in a PFC frame being transmitted. When this bit is 0 tx_pfc_p7_tvalid is ignored.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TX_AUTO_XON": {"access": "read-write",
"bit_offset": "20",
"bit_range": "",
"bit_width": "1",
"desc": "TX Auto XON.
  Only present when the core has been generated with PFC support  this bit defaults to 0 if PFC is not supported. Send a flow control or PFC frame with the relevant quanta set to zero (XON frame) when the relevant, enabled pause request is dropped.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PFC_ENABLE_RX": {"access": "read-write",
"bit_offset": "25",
"bit_range": "",
"bit_width": "1",
"desc": "Priority pause flow control enable (RX).
  Only present when the core has been generated with PFC support. When this bit is 1, received PFC frames assert the relevant, enabled RX PFC tvalid outputs as described in Receiving a PFC Frame. When this bit is 0, received PFC frames are ignored and passed to the client. This mode should not be enabled at the same time as Flow Control (RX) (Bit[29]).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PFC_ENABLE_TX": {"access": "read-write",
"bit_offset": "26",
"bit_range": "",
"bit_width": "1",
"desc": "Priority pause flow control enable (TX).
  Only present when the core has been generated with PFC support. When this bit is 1, asserting an enabled TX PFC tvalid signal results in a PFC frame being sent from the transmitter. When this bit is 0,the TX PFC tvalid inputs are ignored. This mode should not be enabled at the same time as Flow Control (TX) (Bit[30]).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FLOW_CONTROL_ENABLE_RX": {"access": "read-write",
"bit_offset": "29",
"bit_range": "",
"bit_width": "1",
"desc": "Flow Control Enable (RX).
  When this bit is 1, received flow control frames inhibit the transmitter operation as described in Receiving a Pause Frame. When this bit is 0, received flow control frames are always passed up to the client. This mode should not be enabled at the same time as PFC (Bit[25]).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FLOW_CONTROL_ENABLE_TX": {"access": "read-write",
"bit_offset": "30",
"bit_range": "",
"bit_width": "1",
"desc": "Flow Control Enable (TX).
  When this bit is 1, asserting the pause_req signal sends a flow control frame out from the transmitter as described in Transmitting a Pause Control Frame. When this bit is 0, asserting the pause_req signal has no effect. This mode should not be enabled at the same time as PFC (Bit[26]).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953315340,
},
"MAC_SPEED_CONF_WORD_REG": {"description": "MAC Speed Configuration Word",
"address_offset": "0x410",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"MAC_SPEED_CONF": {"access": "read-write",
"bit_offset": "30",
"bit_range": "",
"bit_width": "2",
"desc": "MAC Speed Configuration.
  00 - 10 Mb/s
  01 - 100 Mb/s
  10 - 1 Gb/s
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953315344,
},
"RX_MAC_FRAME_CONF_WORD_REG": {"description": "RX Max Frame Configuration Word",
"address_offset": "0x414",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"RX_MAX_FRAME_LENGTH": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "15",
"desc": "RX Max Frame Length.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RX_MAX_FRAME_ENABLE": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "1",
"desc": "RX Max Frame Enable.
  When Low, the MAC assumes use of the standard 1518/1522 depending upon the setting of VLAN enable. When High, the MAC allows frames up to RX Max Frame Length irrespective of the value of VLAN enable. If Jumbo Enable is set then this register has no effect.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953315348,
},
"TX_MAC_FRAME_CONF_WORD_REG": {"description": "TX Max Frame Configuration Word",
"address_offset": "0x418",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"TX_MAX_FRAME_LENGTH": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "15",
"desc": "TX Max Frame Length.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TX_MAX_FRAME_ENABLE": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "1",
"desc": "TX Max Frame Enable.
  When Low the MAC assumes use of the standard 1518/1522 depending upon the setting of VLAN enable. When High the MAC allows frames up to TX Max Frame Length irrespective of the value of VLAN enable. If Jumbo Enable is set then this register has no effect.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953315352,
},
"TX_TIMESTAMP_ADJUST_CONTROL_REG": {"description": "Transmitter Timestamp Adjust Control Register",
"address_offset": "0x41C",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"TX_LATENCY_ADJUST": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "TX latency adjust value.
  In ToD mode: This value is in units of nanoseconds and is initialized to reflect the delay following the timestamping position through the MAC, 1000BASE-X FPGA logic, and GTX transceiver components.
  In Correction Field Format: The default value is 387ns decimal value.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TX_TS_CORRECTION_ENABLE": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "1",
"desc": "Transmitter Timestamp Correction Enable.
  0 - Transmitter timestamp is not adjusted.
  1 - Transmitter timestamp is adjusted by the TX latency adjust value.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953315356,
},
"PRIORITY_0_QUANTA_REFRESH_REG": {"description": "Priority 0 Quanta/Refresh Register",
"address_offset": "0x480",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"PER_QUANTA_VALUE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "Pause Quanta 0 value.
  This register is only present when PFC is enabled at core customization time. When enabled, this register sets the quanta value to be inserted in the PFC frame for this priority.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PER_QUANTA_REFRESH_VALUE": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "16",
"desc": "Pause Quanta 0 refresh value.
  This register is only present when PFC is enabled at the core customization time. When enabled, this register controls how frequently a PF quanta is refreshed by the transmission of a new PFC frame. When a refresh occurs, all currently active (TX PFC tvalid is High and enabled) priorities are refreshed.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953315456,
},
"PRIORITY_1_QUANTA_REFRESH_REG": {"description": "Priority 1 Quanta/Refresh Register",
"address_offset": "0x484",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"PER_QUANTA_VALUE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "Pause Quanta 1 value.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PER_QUANTA_REFRESH_VALUE": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "16",
"desc": "Pause Quanta 1 refresh value.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953315460,
},
"PRIORITY_2_QUANTA_REFRESH_REG": {"description": "Priority 2 Quanta/Refresh Register",
"address_offset": "0x488",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"PER_QUANTA_VALUE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "Pause Quanta 2 value.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PER_QUANTA_REFRESH_VALUE": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "16",
"desc": "Pause Quanta 2 refresh value.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953315464,
},
"PRIORITY_3_QUANTA_REFRESH_REG": {"description": "Priority 3 Quanta/Refresh Register",
"address_offset": "0x48C",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"PER_QUANTA_VALUE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "Pause Quanta 3 value.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PER_QUANTA_REFRESH_VALUE": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "16",
"desc": "Pause Quanta 3 refresh value.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953315468,
},
"PRIORITY_4_QUANTA_REFRESH_REG": {"description": "Priority 4 Quanta/Refresh Register",
"address_offset": "0x490",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"PER_QUANTA_VALUE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "Pause Quanta 4 value.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PER_QUANTA_REFRESH_VALUE": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "16",
"desc": "Pause Quanta 4 refresh value.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953315472,
},
"PRIORITY_5_QUANTA_REFRESH_REG": {"description": "Priority 5 Quanta/Refresh Register",
"address_offset": "0x494",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"PER_QUANTA_VALUE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "Pause Quanta 5 value.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PER_QUANTA_REFRESH_VALUE": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "16",
"desc": "Pause Quanta 5 refresh value.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953315476,
},
"PRIORITY_6_QUANTA_REFRESH_REG": {"description": "Priority 6 Quanta/Refresh Register",
"address_offset": "0x498",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"PER_QUANTA_VALUE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "Pause Quanta value 6.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PER_QUANTA_REFRESH_VALUE": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "16",
"desc": "Pause Quanta 6 refresh value.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953315480,
},
"PRIORITY_7_QUANTA_REFRESH_REG": {"description": "Priority 7 Quanta/Refresh Register",
"address_offset": "0x49C",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"PER_QUANTA_VALUE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "Pause Quanta 7 value.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PER_QUANTA_REFRESH_VALUE": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "16",
"desc": "Pause Quanta 7 refresh value.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953315484,
},
"LEGACY_PAUSE_REFRESH_REG": {"description": "Legacy Pause Refresh Register",
"address_offset": "0x4A0",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"PAUSE_QUANTA_REFRESH_VALUE": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "16",
"desc": "Pause Quanta refresh value.
  This register is only present when PFC is enabled at the core customization time. When PFC is supported, the 802.3 pause request can also support XON/XOFF Extended Functionality. This controls the frequency of the automatic pause refresh.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953315488,
},
"ID_REG": {"description": "ID Register",
"address_offset": "0x4F8",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"PATCH_LEVEL": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Patch Level.
  0 - No patch.
  1 - Rev1.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"MINOR_REV": {"access": "read-only",
"bit_offset": "16",
"bit_range": "",
"bit_width": "8",
"desc": "Minor Rev.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"MAJOR_REV": {"access": "read-only",
"bit_offset": "24",
"bit_range": "",
"bit_width": "8",
"desc": "Minor Rev.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953315576,
},
"ABILITY_REG": {"description": "Ability Register",
"address_offset": "0x4FC",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"TEN_M_ABILITY": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "10M_Ability.
  If set, the core is 10M capable.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"HUNDRED_M_ABILITY": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "100M_Ability.
  If set, the core is 100M capable.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ONE_G_ABILITY": {"access": "read-only",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "1G_Ability.
  If set, the core is 1G capable.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TWO_P_FIVE_G_ABILITY": {"access": "read-only",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "2_5G_Ability.
  If set, the core is 2.5G capable.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STATISTICS_COUNTERS_AVAILABLE": {"access": "read-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "Statistics Counters available.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"HALF_DUPLEX_CAPABLE": {"access": "read-only",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "Half duplex capable.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FRAME_FILTER_AVAILABLE": {"access": "read-only",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "Frame filter available.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PFC_SUPPORT": {"access": "read-only",
"bit_offset": "16",
"bit_range": "",
"bit_width": "1",
"desc": "PFC Support.
  This bit indicates that the core has been generated with PFC support.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953315580,
},
"MDIO_SETUP_WORD_REG": {"description": "MDIO Setup Word",
"address_offset": "0x500",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"CLOCK_DIVIDE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "6",
"desc": "Clock Divide.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"MDIO_ENABLE": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "MDIO Enable.   1 - MDIO interface can be used to access attached PHY devices.    0 - MDIO interface is disabled and the MDIO signals remain inactive.  A write to this bit only takes effect if Clock Divide is set to a nonzero value.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953315584,
},
"MDIO_CONTROL_WORD_REG": {"description": "MDIO Control Word",
"address_offset": "0x504",
"access": "",
"size": "32",
"interface": "s_axi",
"fields": {"MDIO_READY": {"access": "read-only",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "MDIO ready.
  When set the MDIO is enabled and ready for a new transfer.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"INITIATE": {"access": "write-only",
"bit_offset": "11",
"bit_range": "",
"bit_width": "1",
"desc": "Initiate.
  Writing a 1 to this bit starts an MDIO transfer.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TX_OP": {"access": "read-write",
"bit_offset": "14",
"bit_range": "",
"bit_width": "2",
"desc": "TX_OP.
  01 - Write Access.
  10 - Read Access.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TX_REGAD": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "5",
"desc": "TX_REGAD.
  This controls the register address being accessed.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TX_PHYAD": {"access": "read-write",
"bit_offset": "24",
"bit_range": "",
"bit_width": "5",
"desc": "TX_PHYAD.
  This controls the PHY address being accessed.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953315588,
},
"MDIO_WRITE_DATA_REG": {"description": "MDIO Write Data",
"address_offset": "0x508",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"MDIO_WRITE_DATA": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "MDIO_Write_Data.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953315592,
},
"MDIO_READ_DATA_REG": {"description": "MDIO Read Data",
"address_offset": "0x50C",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"MDIO_READ_DATA": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "MDIO_Read_Data.
  Valid when MDIO ready is sampled High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"MDIO_READY": {"access": "read-only",
"bit_offset": "16",
"bit_range": "",
"bit_width": "1",
"desc": "MDIO Ready.
  This is a copy of Bit[7] of the MDIO Control Word.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953315596,
},
"INTR_STATUS_REG": {"description": "Indicates the status of an interrupt.",
"address_offset": "0x600",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"MDIO": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "MDIO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PTP_TX": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "PTP_TX.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PTP_RX": {"access": "read-only",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "PTP_RX.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PTP_TIMER": {"access": "read-only",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "PTP_TIMER.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953315840,
},
"INTR_PENDING_REG": {"description": "Indicates the pending status of an interrupt",
"address_offset": "0x610",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"MDIO": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "MDIO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PTP_TX": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "PTP_TX.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PTP_RX": {"access": "read-only",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "PTP_RX.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PTP_TIMER": {"access": "read-only",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "PTP_TIMER.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953315856,
},
"INTR_ENABLE_REG": {"description": "Indicates the enable state of an interrupt. Writing a 1 to any bit enables that particular interrupt.",
"address_offset": "0x620",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"MDIO": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "MDIO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PTP_TX": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "PTP_TX.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PTP_RX": {"access": "read-only",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "PTP_RX.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PTP_TIMER": {"access": "read-only",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "PTP_TIMER.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953315872,
},
"INTR_CLEAR_REG": {"description": "Writing a 1 to any bit of this register clears that particular interrupt.",
"address_offset": "0x630",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"MDIO": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "MDIO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PTP_TX": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "PTP_TX.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PTP_RX": {"access": "read-only",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "PTP_RX.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PTP_TIMER": {"access": "read-only",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "PTP_TIMER.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953315888,
},
"UNICAST_ADDRESS_WORD_0_REG": {"description": "Frame filter unicast address[31:0]",
"address_offset": "0x700",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"UNICAST_ADDRESS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Frame filter unicast address[31:0].
  This address is used by the MAC to match against the destination address of any incoming frames. The address is ordered so the first byte transmitted/received is the lowest positioned byte in the register; for example, a MAC address of AA-BB-CC-DD-EE-FF would be stored in Address[47:0] as 0xFFEEDDCCBBAA.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953316096,
},
"UNICAST_ADDRESS_WORD_1_REG": {"description": "Frame filter unicast address[47:32]",
"address_offset": "0x704",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"UNICAST_ADDRESS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "Frame filter unicast address[47:32].
  See description for UNICAST_ADDRESS_WORD_0_REG.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953316100,
},
"FRAME_FILTER_CONTROL_REG": {"description": "Frame Filter Control",
"address_offset": "0x708",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"FILTER_INDEX": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "4",
"desc": "Filter Index.
  All frame filters are mapped to the same location with the filter index and AVB Select specifying which physical filter is to be accessed. When an AVB filter (bit[8] of the register) is being selected only indexes of 0-2 are allowed.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"AVB_SELECT": {"access": "read-write",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "AVB Select.
  If the AVB Endpoint is present this is used to indicate that the filter to be selected is one of the three dedicated filters.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PROMISCUOUS_MODE": {"access": "read-write",
"bit_offset": "31",
"bit_range": "",
"bit_width": "1",
"desc": "Promiscuous Mode.
  If this bit is set to 1, the frame filter is set to operate in promiscuous mode. All frames are passed to the receiver client regardless of the destination address.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953316104,
},
"FRAME_FILTER_ENABLE_REG": {"description": "Frame Filter Enable",
"address_offset": "0x70C",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"FILTER_ENABLE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Filter Enable.
  This enable relates to the physical frame filter pointed to by the Filter index and take the value of AVB Select into account. If clear, the filter passes all packets.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953316108,
},
"FRAME_FILTER_VALUE_BYTES_3_0_REG": {"description": "Frame Filter Value",
"address_offset": "0x710",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"FILTER_VALUE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Filter Value.
  All filter value registers have the same format. The lower 31 bits of filter value, at address 0x710, relating to the filter at physical Frame Filter index, that is to be written to the address table. The value is ordered so that the first byte transmitted/received is the lowest positioned byte in the register; for example, a MAC address of AA-BB-CC-DD-EE-FF would be stored in Filter Value[47:0] as 0xFFEEDDCCBBAA.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953316112,
},
"FRAME_FILTER_VALUE_BYTES_7_4_REG": {"description": "Frame Filter Value",
"address_offset": "0x714",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"FILTER_VALUE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Filter Value.
  See descriptions for FRAME_FILTER_VALUE_BYTES_3_0_REG.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953316116,
},
"FRAME_FILTER_VALUE_BYTES_11_8_REG": {"description": "Frame Filter Value",
"address_offset": "0x718",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"FILTER_VALUE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Filter Value.
  See descriptions for FRAME_FILTER_VALUE_BYTES_3_0_REG.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953316120,
},
"FRAME_FILTER_VALUE_BYTES_15_12_REG": {"description": "Frame Filter Value",
"address_offset": "0x71C",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"FILTER_VALUE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Filter Value.
  See descriptions for FRAME_FILTER_VALUE_BYTES_3_0_REG.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953316124,
},
"FRAME_FILTER_VALUE_BYTES_19_16_REG": {"description": "Frame Filter Value",
"address_offset": "0x720",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"FILTER_VALUE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Filter Value.
  See descriptions for FRAME_FILTER_VALUE_BYTES_3_0_REG.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953316128,
},
"FRAME_FILTER_VALUE_BYTES_23_20_REG": {"description": "Frame Filter Value",
"address_offset": "0x724",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"FILTER_VALUE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Filter Value.
  See descriptions for FRAME_FILTER_VALUE_BYTES_3_0_REG.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953316132,
},
"FRAME_FILTER_VALUE_BYTES_27_24_REG": {"description": "Frame Filter Value",
"address_offset": "0x728",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"FILTER_VALUE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Filter Value.
  See descriptions for FRAME_FILTER_VALUE_BYTES_3_0_REG.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953316136,
},
"FRAME_FILTER_VALUE_BYTES_31_28_REG": {"description": "Frame Filter Value",
"address_offset": "0x72C",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"FILTER_VALUE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Filter Value.
  See descriptions for FRAME_FILTER_VALUE_BYTES_3_0_REG.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953316140,
},
"FRAME_FILTER_VALUE_BYTES_35_32_REG": {"description": "Frame Filter Value",
"address_offset": "0x730",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"FILTER_VALUE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Filter Value.
  See descriptions for FRAME_FILTER_VALUE_BYTES_3_0_REG.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953316144,
},
"FRAME_FILTER_VALUE_BYTES_39_36_REG": {"description": "Frame Filter Value",
"address_offset": "0x734",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"FILTER_VALUE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Filter Value.
  See descriptions for FRAME_FILTER_VALUE_BYTES_3_0_REG.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953316148,
},
"FRAME_FILTER_VALUE_BYTES_43_40_REG": {"description": "Frame Filter Value",
"address_offset": "0x738",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"FILTER_VALUE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Filter Value.
  See descriptions for FRAME_FILTER_VALUE_BYTES_3_0_REG.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953316152,
},
"FRAME_FILTER_VALUE_BYTES_47_44_REG": {"description": "Frame Filter Value",
"address_offset": "0x73C",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"FILTER_VALUE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Filter Value.
  See descriptions for FRAME_FILTER_VALUE_BYTES_3_0_REG.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953316156,
},
"FRAME_FILTER_VALUE_BYTES_51_48_REG": {"description": "Frame Filter Value",
"address_offset": "0x740",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"FILTER_VALUE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Filter Value.
  See descriptions for FRAME_FILTER_VALUE_BYTES_3_0_REG.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953316160,
},
"FRAME_FILTER_VALUE_BYTES_55_52_REG": {"description": "Frame Filter Value",
"address_offset": "0x744",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"FILTER_VALUE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Filter Value.
  See descriptions for FRAME_FILTER_VALUE_BYTES_3_0_REG.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953316164,
},
"FRAME_FILTER_VALUE_BYTES_59_56_REG": {"description": "Frame Filter Value",
"address_offset": "0x748",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"FILTER_VALUE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Filter Value.
  See descriptions for FRAME_FILTER_VALUE_BYTES_3_0_REG.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953316168,
},
"FRAME_FILTER_VALUE_BYTES_63_60_REG": {"description": "Frame Filter Value",
"address_offset": "0x74C",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"FILTER_VALUE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Filter Value.
  See descriptions for FRAME_FILTER_VALUE_BYTES_3_0_REG.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953316172,
},
"FRAME_FILTER_MASK_VALUE_BYTES_3_0_REG": {"description": "Frame Filter Mask Value",
"address_offset": "0x750",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"FILTER_MASK_VALUE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Filter Mask Value.
  All mask value registers have the same format.
  If a mask bit is set to 1 then the corresponding bit of the Filter Value is compared by the frame filter. For example, if a basic Destination address comparison was desired then Bits[47:0] should be written to 1 and all other bits to 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953316176,
},
"FRAME_FILTER_MASK_VALUE_BYTES_7_4_REG": {"description": "Frame Filter Mask Value",
"address_offset": "0x754",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"FILTER_MASK_VALUE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Filter Mask Value.
  See descriptions for FRAME_FILTER_MASK_VALUE_BYTES_3_0_REG.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953316180,
},
"FRAME_FILTER_MASK_VALUE_BYTES_11_8_REG": {"description": "Frame Filter Mask Value",
"address_offset": "0x758",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"FILTER_MASK_VALUE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Filter Mask Value.
  See descriptions for FRAME_FILTER_MASK_VALUE_BYTES_3_0_REG.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953316184,
},
"FRAME_FILTER_MASK_VALUE_BYTES_15_12_REG": {"description": "Frame Filter Mask Value",
"address_offset": "0x75C",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"FILTER_MASK_VALUE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Filter Mask Value.
  See descriptions for FRAME_FILTER_MASK_VALUE_BYTES_3_0_REG.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953316188,
},
"FRAME_FILTER_MASK_VALUE_BYTES_19_16_REG": {"description": "Frame Filter Mask Value",
"address_offset": "0x760",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"FILTER_MASK_VALUE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Filter Mask Value.
  See descriptions for FRAME_FILTER_MASK_VALUE_BYTES_3_0_REG.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953316192,
},
"FRAME_FILTER_MASK_VALUE_BYTES_23_20_REG": {"description": "Frame Filter Mask Value",
"address_offset": "0x764",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"FILTER_MASK_VALUE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Filter Mask Value.
  See descriptions for FRAME_FILTER_MASK_VALUE_BYTES_3_0_REG.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953316196,
},
"FRAME_FILTER_MASK_VALUE_BYTES_27_24_REG": {"description": "Frame Filter Mask Value",
"address_offset": "0x768",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"FILTER_MASK_VALUE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Filter Mask Value.
  See descriptions for FRAME_FILTER_MASK_VALUE_BYTES_3_0_REG.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953316200,
},
"FRAME_FILTER_MASK_VALUE_BYTES_31_28_REG": {"description": "Frame Filter Mask Value",
"address_offset": "0x76C",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"FILTER_MASK_VALUE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Filter Mask Value.
  See descriptions for FRAME_FILTER_MASK_VALUE_BYTES_3_0_REG.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953316204,
},
"FRAME_FILTER_MASK_VALUE_BYTES_35_32_REG": {"description": "Frame Filter Mask Value",
"address_offset": "0x770",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"FILTER_MASK_VALUE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Filter Mask Value.
  See descriptions for FRAME_FILTER_MASK_VALUE_BYTES_3_0_REG.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953316208,
},
"FRAME_FILTER_MASK_VALUE_BYTES_39_36_REG": {"description": "Frame Filter Mask Value",
"address_offset": "0x774",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"FILTER_MASK_VALUE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Filter Mask Value.
  See descriptions for FRAME_FILTER_MASK_VALUE_BYTES_3_0_REG.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953316212,
},
"FRAME_FILTER_MASK_VALUE_BYTES_43_40_REG": {"description": "Frame Filter Mask Value",
"address_offset": "0x778",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"FILTER_MASK_VALUE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Filter Mask Value.
  See descriptions for FRAME_FILTER_MASK_VALUE_BYTES_3_0_REG.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953316216,
},
"FRAME_FILTER_MASK_VALUE_BYTES_47_44_REG": {"description": "Frame Filter Mask Value",
"address_offset": "0x77C",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"FILTER_MASK_VALUE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Filter Mask Value.
  See descriptions for FRAME_FILTER_MASK_VALUE_BYTES_3_0_REG.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953316220,
},
"FRAME_FILTER_MASK_VALUE_BYTES_51_48_REG": {"description": "Frame Filter Mask Value",
"address_offset": "0x780",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"FILTER_MASK_VALUE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Filter Mask Value.
  See descriptions for FRAME_FILTER_MASK_VALUE_BYTES_3_0_REG.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953316224,
},
"FRAME_FILTER_MASK_VALUE_BYTES_55_52_REG": {"description": "Frame Filter Mask Value",
"address_offset": "0x784",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"FILTER_MASK_VALUE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Filter Mask Value.
  See descriptions for FRAME_FILTER_MASK_VALUE_BYTES_3_0_REG.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953316228,
},
"FRAME_FILTER_MASK_VALUE_BYTES_59_56_REG": {"description": "Frame Filter Mask Value",
"address_offset": "0x788",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"FILTER_MASK_VALUE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Filter Mask Value.
  See descriptions for FRAME_FILTER_MASK_VALUE_BYTES_3_0_REG.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953316232,
},
"FRAME_FILTER_MASK_VALUE_BYTES_63_60_REG": {"description": "Frame Filter Mask Value",
"address_offset": "0x78C",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"FILTER_MASK_VALUE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Filter Mask Value.
  See descriptions for FRAME_FILTER_MASK_VALUE_BYTES_3_0_REG.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953316236,
},
"TX_PTP_PKT_BUFFER_CTRL_REG": {"description": "TX PTP Packet Buffer Control Register",
"address_offset": "0x12000",
"access": "",
"size": "32",
"interface": "s_axi",
"fields": {"TX_SEND_FRAME_BITS": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "tx_send_frame Bits.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TX_FRAME_WAITING_INDICATION": {"access": "read-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "8",
"desc": "tx_frame_waiting Indication.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TX_PACKET": {"access": "read-only",
"bit_offset": "16",
"bit_range": "",
"bit_width": "3",
"desc": "tx_packet.
  Indicates the number (block RAM bin position) of the most recently transmitted PTP packet.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953388032,
},
"RX_PTP_PKT_BUFFER_CTRL_REG": {"description": "RX PTP Packet Buffer Control Register",
"address_offset": "0x12004",
"access": "",
"size": "32",
"interface": "s_axi",
"fields": {"RX_CLEAR": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "rx_clear.
  When written with a 1, forces the buffer to empty, in practice moving the write address to the same value as the read address. If read, always returns 0.tx_send_frame Bitstx_send_frame Bits.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RX_PACKET": {"access": "read-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "4",
"desc": "rx_packet.
  Indicates the number (block RAM bin position) of the most recently received PTP packet
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953388036,
},
"TX_ARBITER_SEND_SLOPE_CTL_REG": {"description": "TX Arbiter Send Slope Control Register",
"address_offset": "0x1200C",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"VAL_SEND_SLOPE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "20",
"desc": "Value of sendSlope.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953388044,
},
"TX_ARBITER_IDLE_SLOPE_CTL_REG": {"description": "TX Arbiter Idle Slope Control Register",
"address_offset": "0x12010",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"VAL_SEND_SLOPE": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "20",
"desc": "Value of sendSlope.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953388048,
},
"RTC_NANOSEC_FIELD_OFFSET_REG": {"description": "RTC Nanoseconds Field Offset",
"address_offset": "0x12800",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"OFFSET_NANOSEC": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "30",
"desc": "30-bit offset value for the RTC nanoseconds.
  Used by the microprocessor to initialize the RTC, then afterwards to perform the regular RTC corrections (when in slave mode).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953390080,
},
"RTC_SEC_FIELD_OFFSET_BITS_31_0_REG": {"description": "Seconds Field Offset Bits[31:0]",
"address_offset": "0x12808",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"OFFSET_SEC": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "32-bit offset value for the RTC seconds field.
  Used by the microprocessor to initialize the RTC, then afterwards to perform the regular RTC corrections (when in slave mode).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953390088,
},
"RTC_SEC_FIELD_OFFSET_BITS_47_32_REG": {"description": "Seconds Field Offset Bits[47:32]",
"address_offset": "0x1280C",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"OFFSET_SEC": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "16-bit offset value for the RTC seconds field.
  Used by the microprocessor to initialize the RTC, then afterwards to perform the regular RTC corrections (when in slave mode).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953390092,
},
"RTC_INCREMENT_VAL_REG": {"description": "RTC Increment Value Control Register",
"address_offset": "0x12810",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"NANOSEC": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "26",
"desc": "RTC Increment Value Control Register.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953390096,
},
"CURRENT_RTC_NANOSEC_FIELD_VAL_REG": {"description": "Current RTC Nanoseconds Value",
"address_offset": "0x12814",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"VAL_RTC_NANOSEC_FIELD": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "30",
"desc": "Current Value of the synchronized RTC nanoseconds field.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953390100,
},
"CURRENT_RTC_SEC_FIELD_VAL_BITS_31_0_REG": {"description": "Current RTC Seconds Field Value Bits [31:0]",
"address_offset": "0x12818",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"VAL_RTC_SEC": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Sampled Value of the synchronized RTC Seconds field (Bits[31:0]).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953390104,
},
"CURRENT_RTC_SEC_FIELD_VAL_BITS_47_32_REG": {"description": "Current RTC Seconds Field Value Bits [47:32]",
"address_offset": "0x1281C",
"access": "read-only",
"size": "32",
"interface": "s_axi",
"fields": {"VAL_RTC_SEC": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "Sampled Value of the synchronized RTC Seconds field (Bits[47:32]).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953390108,
},
"RTC_INTR_CLEAR_REG": {"description": "RTC Interrupt Clear Register",
"address_offset": "0x12820",
"access": "write-only",
"size": "32",
"interface": "s_axi",
"fields": {"CLEAR": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "RTC Interrupt Clear Register.
  Write ANY value to Bit[0] of this register to clear the interrupt_ptp_timer Interrupt signal. This bit always returns 0 on read.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953390112,
},
"RTC_PHASE_ADJ_REG": {"description": "RTC Interrupt Clear Register",
"address_offset": "0x12824",
"access": "read-write",
"size": "32",
"interface": "s_axi",
"fields": {"VAL_RTC_NANOSEC_FIELD": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "30",
"desc": "RTC Phase Adjustment Register.
  ns value relating to the phase offset for all RTC derived timing signals (clk8k).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953390116,
},
},
"axi_ethernet_sw0_fifo": {"ISR": {"description": "Interrupt Status Register",
"address_offset": "0x0",
"access": "read-write",
"size": "32",
"interface": "S_AXI",
"fields": {"RFPE": {"access": "read-write",
"bit_offset": "19",
"bit_range": "",
"bit_width": "1",
"desc": "Generated when the difference between the read and write pointers of the receive FIFO reaches the programmable EMPTY threshold value when the FIFO is being emptied.   0 - No interrupt pending   1 - Interrupt pending
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RFPF": {"access": "read-write",
"bit_offset": "20",
"bit_range": "",
"bit_width": "1",
"desc": "This interrupt is generated when the difference between the read and write pointers of the receive FIFO reaches the programmable FULL threshold value.   0 - No interrupt pending   1 - Interrupt pending
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TFPE": {"access": "read-write",
"bit_offset": "21",
"bit_range": "",
"bit_width": "1",
"desc": "This interrupt is generated when the difference between the read and write pointers of the transmit FIFO reaches the programmable EMPTY threshold value when the FIFO is being emptied.   0 - No interrupt pending   1 - Interrupt pending For lower values of programmable threshold, this flag may toggle during the initial writes because of First Word Fall Through (FWFT) behavior of FIFO. This flag may toggle even though there are no external reads.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TFPF": {"access": "read-write",
"bit_offset": "22",
"bit_range": "",
"bit_width": "1",
"desc": "This interrupt is generated when the difference between the read and write pointers of the transmit FIFO reaches the programmable FULL threshold value.   0 - No interrupt pending   1 - Interrupt pending
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RRC": {"access": "read-write",
"bit_offset": "23",
"bit_range": "",
"bit_width": "1",
"desc": "This interrupt indicates that a reset of the receive logic has completed.
  0 - No interrupt pending
  1 - Interrupt pending
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TRC": {"access": "read-write",
"bit_offset": "24",
"bit_range": "",
"bit_width": "1",
"desc": "This interrupt indicates that a reset of the transmit logic has completed
  0 - No interrupt pending
  1 - Interrupt pending
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TSE": {"access": "read-write",
"bit_offset": "25",
"bit_range": "",
"bit_width": "1",
"desc": "This interrupt is generated if the number of words (including partial words in the count) written to the transmit data FIFO does not match the value written to the transmit length register (bytes) divided by 4/8 and rounded up to the higher integer value for trailing byte fractions. Interrupts occur only for mismatch of word count (including partial words). Interrupts do not occur due to mismatch of byte count.   0 - No interrupt pending   1 - Interrupt pending
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RC": {"access": "read-write",
"bit_offset": "26",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates that at least one successful receive has completed and that the receive packet data and packet data length is available. This signal is not set for unsuccessful receives. This interrupt can represent more than one packet received, so it is important to check the receive data FIFO occupancy value to determine if additional receive packets are ready to be processed.  0 - No interrupt pending  1 - Interrupt pending
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TC": {"access": "read-write",
"bit_offset": "27",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates that at least one transmit has completed
  0 - No interrupt pending
  1 - Interrupt pending
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TPOE": {"access": "read-write",
"bit_offset": "28",
"bit_range": "",
"bit_width": "1",
"desc": "This interrupt is generated if an attempt is made to write to the transmit data FIFO when it is full. A reset of the transmit logic is required to recover.   0 - No interrupt pending   1 - Interrupt pending
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RPUE": {"access": "read-write",
"bit_offset": "29",
"bit_range": "",
"bit_width": "1",
"desc": "This interrupt occurs when an attempt is made to read the receive FIFO when it is empty. The data read is not valid. A reset of the receive logic is required to recover.   0 - No interrupt pending   1 - Interrupt pending
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RPORE": {"access": "read-write",
"bit_offset": "30",
"bit_range": "",
"bit_width": "1",
"desc": "This interrupt occurs when more words are read from the receive data FIFO than are in the packet being processed. Even though the FIFO is not empty, the read has gone beyond the current packet and removed the data from the next packet. A reset of the receive logic is required to recover  0 - No interrupt pending  1 - Interrupt pending
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RPURE": {"access": "read-write",
"bit_offset": "31",
"bit_range": "",
"bit_width": "1",
"desc": "This interrupt occurs when an attempt is made to read the receive length register when it is empty. The data read is not valid. A reset of the receive logic is required to recover.   0 - No interrupt pending   1 - Interrupt pending
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953576448,
},
"IER": {"description": "Interrupt Enable Register",
"address_offset": "0x4",
"access": "read-write",
"size": "32",
"interface": "S_AXI",
"fields": {"RFPEE": {"access": "read-write",
"bit_offset": "19",
"bit_range": "",
"bit_width": "1",
"desc": "Receive FIFO Programmable Empty Enable
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RFPFE": {"access": "read-write",
"bit_offset": "20",
"bit_range": "",
"bit_width": "1",
"desc": "Receive FIFO Programmable Full Enable
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TFPEE": {"access": "read-write",
"bit_offset": "21",
"bit_range": "",
"bit_width": "1",
"desc": "Transmit FIFO Programmable Empty Enable
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TFPFE": {"access": "read-write",
"bit_offset": "22",
"bit_range": "",
"bit_width": "1",
"desc": "Transmit FIFO Programmable Full Enable
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RRCE": {"access": "read-write",
"bit_offset": "23",
"bit_range": "",
"bit_width": "1",
"desc": "Receive Reset Complete Enable
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TRCE": {"access": "read-write",
"bit_offset": "24",
"bit_range": "",
"bit_width": "1",
"desc": "Transmit Reset Complete Enable
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TSEE": {"access": "read-write",
"bit_offset": "25",
"bit_range": "",
"bit_width": "1",
"desc": "Transmit Size Error Enable
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RCE": {"access": "read-write",
"bit_offset": "26",
"bit_range": "",
"bit_width": "1",
"desc": "Receive Complete Enable
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TCE": {"access": "read-write",
"bit_offset": "27",
"bit_range": "",
"bit_width": "1",
"desc": "Transmit Complete Enable
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TPOEE": {"access": "read-write",
"bit_offset": "28",
"bit_range": "",
"bit_width": "1",
"desc": "Transmit Packet Overrun Error Enable
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RPUEE": {"access": "read-write",
"bit_offset": "29",
"bit_range": "",
"bit_width": "1",
"desc": "Receive Packet Underrun Error Enable
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RPOREE": {"access": "read-write",
"bit_offset": "30",
"bit_range": "",
"bit_width": "1",
"desc": "Receive Packet Overrun Read Error Enable
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RPUREE": {"access": "read-write",
"bit_offset": "31",
"bit_range": "",
"bit_width": "1",
"desc": "Receive Packet Underrun Read Error Enable
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953576452,
},
"TDFR": {"description": "Transmit Data FIFO Reset Register",
"address_offset": "0x8",
"access": "write-only",
"size": "32",
"interface": "S_AXI",
"fields": {"Reset_Key": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Reset Write Value.
  \"0x000000A5\" - Generate a reset.
  Others - No effect.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953576456,
},
"TDFV": {"description": "Transmit Data FIFO Vacancy Register",
"address_offset": "0xC",
"access": "read-only",
"size": "32",
"interface": "S_AXI",
"fields": {"Vacancy": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "17",
"desc": "Vacancy status of the Transmit Data FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953576460,
},
"TDFD": {"description": "Transmit Data FIFO 32bit Wide Data Write Port Register",
"address_offset": "0x10",
"access": "write-only",
"size": "32",
"interface": "S_AXI",
"fields": {"Write_Data_Value": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Transmit Data FIFO Write Value
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953576464,
},
"TLR": {"description": "Transmit Length Register",
"address_offset": "0x14",
"access": "write-only",
"size": "32",
"interface": "S_AXI",
"fields": {"TXL": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "23",
"desc": "The number of bytes of the corresponding transmit packet stored in the transmit data FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953576468,
},
"RDFR": {"description": "Receive Data FIFO reset Register",
"address_offset": "0x18",
"access": "write-only",
"size": "32",
"interface": "S_AXI",
"fields": {"Reset_Key": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Reset Write Value.
  \"0x000000A5\" - Generate a reset.
  Others - No effect.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953576472,
},
"RDFO": {"description": "Receive Data FIFO Occupancy Register",
"address_offset": "0x1C",
"access": "read-only",
"size": "32",
"interface": "S_AXI",
"fields": {"Occupancy": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "17",
"desc": "This is the unsigned value reflecting a current snapshot of the number of locations in use for data storage in the receive Data FIFO memory core in the most recent transaction. This value is only updated after a packet is successfully received, and therefore can be used to determine if a receive packet is ready to be processed when a non-0 value is read.
If the number of packets received is one, then this register returns the value of the locations occupied. After the FIFO is read, any subsequent read to this register returns the value of 0. If more than one packet is received, a read to this register returns the number of locations occupied by the latest received packet
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953576476,
},
"RDFD": {"description": "Receive Data FIFO 32-bit Wide Data Read Port Register",
"address_offset": "0x20",
"access": "read-only",
"size": "32",
"interface": "S_AXI",
"fields": {"Read_Data_Value": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Receive Data FIFO Read Value
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953576480,
},
"RLR": {"description": "Receive Length Register",
"address_offset": "0x24",
"access": "read-only",
"size": "32",
"interface": "S_AXI",
"fields": {"RXL": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "23",
"desc": "The number of bytes of the corresponding receive data stored in the receive data FIFO
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953576484,
},
"SRR": {"description": "AXI4-Stream Reset Register",
"address_offset": "0x28",
"access": "write-only",
"size": "32",
"interface": "S_AXI",
"fields": {"Reset_Key": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Reset Write Value.
  \"0x000000A5\" - Generate a reset.
  Others - No effect.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953576488,
},
"TDR": {"description": "Transmit Destination Register",
"address_offset": "0x2C",
"access": "write-only",
"size": "32",
"interface": "S_AXI",
"fields": {"TDEST": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "4",
"desc": "The destination address of the transmit packet stored in the transmit data FIFO
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953576492,
},
"RDR": {"description": "Receive Destination Register",
"address_offset": "0x30",
"access": "read-only",
"size": "32",
"interface": "S_AXI",
"fields": {"RDEST": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "4",
"desc": "The destination address of the receive packet stored in the receive data FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953576496,
},
"Transmit_ID_Register": {"description": "Transmit ID Register",
"address_offset": "0x34",
"access": "write-only",
"size": "32",
"interface": "S_AXI",
"fields": {},
"memoryAddr": 2953576500,
},
"Transmit_User_Register": {"description": "Transmit User Register",
"address_offset": "0x38",
"access": "write-only",
"size": "32",
"interface": "S_AXI",
"fields": {},
"memoryAddr": 2953576504,
},
"Receive_ID_Register": {"description": "Receive ID Register",
"address_offset": "0x3C",
"access": "read-only",
"size": "32",
"interface": "S_AXI",
"fields": {},
"memoryAddr": 2953576508,
},
"Receive_User_Register": {"description": "Receive User Register",
"address_offset": "0x40",
"access": "read-only",
"size": "32",
"interface": "S_AXI",
"fields": {},
"memoryAddr": 2953576512,
},
},
"axi_ethernet_sw1_fifo": {"ISR": {"description": "Interrupt Status Register",
"address_offset": "0x0",
"access": "read-write",
"size": "32",
"interface": "S_AXI",
"fields": {"RFPE": {"access": "read-write",
"bit_offset": "19",
"bit_range": "",
"bit_width": "1",
"desc": "Generated when the difference between the read and write pointers of the receive FIFO reaches the programmable EMPTY threshold value when the FIFO is being emptied.   0 - No interrupt pending   1 - Interrupt pending
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RFPF": {"access": "read-write",
"bit_offset": "20",
"bit_range": "",
"bit_width": "1",
"desc": "This interrupt is generated when the difference between the read and write pointers of the receive FIFO reaches the programmable FULL threshold value.   0 - No interrupt pending   1 - Interrupt pending
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TFPE": {"access": "read-write",
"bit_offset": "21",
"bit_range": "",
"bit_width": "1",
"desc": "This interrupt is generated when the difference between the read and write pointers of the transmit FIFO reaches the programmable EMPTY threshold value when the FIFO is being emptied.   0 - No interrupt pending   1 - Interrupt pending For lower values of programmable threshold, this flag may toggle during the initial writes because of First Word Fall Through (FWFT) behavior of FIFO. This flag may toggle even though there are no external reads.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TFPF": {"access": "read-write",
"bit_offset": "22",
"bit_range": "",
"bit_width": "1",
"desc": "This interrupt is generated when the difference between the read and write pointers of the transmit FIFO reaches the programmable FULL threshold value.   0 - No interrupt pending   1 - Interrupt pending
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RRC": {"access": "read-write",
"bit_offset": "23",
"bit_range": "",
"bit_width": "1",
"desc": "This interrupt indicates that a reset of the receive logic has completed.
  0 - No interrupt pending
  1 - Interrupt pending
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TRC": {"access": "read-write",
"bit_offset": "24",
"bit_range": "",
"bit_width": "1",
"desc": "This interrupt indicates that a reset of the transmit logic has completed
  0 - No interrupt pending
  1 - Interrupt pending
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TSE": {"access": "read-write",
"bit_offset": "25",
"bit_range": "",
"bit_width": "1",
"desc": "This interrupt is generated if the number of words (including partial words in the count) written to the transmit data FIFO does not match the value written to the transmit length register (bytes) divided by 4/8 and rounded up to the higher integer value for trailing byte fractions. Interrupts occur only for mismatch of word count (including partial words). Interrupts do not occur due to mismatch of byte count.   0 - No interrupt pending   1 - Interrupt pending
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RC": {"access": "read-write",
"bit_offset": "26",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates that at least one successful receive has completed and that the receive packet data and packet data length is available. This signal is not set for unsuccessful receives. This interrupt can represent more than one packet received, so it is important to check the receive data FIFO occupancy value to determine if additional receive packets are ready to be processed.  0 - No interrupt pending  1 - Interrupt pending
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TC": {"access": "read-write",
"bit_offset": "27",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates that at least one transmit has completed
  0 - No interrupt pending
  1 - Interrupt pending
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TPOE": {"access": "read-write",
"bit_offset": "28",
"bit_range": "",
"bit_width": "1",
"desc": "This interrupt is generated if an attempt is made to write to the transmit data FIFO when it is full. A reset of the transmit logic is required to recover.   0 - No interrupt pending   1 - Interrupt pending
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RPUE": {"access": "read-write",
"bit_offset": "29",
"bit_range": "",
"bit_width": "1",
"desc": "This interrupt occurs when an attempt is made to read the receive FIFO when it is empty. The data read is not valid. A reset of the receive logic is required to recover.   0 - No interrupt pending   1 - Interrupt pending
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RPORE": {"access": "read-write",
"bit_offset": "30",
"bit_range": "",
"bit_width": "1",
"desc": "This interrupt occurs when more words are read from the receive data FIFO than are in the packet being processed. Even though the FIFO is not empty, the read has gone beyond the current packet and removed the data from the next packet. A reset of the receive logic is required to recover  0 - No interrupt pending  1 - Interrupt pending
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RPURE": {"access": "read-write",
"bit_offset": "31",
"bit_range": "",
"bit_width": "1",
"desc": "This interrupt occurs when an attempt is made to read the receive length register when it is empty. The data read is not valid. A reset of the receive logic is required to recover.   0 - No interrupt pending   1 - Interrupt pending
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953580544,
},
"IER": {"description": "Interrupt Enable Register",
"address_offset": "0x4",
"access": "read-write",
"size": "32",
"interface": "S_AXI",
"fields": {"RFPEE": {"access": "read-write",
"bit_offset": "19",
"bit_range": "",
"bit_width": "1",
"desc": "Receive FIFO Programmable Empty Enable
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RFPFE": {"access": "read-write",
"bit_offset": "20",
"bit_range": "",
"bit_width": "1",
"desc": "Receive FIFO Programmable Full Enable
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TFPEE": {"access": "read-write",
"bit_offset": "21",
"bit_range": "",
"bit_width": "1",
"desc": "Transmit FIFO Programmable Empty Enable
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TFPFE": {"access": "read-write",
"bit_offset": "22",
"bit_range": "",
"bit_width": "1",
"desc": "Transmit FIFO Programmable Full Enable
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RRCE": {"access": "read-write",
"bit_offset": "23",
"bit_range": "",
"bit_width": "1",
"desc": "Receive Reset Complete Enable
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TRCE": {"access": "read-write",
"bit_offset": "24",
"bit_range": "",
"bit_width": "1",
"desc": "Transmit Reset Complete Enable
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TSEE": {"access": "read-write",
"bit_offset": "25",
"bit_range": "",
"bit_width": "1",
"desc": "Transmit Size Error Enable
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RCE": {"access": "read-write",
"bit_offset": "26",
"bit_range": "",
"bit_width": "1",
"desc": "Receive Complete Enable
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TCE": {"access": "read-write",
"bit_offset": "27",
"bit_range": "",
"bit_width": "1",
"desc": "Transmit Complete Enable
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TPOEE": {"access": "read-write",
"bit_offset": "28",
"bit_range": "",
"bit_width": "1",
"desc": "Transmit Packet Overrun Error Enable
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RPUEE": {"access": "read-write",
"bit_offset": "29",
"bit_range": "",
"bit_width": "1",
"desc": "Receive Packet Underrun Error Enable
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RPOREE": {"access": "read-write",
"bit_offset": "30",
"bit_range": "",
"bit_width": "1",
"desc": "Receive Packet Overrun Read Error Enable
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RPUREE": {"access": "read-write",
"bit_offset": "31",
"bit_range": "",
"bit_width": "1",
"desc": "Receive Packet Underrun Read Error Enable
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953580548,
},
"TDFR": {"description": "Transmit Data FIFO Reset Register",
"address_offset": "0x8",
"access": "write-only",
"size": "32",
"interface": "S_AXI",
"fields": {"Reset_Key": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Reset Write Value.
  \"0x000000A5\" - Generate a reset.
  Others - No effect.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953580552,
},
"TDFV": {"description": "Transmit Data FIFO Vacancy Register",
"address_offset": "0xC",
"access": "read-only",
"size": "32",
"interface": "S_AXI",
"fields": {"Vacancy": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "17",
"desc": "Vacancy status of the Transmit Data FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953580556,
},
"TDFD": {"description": "Transmit Data FIFO 32bit Wide Data Write Port Register",
"address_offset": "0x10",
"access": "write-only",
"size": "32",
"interface": "S_AXI",
"fields": {"Write_Data_Value": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Transmit Data FIFO Write Value
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953580560,
},
"TLR": {"description": "Transmit Length Register",
"address_offset": "0x14",
"access": "write-only",
"size": "32",
"interface": "S_AXI",
"fields": {"TXL": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "23",
"desc": "The number of bytes of the corresponding transmit packet stored in the transmit data FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953580564,
},
"RDFR": {"description": "Receive Data FIFO reset Register",
"address_offset": "0x18",
"access": "write-only",
"size": "32",
"interface": "S_AXI",
"fields": {"Reset_Key": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Reset Write Value.
  \"0x000000A5\" - Generate a reset.
  Others - No effect.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953580568,
},
"RDFO": {"description": "Receive Data FIFO Occupancy Register",
"address_offset": "0x1C",
"access": "read-only",
"size": "32",
"interface": "S_AXI",
"fields": {"Occupancy": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "17",
"desc": "This is the unsigned value reflecting a current snapshot of the number of locations in use for data storage in the receive Data FIFO memory core in the most recent transaction. This value is only updated after a packet is successfully received, and therefore can be used to determine if a receive packet is ready to be processed when a non-0 value is read.
If the number of packets received is one, then this register returns the value of the locations occupied. After the FIFO is read, any subsequent read to this register returns the value of 0. If more than one packet is received, a read to this register returns the number of locations occupied by the latest received packet
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953580572,
},
"RDFD": {"description": "Receive Data FIFO 32-bit Wide Data Read Port Register",
"address_offset": "0x20",
"access": "read-only",
"size": "32",
"interface": "S_AXI",
"fields": {"Read_Data_Value": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Receive Data FIFO Read Value
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953580576,
},
"RLR": {"description": "Receive Length Register",
"address_offset": "0x24",
"access": "read-only",
"size": "32",
"interface": "S_AXI",
"fields": {"RXL": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "23",
"desc": "The number of bytes of the corresponding receive data stored in the receive data FIFO
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953580580,
},
"SRR": {"description": "AXI4-Stream Reset Register",
"address_offset": "0x28",
"access": "write-only",
"size": "32",
"interface": "S_AXI",
"fields": {"Reset_Key": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Reset Write Value.
  \"0x000000A5\" - Generate a reset.
  Others - No effect.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953580584,
},
"TDR": {"description": "Transmit Destination Register",
"address_offset": "0x2C",
"access": "write-only",
"size": "32",
"interface": "S_AXI",
"fields": {"TDEST": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "4",
"desc": "The destination address of the transmit packet stored in the transmit data FIFO
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953580588,
},
"RDR": {"description": "Receive Destination Register",
"address_offset": "0x30",
"access": "read-only",
"size": "32",
"interface": "S_AXI",
"fields": {"RDEST": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "4",
"desc": "The destination address of the receive packet stored in the receive data FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953580592,
},
"Transmit_ID_Register": {"description": "Transmit ID Register",
"address_offset": "0x34",
"access": "write-only",
"size": "32",
"interface": "S_AXI",
"fields": {},
"memoryAddr": 2953580596,
},
"Transmit_User_Register": {"description": "Transmit User Register",
"address_offset": "0x38",
"access": "write-only",
"size": "32",
"interface": "S_AXI",
"fields": {},
"memoryAddr": 2953580600,
},
"Receive_ID_Register": {"description": "Receive ID Register",
"address_offset": "0x3C",
"access": "read-only",
"size": "32",
"interface": "S_AXI",
"fields": {},
"memoryAddr": 2953580604,
},
"Receive_User_Register": {"description": "Receive User Register",
"address_offset": "0x40",
"access": "read-only",
"size": "32",
"interface": "S_AXI",
"fields": {},
"memoryAddr": 2953580608,
},
},
"axi_ethernet_sw2_fifo": {"ISR": {"description": "Interrupt Status Register",
"address_offset": "0x0",
"access": "read-write",
"size": "32",
"interface": "S_AXI",
"fields": {"RFPE": {"access": "read-write",
"bit_offset": "19",
"bit_range": "",
"bit_width": "1",
"desc": "Generated when the difference between the read and write pointers of the receive FIFO reaches the programmable EMPTY threshold value when the FIFO is being emptied.   0 - No interrupt pending   1 - Interrupt pending
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RFPF": {"access": "read-write",
"bit_offset": "20",
"bit_range": "",
"bit_width": "1",
"desc": "This interrupt is generated when the difference between the read and write pointers of the receive FIFO reaches the programmable FULL threshold value.   0 - No interrupt pending   1 - Interrupt pending
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TFPE": {"access": "read-write",
"bit_offset": "21",
"bit_range": "",
"bit_width": "1",
"desc": "This interrupt is generated when the difference between the read and write pointers of the transmit FIFO reaches the programmable EMPTY threshold value when the FIFO is being emptied.   0 - No interrupt pending   1 - Interrupt pending For lower values of programmable threshold, this flag may toggle during the initial writes because of First Word Fall Through (FWFT) behavior of FIFO. This flag may toggle even though there are no external reads.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TFPF": {"access": "read-write",
"bit_offset": "22",
"bit_range": "",
"bit_width": "1",
"desc": "This interrupt is generated when the difference between the read and write pointers of the transmit FIFO reaches the programmable FULL threshold value.   0 - No interrupt pending   1 - Interrupt pending
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RRC": {"access": "read-write",
"bit_offset": "23",
"bit_range": "",
"bit_width": "1",
"desc": "This interrupt indicates that a reset of the receive logic has completed.
  0 - No interrupt pending
  1 - Interrupt pending
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TRC": {"access": "read-write",
"bit_offset": "24",
"bit_range": "",
"bit_width": "1",
"desc": "This interrupt indicates that a reset of the transmit logic has completed
  0 - No interrupt pending
  1 - Interrupt pending
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TSE": {"access": "read-write",
"bit_offset": "25",
"bit_range": "",
"bit_width": "1",
"desc": "This interrupt is generated if the number of words (including partial words in the count) written to the transmit data FIFO does not match the value written to the transmit length register (bytes) divided by 4/8 and rounded up to the higher integer value for trailing byte fractions. Interrupts occur only for mismatch of word count (including partial words). Interrupts do not occur due to mismatch of byte count.   0 - No interrupt pending   1 - Interrupt pending
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RC": {"access": "read-write",
"bit_offset": "26",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates that at least one successful receive has completed and that the receive packet data and packet data length is available. This signal is not set for unsuccessful receives. This interrupt can represent more than one packet received, so it is important to check the receive data FIFO occupancy value to determine if additional receive packets are ready to be processed.  0 - No interrupt pending  1 - Interrupt pending
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TC": {"access": "read-write",
"bit_offset": "27",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates that at least one transmit has completed
  0 - No interrupt pending
  1 - Interrupt pending
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TPOE": {"access": "read-write",
"bit_offset": "28",
"bit_range": "",
"bit_width": "1",
"desc": "This interrupt is generated if an attempt is made to write to the transmit data FIFO when it is full. A reset of the transmit logic is required to recover.   0 - No interrupt pending   1 - Interrupt pending
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RPUE": {"access": "read-write",
"bit_offset": "29",
"bit_range": "",
"bit_width": "1",
"desc": "This interrupt occurs when an attempt is made to read the receive FIFO when it is empty. The data read is not valid. A reset of the receive logic is required to recover.   0 - No interrupt pending   1 - Interrupt pending
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RPORE": {"access": "read-write",
"bit_offset": "30",
"bit_range": "",
"bit_width": "1",
"desc": "This interrupt occurs when more words are read from the receive data FIFO than are in the packet being processed. Even though the FIFO is not empty, the read has gone beyond the current packet and removed the data from the next packet. A reset of the receive logic is required to recover  0 - No interrupt pending  1 - Interrupt pending
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RPURE": {"access": "read-write",
"bit_offset": "31",
"bit_range": "",
"bit_width": "1",
"desc": "This interrupt occurs when an attempt is made to read the receive length register when it is empty. The data read is not valid. A reset of the receive logic is required to recover.   0 - No interrupt pending   1 - Interrupt pending
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953584640,
},
"IER": {"description": "Interrupt Enable Register",
"address_offset": "0x4",
"access": "read-write",
"size": "32",
"interface": "S_AXI",
"fields": {"RFPEE": {"access": "read-write",
"bit_offset": "19",
"bit_range": "",
"bit_width": "1",
"desc": "Receive FIFO Programmable Empty Enable
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RFPFE": {"access": "read-write",
"bit_offset": "20",
"bit_range": "",
"bit_width": "1",
"desc": "Receive FIFO Programmable Full Enable
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TFPEE": {"access": "read-write",
"bit_offset": "21",
"bit_range": "",
"bit_width": "1",
"desc": "Transmit FIFO Programmable Empty Enable
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TFPFE": {"access": "read-write",
"bit_offset": "22",
"bit_range": "",
"bit_width": "1",
"desc": "Transmit FIFO Programmable Full Enable
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RRCE": {"access": "read-write",
"bit_offset": "23",
"bit_range": "",
"bit_width": "1",
"desc": "Receive Reset Complete Enable
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TRCE": {"access": "read-write",
"bit_offset": "24",
"bit_range": "",
"bit_width": "1",
"desc": "Transmit Reset Complete Enable
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TSEE": {"access": "read-write",
"bit_offset": "25",
"bit_range": "",
"bit_width": "1",
"desc": "Transmit Size Error Enable
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RCE": {"access": "read-write",
"bit_offset": "26",
"bit_range": "",
"bit_width": "1",
"desc": "Receive Complete Enable
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TCE": {"access": "read-write",
"bit_offset": "27",
"bit_range": "",
"bit_width": "1",
"desc": "Transmit Complete Enable
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TPOEE": {"access": "read-write",
"bit_offset": "28",
"bit_range": "",
"bit_width": "1",
"desc": "Transmit Packet Overrun Error Enable
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RPUEE": {"access": "read-write",
"bit_offset": "29",
"bit_range": "",
"bit_width": "1",
"desc": "Receive Packet Underrun Error Enable
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RPOREE": {"access": "read-write",
"bit_offset": "30",
"bit_range": "",
"bit_width": "1",
"desc": "Receive Packet Overrun Read Error Enable
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RPUREE": {"access": "read-write",
"bit_offset": "31",
"bit_range": "",
"bit_width": "1",
"desc": "Receive Packet Underrun Read Error Enable
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953584644,
},
"TDFR": {"description": "Transmit Data FIFO Reset Register",
"address_offset": "0x8",
"access": "write-only",
"size": "32",
"interface": "S_AXI",
"fields": {"Reset_Key": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Reset Write Value.
  \"0x000000A5\" - Generate a reset.
  Others - No effect.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953584648,
},
"TDFV": {"description": "Transmit Data FIFO Vacancy Register",
"address_offset": "0xC",
"access": "read-only",
"size": "32",
"interface": "S_AXI",
"fields": {"Vacancy": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "17",
"desc": "Vacancy status of the Transmit Data FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953584652,
},
"TDFD": {"description": "Transmit Data FIFO 32bit Wide Data Write Port Register",
"address_offset": "0x10",
"access": "write-only",
"size": "32",
"interface": "S_AXI",
"fields": {"Write_Data_Value": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Transmit Data FIFO Write Value
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953584656,
},
"TLR": {"description": "Transmit Length Register",
"address_offset": "0x14",
"access": "write-only",
"size": "32",
"interface": "S_AXI",
"fields": {"TXL": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "23",
"desc": "The number of bytes of the corresponding transmit packet stored in the transmit data FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953584660,
},
"RDFR": {"description": "Receive Data FIFO reset Register",
"address_offset": "0x18",
"access": "write-only",
"size": "32",
"interface": "S_AXI",
"fields": {"Reset_Key": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Reset Write Value.
  \"0x000000A5\" - Generate a reset.
  Others - No effect.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953584664,
},
"RDFO": {"description": "Receive Data FIFO Occupancy Register",
"address_offset": "0x1C",
"access": "read-only",
"size": "32",
"interface": "S_AXI",
"fields": {"Occupancy": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "17",
"desc": "This is the unsigned value reflecting a current snapshot of the number of locations in use for data storage in the receive Data FIFO memory core in the most recent transaction. This value is only updated after a packet is successfully received, and therefore can be used to determine if a receive packet is ready to be processed when a non-0 value is read.
If the number of packets received is one, then this register returns the value of the locations occupied. After the FIFO is read, any subsequent read to this register returns the value of 0. If more than one packet is received, a read to this register returns the number of locations occupied by the latest received packet
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953584668,
},
"RDFD": {"description": "Receive Data FIFO 32-bit Wide Data Read Port Register",
"address_offset": "0x20",
"access": "read-only",
"size": "32",
"interface": "S_AXI",
"fields": {"Read_Data_Value": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Receive Data FIFO Read Value
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953584672,
},
"RLR": {"description": "Receive Length Register",
"address_offset": "0x24",
"access": "read-only",
"size": "32",
"interface": "S_AXI",
"fields": {"RXL": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "23",
"desc": "The number of bytes of the corresponding receive data stored in the receive data FIFO
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953584676,
},
"SRR": {"description": "AXI4-Stream Reset Register",
"address_offset": "0x28",
"access": "write-only",
"size": "32",
"interface": "S_AXI",
"fields": {"Reset_Key": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Reset Write Value.
  \"0x000000A5\" - Generate a reset.
  Others - No effect.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953584680,
},
"TDR": {"description": "Transmit Destination Register",
"address_offset": "0x2C",
"access": "write-only",
"size": "32",
"interface": "S_AXI",
"fields": {"TDEST": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "4",
"desc": "The destination address of the transmit packet stored in the transmit data FIFO
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953584684,
},
"RDR": {"description": "Receive Destination Register",
"address_offset": "0x30",
"access": "read-only",
"size": "32",
"interface": "S_AXI",
"fields": {"RDEST": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "4",
"desc": "The destination address of the receive packet stored in the receive data FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2953584688,
},
"Transmit_ID_Register": {"description": "Transmit ID Register",
"address_offset": "0x34",
"access": "write-only",
"size": "32",
"interface": "S_AXI",
"fields": {},
"memoryAddr": 2953584692,
},
"Transmit_User_Register": {"description": "Transmit User Register",
"address_offset": "0x38",
"access": "write-only",
"size": "32",
"interface": "S_AXI",
"fields": {},
"memoryAddr": 2953584696,
},
"Receive_ID_Register": {"description": "Receive ID Register",
"address_offset": "0x3C",
"access": "read-only",
"size": "32",
"interface": "S_AXI",
"fields": {},
"memoryAddr": 2953584700,
},
"Receive_User_Register": {"description": "Receive User Register",
"address_offset": "0x40",
"access": "read-only",
"size": "32",
"interface": "S_AXI",
"fields": {},
"memoryAddr": 2953584704,
},
},
"axi_uart16550_0": {"RBR_THR_DLL": {"description": "Receiver Buffer Register or Transmitter Holding Register or Divisor Latch (LSB) Register.
Based on DLAB bit in LCR register following register is selected.
DLAB = 0 then Read is from RBR register.
DLAB = 0 then Write in to  THR register.
DLAB = 1 then DLL register is selected.
",
"address_offset": "0x1000",
"access": "read-write",
"size": "32",
"interface": "S_AXI",
"fields": {"RBR": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Last received character
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"THR": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Holds the character to be transmitted next
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DLL": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Divisor Latch Least Significant Byte
Note: On reset, the DLL gets configured for 9600 Baud.
The DLL reset value, [LSB(divisor)] is calculated from the formula, divisor = AXI CLK frequency/(16 x 9600)).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684424192,
},
"IER_DLM": {"description": "Interrupt Enable Register or Divisor Latch (MSB) Register.
Based on DLAB bit in LCR register following register is selected.
DLAB = 0 then IER register is selected.
DLAB = 1 then DLM register is selected.
",
"address_offset": "0x1004",
"access": "read-write",
"size": "32",
"interface": "S_AXI",
"fields": {"IER_ERBFI": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Received Data Available Interrupts.
1 - Enables Received Data Available Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IER_ETBEI": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Transmitter Holding Register Empty Interrupts.
1 - Enables Transmitter Holding Register Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IER_ELSI": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Receiver Line Status Interrupts.
1 - Enables Receiver Line Status Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IER_EDSSI": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Modem Status Interrupts.
1 - Enables Modem Status Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DLM": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Divisor Latch Most Significant Byte
Note: On reset, the DLM gets configured for 9600 Baud.
The DLM reset value, [MSB(divisor)] is calculated from the formula, divisor = (AXI CLK frequency/(16 x 9600)).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684424196,
},
"IIR_FCR": {"description": "Interrupt Identification Register or FIFO Control Register.
Based on DLAB bit in LCR register following register is selected.
DLAB = 0 then Read is from IIR register.
DLAB = 0 then Write in to  FCR register.
DLAB = 1 then FCR register is selected.
",
"address_offset": "0x1008",
"access": "read-write",
"size": "32",
"interface": "S_AXI",
"fields": {"IIR_INTPEND": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Interrupt is pending
1 - No interrupt is pending
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IIR_INTID2": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "3",
"desc": "011 - Receiver Line Status (Highest)
010 - Received Data Available (Second)
110 - Character Timeout (Second)
001 - Transmitter Holding Register Empty (Third)
000 - Modem Status (Fourth)
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IIR_FIFOEN": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "2",
"desc": "Always zero if not in FIFO mode.
0 - 16450 mode
1 - 16550 mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FCR_FIFOEN": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables FIFOs.
0 - Disables FIFOs
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FCR_RCVR_FIFO_Reset": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Resets RCVR FIFO
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FCR_XMIT_FIFO_Reset": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Resets XMIT FIFO
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FCR_DMA_MODE_Select": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Mode 0.
1 - Mode 1
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FCR_RCVR_FIFO_Trigger_Level": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "2",
"desc": "RCVR FIFO Trigger Level.
00 - 1 byte.
01 - 4 bytes.
10 - 8 bytes.
11 - 14 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684424200,
},
"LCR": {"description": "Line Control Register",
"address_offset": "0x100C",
"access": "read-write",
"size": "32",
"interface": "S_AXI",
"fields": {"WLS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "2",
"desc": "00 - 5 bits/character
01 - 6 bits/character
10 - 7 bits/character
11 - 8 bits/character
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STB": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "0 - 1 Stop bit.
1 - 2 Stop bits or 1.5, if 5 bits/character selected.
The receiver checks for 1 stop bit only regardless of the number of stop bits selected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PEN": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables parity.
0 - Disables parity
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EPS": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Selects Even parity.
0 - Selects Odd parity.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Stick_Parity": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "1 - When bits 3, 4 are logic 1 the Parity bit is transmitted and checked as a logic 0. 
If bit 4 is a logic 0 and bit 3 is logic 1 then the Parity bit is transmitted and checked as a logic 1.
0 - Stick Parity is disabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Set_Break": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "1 = Enables break condition. Sets SOUT to 0 and cause break condition.
0 = Disables break condition
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DLAB": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Allows access to the Divisor Latch Registers and reading of the FIFO Control Register.
0 - Allows access to RBR, THR, IER and IIR registers.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684424204,
},
"MCR": {"description": "Modem Control Register",
"address_offset": "0x1010",
"access": "read-write",
"size": "32",
"interface": "S_AXI",
"fields": {"DTR": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives DTRN Low.
0 - Drives DTRN High
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RTS": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives RTSN Low.
0 - Drives RTSN High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Out1": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives OUT1N Low.
0 - Drives OUT1N High
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Out2": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives OUT2N Low.
0 - Drives OUT2N High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Loop": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables loopback
0 - Disables loopback
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684424208,
},
"LSR": {"description": "Line Status Register",
"address_offset": "0x1014",
"access": "read-write",
"size": "32",
"interface": "S_AXI",
"fields": {"DR": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "0 - All the data in RBR or FIFO is read.
1 - Complete incoming character has been received and transferred into the RBR of FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"OE": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "RBR not read before next character is received, thereby destroying the previous character. 
In FIFO mode, data continues to fill the FIFO beyond the trigger level, an overrun error 
occurs only after the FIFO is full and the next character has been completely received in 
the shift register. The character in the shift register is overwritten but it is not 
transferred to the FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PE": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates that the received data character does not have correct even or odd parity as 
selected by the Even parity select bit. In FIFO mode, this error is associated with a 
particular character in the FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FE": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Character missing a stop bit. In framing error, the UART attempts to re-synchronize by 
assuming that the framing error was due to next character start bit, so it samples start 
bit twice and then takes in following data. In FIFO mode, this error is associated with a 
particular character in the FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"BI": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Set when SIN is held Low for an entire character time. (Start + data bits + Parity + Stop bits).
In FIFO mode, this error is associated with a particular character in FIFO. The next character 
transfer is enabled if the Sin goes to marking state and receives the next valid start bit.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"THRE": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "0 - THR or Transmitter FIFO has data to transmit.
1 - THR is empty. In FIFO mode, Transmitter FIFO is empty.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TEMT": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "0 - THR or Transmitter shift register contains data.
1 - THR and Transmitter shift register empty
In FIFO mode, Transmitter FIFO and shift register are both empty.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Error_in_RCVR_FIFO": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "RCVR FIFO contains at least one receiver error (Parity, Framing, Break condition).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684424212,
},
"MSR": {"description": "Modem Status Register",
"address_offset": "0x1018",
"access": "read-write",
"size": "32",
"interface": "S_AXI",
"fields": {"DCTS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Change in CTSN after last MSR read.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DDSR": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Change in DSRN after last MSR read.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TERI": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "RIN has changed from a Low to a High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DDCD": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Change in DCDN after last MSR read
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTS": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of CTSN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DSR": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of DSRN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RI": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of RIN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DCD": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of DCDN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684424216,
},
"SCR": {"description": "Scratch Register",
"address_offset": "0x101C",
"access": "read-write",
"size": "32",
"interface": "S_AXI",
"fields": {"Scratch": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Hold user data
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684424220,
},
},
"axi_uart16550_1": {"RBR_THR_DLL": {"description": "Receiver Buffer Register or Transmitter Holding Register or Divisor Latch (LSB) Register.
Based on DLAB bit in LCR register following register is selected.
DLAB = 0 then Read is from RBR register.
DLAB = 0 then Write in to  THR register.
DLAB = 1 then DLL register is selected.
",
"address_offset": "0x1000",
"access": "read-write",
"size": "32",
"interface": "S_AXI",
"fields": {"RBR": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Last received character
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"THR": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Holds the character to be transmitted next
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DLL": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Divisor Latch Least Significant Byte
Note: On reset, the DLL gets configured for 9600 Baud.
The DLL reset value, [LSB(divisor)] is calculated from the formula, divisor = AXI CLK frequency/(16 x 9600)).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684489728,
},
"IER_DLM": {"description": "Interrupt Enable Register or Divisor Latch (MSB) Register.
Based on DLAB bit in LCR register following register is selected.
DLAB = 0 then IER register is selected.
DLAB = 1 then DLM register is selected.
",
"address_offset": "0x1004",
"access": "read-write",
"size": "32",
"interface": "S_AXI",
"fields": {"IER_ERBFI": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Received Data Available Interrupts.
1 - Enables Received Data Available Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IER_ETBEI": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Transmitter Holding Register Empty Interrupts.
1 - Enables Transmitter Holding Register Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IER_ELSI": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Receiver Line Status Interrupts.
1 - Enables Receiver Line Status Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IER_EDSSI": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Modem Status Interrupts.
1 - Enables Modem Status Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DLM": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Divisor Latch Most Significant Byte
Note: On reset, the DLM gets configured for 9600 Baud.
The DLM reset value, [MSB(divisor)] is calculated from the formula, divisor = (AXI CLK frequency/(16 x 9600)).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684489732,
},
"IIR_FCR": {"description": "Interrupt Identification Register or FIFO Control Register.
Based on DLAB bit in LCR register following register is selected.
DLAB = 0 then Read is from IIR register.
DLAB = 0 then Write in to  FCR register.
DLAB = 1 then FCR register is selected.
",
"address_offset": "0x1008",
"access": "read-write",
"size": "32",
"interface": "S_AXI",
"fields": {"IIR_INTPEND": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Interrupt is pending
1 - No interrupt is pending
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IIR_INTID2": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "3",
"desc": "011 - Receiver Line Status (Highest)
010 - Received Data Available (Second)
110 - Character Timeout (Second)
001 - Transmitter Holding Register Empty (Third)
000 - Modem Status (Fourth)
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IIR_FIFOEN": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "2",
"desc": "Always zero if not in FIFO mode.
0 - 16450 mode
1 - 16550 mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FCR_FIFOEN": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables FIFOs.
0 - Disables FIFOs
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FCR_RCVR_FIFO_Reset": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Resets RCVR FIFO
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FCR_XMIT_FIFO_Reset": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Resets XMIT FIFO
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FCR_DMA_MODE_Select": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Mode 0.
1 - Mode 1
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FCR_RCVR_FIFO_Trigger_Level": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "2",
"desc": "RCVR FIFO Trigger Level.
00 - 1 byte.
01 - 4 bytes.
10 - 8 bytes.
11 - 14 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684489736,
},
"LCR": {"description": "Line Control Register",
"address_offset": "0x100C",
"access": "read-write",
"size": "32",
"interface": "S_AXI",
"fields": {"WLS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "2",
"desc": "00 - 5 bits/character
01 - 6 bits/character
10 - 7 bits/character
11 - 8 bits/character
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STB": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "0 - 1 Stop bit.
1 - 2 Stop bits or 1.5, if 5 bits/character selected.
The receiver checks for 1 stop bit only regardless of the number of stop bits selected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PEN": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables parity.
0 - Disables parity
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EPS": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Selects Even parity.
0 - Selects Odd parity.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Stick_Parity": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "1 - When bits 3, 4 are logic 1 the Parity bit is transmitted and checked as a logic 0. 
If bit 4 is a logic 0 and bit 3 is logic 1 then the Parity bit is transmitted and checked as a logic 1.
0 - Stick Parity is disabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Set_Break": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "1 = Enables break condition. Sets SOUT to 0 and cause break condition.
0 = Disables break condition
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DLAB": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Allows access to the Divisor Latch Registers and reading of the FIFO Control Register.
0 - Allows access to RBR, THR, IER and IIR registers.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684489740,
},
"MCR": {"description": "Modem Control Register",
"address_offset": "0x1010",
"access": "read-write",
"size": "32",
"interface": "S_AXI",
"fields": {"DTR": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives DTRN Low.
0 - Drives DTRN High
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RTS": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives RTSN Low.
0 - Drives RTSN High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Out1": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives OUT1N Low.
0 - Drives OUT1N High
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Out2": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives OUT2N Low.
0 - Drives OUT2N High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Loop": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables loopback
0 - Disables loopback
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684489744,
},
"LSR": {"description": "Line Status Register",
"address_offset": "0x1014",
"access": "read-write",
"size": "32",
"interface": "S_AXI",
"fields": {"DR": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "0 - All the data in RBR or FIFO is read.
1 - Complete incoming character has been received and transferred into the RBR of FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"OE": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "RBR not read before next character is received, thereby destroying the previous character. 
In FIFO mode, data continues to fill the FIFO beyond the trigger level, an overrun error 
occurs only after the FIFO is full and the next character has been completely received in 
the shift register. The character in the shift register is overwritten but it is not 
transferred to the FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PE": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates that the received data character does not have correct even or odd parity as 
selected by the Even parity select bit. In FIFO mode, this error is associated with a 
particular character in the FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FE": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Character missing a stop bit. In framing error, the UART attempts to re-synchronize by 
assuming that the framing error was due to next character start bit, so it samples start 
bit twice and then takes in following data. In FIFO mode, this error is associated with a 
particular character in the FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"BI": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Set when SIN is held Low for an entire character time. (Start + data bits + Parity + Stop bits).
In FIFO mode, this error is associated with a particular character in FIFO. The next character 
transfer is enabled if the Sin goes to marking state and receives the next valid start bit.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"THRE": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "0 - THR or Transmitter FIFO has data to transmit.
1 - THR is empty. In FIFO mode, Transmitter FIFO is empty.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TEMT": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "0 - THR or Transmitter shift register contains data.
1 - THR and Transmitter shift register empty
In FIFO mode, Transmitter FIFO and shift register are both empty.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Error_in_RCVR_FIFO": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "RCVR FIFO contains at least one receiver error (Parity, Framing, Break condition).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684489748,
},
"MSR": {"description": "Modem Status Register",
"address_offset": "0x1018",
"access": "read-write",
"size": "32",
"interface": "S_AXI",
"fields": {"DCTS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Change in CTSN after last MSR read.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DDSR": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Change in DSRN after last MSR read.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TERI": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "RIN has changed from a Low to a High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DDCD": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Change in DCDN after last MSR read
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTS": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of CTSN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DSR": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of DSRN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RI": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of RIN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DCD": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of DCDN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684489752,
},
"SCR": {"description": "Scratch Register",
"address_offset": "0x101C",
"access": "read-write",
"size": "32",
"interface": "S_AXI",
"fields": {"Scratch": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Hold user data
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684489756,
},
},
"axi_uart16550_2": {"RBR_THR_DLL": {"description": "Receiver Buffer Register or Transmitter Holding Register or Divisor Latch (LSB) Register.
Based on DLAB bit in LCR register following register is selected.
DLAB = 0 then Read is from RBR register.
DLAB = 0 then Write in to  THR register.
DLAB = 1 then DLL register is selected.
",
"address_offset": "0x1000",
"access": "read-write",
"size": "32",
"interface": "S_AXI",
"fields": {"RBR": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Last received character
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"THR": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Holds the character to be transmitted next
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DLL": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Divisor Latch Least Significant Byte
Note: On reset, the DLL gets configured for 9600 Baud.
The DLL reset value, [LSB(divisor)] is calculated from the formula, divisor = AXI CLK frequency/(16 x 9600)).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684555264,
},
"IER_DLM": {"description": "Interrupt Enable Register or Divisor Latch (MSB) Register.
Based on DLAB bit in LCR register following register is selected.
DLAB = 0 then IER register is selected.
DLAB = 1 then DLM register is selected.
",
"address_offset": "0x1004",
"access": "read-write",
"size": "32",
"interface": "S_AXI",
"fields": {"IER_ERBFI": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Received Data Available Interrupts.
1 - Enables Received Data Available Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IER_ETBEI": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Transmitter Holding Register Empty Interrupts.
1 - Enables Transmitter Holding Register Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IER_ELSI": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Receiver Line Status Interrupts.
1 - Enables Receiver Line Status Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IER_EDSSI": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Modem Status Interrupts.
1 - Enables Modem Status Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DLM": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Divisor Latch Most Significant Byte
Note: On reset, the DLM gets configured for 9600 Baud.
The DLM reset value, [MSB(divisor)] is calculated from the formula, divisor = (AXI CLK frequency/(16 x 9600)).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684555268,
},
"IIR_FCR": {"description": "Interrupt Identification Register or FIFO Control Register.
Based on DLAB bit in LCR register following register is selected.
DLAB = 0 then Read is from IIR register.
DLAB = 0 then Write in to  FCR register.
DLAB = 1 then FCR register is selected.
",
"address_offset": "0x1008",
"access": "read-write",
"size": "32",
"interface": "S_AXI",
"fields": {"IIR_INTPEND": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Interrupt is pending
1 - No interrupt is pending
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IIR_INTID2": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "3",
"desc": "011 - Receiver Line Status (Highest)
010 - Received Data Available (Second)
110 - Character Timeout (Second)
001 - Transmitter Holding Register Empty (Third)
000 - Modem Status (Fourth)
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IIR_FIFOEN": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "2",
"desc": "Always zero if not in FIFO mode.
0 - 16450 mode
1 - 16550 mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FCR_FIFOEN": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables FIFOs.
0 - Disables FIFOs
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FCR_RCVR_FIFO_Reset": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Resets RCVR FIFO
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FCR_XMIT_FIFO_Reset": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Resets XMIT FIFO
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FCR_DMA_MODE_Select": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Mode 0.
1 - Mode 1
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FCR_RCVR_FIFO_Trigger_Level": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "2",
"desc": "RCVR FIFO Trigger Level.
00 - 1 byte.
01 - 4 bytes.
10 - 8 bytes.
11 - 14 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684555272,
},
"LCR": {"description": "Line Control Register",
"address_offset": "0x100C",
"access": "read-write",
"size": "32",
"interface": "S_AXI",
"fields": {"WLS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "2",
"desc": "00 - 5 bits/character
01 - 6 bits/character
10 - 7 bits/character
11 - 8 bits/character
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STB": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "0 - 1 Stop bit.
1 - 2 Stop bits or 1.5, if 5 bits/character selected.
The receiver checks for 1 stop bit only regardless of the number of stop bits selected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PEN": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables parity.
0 - Disables parity
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EPS": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Selects Even parity.
0 - Selects Odd parity.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Stick_Parity": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "1 - When bits 3, 4 are logic 1 the Parity bit is transmitted and checked as a logic 0. 
If bit 4 is a logic 0 and bit 3 is logic 1 then the Parity bit is transmitted and checked as a logic 1.
0 - Stick Parity is disabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Set_Break": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "1 = Enables break condition. Sets SOUT to 0 and cause break condition.
0 = Disables break condition
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DLAB": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Allows access to the Divisor Latch Registers and reading of the FIFO Control Register.
0 - Allows access to RBR, THR, IER and IIR registers.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684555276,
},
"MCR": {"description": "Modem Control Register",
"address_offset": "0x1010",
"access": "read-write",
"size": "32",
"interface": "S_AXI",
"fields": {"DTR": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives DTRN Low.
0 - Drives DTRN High
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RTS": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives RTSN Low.
0 - Drives RTSN High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Out1": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives OUT1N Low.
0 - Drives OUT1N High
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Out2": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives OUT2N Low.
0 - Drives OUT2N High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Loop": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables loopback
0 - Disables loopback
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684555280,
},
"LSR": {"description": "Line Status Register",
"address_offset": "0x1014",
"access": "read-write",
"size": "32",
"interface": "S_AXI",
"fields": {"DR": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "0 - All the data in RBR or FIFO is read.
1 - Complete incoming character has been received and transferred into the RBR of FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"OE": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "RBR not read before next character is received, thereby destroying the previous character. 
In FIFO mode, data continues to fill the FIFO beyond the trigger level, an overrun error 
occurs only after the FIFO is full and the next character has been completely received in 
the shift register. The character in the shift register is overwritten but it is not 
transferred to the FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PE": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates that the received data character does not have correct even or odd parity as 
selected by the Even parity select bit. In FIFO mode, this error is associated with a 
particular character in the FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FE": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Character missing a stop bit. In framing error, the UART attempts to re-synchronize by 
assuming that the framing error was due to next character start bit, so it samples start 
bit twice and then takes in following data. In FIFO mode, this error is associated with a 
particular character in the FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"BI": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Set when SIN is held Low for an entire character time. (Start + data bits + Parity + Stop bits).
In FIFO mode, this error is associated with a particular character in FIFO. The next character 
transfer is enabled if the Sin goes to marking state and receives the next valid start bit.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"THRE": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "0 - THR or Transmitter FIFO has data to transmit.
1 - THR is empty. In FIFO mode, Transmitter FIFO is empty.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TEMT": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "0 - THR or Transmitter shift register contains data.
1 - THR and Transmitter shift register empty
In FIFO mode, Transmitter FIFO and shift register are both empty.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Error_in_RCVR_FIFO": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "RCVR FIFO contains at least one receiver error (Parity, Framing, Break condition).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684555284,
},
"MSR": {"description": "Modem Status Register",
"address_offset": "0x1018",
"access": "read-write",
"size": "32",
"interface": "S_AXI",
"fields": {"DCTS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Change in CTSN after last MSR read.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DDSR": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Change in DSRN after last MSR read.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TERI": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "RIN has changed from a Low to a High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DDCD": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Change in DCDN after last MSR read
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTS": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of CTSN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DSR": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of DSRN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RI": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of RIN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DCD": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of DCDN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684555288,
},
"SCR": {"description": "Scratch Register",
"address_offset": "0x101C",
"access": "read-write",
"size": "32",
"interface": "S_AXI",
"fields": {"Scratch": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Hold user data
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684555292,
},
},
"axi_uart16550_3": {"RBR_THR_DLL": {"description": "Receiver Buffer Register or Transmitter Holding Register or Divisor Latch (LSB) Register.
Based on DLAB bit in LCR register following register is selected.
DLAB = 0 then Read is from RBR register.
DLAB = 0 then Write in to  THR register.
DLAB = 1 then DLL register is selected.
",
"address_offset": "0x1000",
"access": "read-write",
"size": "32",
"interface": "S_AXI",
"fields": {"RBR": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Last received character
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"THR": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Holds the character to be transmitted next
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DLL": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Divisor Latch Least Significant Byte
Note: On reset, the DLL gets configured for 9600 Baud.
The DLL reset value, [LSB(divisor)] is calculated from the formula, divisor = AXI CLK frequency/(16 x 9600)).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684620800,
},
"IER_DLM": {"description": "Interrupt Enable Register or Divisor Latch (MSB) Register.
Based on DLAB bit in LCR register following register is selected.
DLAB = 0 then IER register is selected.
DLAB = 1 then DLM register is selected.
",
"address_offset": "0x1004",
"access": "read-write",
"size": "32",
"interface": "S_AXI",
"fields": {"IER_ERBFI": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Received Data Available Interrupts.
1 - Enables Received Data Available Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IER_ETBEI": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Transmitter Holding Register Empty Interrupts.
1 - Enables Transmitter Holding Register Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IER_ELSI": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Receiver Line Status Interrupts.
1 - Enables Receiver Line Status Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IER_EDSSI": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Modem Status Interrupts.
1 - Enables Modem Status Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DLM": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Divisor Latch Most Significant Byte
Note: On reset, the DLM gets configured for 9600 Baud.
The DLM reset value, [MSB(divisor)] is calculated from the formula, divisor = (AXI CLK frequency/(16 x 9600)).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684620804,
},
"IIR_FCR": {"description": "Interrupt Identification Register or FIFO Control Register.
Based on DLAB bit in LCR register following register is selected.
DLAB = 0 then Read is from IIR register.
DLAB = 0 then Write in to  FCR register.
DLAB = 1 then FCR register is selected.
",
"address_offset": "0x1008",
"access": "read-write",
"size": "32",
"interface": "S_AXI",
"fields": {"IIR_INTPEND": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Interrupt is pending
1 - No interrupt is pending
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IIR_INTID2": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "3",
"desc": "011 - Receiver Line Status (Highest)
010 - Received Data Available (Second)
110 - Character Timeout (Second)
001 - Transmitter Holding Register Empty (Third)
000 - Modem Status (Fourth)
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IIR_FIFOEN": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "2",
"desc": "Always zero if not in FIFO mode.
0 - 16450 mode
1 - 16550 mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FCR_FIFOEN": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables FIFOs.
0 - Disables FIFOs
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FCR_RCVR_FIFO_Reset": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Resets RCVR FIFO
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FCR_XMIT_FIFO_Reset": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Resets XMIT FIFO
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FCR_DMA_MODE_Select": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Mode 0.
1 - Mode 1
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FCR_RCVR_FIFO_Trigger_Level": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "2",
"desc": "RCVR FIFO Trigger Level.
00 - 1 byte.
01 - 4 bytes.
10 - 8 bytes.
11 - 14 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684620808,
},
"LCR": {"description": "Line Control Register",
"address_offset": "0x100C",
"access": "read-write",
"size": "32",
"interface": "S_AXI",
"fields": {"WLS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "2",
"desc": "00 - 5 bits/character
01 - 6 bits/character
10 - 7 bits/character
11 - 8 bits/character
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STB": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "0 - 1 Stop bit.
1 - 2 Stop bits or 1.5, if 5 bits/character selected.
The receiver checks for 1 stop bit only regardless of the number of stop bits selected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PEN": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables parity.
0 - Disables parity
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EPS": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Selects Even parity.
0 - Selects Odd parity.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Stick_Parity": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "1 - When bits 3, 4 are logic 1 the Parity bit is transmitted and checked as a logic 0. 
If bit 4 is a logic 0 and bit 3 is logic 1 then the Parity bit is transmitted and checked as a logic 1.
0 - Stick Parity is disabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Set_Break": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "1 = Enables break condition. Sets SOUT to 0 and cause break condition.
0 = Disables break condition
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DLAB": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Allows access to the Divisor Latch Registers and reading of the FIFO Control Register.
0 - Allows access to RBR, THR, IER and IIR registers.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684620812,
},
"MCR": {"description": "Modem Control Register",
"address_offset": "0x1010",
"access": "read-write",
"size": "32",
"interface": "S_AXI",
"fields": {"DTR": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives DTRN Low.
0 - Drives DTRN High
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RTS": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives RTSN Low.
0 - Drives RTSN High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Out1": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives OUT1N Low.
0 - Drives OUT1N High
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Out2": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives OUT2N Low.
0 - Drives OUT2N High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Loop": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables loopback
0 - Disables loopback
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684620816,
},
"LSR": {"description": "Line Status Register",
"address_offset": "0x1014",
"access": "read-write",
"size": "32",
"interface": "S_AXI",
"fields": {"DR": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "0 - All the data in RBR or FIFO is read.
1 - Complete incoming character has been received and transferred into the RBR of FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"OE": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "RBR not read before next character is received, thereby destroying the previous character. 
In FIFO mode, data continues to fill the FIFO beyond the trigger level, an overrun error 
occurs only after the FIFO is full and the next character has been completely received in 
the shift register. The character in the shift register is overwritten but it is not 
transferred to the FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PE": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates that the received data character does not have correct even or odd parity as 
selected by the Even parity select bit. In FIFO mode, this error is associated with a 
particular character in the FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FE": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Character missing a stop bit. In framing error, the UART attempts to re-synchronize by 
assuming that the framing error was due to next character start bit, so it samples start 
bit twice and then takes in following data. In FIFO mode, this error is associated with a 
particular character in the FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"BI": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Set when SIN is held Low for an entire character time. (Start + data bits + Parity + Stop bits).
In FIFO mode, this error is associated with a particular character in FIFO. The next character 
transfer is enabled if the Sin goes to marking state and receives the next valid start bit.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"THRE": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "0 - THR or Transmitter FIFO has data to transmit.
1 - THR is empty. In FIFO mode, Transmitter FIFO is empty.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TEMT": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "0 - THR or Transmitter shift register contains data.
1 - THR and Transmitter shift register empty
In FIFO mode, Transmitter FIFO and shift register are both empty.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Error_in_RCVR_FIFO": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "RCVR FIFO contains at least one receiver error (Parity, Framing, Break condition).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684620820,
},
"MSR": {"description": "Modem Status Register",
"address_offset": "0x1018",
"access": "read-write",
"size": "32",
"interface": "S_AXI",
"fields": {"DCTS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Change in CTSN after last MSR read.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DDSR": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Change in DSRN after last MSR read.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TERI": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "RIN has changed from a Low to a High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DDCD": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Change in DCDN after last MSR read
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTS": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of CTSN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DSR": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of DSRN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RI": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of RIN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DCD": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of DCDN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684620824,
},
"SCR": {"description": "Scratch Register",
"address_offset": "0x101C",
"access": "read-write",
"size": "32",
"interface": "S_AXI",
"fields": {"Scratch": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Hold user data
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684620828,
},
},
"axi_uart16550_4": {"RBR_THR_DLL": {"description": "Receiver Buffer Register or Transmitter Holding Register or Divisor Latch (LSB) Register.
Based on DLAB bit in LCR register following register is selected.
DLAB = 0 then Read is from RBR register.
DLAB = 0 then Write in to  THR register.
DLAB = 1 then DLL register is selected.
",
"address_offset": "0x1000",
"access": "read-write",
"size": "32",
"interface": "S_AXI",
"fields": {"RBR": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Last received character
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"THR": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Holds the character to be transmitted next
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DLL": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Divisor Latch Least Significant Byte
Note: On reset, the DLL gets configured for 9600 Baud.
The DLL reset value, [LSB(divisor)] is calculated from the formula, divisor = AXI CLK frequency/(16 x 9600)).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684686336,
},
"IER_DLM": {"description": "Interrupt Enable Register or Divisor Latch (MSB) Register.
Based on DLAB bit in LCR register following register is selected.
DLAB = 0 then IER register is selected.
DLAB = 1 then DLM register is selected.
",
"address_offset": "0x1004",
"access": "read-write",
"size": "32",
"interface": "S_AXI",
"fields": {"IER_ERBFI": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Received Data Available Interrupts.
1 - Enables Received Data Available Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IER_ETBEI": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Transmitter Holding Register Empty Interrupts.
1 - Enables Transmitter Holding Register Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IER_ELSI": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Receiver Line Status Interrupts.
1 - Enables Receiver Line Status Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IER_EDSSI": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Modem Status Interrupts.
1 - Enables Modem Status Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DLM": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Divisor Latch Most Significant Byte
Note: On reset, the DLM gets configured for 9600 Baud.
The DLM reset value, [MSB(divisor)] is calculated from the formula, divisor = (AXI CLK frequency/(16 x 9600)).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684686340,
},
"IIR_FCR": {"description": "Interrupt Identification Register or FIFO Control Register.
Based on DLAB bit in LCR register following register is selected.
DLAB = 0 then Read is from IIR register.
DLAB = 0 then Write in to  FCR register.
DLAB = 1 then FCR register is selected.
",
"address_offset": "0x1008",
"access": "read-write",
"size": "32",
"interface": "S_AXI",
"fields": {"IIR_INTPEND": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Interrupt is pending
1 - No interrupt is pending
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IIR_INTID2": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "3",
"desc": "011 - Receiver Line Status (Highest)
010 - Received Data Available (Second)
110 - Character Timeout (Second)
001 - Transmitter Holding Register Empty (Third)
000 - Modem Status (Fourth)
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IIR_FIFOEN": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "2",
"desc": "Always zero if not in FIFO mode.
0 - 16450 mode
1 - 16550 mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FCR_FIFOEN": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables FIFOs.
0 - Disables FIFOs
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FCR_RCVR_FIFO_Reset": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Resets RCVR FIFO
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FCR_XMIT_FIFO_Reset": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Resets XMIT FIFO
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FCR_DMA_MODE_Select": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Mode 0.
1 - Mode 1
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FCR_RCVR_FIFO_Trigger_Level": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "2",
"desc": "RCVR FIFO Trigger Level.
00 - 1 byte.
01 - 4 bytes.
10 - 8 bytes.
11 - 14 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684686344,
},
"LCR": {"description": "Line Control Register",
"address_offset": "0x100C",
"access": "read-write",
"size": "32",
"interface": "S_AXI",
"fields": {"WLS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "2",
"desc": "00 - 5 bits/character
01 - 6 bits/character
10 - 7 bits/character
11 - 8 bits/character
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STB": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "0 - 1 Stop bit.
1 - 2 Stop bits or 1.5, if 5 bits/character selected.
The receiver checks for 1 stop bit only regardless of the number of stop bits selected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PEN": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables parity.
0 - Disables parity
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EPS": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Selects Even parity.
0 - Selects Odd parity.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Stick_Parity": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "1 - When bits 3, 4 are logic 1 the Parity bit is transmitted and checked as a logic 0. 
If bit 4 is a logic 0 and bit 3 is logic 1 then the Parity bit is transmitted and checked as a logic 1.
0 - Stick Parity is disabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Set_Break": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "1 = Enables break condition. Sets SOUT to 0 and cause break condition.
0 = Disables break condition
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DLAB": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Allows access to the Divisor Latch Registers and reading of the FIFO Control Register.
0 - Allows access to RBR, THR, IER and IIR registers.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684686348,
},
"MCR": {"description": "Modem Control Register",
"address_offset": "0x1010",
"access": "read-write",
"size": "32",
"interface": "S_AXI",
"fields": {"DTR": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives DTRN Low.
0 - Drives DTRN High
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RTS": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives RTSN Low.
0 - Drives RTSN High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Out1": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives OUT1N Low.
0 - Drives OUT1N High
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Out2": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives OUT2N Low.
0 - Drives OUT2N High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Loop": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables loopback
0 - Disables loopback
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684686352,
},
"LSR": {"description": "Line Status Register",
"address_offset": "0x1014",
"access": "read-write",
"size": "32",
"interface": "S_AXI",
"fields": {"DR": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "0 - All the data in RBR or FIFO is read.
1 - Complete incoming character has been received and transferred into the RBR of FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"OE": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "RBR not read before next character is received, thereby destroying the previous character. 
In FIFO mode, data continues to fill the FIFO beyond the trigger level, an overrun error 
occurs only after the FIFO is full and the next character has been completely received in 
the shift register. The character in the shift register is overwritten but it is not 
transferred to the FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PE": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates that the received data character does not have correct even or odd parity as 
selected by the Even parity select bit. In FIFO mode, this error is associated with a 
particular character in the FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FE": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Character missing a stop bit. In framing error, the UART attempts to re-synchronize by 
assuming that the framing error was due to next character start bit, so it samples start 
bit twice and then takes in following data. In FIFO mode, this error is associated with a 
particular character in the FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"BI": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Set when SIN is held Low for an entire character time. (Start + data bits + Parity + Stop bits).
In FIFO mode, this error is associated with a particular character in FIFO. The next character 
transfer is enabled if the Sin goes to marking state and receives the next valid start bit.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"THRE": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "0 - THR or Transmitter FIFO has data to transmit.
1 - THR is empty. In FIFO mode, Transmitter FIFO is empty.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TEMT": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "0 - THR or Transmitter shift register contains data.
1 - THR and Transmitter shift register empty
In FIFO mode, Transmitter FIFO and shift register are both empty.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Error_in_RCVR_FIFO": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "RCVR FIFO contains at least one receiver error (Parity, Framing, Break condition).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684686356,
},
"MSR": {"description": "Modem Status Register",
"address_offset": "0x1018",
"access": "read-write",
"size": "32",
"interface": "S_AXI",
"fields": {"DCTS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Change in CTSN after last MSR read.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DDSR": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Change in DSRN after last MSR read.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TERI": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "RIN has changed from a Low to a High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DDCD": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Change in DCDN after last MSR read
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTS": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of CTSN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DSR": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of DSRN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RI": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of RIN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DCD": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of DCDN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684686360,
},
"SCR": {"description": "Scratch Register",
"address_offset": "0x101C",
"access": "read-write",
"size": "32",
"interface": "S_AXI",
"fields": {"Scratch": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Hold user data
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684686364,
},
},
"axi_uart16550_5": {"RBR_THR_DLL": {"description": "Receiver Buffer Register or Transmitter Holding Register or Divisor Latch (LSB) Register.
Based on DLAB bit in LCR register following register is selected.
DLAB = 0 then Read is from RBR register.
DLAB = 0 then Write in to  THR register.
DLAB = 1 then DLL register is selected.
",
"address_offset": "0x1000",
"access": "read-write",
"size": "32",
"interface": "S_AXI",
"fields": {"RBR": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Last received character
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"THR": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Holds the character to be transmitted next
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DLL": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Divisor Latch Least Significant Byte
Note: On reset, the DLL gets configured for 9600 Baud.
The DLL reset value, [LSB(divisor)] is calculated from the formula, divisor = AXI CLK frequency/(16 x 9600)).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684751872,
},
"IER_DLM": {"description": "Interrupt Enable Register or Divisor Latch (MSB) Register.
Based on DLAB bit in LCR register following register is selected.
DLAB = 0 then IER register is selected.
DLAB = 1 then DLM register is selected.
",
"address_offset": "0x1004",
"access": "read-write",
"size": "32",
"interface": "S_AXI",
"fields": {"IER_ERBFI": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Received Data Available Interrupts.
1 - Enables Received Data Available Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IER_ETBEI": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Transmitter Holding Register Empty Interrupts.
1 - Enables Transmitter Holding Register Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IER_ELSI": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Receiver Line Status Interrupts.
1 - Enables Receiver Line Status Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IER_EDSSI": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Modem Status Interrupts.
1 - Enables Modem Status Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DLM": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Divisor Latch Most Significant Byte
Note: On reset, the DLM gets configured for 9600 Baud.
The DLM reset value, [MSB(divisor)] is calculated from the formula, divisor = (AXI CLK frequency/(16 x 9600)).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684751876,
},
"IIR_FCR": {"description": "Interrupt Identification Register or FIFO Control Register.
Based on DLAB bit in LCR register following register is selected.
DLAB = 0 then Read is from IIR register.
DLAB = 0 then Write in to  FCR register.
DLAB = 1 then FCR register is selected.
",
"address_offset": "0x1008",
"access": "read-write",
"size": "32",
"interface": "S_AXI",
"fields": {"IIR_INTPEND": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Interrupt is pending
1 - No interrupt is pending
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IIR_INTID2": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "3",
"desc": "011 - Receiver Line Status (Highest)
010 - Received Data Available (Second)
110 - Character Timeout (Second)
001 - Transmitter Holding Register Empty (Third)
000 - Modem Status (Fourth)
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IIR_FIFOEN": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "2",
"desc": "Always zero if not in FIFO mode.
0 - 16450 mode
1 - 16550 mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FCR_FIFOEN": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables FIFOs.
0 - Disables FIFOs
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FCR_RCVR_FIFO_Reset": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Resets RCVR FIFO
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FCR_XMIT_FIFO_Reset": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Resets XMIT FIFO
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FCR_DMA_MODE_Select": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Mode 0.
1 - Mode 1
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FCR_RCVR_FIFO_Trigger_Level": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "2",
"desc": "RCVR FIFO Trigger Level.
00 - 1 byte.
01 - 4 bytes.
10 - 8 bytes.
11 - 14 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684751880,
},
"LCR": {"description": "Line Control Register",
"address_offset": "0x100C",
"access": "read-write",
"size": "32",
"interface": "S_AXI",
"fields": {"WLS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "2",
"desc": "00 - 5 bits/character
01 - 6 bits/character
10 - 7 bits/character
11 - 8 bits/character
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STB": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "0 - 1 Stop bit.
1 - 2 Stop bits or 1.5, if 5 bits/character selected.
The receiver checks for 1 stop bit only regardless of the number of stop bits selected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PEN": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables parity.
0 - Disables parity
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EPS": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Selects Even parity.
0 - Selects Odd parity.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Stick_Parity": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "1 - When bits 3, 4 are logic 1 the Parity bit is transmitted and checked as a logic 0. 
If bit 4 is a logic 0 and bit 3 is logic 1 then the Parity bit is transmitted and checked as a logic 1.
0 - Stick Parity is disabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Set_Break": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "1 = Enables break condition. Sets SOUT to 0 and cause break condition.
0 = Disables break condition
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DLAB": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Allows access to the Divisor Latch Registers and reading of the FIFO Control Register.
0 - Allows access to RBR, THR, IER and IIR registers.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684751884,
},
"MCR": {"description": "Modem Control Register",
"address_offset": "0x1010",
"access": "read-write",
"size": "32",
"interface": "S_AXI",
"fields": {"DTR": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives DTRN Low.
0 - Drives DTRN High
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RTS": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives RTSN Low.
0 - Drives RTSN High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Out1": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives OUT1N Low.
0 - Drives OUT1N High
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Out2": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives OUT2N Low.
0 - Drives OUT2N High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Loop": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables loopback
0 - Disables loopback
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684751888,
},
"LSR": {"description": "Line Status Register",
"address_offset": "0x1014",
"access": "read-write",
"size": "32",
"interface": "S_AXI",
"fields": {"DR": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "0 - All the data in RBR or FIFO is read.
1 - Complete incoming character has been received and transferred into the RBR of FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"OE": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "RBR not read before next character is received, thereby destroying the previous character. 
In FIFO mode, data continues to fill the FIFO beyond the trigger level, an overrun error 
occurs only after the FIFO is full and the next character has been completely received in 
the shift register. The character in the shift register is overwritten but it is not 
transferred to the FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PE": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates that the received data character does not have correct even or odd parity as 
selected by the Even parity select bit. In FIFO mode, this error is associated with a 
particular character in the FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FE": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Character missing a stop bit. In framing error, the UART attempts to re-synchronize by 
assuming that the framing error was due to next character start bit, so it samples start 
bit twice and then takes in following data. In FIFO mode, this error is associated with a 
particular character in the FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"BI": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Set when SIN is held Low for an entire character time. (Start + data bits + Parity + Stop bits).
In FIFO mode, this error is associated with a particular character in FIFO. The next character 
transfer is enabled if the Sin goes to marking state and receives the next valid start bit.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"THRE": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "0 - THR or Transmitter FIFO has data to transmit.
1 - THR is empty. In FIFO mode, Transmitter FIFO is empty.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TEMT": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "0 - THR or Transmitter shift register contains data.
1 - THR and Transmitter shift register empty
In FIFO mode, Transmitter FIFO and shift register are both empty.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Error_in_RCVR_FIFO": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "RCVR FIFO contains at least one receiver error (Parity, Framing, Break condition).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684751892,
},
"MSR": {"description": "Modem Status Register",
"address_offset": "0x1018",
"access": "read-write",
"size": "32",
"interface": "S_AXI",
"fields": {"DCTS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Change in CTSN after last MSR read.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DDSR": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Change in DSRN after last MSR read.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TERI": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "RIN has changed from a Low to a High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DDCD": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Change in DCDN after last MSR read
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTS": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of CTSN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DSR": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of DSRN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RI": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of RIN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DCD": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of DCDN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684751896,
},
"SCR": {"description": "Scratch Register",
"address_offset": "0x101C",
"access": "read-write",
"size": "32",
"interface": "S_AXI",
"fields": {"Scratch": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Hold user data
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684751900,
},
},
"axi_uart16550_6": {"RBR_THR_DLL": {"description": "Receiver Buffer Register or Transmitter Holding Register or Divisor Latch (LSB) Register.
Based on DLAB bit in LCR register following register is selected.
DLAB = 0 then Read is from RBR register.
DLAB = 0 then Write in to  THR register.
DLAB = 1 then DLL register is selected.
",
"address_offset": "0x1000",
"access": "read-write",
"size": "32",
"interface": "S_AXI",
"fields": {"RBR": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Last received character
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"THR": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Holds the character to be transmitted next
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DLL": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Divisor Latch Least Significant Byte
Note: On reset, the DLL gets configured for 9600 Baud.
The DLL reset value, [LSB(divisor)] is calculated from the formula, divisor = AXI CLK frequency/(16 x 9600)).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684817408,
},
"IER_DLM": {"description": "Interrupt Enable Register or Divisor Latch (MSB) Register.
Based on DLAB bit in LCR register following register is selected.
DLAB = 0 then IER register is selected.
DLAB = 1 then DLM register is selected.
",
"address_offset": "0x1004",
"access": "read-write",
"size": "32",
"interface": "S_AXI",
"fields": {"IER_ERBFI": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Received Data Available Interrupts.
1 - Enables Received Data Available Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IER_ETBEI": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Transmitter Holding Register Empty Interrupts.
1 - Enables Transmitter Holding Register Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IER_ELSI": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Receiver Line Status Interrupts.
1 - Enables Receiver Line Status Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IER_EDSSI": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Modem Status Interrupts.
1 - Enables Modem Status Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DLM": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Divisor Latch Most Significant Byte
Note: On reset, the DLM gets configured for 9600 Baud.
The DLM reset value, [MSB(divisor)] is calculated from the formula, divisor = (AXI CLK frequency/(16 x 9600)).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684817412,
},
"IIR_FCR": {"description": "Interrupt Identification Register or FIFO Control Register.
Based on DLAB bit in LCR register following register is selected.
DLAB = 0 then Read is from IIR register.
DLAB = 0 then Write in to  FCR register.
DLAB = 1 then FCR register is selected.
",
"address_offset": "0x1008",
"access": "read-write",
"size": "32",
"interface": "S_AXI",
"fields": {"IIR_INTPEND": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Interrupt is pending
1 - No interrupt is pending
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IIR_INTID2": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "3",
"desc": "011 - Receiver Line Status (Highest)
010 - Received Data Available (Second)
110 - Character Timeout (Second)
001 - Transmitter Holding Register Empty (Third)
000 - Modem Status (Fourth)
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IIR_FIFOEN": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "2",
"desc": "Always zero if not in FIFO mode.
0 - 16450 mode
1 - 16550 mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FCR_FIFOEN": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables FIFOs.
0 - Disables FIFOs
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FCR_RCVR_FIFO_Reset": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Resets RCVR FIFO
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FCR_XMIT_FIFO_Reset": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Resets XMIT FIFO
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FCR_DMA_MODE_Select": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Mode 0.
1 - Mode 1
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FCR_RCVR_FIFO_Trigger_Level": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "2",
"desc": "RCVR FIFO Trigger Level.
00 - 1 byte.
01 - 4 bytes.
10 - 8 bytes.
11 - 14 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684817416,
},
"LCR": {"description": "Line Control Register",
"address_offset": "0x100C",
"access": "read-write",
"size": "32",
"interface": "S_AXI",
"fields": {"WLS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "2",
"desc": "00 - 5 bits/character
01 - 6 bits/character
10 - 7 bits/character
11 - 8 bits/character
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STB": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "0 - 1 Stop bit.
1 - 2 Stop bits or 1.5, if 5 bits/character selected.
The receiver checks for 1 stop bit only regardless of the number of stop bits selected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PEN": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables parity.
0 - Disables parity
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EPS": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Selects Even parity.
0 - Selects Odd parity.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Stick_Parity": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "1 - When bits 3, 4 are logic 1 the Parity bit is transmitted and checked as a logic 0. 
If bit 4 is a logic 0 and bit 3 is logic 1 then the Parity bit is transmitted and checked as a logic 1.
0 - Stick Parity is disabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Set_Break": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "1 = Enables break condition. Sets SOUT to 0 and cause break condition.
0 = Disables break condition
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DLAB": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Allows access to the Divisor Latch Registers and reading of the FIFO Control Register.
0 - Allows access to RBR, THR, IER and IIR registers.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684817420,
},
"MCR": {"description": "Modem Control Register",
"address_offset": "0x1010",
"access": "read-write",
"size": "32",
"interface": "S_AXI",
"fields": {"DTR": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives DTRN Low.
0 - Drives DTRN High
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RTS": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives RTSN Low.
0 - Drives RTSN High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Out1": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives OUT1N Low.
0 - Drives OUT1N High
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Out2": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives OUT2N Low.
0 - Drives OUT2N High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Loop": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables loopback
0 - Disables loopback
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684817424,
},
"LSR": {"description": "Line Status Register",
"address_offset": "0x1014",
"access": "read-write",
"size": "32",
"interface": "S_AXI",
"fields": {"DR": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "0 - All the data in RBR or FIFO is read.
1 - Complete incoming character has been received and transferred into the RBR of FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"OE": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "RBR not read before next character is received, thereby destroying the previous character. 
In FIFO mode, data continues to fill the FIFO beyond the trigger level, an overrun error 
occurs only after the FIFO is full and the next character has been completely received in 
the shift register. The character in the shift register is overwritten but it is not 
transferred to the FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PE": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates that the received data character does not have correct even or odd parity as 
selected by the Even parity select bit. In FIFO mode, this error is associated with a 
particular character in the FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FE": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Character missing a stop bit. In framing error, the UART attempts to re-synchronize by 
assuming that the framing error was due to next character start bit, so it samples start 
bit twice and then takes in following data. In FIFO mode, this error is associated with a 
particular character in the FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"BI": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Set when SIN is held Low for an entire character time. (Start + data bits + Parity + Stop bits).
In FIFO mode, this error is associated with a particular character in FIFO. The next character 
transfer is enabled if the Sin goes to marking state and receives the next valid start bit.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"THRE": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "0 - THR or Transmitter FIFO has data to transmit.
1 - THR is empty. In FIFO mode, Transmitter FIFO is empty.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TEMT": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "0 - THR or Transmitter shift register contains data.
1 - THR and Transmitter shift register empty
In FIFO mode, Transmitter FIFO and shift register are both empty.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Error_in_RCVR_FIFO": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "RCVR FIFO contains at least one receiver error (Parity, Framing, Break condition).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684817428,
},
"MSR": {"description": "Modem Status Register",
"address_offset": "0x1018",
"access": "read-write",
"size": "32",
"interface": "S_AXI",
"fields": {"DCTS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Change in CTSN after last MSR read.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DDSR": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Change in DSRN after last MSR read.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TERI": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "RIN has changed from a Low to a High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DDCD": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Change in DCDN after last MSR read
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTS": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of CTSN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DSR": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of DSRN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RI": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of RIN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DCD": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of DCDN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684817432,
},
"SCR": {"description": "Scratch Register",
"address_offset": "0x101C",
"access": "read-write",
"size": "32",
"interface": "S_AXI",
"fields": {"Scratch": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Hold user data
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684817436,
},
},
"axi_uart16550_7": {"RBR_THR_DLL": {"description": "Receiver Buffer Register or Transmitter Holding Register or Divisor Latch (LSB) Register.
Based on DLAB bit in LCR register following register is selected.
DLAB = 0 then Read is from RBR register.
DLAB = 0 then Write in to  THR register.
DLAB = 1 then DLL register is selected.
",
"address_offset": "0x1000",
"access": "read-write",
"size": "32",
"interface": "S_AXI",
"fields": {"RBR": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Last received character
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"THR": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Holds the character to be transmitted next
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DLL": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Divisor Latch Least Significant Byte
Note: On reset, the DLL gets configured for 9600 Baud.
The DLL reset value, [LSB(divisor)] is calculated from the formula, divisor = AXI CLK frequency/(16 x 9600)).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684882944,
},
"IER_DLM": {"description": "Interrupt Enable Register or Divisor Latch (MSB) Register.
Based on DLAB bit in LCR register following register is selected.
DLAB = 0 then IER register is selected.
DLAB = 1 then DLM register is selected.
",
"address_offset": "0x1004",
"access": "read-write",
"size": "32",
"interface": "S_AXI",
"fields": {"IER_ERBFI": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Received Data Available Interrupts.
1 - Enables Received Data Available Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IER_ETBEI": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Transmitter Holding Register Empty Interrupts.
1 - Enables Transmitter Holding Register Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IER_ELSI": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Receiver Line Status Interrupts.
1 - Enables Receiver Line Status Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IER_EDSSI": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Disables Modem Status Interrupts.
1 - Enables Modem Status Interrupts.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DLM": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Divisor Latch Most Significant Byte
Note: On reset, the DLM gets configured for 9600 Baud.
The DLM reset value, [MSB(divisor)] is calculated from the formula, divisor = (AXI CLK frequency/(16 x 9600)).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684882948,
},
"IIR_FCR": {"description": "Interrupt Identification Register or FIFO Control Register.
Based on DLAB bit in LCR register following register is selected.
DLAB = 0 then Read is from IIR register.
DLAB = 0 then Write in to  FCR register.
DLAB = 1 then FCR register is selected.
",
"address_offset": "0x1008",
"access": "read-write",
"size": "32",
"interface": "S_AXI",
"fields": {"IIR_INTPEND": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Interrupt is pending
1 - No interrupt is pending
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IIR_INTID2": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "3",
"desc": "011 - Receiver Line Status (Highest)
010 - Received Data Available (Second)
110 - Character Timeout (Second)
001 - Transmitter Holding Register Empty (Third)
000 - Modem Status (Fourth)
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IIR_FIFOEN": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "2",
"desc": "Always zero if not in FIFO mode.
0 - 16450 mode
1 - 16550 mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FCR_FIFOEN": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables FIFOs.
0 - Disables FIFOs
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FCR_RCVR_FIFO_Reset": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Resets RCVR FIFO
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FCR_XMIT_FIFO_Reset": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Resets XMIT FIFO
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FCR_DMA_MODE_Select": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "0 - Mode 0.
1 - Mode 1
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FCR_RCVR_FIFO_Trigger_Level": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "2",
"desc": "RCVR FIFO Trigger Level.
00 - 1 byte.
01 - 4 bytes.
10 - 8 bytes.
11 - 14 bytes.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684882952,
},
"LCR": {"description": "Line Control Register",
"address_offset": "0x100C",
"access": "read-write",
"size": "32",
"interface": "S_AXI",
"fields": {"WLS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "2",
"desc": "00 - 5 bits/character
01 - 6 bits/character
10 - 7 bits/character
11 - 8 bits/character
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STB": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "0 - 1 Stop bit.
1 - 2 Stop bits or 1.5, if 5 bits/character selected.
The receiver checks for 1 stop bit only regardless of the number of stop bits selected.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PEN": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables parity.
0 - Disables parity
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EPS": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Selects Even parity.
0 - Selects Odd parity.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Stick_Parity": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "1 - When bits 3, 4 are logic 1 the Parity bit is transmitted and checked as a logic 0. 
If bit 4 is a logic 0 and bit 3 is logic 1 then the Parity bit is transmitted and checked as a logic 1.
0 - Stick Parity is disabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Set_Break": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "1 = Enables break condition. Sets SOUT to 0 and cause break condition.
0 = Disables break condition
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DLAB": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Allows access to the Divisor Latch Registers and reading of the FIFO Control Register.
0 - Allows access to RBR, THR, IER and IIR registers.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684882956,
},
"MCR": {"description": "Modem Control Register",
"address_offset": "0x1010",
"access": "read-write",
"size": "32",
"interface": "S_AXI",
"fields": {"DTR": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives DTRN Low.
0 - Drives DTRN High
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RTS": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives RTSN Low.
0 - Drives RTSN High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Out1": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives OUT1N Low.
0 - Drives OUT1N High
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Out2": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Drives OUT2N Low.
0 - Drives OUT2N High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Loop": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables loopback
0 - Disables loopback
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684882960,
},
"LSR": {"description": "Line Status Register",
"address_offset": "0x1014",
"access": "read-write",
"size": "32",
"interface": "S_AXI",
"fields": {"DR": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "0 - All the data in RBR or FIFO is read.
1 - Complete incoming character has been received and transferred into the RBR of FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"OE": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "RBR not read before next character is received, thereby destroying the previous character. 
In FIFO mode, data continues to fill the FIFO beyond the trigger level, an overrun error 
occurs only after the FIFO is full and the next character has been completely received in 
the shift register. The character in the shift register is overwritten but it is not 
transferred to the FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PE": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates that the received data character does not have correct even or odd parity as 
selected by the Even parity select bit. In FIFO mode, this error is associated with a 
particular character in the FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FE": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Character missing a stop bit. In framing error, the UART attempts to re-synchronize by 
assuming that the framing error was due to next character start bit, so it samples start 
bit twice and then takes in following data. In FIFO mode, this error is associated with a 
particular character in the FIFO.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"BI": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Set when SIN is held Low for an entire character time. (Start + data bits + Parity + Stop bits).
In FIFO mode, this error is associated with a particular character in FIFO. The next character 
transfer is enabled if the Sin goes to marking state and receives the next valid start bit.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"THRE": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "0 - THR or Transmitter FIFO has data to transmit.
1 - THR is empty. In FIFO mode, Transmitter FIFO is empty.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TEMT": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "0 - THR or Transmitter shift register contains data.
1 - THR and Transmitter shift register empty
In FIFO mode, Transmitter FIFO and shift register are both empty.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Error_in_RCVR_FIFO": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "RCVR FIFO contains at least one receiver error (Parity, Framing, Break condition).
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684882964,
},
"MSR": {"description": "Modem Status Register",
"address_offset": "0x1018",
"access": "read-write",
"size": "32",
"interface": "S_AXI",
"fields": {"DCTS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Change in CTSN after last MSR read.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DDSR": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Change in DSRN after last MSR read.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TERI": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "RIN has changed from a Low to a High.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DDCD": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Change in DCDN after last MSR read
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTS": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of CTSN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DSR": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of DSRN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RI": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of RIN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DCD": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "Complement of DCDN input
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684882968,
},
"SCR": {"description": "Scratch Register",
"address_offset": "0x101C",
"access": "read-write",
"size": "32",
"interface": "S_AXI",
"fields": {"Scratch": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Hold user data
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684882972,
},
},
"axi_uartlite_0": {"RX_FIFO": {"description": "Receive data FIFO",
"address_offset": "0x0",
"access": "read-only",
"size": "32",
"interface": "S_AXI",
"fields": {"RX_DATA": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "UART Receive Data
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684944384,
},
"TX_FIFO": {"description": "Transmit data FIFO",
"address_offset": "0x4",
"access": "write-only",
"size": "32",
"interface": "S_AXI",
"fields": {"TX_DATA": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "UART Transmit Data
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684944388,
},
"CTRL_REG": {"description": "UART Lite control register",
"address_offset": "0xC",
"access": "write-only",
"size": "32",
"interface": "S_AXI",
"fields": {"RST_TXFIFO": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Reset/clear the transmit FIFO
Writing a 1 to this bit position clears the transmit FIFO
  0 - Do nothing
  1 - Clear the transmit FIFO
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RST_RXFIFO": {"access": "write-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Reset/clear the receive FIFO
Writing a 1 to this bit position clears the receive FIFO
  0 - Do nothing
  1 - Clear the receive FIFO
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Enable_Intr": {"access": "write-only",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Enable interrupt for the AXI UART Lite
  0 - Disable interrupt signal
  1 - Enable interrupt signal
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684944396,
},
"STAT_REG": {"description": "UART Lite status register",
"address_offset": "0x8",
"access": "read-only",
"size": "32",
"interface": "S_AXI",
"fields": {"RX_FIFO_Valid_Data": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates if the receive FIFO has data.
  0 - Receive FIFO is empty
  1 - Receive FIFO has data
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RX_FIFO_Full": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates if the receive FIFO is full.
  0 - Receive FIFO is not full
  1 - Receive FIFO is full
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TX_FIFO_Empty": {"access": "read-only",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates if the transmit FIFO is empty.
  0 - Transmit FIFO is not empty
  1 - Transmit FIFO is empty
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TX_FIFO_Full": {"access": "read-only",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates if the transmit FIFO is full.
  0 - Transmit FIFO is not full
  1 - Transmit FIFO is full
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Intr_Enabled": {"access": "read-only",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates that interrupts is enabled.
  0 - Interrupt is disabled
  1 - Interrupt is enabled
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Overrun_Error": {"access": "read-only",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates that a overrun error has occurred after the last time the status register was read. Overrun is when a new character has been received but the receive FIFO is full. The received character is ignored and not written into the receive FIFO. This bit is cleared when the status register is read.      0 - No overrun error has occurred      1 - Overrun error has occurred
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Frame_Error": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates that a frame error has occurred after the last time the status register was read. Frame error is defined as detection of a stop bit with the value 0. The receive character is ignored and not written to the receive FIFO. This bit is cleared when the status register is read.      0 - No frame error has occurred   1 - Frame error has occurred
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Parity_Error": {"access": "read-only",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates that a parity error has occurred after the last time the status register was read. If the UART is configured without any parity handling, this bit is always 0. The received character is written into the receive FIFO. This bit is cleared when the status register is read.      0 - No parity error has occurred      1 - Parity error has occurred
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684944392,
},
},
"axi_uartlite_1": {"RX_FIFO": {"description": "Receive data FIFO",
"address_offset": "0x0",
"access": "read-only",
"size": "32",
"interface": "S_AXI",
"fields": {"RX_DATA": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "UART Receive Data
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684948480,
},
"TX_FIFO": {"description": "Transmit data FIFO",
"address_offset": "0x4",
"access": "write-only",
"size": "32",
"interface": "S_AXI",
"fields": {"TX_DATA": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "UART Transmit Data
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684948484,
},
"CTRL_REG": {"description": "UART Lite control register",
"address_offset": "0xC",
"access": "write-only",
"size": "32",
"interface": "S_AXI",
"fields": {"RST_TXFIFO": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Reset/clear the transmit FIFO
Writing a 1 to this bit position clears the transmit FIFO
  0 - Do nothing
  1 - Clear the transmit FIFO
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RST_RXFIFO": {"access": "write-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Reset/clear the receive FIFO
Writing a 1 to this bit position clears the receive FIFO
  0 - Do nothing
  1 - Clear the receive FIFO
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Enable_Intr": {"access": "write-only",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Enable interrupt for the AXI UART Lite
  0 - Disable interrupt signal
  1 - Enable interrupt signal
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684948492,
},
"STAT_REG": {"description": "UART Lite status register",
"address_offset": "0x8",
"access": "read-only",
"size": "32",
"interface": "S_AXI",
"fields": {"RX_FIFO_Valid_Data": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates if the receive FIFO has data.
  0 - Receive FIFO is empty
  1 - Receive FIFO has data
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RX_FIFO_Full": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates if the receive FIFO is full.
  0 - Receive FIFO is not full
  1 - Receive FIFO is full
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TX_FIFO_Empty": {"access": "read-only",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates if the transmit FIFO is empty.
  0 - Transmit FIFO is not empty
  1 - Transmit FIFO is empty
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TX_FIFO_Full": {"access": "read-only",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates if the transmit FIFO is full.
  0 - Transmit FIFO is not full
  1 - Transmit FIFO is full
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Intr_Enabled": {"access": "read-only",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates that interrupts is enabled.
  0 - Interrupt is disabled
  1 - Interrupt is enabled
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Overrun_Error": {"access": "read-only",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates that a overrun error has occurred after the last time the status register was read. Overrun is when a new character has been received but the receive FIFO is full. The received character is ignored and not written into the receive FIFO. This bit is cleared when the status register is read.      0 - No overrun error has occurred      1 - Overrun error has occurred
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Frame_Error": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates that a frame error has occurred after the last time the status register was read. Frame error is defined as detection of a stop bit with the value 0. The receive character is ignored and not written to the receive FIFO. This bit is cleared when the status register is read.      0 - No frame error has occurred   1 - Frame error has occurred
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"Parity_Error": {"access": "read-only",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates that a parity error has occurred after the last time the status register was read. If the UART is configured without any parity handling, this bit is always 0. The received character is written into the receive FIFO. This bit is cleared when the status register is read.      0 - No parity error has occurred      1 - Parity error has occurred
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2684948488,
},
},
"canfd_0": {"SRR": {"description": "Software Reset Register",
"address_offset": "0x0000",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"SRST": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "The software reset bit for the core.
1 - core is reset.
If a 1 is written to this bit, all the core configuration registers (including the SRR) are reset.
Reads to this bit always return a 0.
Note - After performing soft or hard reset, wait for 8 AXI Clock cycles before initiating next AXILite transaction.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CEN": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "The Enable bit for the core.
1 - The core is in Loopback, Sleep, Snoop or Normal mode depending on the LBACK, SLEEP and SNOOP bits in the MSR.
0 - The core is in the Configuration mode.
Note - If the CEN bit is changed during core operation, it is recommended to reset the core so that operations start afresh.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2685665280,
},
"MSR": {"description": "Mode Select Register",
"address_offset": "0x0004",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"SLEEP": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "The Sleep Mode request bit.
1 - Request core to be in Sleep mode.
0 - No such request.
This bit is cleared when the core wakes up from the Sleep mode.
In order for core to enter Sleep mode, LBACK and SNOOP bits in this register should be set to 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"LBACK": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "The Loop Back Mode Request bit.
1 - Request core to be in Loop Back mode.
0 - No such request.
This bit can be written to only when CEN bit in SRR is '0.'
In order for core to enter LBACK mode, SLEEP and SNOOP bits in this register should be set to '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SNOOP": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "The Snoop Mode Request bit.
1 - Request core to be in Snoop mode.
0 - No such request.
This bit can be written only when CEN bit in SRR is '0'.
The user has to make sure that SNOOP mode is programmed only after system reset or software reset.
In order for core to enter Snoop mode, LBACK and SLEEP bits in this register should be set to '0'.
The features of Snoop mode are      Core transmits recessive bits on to CAN bus     Receives messages that are transmitted by other nodes but does not ACK. Stores received messages in RxBRAM based on programmed ID filtering.     Error counters are disabled and cleared to 0. Reads to error counter register will return zero.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"BRSD": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Makes core transmit CANFD frames only in nominal bit rate (by overriding Tx Message element setting).
0 - Makes core transmit CANFD frames as per BRS bit in TX Message element.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DAR": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Disable Auto retransmission to provide single shot transmission.
0 - Auto retransmission enabled.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DPEE": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Disable Protocol Exception Event detection/generation by CANFD receiver if \"res\" bit in CANFD frame is detected as 1. 
In this case, CANFD receiver will generate Form error.
0 - PEE detection/generation is enabled.  If CANFD receiver detects \"res\" bit as 1, it will go to Bus Integration
state (PEE_config) and waits for Bus Idle condition (11 consecutive nominal recessive bits). Error counter remains unchanged.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SBR": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Start Bus-off Recovery Request.
0 - No such request.
Node stays in Bus-off state until SBR bit is set to '1' (provided ABR bit in this register is not set).
This bit can be written only when node is in Bus-off state. 
This bit auto clears after node completes the bus-off recovery or leave bus-off state due to hard/soft reset or CEN de-assertion. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ABR": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Auto Bus-off Recovery Request.
0 - No such request.
If this bit is set, node do auto bus-off recovery irrespective of SBR setting in this register.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2685665284,
},
"BRPR": {"description": "Nominal Baud Rate Prescalar Register",
"address_offset": "0x0008",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"BRP": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "These bits indicate the prescaler value. 
The actual value is one more than the value written to the register.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2685665288,
},
"BTR": {"description": "Nominal Bit Timing Register",
"address_offset": "0x000C",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"TS1": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "6",
"desc": "Indicates the Sum of Propagation Segment and Phase Segment 1 as specified in the standard for Nominal Bit Timing.
The actual value is one more than the value written to the register.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TS2": {"access": "read-write",
"bit_offset": "8",
"bit_range": "",
"bit_width": "4",
"desc": "Indicates the Phase Segment 2 as specified in the CANFD standard for Nominal Bit Timing.
The actual value is one more than the value written to the register.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SJW": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "4",
"desc": "Indicates the Synchronization Jump Width as specified in the CANFD standard for Nominal Bit Timing.
The actual value is one more than the value written to the register.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2685665292,
},
"ECR": {"description": "Error Count Register",
"address_offset": "0x0010",
"access": "read-only",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"TEC": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Indicates the value of Transmit Error Counter.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"REC": {"access": "read-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "8",
"desc": "Indicates the value of Recieve Error Counter.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2685665296,
},
"ESR": {"description": "Error Status Register",
"address_offset": "0x0014",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"CRCER": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates a CRC error has occurred.
1 - Indicates a CRC error has occurred.
0 - Indicates a CRC error has not occurred on the bus after the last write to this bit.
If this bit is set, writing a 1 clears it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FMER": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates an error in one of the fixed form fields in the message frame.
1 - Indicates a form error has occurred.
0 - Indicates a form error has not occurred on the bus after the last write to this bit.
If this bit is set, writing a 1 clears it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STER": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates an error if there is a stuffing violation.
1 - Indicates a stuff error has occurred.
0 - Indicates a stuff error has not occurred on the bus after the last write to this bit.
If this bit is set, writing a 1 clears it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"BERR": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates the received bit is not the same as the transmitted bit during bus communication.
1 - Indicates a bit error has occurred.
0 - Indicates a bit error has not occurred on the bus after the last write to this bit.
If this bit is set, writing a 1 clears it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ACKER": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates an acknowledgement error.
1 - Indicates an acknowledgement error has occurred.
0 - Indicates an acknowledgement error has not occurred on the bus after the last write to this bit.
If this bit is set, writing a 1 clears it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"F_CRCER": {"access": "read-write",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates CRC error occurred in Data  Phase (Fast) data rate
0 - Indicates CRC error has not occurred in Data Phase (Fast) data rate after the last write to this bit.
If this bit is set, writing a 1 clears it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"F_FMER": {"access": "read-write",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates form error occurred in Data Phase (Fast) data rate
0 - Indicates form error has not occurred in Data Phase (Fast) data rate after the last write to this bit.
If this bit is set, writing a 1 clears it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"F_STER": {"access": "read-write",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates stuff error occurred in Data Phase (Fast) data rate
0 - Indicates stuff error has not occurred in Data Phase (Fast) data rate after the last write to this bit.
If this bit is set, writing a 1 clears it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"F_BERR": {"access": "read-write",
"bit_offset": "11",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates bit error occurred in Data Phase (Fast) data rate.
0 - Indicates bit error has not occurred in Data Phase (Fast) data rate after the last write to this bit.
If this bit is set, writing a 1 clears it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2685665300,
},
"SR": {"description": "Status Register",
"address_offset": "0x0018",
"access": "read-only",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"CONFIG": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates the core is in Configuration mode.
1 - Indicates the core is in Configuration mode.
0 - Indicates the core is not in Configuration mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"LBACK": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates the core is in Loopback mode.
1 - Indicates the core is in Loopback mode.
0 - Indicates the core is not in Loopback mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SLEEP": {"access": "read-only",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates the core is in Sleep mode.
1 - Indicates the core is in Sleep mode.
0 - Indicates the core is not in Sleep mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"NORMAL": {"access": "read-only",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates the core is in Normal Mode.
1 - Indicates the core is in Normal Mode.
0 - Indicates the core is not in Normal mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"BIDLE": {"access": "read-only",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates the CAN bus status.
1 - Indicates no bus communication is taking place.
0 - Indicates the core is either in Configuration mode or the bus is busy.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"BBSY": {"access": "read-only",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates the CAN bus status.
1 - Indicates that the core is either receiving a message or transmitting a message.
0 - Indicates that the core is either in Configuration mode or the bus is idle.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ERRWRN": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates that either the Transmit Error counter or the Receive Error counter has exceeded a value of 96.
1 - One or more error counters have a value 96.
0 - Neither of the error counters has a value 96.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ESTAT": {"access": "read-only",
"bit_offset": "7",
"bit_range": "",
"bit_width": "2",
"desc": "Indicates the error status of the core.
00 - Indicates Configuration Mode (CONFIG = 1). Error State is undefined.
01 - Indicates Error Active State.
11 - Indicates Error Passive State.
10 - Indicates Bus Off State.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PEE_CONFIG": {"access": "read-only",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates the core is in PEE Mode (Bus Integration State).
When this bit is set then BBSY and NORMAL status bits in SR register does not mean anything.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"BSFR_CONFIG": {"access": "read-only",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates the core is in Bus-off Recovery Mode (Bus Integration State)
When this bit is set then BBSY and NORMAL status bits in SR register does not mean anything.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"NISO": {"access": "read-only",
"bit_offset": "11",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Core is NISO (generated with C_IS_NISO = 1)
0 - Core is ISO (generated with C_IS_NISO = 0)
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SNOOP": {"access": "read-only",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates controller is in Snoop mode provided Normal mode bit is also set in this register.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TDCV": {"access": "read-only",
"bit_offset": "16",
"bit_range": "",
"bit_width": "7",
"desc": "This field gives the position of secondary sample point (defined as sum of TDCOFF and measured delay  
for EDL to r0 fall edge from TX to RX) in CAN clocks. 
This field is for status purpose.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2685665304,
},
"ISR": {"description": "Interrupt Status Register",
"address_offset": "0x001C",
"access": "read-only",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"ARBLST": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "1 - indicates that arbitration was lost during message transmission.
This bit can be cleared by writing to the ICR.
This bit is also cleared when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TXOK": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "1 - indicates that a message was transmitted successfully.
This bit can be cleared by writing to the ICR.
This bit is also cleared when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PEE": {"access": "read-only",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "1 - indicates that the core (CANFD) has detected PEE event.
This bit can be cleared by writing to the ICR.
This bit is also cleared when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"BSFRD": {"access": "read-only",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "1 - indicates that the core recovered from Bus Off state.
This bit can be cleared by writing to the ICR.
This bit is also cleared when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXOK": {"access": "read-only",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "1 - indicates that a message was received successfully and stored into the RX FIFO.
This bit can be cleared by writing to the ICR.
This bit is also cleared when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXFOFLW": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates that a message has been lost. This condition occurs when a new message is being received and the Receive FIFO is Full.
This bit can be cleared by writing to the ICR.
This bit is also cleared when a 0 is written to the CEN bit in the SRR only valid in FIFO Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ERROR": {"access": "read-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "1 - indicates that an error occurred during message transmission or reception.
This bit can be cleared by writing to the ICR.
This bit is also cleared when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"BSOFF": {"access": "read-only",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "1 - indicates that the core entered the Bus Off state.
This bit can be cleared by writing to the ICR.
This bit is also cleared when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SLP": {"access": "read-only",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "1 - indicates that the CAN core entered Sleep mode.
This bit can be cleared by writing to the ICR.
This bit is also cleared when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"WKUP": {"access": "read-only",
"bit_offset": "11",
"bit_range": "",
"bit_width": "1",
"desc": "1 - indicates that the core entered Normal mode from Sleep Mode
This bit can be cleared by writing to the ICR.
This bit is also cleared when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXFWMFLL": {"access": "read-only",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates that Rx FIFO is full based on watermark programming.
The interrupt continues to assert as long as the RX FIFO count is above RX FIFO Full watermark.
This bit can be cleared by writing to the respective bit in ICR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TXRRS": {"access": "read-only",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates that a Buffer Ready request was cleared.
This bit can be cleared by writing to the respective bit in ICR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TXCRS": {"access": "read-only",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates that a Cancellation request was cleared.
This bit can be cleared by writing to the respective bit in ICR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXRBF": {"access": "read-only",
"bit_offset": "15",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates that a receive buffer has received a message and become full.
This bit can be cleared by writing to the respective bit in ICR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXBOFLW": {"access": "read-only",
"bit_offset": "16",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates that a message has been lost due to buffer condition. Buffer index is captured in RXBOFLW_BI field.
This bit can be cleared by writing to the respective bit in ICR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXMNF": {"access": "read-only",
"bit_offset": "17",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates that Match process did not finish until the start of 6th Bit in EOF field and frame was discarded.
This bit can be cleared by writing to the respective bit in ICR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXLRM_BI": {"access": "read-only",
"bit_offset": "18",
"bit_range": "",
"bit_width": "6",
"desc": "Gives Rx Buffer index for last received message.
This field has meaning only if RXOK bit is set in this register.
This field is cleared at hard/soft reset or when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXBOFLW_BI": {"access": "read-only",
"bit_offset": "24",
"bit_range": "",
"bit_width": "6",
"desc": "Gives Rx Buffer index for which overflow event is generated.
This field is automatically cleared to default if RXBOFLW bit is cleared in this register.
In case more than one overflow event happens (before host could clear RXBOFLW), RXBOFLW_BI will show overflow index for the last event.
This field has meaning only if Overflow interrupt RXBOFLW bit is set.
This field is also cleared at hard/soft reset or when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2685665308,
},
"IER": {"description": "Interrupt Enable Register",
"address_offset": "0x0020",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"EARBLOST": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enable interrupt generation if ARBLST bit in ISR is set.
0 - Disable interrupt generation if ARBLST bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ETXOK": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "1 = Enable interrupt generation if TXOK bit in ISR is set.
0 = Disable interrupt generation if TXOK bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EPEE": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Protocol Exception Event interrupt enable
1 - Enable interrupt generation if PEE bit in ISR is set.
0 - Disable interrupt generation if PEE bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EBSFRD": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Bus-off Recovery Done interrupt enable
1 - Enable interrupt generation if BSFRD bit in ISR is set.
0 - Disable interrupt generation if BSFRD bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ERXOK": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "New message Received interrupt enable
1 - Enable interrupt generation if RXOK bit in ISR is set.
0 - Disable interrupt generation if RXOK bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ERFXOFLW": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enable interrupt generation if RFXOFLW bit in ISR is set.
0 - Disable interrupt generation if RFXOFLW bit in ISR is set.
Only valid in FIFO Mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EERROR": {"access": "read-write",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "Error interrupt enable
1 - Enable interrupt generation if ERROR bit in ISR is set.
0 - Disable interrupt generation if ERROR bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EBSOFF": {"access": "read-write",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enable interrupt generation if BSOFF bit in ISR is set.
0 - Disable interrupt generation if BSOFF bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ESLP": {"access": "read-write",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enable interrupt generation if SLP bit in ISR is set.
0 - Disable interrupt generation if SLP bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EWKUP": {"access": "read-write",
"bit_offset": "11",
"bit_range": "",
"bit_width": "1",
"desc": "Wakeup interrupt enable
1 - Enable interrupt generation if WKUP bit in ISR is set.
0 - Disable interrupt generation if WKUP bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ERXFWMFLL": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enable interrupt generation if RXFWMFLL bit in ISR is set.
0 - Disable interrupt generation if RXFWMFLL bit in ISR is set.
Only valid in MailBox Mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ETXRRS": {"access": "read-write",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "Tx Buffer Ready Request Served Interrupt Enable
1 - Enable interrupt generation if TXRRS bit in ISR is set.
0 - Disable interrupt generation if TXRRS bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ETXCRS": {"access": "read-write",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enable interrupt generation if TXCRS bit in ISR is set.
0 - Disable interrupt generation if TXCRS bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ERXRBF": {"access": "read-write",
"bit_offset": "15",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enable interrupt generation if RXRBF bit in ISR is set.
0 - Disable interrupt generation if RXRBF bit in ISR is set.
Only valid in MailBox Mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ERXBOFLW": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "1",
"desc": "1 = Enable interrupt generation if RXBOFLW bit in ISR is set.
0 = Disable interrupt generation if RXBOFLW bit in ISR is set.
Only valid in MailBox Mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ERXMNF": {"access": "read-write",
"bit_offset": "17",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enable interrupt generation if RXMNF bit in ISR is set.
0 - Disable interrupt generation if RXMNF bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2685665312,
},
"ICR": {"description": "Interrupt Clear Register",
"address_offset": "0x0024",
"access": "write-only",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"CARBLOST": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTXOK": {"access": "write-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Clear Transmission successful interrupt.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CPEE": {"access": "write-only",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CBSFRD": {"access": "write-only",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CRXOK": {"access": "write-only",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CRFXOFLW": {"access": "write-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
only valid in FIFO Mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CERROR": {"access": "write-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CBSOFF": {"access": "write-only",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CSLP": {"access": "write-only",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CWKUP": {"access": "write-only",
"bit_offset": "11",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CRXFWMFLL": {"access": "write-only",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
Only valid in FIFO Mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTXRRS": {"access": "write-only",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTXCRS": {"access": "write-only",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CRXRBF": {"access": "write-only",
"bit_offset": "15",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
only valid in MailBox Mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CRXBOFLW": {"access": "write-only",
"bit_offset": "16",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
only valid in MailBox Mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CRXMNF": {"access": "write-only",
"bit_offset": "17",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2685665316,
},
"TSR": {"description": "Time Stamp Register",
"address_offset": "0x0028",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"CTS": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Internal free running counter is cleared to 0 when CTS=1. 
This bit only needs to be written once with a '1' to clear the counter. 
The bit will always read as '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TIMESTAMP_CNT": {"access": "read-only",
"bit_offset": "16",
"bit_range": "",
"bit_width": "16",
"desc": "This Status field gives running value of the time stamp counter. 
This  field is cleared when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2685665320,
},
"DPBRPR": {"description": "Data Phase Baud Rate Prescalar Register",
"address_offset": "0x0088",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"DP_BRP": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "These bits indicate the prescaler value for Data Bit Timing as specified in the CANFD standard.
The actual value is one more than the value written to the register.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TDCOFF": {"access": "read-write",
"bit_offset": "8",
"bit_range": "",
"bit_width": "5",
"desc": "This offset is specified in CAN clock cycles and is added to the measured transnitter delay to place the Secondary Sample Point (SSP) at appropriate position (for ex. set this to half data bit time in terms of CAN clock cycles to place SSP in the middle of the data bit).
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TDC": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables TDC function as specified in the CANFD standard
0 - TDC is disabled
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2685665416,
},
"DPBTR": {"description": "Data Phase Bit Timing Register",
"address_offset": "0x008C",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"DP_TS1": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "4",
"desc": "Indicates the Sum of Propagation Segment and Phase Segment 1 as specified in the CANFD standard for Data Bit Timing.
The actual value is one more than the value written to the register.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DP_TS2": {"access": "read-write",
"bit_offset": "8",
"bit_range": "",
"bit_width": "3",
"desc": "Indicates the Phase Segment 2 as specified in the CANFD standard for Data Bit Timing. 
The actual value is one more than the value written to the register.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DP_SJW": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "3",
"desc": "Indicates the Synchronization Jump Width as specified in the CANFD standard for Data Bit Timing. 
The actual value is one more than the value written to the register.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2685665420,
},
"TRR": {"description": "Tx Buffer Ready Request Register",
"address_offset": "0x0090",
"access": "read-write",
"size": "8",
"interface": "S_AXI_LITE",
"fields": {"RR": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "This is control bit corresponds to TBi message in Tx BRAM.
Host writes 1 to indicate buffer is ready for transmission. Core clears this bit when   Buffer transmission is completed on CAN Bus or   If core is in DAR mode, then after one transmission attempt on CAN bus [either successful or unsuccessful (i.e. arbitration lost or error)] or   If message is cancelled due to cancellation request or   Any combination of Above Host writes are ignored when this bit is 1.
Note - This register remains in reset when SNOOP mode is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2685665424,
},
"IETRS": {"description": "Interrupt Enable Tx Buffer Ready Request Served/Cleared Register",
"address_offset": "0x0094",
"access": "read-write",
"size": "8",
"interface": "S_AXI_LITE",
"fields": {"ERRS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "1 - Enables setting TXRRS bit in ISR when RRi bit in TRR register clears.
0 - TXRRS bit in ISR will not set if  RRi bit in TRR register clears.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2685665428,
},
"TCR": {"description": "Tx Buffer Cancellation Request Register",
"address_offset": "0x0098",
"access": "read-write",
"size": "8",
"interface": "S_AXI_LITE",
"fields": {"CR": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "This is cancellation request bit corresponds to RR0 bit in TRR register.
Host writes 1 to indicate cancellation request of corresponding buffer ready request (i.e. RR0 bit in TRR register). Core clears this bit when cancellation request is completed. 
Host writes to this bit are ignored if CR0 is 1 or RR0 bit of TRR register is 0.
If the buffer is already locked for transmission by Transfer Layer then cancellation is performed at the end of transmission cycle irrespective whether frame transmitted successfully or failed
i.e. if message is failed due to arbitration loss or any error, then message will be cancelled (no retransmission attempt) and cancellation request will be cleared. Alongwith RR0 bit will get cleared.
If message is transmitted successfully, then RR0 bit will clear and cancellation request will be cleared anyway.
Note : If internal buffer scheduling round is in progress, then cancellation consideration is postponed till it is over.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2685665432,
},
"IETCS": {"description": "Interrupt Enable Tx Buffer Cancellation Request Served/Cleared Register",
"address_offset": "0x009C",
"access": "read-write",
"size": "8",
"interface": "S_AXI_LITE",
"fields": {"ECRS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "1 - Enables setting TXCRS bit in ISR when CR0 bit in TCS register clears.
0 - TXCRS bit in ISR will not set if  CR0 bit in TRR register clears.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2685665436,
},
"AFR": {"description": "Acceptance Filter(control) Register",
"address_offset": "0x00E0",
"access": "read-write",
"size": "8",
"interface": "S_AXI_LITE",
"fields": {"UAF": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Enables the use of acceptance filter mask pair i.
1 - Indicates Acceptance Filter Mask Register 0 (AFMR0 or M0) and Acceptance Filter ID Register 0 (AFID0 or F0) pair is used for acceptance filtering.
0 - Indicates AFMR0 and AFID0 pair is not used for acceptance filtering.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2685665504,
},
"FSR": {"description": "Rx FIFO Status Register",
"address_offset": "0x00E8",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"RI": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "5",
"desc": "Each time IRI bit is set, core increments read index by +1 (provided FILL level is not 0) and maintained it for Host to access 
next available message.
RI = 0x0 -> Next message read starts from location = 0x1100 (to 0x1147)
RI = 0x1 -> Next message read starts from location = 0x1148 (to 0x118F)...
RI = 0x1F -> Next message read starts from location = 0x19B8 (to 0x19FF)
RI is maintained if CEN bit is cleared.
RI gets reset to 0 if soft or hard reset is asserted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRI": {"access": "write-only",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "With each Host writes setting this bit as 1, core increments Read index (RI field) by 1 and update fill level (i.e. decrement  by 1).
If FILL level is 0, setting this bit has no effect. Note that FILL level may remain unchanged when IRI is written if core is just finishing a successful receive and incrementing internal write index.
This bit always read as 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FL": {"access": "read-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "6",
"desc": "Number of stored message in Receive FIFO starting from RI index given in this register.
For example, if FL = 0x5 and RI = 0x3 then Rx FIFO has 5 messages starting from Read Index 3 (Start address 0x1190).
FL is maintained if CEN bit is cleared.
FL gets reset to 0 if soft or hard reset is asserted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2685665512,
},
"WMR": {"description": "Rx FIFO Watermark Register",
"address_offset": "0x00EC",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"RXFWM": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "5",
"desc": "RXFIFO generates FULL interrupt based on the value programmed in this field.
User should set it within (1-31) range. 
The RX FIFO Full Watermark interrupt in ISR register continues to assert as long as the RX FIFO Fill Level is above RX FIFO Full watermark.
This field can be written to only when CEN bit in SRR is '0'
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2685665516,
},
"TX_BUFFER_START": {"description": "Tx Buffer Start Address",
"address_offset": "0x0100",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {},
"memoryAddr": 2685665536,
},
"TX_BUFFER_END": {"description": "Tx Buffer End Address",
"address_offset": "0x09FC",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {},
"memoryAddr": 2685667836,
},
"RX_BUFFER_START": {"description": "Rx Buffer Start Address",
"address_offset": "0x1100",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {},
"memoryAddr": 2685669632,
},
"TX_BUFFER_END_FIFO": {"description": "Rx Buffer End Address",
"address_offset": "0x19FC",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {},
"memoryAddr": 2685671932,
},
},
"canfd_1": {"SRR": {"description": "Software Reset Register",
"address_offset": "0x0000",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"SRST": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "The software reset bit for the core.
1 - core is reset.
If a 1 is written to this bit, all the core configuration registers (including the SRR) are reset.
Reads to this bit always return a 0.
Note - After performing soft or hard reset, wait for 8 AXI Clock cycles before initiating next AXILite transaction.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CEN": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "The Enable bit for the core.
1 - The core is in Loopback, Sleep, Snoop or Normal mode depending on the LBACK, SLEEP and SNOOP bits in the MSR.
0 - The core is in the Configuration mode.
Note - If the CEN bit is changed during core operation, it is recommended to reset the core so that operations start afresh.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2685730816,
},
"MSR": {"description": "Mode Select Register",
"address_offset": "0x0004",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"SLEEP": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "The Sleep Mode request bit.
1 - Request core to be in Sleep mode.
0 - No such request.
This bit is cleared when the core wakes up from the Sleep mode.
In order for core to enter Sleep mode, LBACK and SNOOP bits in this register should be set to 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"LBACK": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "The Loop Back Mode Request bit.
1 - Request core to be in Loop Back mode.
0 - No such request.
This bit can be written to only when CEN bit in SRR is '0.'
In order for core to enter LBACK mode, SLEEP and SNOOP bits in this register should be set to '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SNOOP": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "The Snoop Mode Request bit.
1 - Request core to be in Snoop mode.
0 - No such request.
This bit can be written only when CEN bit in SRR is '0'.
The user has to make sure that SNOOP mode is programmed only after system reset or software reset.
In order for core to enter Snoop mode, LBACK and SLEEP bits in this register should be set to '0'.
The features of Snoop mode are      Core transmits recessive bits on to CAN bus     Receives messages that are transmitted by other nodes but does not ACK. Stores received messages in RxBRAM based on programmed ID filtering.     Error counters are disabled and cleared to 0. Reads to error counter register will return zero.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"BRSD": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Makes core transmit CANFD frames only in nominal bit rate (by overriding Tx Message element setting).
0 - Makes core transmit CANFD frames as per BRS bit in TX Message element.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DAR": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Disable Auto retransmission to provide single shot transmission.
0 - Auto retransmission enabled.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DPEE": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Disable Protocol Exception Event detection/generation by CANFD receiver if \"res\" bit in CANFD frame is detected as 1. 
In this case, CANFD receiver will generate Form error.
0 - PEE detection/generation is enabled.  If CANFD receiver detects \"res\" bit as 1, it will go to Bus Integration
state (PEE_config) and waits for Bus Idle condition (11 consecutive nominal recessive bits). Error counter remains unchanged.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SBR": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Start Bus-off Recovery Request.
0 - No such request.
Node stays in Bus-off state until SBR bit is set to '1' (provided ABR bit in this register is not set).
This bit can be written only when node is in Bus-off state. 
This bit auto clears after node completes the bus-off recovery or leave bus-off state due to hard/soft reset or CEN de-assertion. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ABR": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Auto Bus-off Recovery Request.
0 - No such request.
If this bit is set, node do auto bus-off recovery irrespective of SBR setting in this register.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2685730820,
},
"BRPR": {"description": "Nominal Baud Rate Prescalar Register",
"address_offset": "0x0008",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"BRP": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "These bits indicate the prescaler value. 
The actual value is one more than the value written to the register.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2685730824,
},
"BTR": {"description": "Nominal Bit Timing Register",
"address_offset": "0x000C",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"TS1": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "6",
"desc": "Indicates the Sum of Propagation Segment and Phase Segment 1 as specified in the standard for Nominal Bit Timing.
The actual value is one more than the value written to the register.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TS2": {"access": "read-write",
"bit_offset": "8",
"bit_range": "",
"bit_width": "4",
"desc": "Indicates the Phase Segment 2 as specified in the CANFD standard for Nominal Bit Timing.
The actual value is one more than the value written to the register.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SJW": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "4",
"desc": "Indicates the Synchronization Jump Width as specified in the CANFD standard for Nominal Bit Timing.
The actual value is one more than the value written to the register.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2685730828,
},
"ECR": {"description": "Error Count Register",
"address_offset": "0x0010",
"access": "read-only",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"TEC": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Indicates the value of Transmit Error Counter.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"REC": {"access": "read-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "8",
"desc": "Indicates the value of Recieve Error Counter.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2685730832,
},
"ESR": {"description": "Error Status Register",
"address_offset": "0x0014",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"CRCER": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates a CRC error has occurred.
1 - Indicates a CRC error has occurred.
0 - Indicates a CRC error has not occurred on the bus after the last write to this bit.
If this bit is set, writing a 1 clears it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FMER": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates an error in one of the fixed form fields in the message frame.
1 - Indicates a form error has occurred.
0 - Indicates a form error has not occurred on the bus after the last write to this bit.
If this bit is set, writing a 1 clears it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STER": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates an error if there is a stuffing violation.
1 - Indicates a stuff error has occurred.
0 - Indicates a stuff error has not occurred on the bus after the last write to this bit.
If this bit is set, writing a 1 clears it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"BERR": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates the received bit is not the same as the transmitted bit during bus communication.
1 - Indicates a bit error has occurred.
0 - Indicates a bit error has not occurred on the bus after the last write to this bit.
If this bit is set, writing a 1 clears it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ACKER": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates an acknowledgement error.
1 - Indicates an acknowledgement error has occurred.
0 - Indicates an acknowledgement error has not occurred on the bus after the last write to this bit.
If this bit is set, writing a 1 clears it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"F_CRCER": {"access": "read-write",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates CRC error occurred in Data  Phase (Fast) data rate
0 - Indicates CRC error has not occurred in Data Phase (Fast) data rate after the last write to this bit.
If this bit is set, writing a 1 clears it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"F_FMER": {"access": "read-write",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates form error occurred in Data Phase (Fast) data rate
0 - Indicates form error has not occurred in Data Phase (Fast) data rate after the last write to this bit.
If this bit is set, writing a 1 clears it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"F_STER": {"access": "read-write",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates stuff error occurred in Data Phase (Fast) data rate
0 - Indicates stuff error has not occurred in Data Phase (Fast) data rate after the last write to this bit.
If this bit is set, writing a 1 clears it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"F_BERR": {"access": "read-write",
"bit_offset": "11",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates bit error occurred in Data Phase (Fast) data rate.
0 - Indicates bit error has not occurred in Data Phase (Fast) data rate after the last write to this bit.
If this bit is set, writing a 1 clears it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2685730836,
},
"SR": {"description": "Status Register",
"address_offset": "0x0018",
"access": "read-only",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"CONFIG": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates the core is in Configuration mode.
1 - Indicates the core is in Configuration mode.
0 - Indicates the core is not in Configuration mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"LBACK": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates the core is in Loopback mode.
1 - Indicates the core is in Loopback mode.
0 - Indicates the core is not in Loopback mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SLEEP": {"access": "read-only",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates the core is in Sleep mode.
1 - Indicates the core is in Sleep mode.
0 - Indicates the core is not in Sleep mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"NORMAL": {"access": "read-only",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates the core is in Normal Mode.
1 - Indicates the core is in Normal Mode.
0 - Indicates the core is not in Normal mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"BIDLE": {"access": "read-only",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates the CAN bus status.
1 - Indicates no bus communication is taking place.
0 - Indicates the core is either in Configuration mode or the bus is busy.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"BBSY": {"access": "read-only",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates the CAN bus status.
1 - Indicates that the core is either receiving a message or transmitting a message.
0 - Indicates that the core is either in Configuration mode or the bus is idle.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ERRWRN": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates that either the Transmit Error counter or the Receive Error counter has exceeded a value of 96.
1 - One or more error counters have a value 96.
0 - Neither of the error counters has a value 96.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ESTAT": {"access": "read-only",
"bit_offset": "7",
"bit_range": "",
"bit_width": "2",
"desc": "Indicates the error status of the core.
00 - Indicates Configuration Mode (CONFIG = 1). Error State is undefined.
01 - Indicates Error Active State.
11 - Indicates Error Passive State.
10 - Indicates Bus Off State.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PEE_CONFIG": {"access": "read-only",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates the core is in PEE Mode (Bus Integration State).
When this bit is set then BBSY and NORMAL status bits in SR register does not mean anything.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"BSFR_CONFIG": {"access": "read-only",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates the core is in Bus-off Recovery Mode (Bus Integration State)
When this bit is set then BBSY and NORMAL status bits in SR register does not mean anything.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"NISO": {"access": "read-only",
"bit_offset": "11",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Core is NISO (generated with C_IS_NISO = 1)
0 - Core is ISO (generated with C_IS_NISO = 0)
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SNOOP": {"access": "read-only",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates controller is in Snoop mode provided Normal mode bit is also set in this register.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TDCV": {"access": "read-only",
"bit_offset": "16",
"bit_range": "",
"bit_width": "7",
"desc": "This field gives the position of secondary sample point (defined as sum of TDCOFF and measured delay  
for EDL to r0 fall edge from TX to RX) in CAN clocks. 
This field is for status purpose.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2685730840,
},
"ISR": {"description": "Interrupt Status Register",
"address_offset": "0x001C",
"access": "read-only",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"ARBLST": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "1 - indicates that arbitration was lost during message transmission.
This bit can be cleared by writing to the ICR.
This bit is also cleared when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TXOK": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "1 - indicates that a message was transmitted successfully.
This bit can be cleared by writing to the ICR.
This bit is also cleared when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PEE": {"access": "read-only",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "1 - indicates that the core (CANFD) has detected PEE event.
This bit can be cleared by writing to the ICR.
This bit is also cleared when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"BSFRD": {"access": "read-only",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "1 - indicates that the core recovered from Bus Off state.
This bit can be cleared by writing to the ICR.
This bit is also cleared when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXOK": {"access": "read-only",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "1 - indicates that a message was received successfully and stored into the RX FIFO.
This bit can be cleared by writing to the ICR.
This bit is also cleared when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXFOFLW": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates that a message has been lost. This condition occurs when a new message is being received and the Receive FIFO is Full.
This bit can be cleared by writing to the ICR.
This bit is also cleared when a 0 is written to the CEN bit in the SRR only valid in FIFO Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ERROR": {"access": "read-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "1 - indicates that an error occurred during message transmission or reception.
This bit can be cleared by writing to the ICR.
This bit is also cleared when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"BSOFF": {"access": "read-only",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "1 - indicates that the core entered the Bus Off state.
This bit can be cleared by writing to the ICR.
This bit is also cleared when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SLP": {"access": "read-only",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "1 - indicates that the CAN core entered Sleep mode.
This bit can be cleared by writing to the ICR.
This bit is also cleared when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"WKUP": {"access": "read-only",
"bit_offset": "11",
"bit_range": "",
"bit_width": "1",
"desc": "1 - indicates that the core entered Normal mode from Sleep Mode
This bit can be cleared by writing to the ICR.
This bit is also cleared when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXFWMFLL": {"access": "read-only",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates that Rx FIFO is full based on watermark programming.
The interrupt continues to assert as long as the RX FIFO count is above RX FIFO Full watermark.
This bit can be cleared by writing to the respective bit in ICR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TXRRS": {"access": "read-only",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates that a Buffer Ready request was cleared.
This bit can be cleared by writing to the respective bit in ICR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TXCRS": {"access": "read-only",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates that a Cancellation request was cleared.
This bit can be cleared by writing to the respective bit in ICR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXRBF": {"access": "read-only",
"bit_offset": "15",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates that a receive buffer has received a message and become full.
This bit can be cleared by writing to the respective bit in ICR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXBOFLW": {"access": "read-only",
"bit_offset": "16",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates that a message has been lost due to buffer condition. Buffer index is captured in RXBOFLW_BI field.
This bit can be cleared by writing to the respective bit in ICR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXMNF": {"access": "read-only",
"bit_offset": "17",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates that Match process did not finish until the start of 6th Bit in EOF field and frame was discarded.
This bit can be cleared by writing to the respective bit in ICR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXLRM_BI": {"access": "read-only",
"bit_offset": "18",
"bit_range": "",
"bit_width": "6",
"desc": "Gives Rx Buffer index for last received message.
This field has meaning only if RXOK bit is set in this register.
This field is cleared at hard/soft reset or when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXBOFLW_BI": {"access": "read-only",
"bit_offset": "24",
"bit_range": "",
"bit_width": "6",
"desc": "Gives Rx Buffer index for which overflow event is generated.
This field is automatically cleared to default if RXBOFLW bit is cleared in this register.
In case more than one overflow event happens (before host could clear RXBOFLW), RXBOFLW_BI will show overflow index for the last event.
This field has meaning only if Overflow interrupt RXBOFLW bit is set.
This field is also cleared at hard/soft reset or when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2685730844,
},
"IER": {"description": "Interrupt Enable Register",
"address_offset": "0x0020",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"EARBLOST": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enable interrupt generation if ARBLST bit in ISR is set.
0 - Disable interrupt generation if ARBLST bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ETXOK": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "1 = Enable interrupt generation if TXOK bit in ISR is set.
0 = Disable interrupt generation if TXOK bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EPEE": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Protocol Exception Event interrupt enable
1 - Enable interrupt generation if PEE bit in ISR is set.
0 - Disable interrupt generation if PEE bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EBSFRD": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Bus-off Recovery Done interrupt enable
1 - Enable interrupt generation if BSFRD bit in ISR is set.
0 - Disable interrupt generation if BSFRD bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ERXOK": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "New message Received interrupt enable
1 - Enable interrupt generation if RXOK bit in ISR is set.
0 - Disable interrupt generation if RXOK bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ERFXOFLW": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enable interrupt generation if RFXOFLW bit in ISR is set.
0 - Disable interrupt generation if RFXOFLW bit in ISR is set.
Only valid in FIFO Mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EERROR": {"access": "read-write",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "Error interrupt enable
1 - Enable interrupt generation if ERROR bit in ISR is set.
0 - Disable interrupt generation if ERROR bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EBSOFF": {"access": "read-write",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enable interrupt generation if BSOFF bit in ISR is set.
0 - Disable interrupt generation if BSOFF bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ESLP": {"access": "read-write",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enable interrupt generation if SLP bit in ISR is set.
0 - Disable interrupt generation if SLP bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EWKUP": {"access": "read-write",
"bit_offset": "11",
"bit_range": "",
"bit_width": "1",
"desc": "Wakeup interrupt enable
1 - Enable interrupt generation if WKUP bit in ISR is set.
0 - Disable interrupt generation if WKUP bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ERXFWMFLL": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enable interrupt generation if RXFWMFLL bit in ISR is set.
0 - Disable interrupt generation if RXFWMFLL bit in ISR is set.
Only valid in MailBox Mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ETXRRS": {"access": "read-write",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "Tx Buffer Ready Request Served Interrupt Enable
1 - Enable interrupt generation if TXRRS bit in ISR is set.
0 - Disable interrupt generation if TXRRS bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ETXCRS": {"access": "read-write",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enable interrupt generation if TXCRS bit in ISR is set.
0 - Disable interrupt generation if TXCRS bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ERXRBF": {"access": "read-write",
"bit_offset": "15",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enable interrupt generation if RXRBF bit in ISR is set.
0 - Disable interrupt generation if RXRBF bit in ISR is set.
Only valid in MailBox Mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ERXBOFLW": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "1",
"desc": "1 = Enable interrupt generation if RXBOFLW bit in ISR is set.
0 = Disable interrupt generation if RXBOFLW bit in ISR is set.
Only valid in MailBox Mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ERXMNF": {"access": "read-write",
"bit_offset": "17",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enable interrupt generation if RXMNF bit in ISR is set.
0 - Disable interrupt generation if RXMNF bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2685730848,
},
"ICR": {"description": "Interrupt Clear Register",
"address_offset": "0x0024",
"access": "write-only",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"CARBLOST": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTXOK": {"access": "write-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Clear Transmission successful interrupt.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CPEE": {"access": "write-only",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CBSFRD": {"access": "write-only",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CRXOK": {"access": "write-only",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CRFXOFLW": {"access": "write-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
only valid in FIFO Mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CERROR": {"access": "write-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CBSOFF": {"access": "write-only",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CSLP": {"access": "write-only",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CWKUP": {"access": "write-only",
"bit_offset": "11",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CRXFWMFLL": {"access": "write-only",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
Only valid in FIFO Mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTXRRS": {"access": "write-only",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTXCRS": {"access": "write-only",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CRXRBF": {"access": "write-only",
"bit_offset": "15",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
only valid in MailBox Mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CRXBOFLW": {"access": "write-only",
"bit_offset": "16",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
only valid in MailBox Mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CRXMNF": {"access": "write-only",
"bit_offset": "17",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2685730852,
},
"TSR": {"description": "Time Stamp Register",
"address_offset": "0x0028",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"CTS": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Internal free running counter is cleared to 0 when CTS=1. 
This bit only needs to be written once with a '1' to clear the counter. 
The bit will always read as '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TIMESTAMP_CNT": {"access": "read-only",
"bit_offset": "16",
"bit_range": "",
"bit_width": "16",
"desc": "This Status field gives running value of the time stamp counter. 
This  field is cleared when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2685730856,
},
"DPBRPR": {"description": "Data Phase Baud Rate Prescalar Register",
"address_offset": "0x0088",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"DP_BRP": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "These bits indicate the prescaler value for Data Bit Timing as specified in the CANFD standard.
The actual value is one more than the value written to the register.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TDCOFF": {"access": "read-write",
"bit_offset": "8",
"bit_range": "",
"bit_width": "5",
"desc": "This offset is specified in CAN clock cycles and is added to the measured transnitter delay to place the Secondary Sample Point (SSP) at appropriate position (for ex. set this to half data bit time in terms of CAN clock cycles to place SSP in the middle of the data bit).
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TDC": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables TDC function as specified in the CANFD standard
0 - TDC is disabled
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2685730952,
},
"DPBTR": {"description": "Data Phase Bit Timing Register",
"address_offset": "0x008C",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"DP_TS1": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "4",
"desc": "Indicates the Sum of Propagation Segment and Phase Segment 1 as specified in the CANFD standard for Data Bit Timing.
The actual value is one more than the value written to the register.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DP_TS2": {"access": "read-write",
"bit_offset": "8",
"bit_range": "",
"bit_width": "3",
"desc": "Indicates the Phase Segment 2 as specified in the CANFD standard for Data Bit Timing. 
The actual value is one more than the value written to the register.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DP_SJW": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "3",
"desc": "Indicates the Synchronization Jump Width as specified in the CANFD standard for Data Bit Timing. 
The actual value is one more than the value written to the register.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2685730956,
},
"TRR": {"description": "Tx Buffer Ready Request Register",
"address_offset": "0x0090",
"access": "read-write",
"size": "8",
"interface": "S_AXI_LITE",
"fields": {"RR": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "This is control bit corresponds to TBi message in Tx BRAM.
Host writes 1 to indicate buffer is ready for transmission. Core clears this bit when   Buffer transmission is completed on CAN Bus or   If core is in DAR mode, then after one transmission attempt on CAN bus [either successful or unsuccessful (i.e. arbitration lost or error)] or   If message is cancelled due to cancellation request or   Any combination of Above Host writes are ignored when this bit is 1.
Note - This register remains in reset when SNOOP mode is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2685730960,
},
"IETRS": {"description": "Interrupt Enable Tx Buffer Ready Request Served/Cleared Register",
"address_offset": "0x0094",
"access": "read-write",
"size": "8",
"interface": "S_AXI_LITE",
"fields": {"ERRS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "1 - Enables setting TXRRS bit in ISR when RRi bit in TRR register clears.
0 - TXRRS bit in ISR will not set if  RRi bit in TRR register clears.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2685730964,
},
"TCR": {"description": "Tx Buffer Cancellation Request Register",
"address_offset": "0x0098",
"access": "read-write",
"size": "8",
"interface": "S_AXI_LITE",
"fields": {"CR": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "This is cancellation request bit corresponds to RR0 bit in TRR register.
Host writes 1 to indicate cancellation request of corresponding buffer ready request (i.e. RR0 bit in TRR register). Core clears this bit when cancellation request is completed. 
Host writes to this bit are ignored if CR0 is 1 or RR0 bit of TRR register is 0.
If the buffer is already locked for transmission by Transfer Layer then cancellation is performed at the end of transmission cycle irrespective whether frame transmitted successfully or failed
i.e. if message is failed due to arbitration loss or any error, then message will be cancelled (no retransmission attempt) and cancellation request will be cleared. Alongwith RR0 bit will get cleared.
If message is transmitted successfully, then RR0 bit will clear and cancellation request will be cleared anyway.
Note : If internal buffer scheduling round is in progress, then cancellation consideration is postponed till it is over.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2685730968,
},
"IETCS": {"description": "Interrupt Enable Tx Buffer Cancellation Request Served/Cleared Register",
"address_offset": "0x009C",
"access": "read-write",
"size": "8",
"interface": "S_AXI_LITE",
"fields": {"ECRS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "1 - Enables setting TXCRS bit in ISR when CR0 bit in TCS register clears.
0 - TXCRS bit in ISR will not set if  CR0 bit in TRR register clears.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2685730972,
},
"AFR": {"description": "Acceptance Filter(control) Register",
"address_offset": "0x00E0",
"access": "read-write",
"size": "8",
"interface": "S_AXI_LITE",
"fields": {"UAF": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Enables the use of acceptance filter mask pair i.
1 - Indicates Acceptance Filter Mask Register 0 (AFMR0 or M0) and Acceptance Filter ID Register 0 (AFID0 or F0) pair is used for acceptance filtering.
0 - Indicates AFMR0 and AFID0 pair is not used for acceptance filtering.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2685731040,
},
"FSR": {"description": "Rx FIFO Status Register",
"address_offset": "0x00E8",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"RI": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "5",
"desc": "Each time IRI bit is set, core increments read index by +1 (provided FILL level is not 0) and maintained it for Host to access 
next available message.
RI = 0x0 -> Next message read starts from location = 0x1100 (to 0x1147)
RI = 0x1 -> Next message read starts from location = 0x1148 (to 0x118F)...
RI = 0x1F -> Next message read starts from location = 0x19B8 (to 0x19FF)
RI is maintained if CEN bit is cleared.
RI gets reset to 0 if soft or hard reset is asserted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRI": {"access": "write-only",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "With each Host writes setting this bit as 1, core increments Read index (RI field) by 1 and update fill level (i.e. decrement  by 1).
If FILL level is 0, setting this bit has no effect. Note that FILL level may remain unchanged when IRI is written if core is just finishing a successful receive and incrementing internal write index.
This bit always read as 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FL": {"access": "read-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "6",
"desc": "Number of stored message in Receive FIFO starting from RI index given in this register.
For example, if FL = 0x5 and RI = 0x3 then Rx FIFO has 5 messages starting from Read Index 3 (Start address 0x1190).
FL is maintained if CEN bit is cleared.
FL gets reset to 0 if soft or hard reset is asserted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2685731048,
},
"WMR": {"description": "Rx FIFO Watermark Register",
"address_offset": "0x00EC",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"RXFWM": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "5",
"desc": "RXFIFO generates FULL interrupt based on the value programmed in this field.
User should set it within (1-31) range. 
The RX FIFO Full Watermark interrupt in ISR register continues to assert as long as the RX FIFO Fill Level is above RX FIFO Full watermark.
This field can be written to only when CEN bit in SRR is '0'
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2685731052,
},
"TX_BUFFER_START": {"description": "Tx Buffer Start Address",
"address_offset": "0x0100",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {},
"memoryAddr": 2685731072,
},
"TX_BUFFER_END": {"description": "Tx Buffer End Address",
"address_offset": "0x09FC",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {},
"memoryAddr": 2685733372,
},
"RX_BUFFER_START": {"description": "Rx Buffer Start Address",
"address_offset": "0x1100",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {},
"memoryAddr": 2685735168,
},
"TX_BUFFER_END_FIFO": {"description": "Rx Buffer End Address",
"address_offset": "0x19FC",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {},
"memoryAddr": 2685737468,
},
},
"canfd_10": {"SRR": {"description": "Software Reset Register",
"address_offset": "0x0000",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"SRST": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "The software reset bit for the core.
1 - core is reset.
If a 1 is written to this bit, all the core configuration registers (including the SRR) are reset.
Reads to this bit always return a 0.
Note - After performing soft or hard reset, wait for 8 AXI Clock cycles before initiating next AXILite transaction.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CEN": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "The Enable bit for the core.
1 - The core is in Loopback, Sleep, Snoop or Normal mode depending on the LBACK, SLEEP and SNOOP bits in the MSR.
0 - The core is in the Configuration mode.
Note - If the CEN bit is changed during core operation, it is recommended to reset the core so that operations start afresh.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2685796352,
},
"MSR": {"description": "Mode Select Register",
"address_offset": "0x0004",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"SLEEP": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "The Sleep Mode request bit.
1 - Request core to be in Sleep mode.
0 - No such request.
This bit is cleared when the core wakes up from the Sleep mode.
In order for core to enter Sleep mode, LBACK and SNOOP bits in this register should be set to 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"LBACK": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "The Loop Back Mode Request bit.
1 - Request core to be in Loop Back mode.
0 - No such request.
This bit can be written to only when CEN bit in SRR is '0.'
In order for core to enter LBACK mode, SLEEP and SNOOP bits in this register should be set to '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SNOOP": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "The Snoop Mode Request bit.
1 - Request core to be in Snoop mode.
0 - No such request.
This bit can be written only when CEN bit in SRR is '0'.
The user has to make sure that SNOOP mode is programmed only after system reset or software reset.
In order for core to enter Snoop mode, LBACK and SLEEP bits in this register should be set to '0'.
The features of Snoop mode are      Core transmits recessive bits on to CAN bus     Receives messages that are transmitted by other nodes but does not ACK. Stores received messages in RxBRAM based on programmed ID filtering.     Error counters are disabled and cleared to 0. Reads to error counter register will return zero.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"BRSD": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Makes core transmit CANFD frames only in nominal bit rate (by overriding Tx Message element setting).
0 - Makes core transmit CANFD frames as per BRS bit in TX Message element.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DAR": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Disable Auto retransmission to provide single shot transmission.
0 - Auto retransmission enabled.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DPEE": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Disable Protocol Exception Event detection/generation by CANFD receiver if \"res\" bit in CANFD frame is detected as 1. 
In this case, CANFD receiver will generate Form error.
0 - PEE detection/generation is enabled.  If CANFD receiver detects \"res\" bit as 1, it will go to Bus Integration
state (PEE_config) and waits for Bus Idle condition (11 consecutive nominal recessive bits). Error counter remains unchanged.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SBR": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Start Bus-off Recovery Request.
0 - No such request.
Node stays in Bus-off state until SBR bit is set to '1' (provided ABR bit in this register is not set).
This bit can be written only when node is in Bus-off state. 
This bit auto clears after node completes the bus-off recovery or leave bus-off state due to hard/soft reset or CEN de-assertion. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ABR": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Auto Bus-off Recovery Request.
0 - No such request.
If this bit is set, node do auto bus-off recovery irrespective of SBR setting in this register.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2685796356,
},
"BRPR": {"description": "Nominal Baud Rate Prescalar Register",
"address_offset": "0x0008",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"BRP": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "These bits indicate the prescaler value. 
The actual value is one more than the value written to the register.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2685796360,
},
"BTR": {"description": "Nominal Bit Timing Register",
"address_offset": "0x000C",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"TS1": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "6",
"desc": "Indicates the Sum of Propagation Segment and Phase Segment 1 as specified in the standard for Nominal Bit Timing.
The actual value is one more than the value written to the register.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TS2": {"access": "read-write",
"bit_offset": "8",
"bit_range": "",
"bit_width": "4",
"desc": "Indicates the Phase Segment 2 as specified in the CANFD standard for Nominal Bit Timing.
The actual value is one more than the value written to the register.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SJW": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "4",
"desc": "Indicates the Synchronization Jump Width as specified in the CANFD standard for Nominal Bit Timing.
The actual value is one more than the value written to the register.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2685796364,
},
"ECR": {"description": "Error Count Register",
"address_offset": "0x0010",
"access": "read-only",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"TEC": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Indicates the value of Transmit Error Counter.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"REC": {"access": "read-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "8",
"desc": "Indicates the value of Recieve Error Counter.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2685796368,
},
"ESR": {"description": "Error Status Register",
"address_offset": "0x0014",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"CRCER": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates a CRC error has occurred.
1 - Indicates a CRC error has occurred.
0 - Indicates a CRC error has not occurred on the bus after the last write to this bit.
If this bit is set, writing a 1 clears it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FMER": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates an error in one of the fixed form fields in the message frame.
1 - Indicates a form error has occurred.
0 - Indicates a form error has not occurred on the bus after the last write to this bit.
If this bit is set, writing a 1 clears it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STER": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates an error if there is a stuffing violation.
1 - Indicates a stuff error has occurred.
0 - Indicates a stuff error has not occurred on the bus after the last write to this bit.
If this bit is set, writing a 1 clears it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"BERR": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates the received bit is not the same as the transmitted bit during bus communication.
1 - Indicates a bit error has occurred.
0 - Indicates a bit error has not occurred on the bus after the last write to this bit.
If this bit is set, writing a 1 clears it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ACKER": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates an acknowledgement error.
1 - Indicates an acknowledgement error has occurred.
0 - Indicates an acknowledgement error has not occurred on the bus after the last write to this bit.
If this bit is set, writing a 1 clears it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"F_CRCER": {"access": "read-write",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates CRC error occurred in Data  Phase (Fast) data rate
0 - Indicates CRC error has not occurred in Data Phase (Fast) data rate after the last write to this bit.
If this bit is set, writing a 1 clears it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"F_FMER": {"access": "read-write",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates form error occurred in Data Phase (Fast) data rate
0 - Indicates form error has not occurred in Data Phase (Fast) data rate after the last write to this bit.
If this bit is set, writing a 1 clears it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"F_STER": {"access": "read-write",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates stuff error occurred in Data Phase (Fast) data rate
0 - Indicates stuff error has not occurred in Data Phase (Fast) data rate after the last write to this bit.
If this bit is set, writing a 1 clears it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"F_BERR": {"access": "read-write",
"bit_offset": "11",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates bit error occurred in Data Phase (Fast) data rate.
0 - Indicates bit error has not occurred in Data Phase (Fast) data rate after the last write to this bit.
If this bit is set, writing a 1 clears it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2685796372,
},
"SR": {"description": "Status Register",
"address_offset": "0x0018",
"access": "read-only",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"CONFIG": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates the core is in Configuration mode.
1 - Indicates the core is in Configuration mode.
0 - Indicates the core is not in Configuration mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"LBACK": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates the core is in Loopback mode.
1 - Indicates the core is in Loopback mode.
0 - Indicates the core is not in Loopback mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SLEEP": {"access": "read-only",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates the core is in Sleep mode.
1 - Indicates the core is in Sleep mode.
0 - Indicates the core is not in Sleep mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"NORMAL": {"access": "read-only",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates the core is in Normal Mode.
1 - Indicates the core is in Normal Mode.
0 - Indicates the core is not in Normal mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"BIDLE": {"access": "read-only",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates the CAN bus status.
1 - Indicates no bus communication is taking place.
0 - Indicates the core is either in Configuration mode or the bus is busy.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"BBSY": {"access": "read-only",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates the CAN bus status.
1 - Indicates that the core is either receiving a message or transmitting a message.
0 - Indicates that the core is either in Configuration mode or the bus is idle.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ERRWRN": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates that either the Transmit Error counter or the Receive Error counter has exceeded a value of 96.
1 - One or more error counters have a value 96.
0 - Neither of the error counters has a value 96.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ESTAT": {"access": "read-only",
"bit_offset": "7",
"bit_range": "",
"bit_width": "2",
"desc": "Indicates the error status of the core.
00 - Indicates Configuration Mode (CONFIG = 1). Error State is undefined.
01 - Indicates Error Active State.
11 - Indicates Error Passive State.
10 - Indicates Bus Off State.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PEE_CONFIG": {"access": "read-only",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates the core is in PEE Mode (Bus Integration State).
When this bit is set then BBSY and NORMAL status bits in SR register does not mean anything.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"BSFR_CONFIG": {"access": "read-only",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates the core is in Bus-off Recovery Mode (Bus Integration State)
When this bit is set then BBSY and NORMAL status bits in SR register does not mean anything.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"NISO": {"access": "read-only",
"bit_offset": "11",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Core is NISO (generated with C_IS_NISO = 1)
0 - Core is ISO (generated with C_IS_NISO = 0)
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SNOOP": {"access": "read-only",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates controller is in Snoop mode provided Normal mode bit is also set in this register.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TDCV": {"access": "read-only",
"bit_offset": "16",
"bit_range": "",
"bit_width": "7",
"desc": "This field gives the position of secondary sample point (defined as sum of TDCOFF and measured delay  
for EDL to r0 fall edge from TX to RX) in CAN clocks. 
This field is for status purpose.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2685796376,
},
"ISR": {"description": "Interrupt Status Register",
"address_offset": "0x001C",
"access": "read-only",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"ARBLST": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "1 - indicates that arbitration was lost during message transmission.
This bit can be cleared by writing to the ICR.
This bit is also cleared when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TXOK": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "1 - indicates that a message was transmitted successfully.
This bit can be cleared by writing to the ICR.
This bit is also cleared when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PEE": {"access": "read-only",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "1 - indicates that the core (CANFD) has detected PEE event.
This bit can be cleared by writing to the ICR.
This bit is also cleared when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"BSFRD": {"access": "read-only",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "1 - indicates that the core recovered from Bus Off state.
This bit can be cleared by writing to the ICR.
This bit is also cleared when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXOK": {"access": "read-only",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "1 - indicates that a message was received successfully and stored into the RX FIFO.
This bit can be cleared by writing to the ICR.
This bit is also cleared when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXFOFLW": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates that a message has been lost. This condition occurs when a new message is being received and the Receive FIFO is Full.
This bit can be cleared by writing to the ICR.
This bit is also cleared when a 0 is written to the CEN bit in the SRR only valid in FIFO Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ERROR": {"access": "read-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "1 - indicates that an error occurred during message transmission or reception.
This bit can be cleared by writing to the ICR.
This bit is also cleared when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"BSOFF": {"access": "read-only",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "1 - indicates that the core entered the Bus Off state.
This bit can be cleared by writing to the ICR.
This bit is also cleared when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SLP": {"access": "read-only",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "1 - indicates that the CAN core entered Sleep mode.
This bit can be cleared by writing to the ICR.
This bit is also cleared when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"WKUP": {"access": "read-only",
"bit_offset": "11",
"bit_range": "",
"bit_width": "1",
"desc": "1 - indicates that the core entered Normal mode from Sleep Mode
This bit can be cleared by writing to the ICR.
This bit is also cleared when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXFWMFLL": {"access": "read-only",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates that Rx FIFO is full based on watermark programming.
The interrupt continues to assert as long as the RX FIFO count is above RX FIFO Full watermark.
This bit can be cleared by writing to the respective bit in ICR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TXRRS": {"access": "read-only",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates that a Buffer Ready request was cleared.
This bit can be cleared by writing to the respective bit in ICR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TXCRS": {"access": "read-only",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates that a Cancellation request was cleared.
This bit can be cleared by writing to the respective bit in ICR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXRBF": {"access": "read-only",
"bit_offset": "15",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates that a receive buffer has received a message and become full.
This bit can be cleared by writing to the respective bit in ICR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXBOFLW": {"access": "read-only",
"bit_offset": "16",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates that a message has been lost due to buffer condition. Buffer index is captured in RXBOFLW_BI field.
This bit can be cleared by writing to the respective bit in ICR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXMNF": {"access": "read-only",
"bit_offset": "17",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates that Match process did not finish until the start of 6th Bit in EOF field and frame was discarded.
This bit can be cleared by writing to the respective bit in ICR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXLRM_BI": {"access": "read-only",
"bit_offset": "18",
"bit_range": "",
"bit_width": "6",
"desc": "Gives Rx Buffer index for last received message.
This field has meaning only if RXOK bit is set in this register.
This field is cleared at hard/soft reset or when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXBOFLW_BI": {"access": "read-only",
"bit_offset": "24",
"bit_range": "",
"bit_width": "6",
"desc": "Gives Rx Buffer index for which overflow event is generated.
This field is automatically cleared to default if RXBOFLW bit is cleared in this register.
In case more than one overflow event happens (before host could clear RXBOFLW), RXBOFLW_BI will show overflow index for the last event.
This field has meaning only if Overflow interrupt RXBOFLW bit is set.
This field is also cleared at hard/soft reset or when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2685796380,
},
"IER": {"description": "Interrupt Enable Register",
"address_offset": "0x0020",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"EARBLOST": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enable interrupt generation if ARBLST bit in ISR is set.
0 - Disable interrupt generation if ARBLST bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ETXOK": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "1 = Enable interrupt generation if TXOK bit in ISR is set.
0 = Disable interrupt generation if TXOK bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EPEE": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Protocol Exception Event interrupt enable
1 - Enable interrupt generation if PEE bit in ISR is set.
0 - Disable interrupt generation if PEE bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EBSFRD": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Bus-off Recovery Done interrupt enable
1 - Enable interrupt generation if BSFRD bit in ISR is set.
0 - Disable interrupt generation if BSFRD bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ERXOK": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "New message Received interrupt enable
1 - Enable interrupt generation if RXOK bit in ISR is set.
0 - Disable interrupt generation if RXOK bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ERFXOFLW": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enable interrupt generation if RFXOFLW bit in ISR is set.
0 - Disable interrupt generation if RFXOFLW bit in ISR is set.
Only valid in FIFO Mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EERROR": {"access": "read-write",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "Error interrupt enable
1 - Enable interrupt generation if ERROR bit in ISR is set.
0 - Disable interrupt generation if ERROR bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EBSOFF": {"access": "read-write",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enable interrupt generation if BSOFF bit in ISR is set.
0 - Disable interrupt generation if BSOFF bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ESLP": {"access": "read-write",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enable interrupt generation if SLP bit in ISR is set.
0 - Disable interrupt generation if SLP bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EWKUP": {"access": "read-write",
"bit_offset": "11",
"bit_range": "",
"bit_width": "1",
"desc": "Wakeup interrupt enable
1 - Enable interrupt generation if WKUP bit in ISR is set.
0 - Disable interrupt generation if WKUP bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ERXFWMFLL": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enable interrupt generation if RXFWMFLL bit in ISR is set.
0 - Disable interrupt generation if RXFWMFLL bit in ISR is set.
Only valid in MailBox Mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ETXRRS": {"access": "read-write",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "Tx Buffer Ready Request Served Interrupt Enable
1 - Enable interrupt generation if TXRRS bit in ISR is set.
0 - Disable interrupt generation if TXRRS bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ETXCRS": {"access": "read-write",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enable interrupt generation if TXCRS bit in ISR is set.
0 - Disable interrupt generation if TXCRS bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ERXRBF": {"access": "read-write",
"bit_offset": "15",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enable interrupt generation if RXRBF bit in ISR is set.
0 - Disable interrupt generation if RXRBF bit in ISR is set.
Only valid in MailBox Mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ERXBOFLW": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "1",
"desc": "1 = Enable interrupt generation if RXBOFLW bit in ISR is set.
0 = Disable interrupt generation if RXBOFLW bit in ISR is set.
Only valid in MailBox Mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ERXMNF": {"access": "read-write",
"bit_offset": "17",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enable interrupt generation if RXMNF bit in ISR is set.
0 - Disable interrupt generation if RXMNF bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2685796384,
},
"ICR": {"description": "Interrupt Clear Register",
"address_offset": "0x0024",
"access": "write-only",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"CARBLOST": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTXOK": {"access": "write-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Clear Transmission successful interrupt.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CPEE": {"access": "write-only",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CBSFRD": {"access": "write-only",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CRXOK": {"access": "write-only",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CRFXOFLW": {"access": "write-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
only valid in FIFO Mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CERROR": {"access": "write-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CBSOFF": {"access": "write-only",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CSLP": {"access": "write-only",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CWKUP": {"access": "write-only",
"bit_offset": "11",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CRXFWMFLL": {"access": "write-only",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
Only valid in FIFO Mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTXRRS": {"access": "write-only",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTXCRS": {"access": "write-only",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CRXRBF": {"access": "write-only",
"bit_offset": "15",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
only valid in MailBox Mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CRXBOFLW": {"access": "write-only",
"bit_offset": "16",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
only valid in MailBox Mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CRXMNF": {"access": "write-only",
"bit_offset": "17",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2685796388,
},
"TSR": {"description": "Time Stamp Register",
"address_offset": "0x0028",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"CTS": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Internal free running counter is cleared to 0 when CTS=1. 
This bit only needs to be written once with a '1' to clear the counter. 
The bit will always read as '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TIMESTAMP_CNT": {"access": "read-only",
"bit_offset": "16",
"bit_range": "",
"bit_width": "16",
"desc": "This Status field gives running value of the time stamp counter. 
This  field is cleared when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2685796392,
},
"DPBRPR": {"description": "Data Phase Baud Rate Prescalar Register",
"address_offset": "0x0088",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"DP_BRP": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "These bits indicate the prescaler value for Data Bit Timing as specified in the CANFD standard.
The actual value is one more than the value written to the register.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TDCOFF": {"access": "read-write",
"bit_offset": "8",
"bit_range": "",
"bit_width": "5",
"desc": "This offset is specified in CAN clock cycles and is added to the measured transnitter delay to place the Secondary Sample Point (SSP) at appropriate position (for ex. set this to half data bit time in terms of CAN clock cycles to place SSP in the middle of the data bit).
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TDC": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables TDC function as specified in the CANFD standard
0 - TDC is disabled
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2685796488,
},
"DPBTR": {"description": "Data Phase Bit Timing Register",
"address_offset": "0x008C",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"DP_TS1": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "4",
"desc": "Indicates the Sum of Propagation Segment and Phase Segment 1 as specified in the CANFD standard for Data Bit Timing.
The actual value is one more than the value written to the register.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DP_TS2": {"access": "read-write",
"bit_offset": "8",
"bit_range": "",
"bit_width": "3",
"desc": "Indicates the Phase Segment 2 as specified in the CANFD standard for Data Bit Timing. 
The actual value is one more than the value written to the register.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DP_SJW": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "3",
"desc": "Indicates the Synchronization Jump Width as specified in the CANFD standard for Data Bit Timing. 
The actual value is one more than the value written to the register.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2685796492,
},
"TRR": {"description": "Tx Buffer Ready Request Register",
"address_offset": "0x0090",
"access": "read-write",
"size": "8",
"interface": "S_AXI_LITE",
"fields": {"RR": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "This is control bit corresponds to TBi message in Tx BRAM.
Host writes 1 to indicate buffer is ready for transmission. Core clears this bit when   Buffer transmission is completed on CAN Bus or   If core is in DAR mode, then after one transmission attempt on CAN bus [either successful or unsuccessful (i.e. arbitration lost or error)] or   If message is cancelled due to cancellation request or   Any combination of Above Host writes are ignored when this bit is 1.
Note - This register remains in reset when SNOOP mode is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2685796496,
},
"IETRS": {"description": "Interrupt Enable Tx Buffer Ready Request Served/Cleared Register",
"address_offset": "0x0094",
"access": "read-write",
"size": "8",
"interface": "S_AXI_LITE",
"fields": {"ERRS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "1 - Enables setting TXRRS bit in ISR when RRi bit in TRR register clears.
0 - TXRRS bit in ISR will not set if  RRi bit in TRR register clears.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2685796500,
},
"TCR": {"description": "Tx Buffer Cancellation Request Register",
"address_offset": "0x0098",
"access": "read-write",
"size": "8",
"interface": "S_AXI_LITE",
"fields": {"CR": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "This is cancellation request bit corresponds to RR0 bit in TRR register.
Host writes 1 to indicate cancellation request of corresponding buffer ready request (i.e. RR0 bit in TRR register). Core clears this bit when cancellation request is completed. 
Host writes to this bit are ignored if CR0 is 1 or RR0 bit of TRR register is 0.
If the buffer is already locked for transmission by Transfer Layer then cancellation is performed at the end of transmission cycle irrespective whether frame transmitted successfully or failed
i.e. if message is failed due to arbitration loss or any error, then message will be cancelled (no retransmission attempt) and cancellation request will be cleared. Alongwith RR0 bit will get cleared.
If message is transmitted successfully, then RR0 bit will clear and cancellation request will be cleared anyway.
Note : If internal buffer scheduling round is in progress, then cancellation consideration is postponed till it is over.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2685796504,
},
"IETCS": {"description": "Interrupt Enable Tx Buffer Cancellation Request Served/Cleared Register",
"address_offset": "0x009C",
"access": "read-write",
"size": "8",
"interface": "S_AXI_LITE",
"fields": {"ECRS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "1 - Enables setting TXCRS bit in ISR when CR0 bit in TCS register clears.
0 - TXCRS bit in ISR will not set if  CR0 bit in TRR register clears.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2685796508,
},
"AFR": {"description": "Acceptance Filter(control) Register",
"address_offset": "0x00E0",
"access": "read-write",
"size": "8",
"interface": "S_AXI_LITE",
"fields": {"UAF": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Enables the use of acceptance filter mask pair i.
1 - Indicates Acceptance Filter Mask Register 0 (AFMR0 or M0) and Acceptance Filter ID Register 0 (AFID0 or F0) pair is used for acceptance filtering.
0 - Indicates AFMR0 and AFID0 pair is not used for acceptance filtering.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2685796576,
},
"FSR": {"description": "Rx FIFO Status Register",
"address_offset": "0x00E8",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"RI": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "5",
"desc": "Each time IRI bit is set, core increments read index by +1 (provided FILL level is not 0) and maintained it for Host to access 
next available message.
RI = 0x0 -> Next message read starts from location = 0x1100 (to 0x1147)
RI = 0x1 -> Next message read starts from location = 0x1148 (to 0x118F)...
RI = 0x1F -> Next message read starts from location = 0x19B8 (to 0x19FF)
RI is maintained if CEN bit is cleared.
RI gets reset to 0 if soft or hard reset is asserted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRI": {"access": "write-only",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "With each Host writes setting this bit as 1, core increments Read index (RI field) by 1 and update fill level (i.e. decrement  by 1).
If FILL level is 0, setting this bit has no effect. Note that FILL level may remain unchanged when IRI is written if core is just finishing a successful receive and incrementing internal write index.
This bit always read as 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FL": {"access": "read-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "6",
"desc": "Number of stored message in Receive FIFO starting from RI index given in this register.
For example, if FL = 0x5 and RI = 0x3 then Rx FIFO has 5 messages starting from Read Index 3 (Start address 0x1190).
FL is maintained if CEN bit is cleared.
FL gets reset to 0 if soft or hard reset is asserted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2685796584,
},
"WMR": {"description": "Rx FIFO Watermark Register",
"address_offset": "0x00EC",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"RXFWM": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "5",
"desc": "RXFIFO generates FULL interrupt based on the value programmed in this field.
User should set it within (1-31) range. 
The RX FIFO Full Watermark interrupt in ISR register continues to assert as long as the RX FIFO Fill Level is above RX FIFO Full watermark.
This field can be written to only when CEN bit in SRR is '0'
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2685796588,
},
"TX_BUFFER_START": {"description": "Tx Buffer Start Address",
"address_offset": "0x0100",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {},
"memoryAddr": 2685796608,
},
"TX_BUFFER_END": {"description": "Tx Buffer End Address",
"address_offset": "0x09FC",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {},
"memoryAddr": 2685798908,
},
"RX_BUFFER_START": {"description": "Rx Buffer Start Address",
"address_offset": "0x1100",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {},
"memoryAddr": 2685800704,
},
"TX_BUFFER_END_FIFO": {"description": "Rx Buffer End Address",
"address_offset": "0x19FC",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {},
"memoryAddr": 2685803004,
},
},
"canfd_11": {"SRR": {"description": "Software Reset Register",
"address_offset": "0x0000",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"SRST": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "The software reset bit for the core.
1 - core is reset.
If a 1 is written to this bit, all the core configuration registers (including the SRR) are reset.
Reads to this bit always return a 0.
Note - After performing soft or hard reset, wait for 8 AXI Clock cycles before initiating next AXILite transaction.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CEN": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "The Enable bit for the core.
1 - The core is in Loopback, Sleep, Snoop or Normal mode depending on the LBACK, SLEEP and SNOOP bits in the MSR.
0 - The core is in the Configuration mode.
Note - If the CEN bit is changed during core operation, it is recommended to reset the core so that operations start afresh.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2685861888,
},
"MSR": {"description": "Mode Select Register",
"address_offset": "0x0004",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"SLEEP": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "The Sleep Mode request bit.
1 - Request core to be in Sleep mode.
0 - No such request.
This bit is cleared when the core wakes up from the Sleep mode.
In order for core to enter Sleep mode, LBACK and SNOOP bits in this register should be set to 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"LBACK": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "The Loop Back Mode Request bit.
1 - Request core to be in Loop Back mode.
0 - No such request.
This bit can be written to only when CEN bit in SRR is '0.'
In order for core to enter LBACK mode, SLEEP and SNOOP bits in this register should be set to '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SNOOP": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "The Snoop Mode Request bit.
1 - Request core to be in Snoop mode.
0 - No such request.
This bit can be written only when CEN bit in SRR is '0'.
The user has to make sure that SNOOP mode is programmed only after system reset or software reset.
In order for core to enter Snoop mode, LBACK and SLEEP bits in this register should be set to '0'.
The features of Snoop mode are      Core transmits recessive bits on to CAN bus     Receives messages that are transmitted by other nodes but does not ACK. Stores received messages in RxBRAM based on programmed ID filtering.     Error counters are disabled and cleared to 0. Reads to error counter register will return zero.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"BRSD": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Makes core transmit CANFD frames only in nominal bit rate (by overriding Tx Message element setting).
0 - Makes core transmit CANFD frames as per BRS bit in TX Message element.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DAR": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Disable Auto retransmission to provide single shot transmission.
0 - Auto retransmission enabled.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DPEE": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Disable Protocol Exception Event detection/generation by CANFD receiver if \"res\" bit in CANFD frame is detected as 1. 
In this case, CANFD receiver will generate Form error.
0 - PEE detection/generation is enabled.  If CANFD receiver detects \"res\" bit as 1, it will go to Bus Integration
state (PEE_config) and waits for Bus Idle condition (11 consecutive nominal recessive bits). Error counter remains unchanged.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SBR": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Start Bus-off Recovery Request.
0 - No such request.
Node stays in Bus-off state until SBR bit is set to '1' (provided ABR bit in this register is not set).
This bit can be written only when node is in Bus-off state. 
This bit auto clears after node completes the bus-off recovery or leave bus-off state due to hard/soft reset or CEN de-assertion. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ABR": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Auto Bus-off Recovery Request.
0 - No such request.
If this bit is set, node do auto bus-off recovery irrespective of SBR setting in this register.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2685861892,
},
"BRPR": {"description": "Nominal Baud Rate Prescalar Register",
"address_offset": "0x0008",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"BRP": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "These bits indicate the prescaler value. 
The actual value is one more than the value written to the register.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2685861896,
},
"BTR": {"description": "Nominal Bit Timing Register",
"address_offset": "0x000C",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"TS1": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "6",
"desc": "Indicates the Sum of Propagation Segment and Phase Segment 1 as specified in the standard for Nominal Bit Timing.
The actual value is one more than the value written to the register.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TS2": {"access": "read-write",
"bit_offset": "8",
"bit_range": "",
"bit_width": "4",
"desc": "Indicates the Phase Segment 2 as specified in the CANFD standard for Nominal Bit Timing.
The actual value is one more than the value written to the register.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SJW": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "4",
"desc": "Indicates the Synchronization Jump Width as specified in the CANFD standard for Nominal Bit Timing.
The actual value is one more than the value written to the register.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2685861900,
},
"ECR": {"description": "Error Count Register",
"address_offset": "0x0010",
"access": "read-only",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"TEC": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Indicates the value of Transmit Error Counter.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"REC": {"access": "read-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "8",
"desc": "Indicates the value of Recieve Error Counter.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2685861904,
},
"ESR": {"description": "Error Status Register",
"address_offset": "0x0014",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"CRCER": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates a CRC error has occurred.
1 - Indicates a CRC error has occurred.
0 - Indicates a CRC error has not occurred on the bus after the last write to this bit.
If this bit is set, writing a 1 clears it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FMER": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates an error in one of the fixed form fields in the message frame.
1 - Indicates a form error has occurred.
0 - Indicates a form error has not occurred on the bus after the last write to this bit.
If this bit is set, writing a 1 clears it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STER": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates an error if there is a stuffing violation.
1 - Indicates a stuff error has occurred.
0 - Indicates a stuff error has not occurred on the bus after the last write to this bit.
If this bit is set, writing a 1 clears it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"BERR": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates the received bit is not the same as the transmitted bit during bus communication.
1 - Indicates a bit error has occurred.
0 - Indicates a bit error has not occurred on the bus after the last write to this bit.
If this bit is set, writing a 1 clears it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ACKER": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates an acknowledgement error.
1 - Indicates an acknowledgement error has occurred.
0 - Indicates an acknowledgement error has not occurred on the bus after the last write to this bit.
If this bit is set, writing a 1 clears it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"F_CRCER": {"access": "read-write",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates CRC error occurred in Data  Phase (Fast) data rate
0 - Indicates CRC error has not occurred in Data Phase (Fast) data rate after the last write to this bit.
If this bit is set, writing a 1 clears it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"F_FMER": {"access": "read-write",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates form error occurred in Data Phase (Fast) data rate
0 - Indicates form error has not occurred in Data Phase (Fast) data rate after the last write to this bit.
If this bit is set, writing a 1 clears it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"F_STER": {"access": "read-write",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates stuff error occurred in Data Phase (Fast) data rate
0 - Indicates stuff error has not occurred in Data Phase (Fast) data rate after the last write to this bit.
If this bit is set, writing a 1 clears it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"F_BERR": {"access": "read-write",
"bit_offset": "11",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates bit error occurred in Data Phase (Fast) data rate.
0 - Indicates bit error has not occurred in Data Phase (Fast) data rate after the last write to this bit.
If this bit is set, writing a 1 clears it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2685861908,
},
"SR": {"description": "Status Register",
"address_offset": "0x0018",
"access": "read-only",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"CONFIG": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates the core is in Configuration mode.
1 - Indicates the core is in Configuration mode.
0 - Indicates the core is not in Configuration mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"LBACK": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates the core is in Loopback mode.
1 - Indicates the core is in Loopback mode.
0 - Indicates the core is not in Loopback mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SLEEP": {"access": "read-only",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates the core is in Sleep mode.
1 - Indicates the core is in Sleep mode.
0 - Indicates the core is not in Sleep mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"NORMAL": {"access": "read-only",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates the core is in Normal Mode.
1 - Indicates the core is in Normal Mode.
0 - Indicates the core is not in Normal mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"BIDLE": {"access": "read-only",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates the CAN bus status.
1 - Indicates no bus communication is taking place.
0 - Indicates the core is either in Configuration mode or the bus is busy.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"BBSY": {"access": "read-only",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates the CAN bus status.
1 - Indicates that the core is either receiving a message or transmitting a message.
0 - Indicates that the core is either in Configuration mode or the bus is idle.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ERRWRN": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates that either the Transmit Error counter or the Receive Error counter has exceeded a value of 96.
1 - One or more error counters have a value 96.
0 - Neither of the error counters has a value 96.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ESTAT": {"access": "read-only",
"bit_offset": "7",
"bit_range": "",
"bit_width": "2",
"desc": "Indicates the error status of the core.
00 - Indicates Configuration Mode (CONFIG = 1). Error State is undefined.
01 - Indicates Error Active State.
11 - Indicates Error Passive State.
10 - Indicates Bus Off State.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PEE_CONFIG": {"access": "read-only",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates the core is in PEE Mode (Bus Integration State).
When this bit is set then BBSY and NORMAL status bits in SR register does not mean anything.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"BSFR_CONFIG": {"access": "read-only",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates the core is in Bus-off Recovery Mode (Bus Integration State)
When this bit is set then BBSY and NORMAL status bits in SR register does not mean anything.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"NISO": {"access": "read-only",
"bit_offset": "11",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Core is NISO (generated with C_IS_NISO = 1)
0 - Core is ISO (generated with C_IS_NISO = 0)
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SNOOP": {"access": "read-only",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates controller is in Snoop mode provided Normal mode bit is also set in this register.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TDCV": {"access": "read-only",
"bit_offset": "16",
"bit_range": "",
"bit_width": "7",
"desc": "This field gives the position of secondary sample point (defined as sum of TDCOFF and measured delay  
for EDL to r0 fall edge from TX to RX) in CAN clocks. 
This field is for status purpose.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2685861912,
},
"ISR": {"description": "Interrupt Status Register",
"address_offset": "0x001C",
"access": "read-only",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"ARBLST": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "1 - indicates that arbitration was lost during message transmission.
This bit can be cleared by writing to the ICR.
This bit is also cleared when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TXOK": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "1 - indicates that a message was transmitted successfully.
This bit can be cleared by writing to the ICR.
This bit is also cleared when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PEE": {"access": "read-only",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "1 - indicates that the core (CANFD) has detected PEE event.
This bit can be cleared by writing to the ICR.
This bit is also cleared when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"BSFRD": {"access": "read-only",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "1 - indicates that the core recovered from Bus Off state.
This bit can be cleared by writing to the ICR.
This bit is also cleared when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXOK": {"access": "read-only",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "1 - indicates that a message was received successfully and stored into the RX FIFO.
This bit can be cleared by writing to the ICR.
This bit is also cleared when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXFOFLW": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates that a message has been lost. This condition occurs when a new message is being received and the Receive FIFO is Full.
This bit can be cleared by writing to the ICR.
This bit is also cleared when a 0 is written to the CEN bit in the SRR only valid in FIFO Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ERROR": {"access": "read-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "1 - indicates that an error occurred during message transmission or reception.
This bit can be cleared by writing to the ICR.
This bit is also cleared when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"BSOFF": {"access": "read-only",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "1 - indicates that the core entered the Bus Off state.
This bit can be cleared by writing to the ICR.
This bit is also cleared when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SLP": {"access": "read-only",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "1 - indicates that the CAN core entered Sleep mode.
This bit can be cleared by writing to the ICR.
This bit is also cleared when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"WKUP": {"access": "read-only",
"bit_offset": "11",
"bit_range": "",
"bit_width": "1",
"desc": "1 - indicates that the core entered Normal mode from Sleep Mode
This bit can be cleared by writing to the ICR.
This bit is also cleared when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXFWMFLL": {"access": "read-only",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates that Rx FIFO is full based on watermark programming.
The interrupt continues to assert as long as the RX FIFO count is above RX FIFO Full watermark.
This bit can be cleared by writing to the respective bit in ICR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TXRRS": {"access": "read-only",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates that a Buffer Ready request was cleared.
This bit can be cleared by writing to the respective bit in ICR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TXCRS": {"access": "read-only",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates that a Cancellation request was cleared.
This bit can be cleared by writing to the respective bit in ICR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXRBF": {"access": "read-only",
"bit_offset": "15",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates that a receive buffer has received a message and become full.
This bit can be cleared by writing to the respective bit in ICR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXBOFLW": {"access": "read-only",
"bit_offset": "16",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates that a message has been lost due to buffer condition. Buffer index is captured in RXBOFLW_BI field.
This bit can be cleared by writing to the respective bit in ICR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXMNF": {"access": "read-only",
"bit_offset": "17",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates that Match process did not finish until the start of 6th Bit in EOF field and frame was discarded.
This bit can be cleared by writing to the respective bit in ICR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXLRM_BI": {"access": "read-only",
"bit_offset": "18",
"bit_range": "",
"bit_width": "6",
"desc": "Gives Rx Buffer index for last received message.
This field has meaning only if RXOK bit is set in this register.
This field is cleared at hard/soft reset or when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXBOFLW_BI": {"access": "read-only",
"bit_offset": "24",
"bit_range": "",
"bit_width": "6",
"desc": "Gives Rx Buffer index for which overflow event is generated.
This field is automatically cleared to default if RXBOFLW bit is cleared in this register.
In case more than one overflow event happens (before host could clear RXBOFLW), RXBOFLW_BI will show overflow index for the last event.
This field has meaning only if Overflow interrupt RXBOFLW bit is set.
This field is also cleared at hard/soft reset or when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2685861916,
},
"IER": {"description": "Interrupt Enable Register",
"address_offset": "0x0020",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"EARBLOST": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enable interrupt generation if ARBLST bit in ISR is set.
0 - Disable interrupt generation if ARBLST bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ETXOK": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "1 = Enable interrupt generation if TXOK bit in ISR is set.
0 = Disable interrupt generation if TXOK bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EPEE": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Protocol Exception Event interrupt enable
1 - Enable interrupt generation if PEE bit in ISR is set.
0 - Disable interrupt generation if PEE bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EBSFRD": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Bus-off Recovery Done interrupt enable
1 - Enable interrupt generation if BSFRD bit in ISR is set.
0 - Disable interrupt generation if BSFRD bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ERXOK": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "New message Received interrupt enable
1 - Enable interrupt generation if RXOK bit in ISR is set.
0 - Disable interrupt generation if RXOK bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ERFXOFLW": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enable interrupt generation if RFXOFLW bit in ISR is set.
0 - Disable interrupt generation if RFXOFLW bit in ISR is set.
Only valid in FIFO Mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EERROR": {"access": "read-write",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "Error interrupt enable
1 - Enable interrupt generation if ERROR bit in ISR is set.
0 - Disable interrupt generation if ERROR bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EBSOFF": {"access": "read-write",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enable interrupt generation if BSOFF bit in ISR is set.
0 - Disable interrupt generation if BSOFF bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ESLP": {"access": "read-write",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enable interrupt generation if SLP bit in ISR is set.
0 - Disable interrupt generation if SLP bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EWKUP": {"access": "read-write",
"bit_offset": "11",
"bit_range": "",
"bit_width": "1",
"desc": "Wakeup interrupt enable
1 - Enable interrupt generation if WKUP bit in ISR is set.
0 - Disable interrupt generation if WKUP bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ERXFWMFLL": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enable interrupt generation if RXFWMFLL bit in ISR is set.
0 - Disable interrupt generation if RXFWMFLL bit in ISR is set.
Only valid in MailBox Mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ETXRRS": {"access": "read-write",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "Tx Buffer Ready Request Served Interrupt Enable
1 - Enable interrupt generation if TXRRS bit in ISR is set.
0 - Disable interrupt generation if TXRRS bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ETXCRS": {"access": "read-write",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enable interrupt generation if TXCRS bit in ISR is set.
0 - Disable interrupt generation if TXCRS bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ERXRBF": {"access": "read-write",
"bit_offset": "15",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enable interrupt generation if RXRBF bit in ISR is set.
0 - Disable interrupt generation if RXRBF bit in ISR is set.
Only valid in MailBox Mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ERXBOFLW": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "1",
"desc": "1 = Enable interrupt generation if RXBOFLW bit in ISR is set.
0 = Disable interrupt generation if RXBOFLW bit in ISR is set.
Only valid in MailBox Mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ERXMNF": {"access": "read-write",
"bit_offset": "17",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enable interrupt generation if RXMNF bit in ISR is set.
0 - Disable interrupt generation if RXMNF bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2685861920,
},
"ICR": {"description": "Interrupt Clear Register",
"address_offset": "0x0024",
"access": "write-only",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"CARBLOST": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTXOK": {"access": "write-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Clear Transmission successful interrupt.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CPEE": {"access": "write-only",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CBSFRD": {"access": "write-only",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CRXOK": {"access": "write-only",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CRFXOFLW": {"access": "write-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
only valid in FIFO Mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CERROR": {"access": "write-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CBSOFF": {"access": "write-only",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CSLP": {"access": "write-only",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CWKUP": {"access": "write-only",
"bit_offset": "11",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CRXFWMFLL": {"access": "write-only",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
Only valid in FIFO Mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTXRRS": {"access": "write-only",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTXCRS": {"access": "write-only",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CRXRBF": {"access": "write-only",
"bit_offset": "15",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
only valid in MailBox Mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CRXBOFLW": {"access": "write-only",
"bit_offset": "16",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
only valid in MailBox Mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CRXMNF": {"access": "write-only",
"bit_offset": "17",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2685861924,
},
"TSR": {"description": "Time Stamp Register",
"address_offset": "0x0028",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"CTS": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Internal free running counter is cleared to 0 when CTS=1. 
This bit only needs to be written once with a '1' to clear the counter. 
The bit will always read as '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TIMESTAMP_CNT": {"access": "read-only",
"bit_offset": "16",
"bit_range": "",
"bit_width": "16",
"desc": "This Status field gives running value of the time stamp counter. 
This  field is cleared when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2685861928,
},
"DPBRPR": {"description": "Data Phase Baud Rate Prescalar Register",
"address_offset": "0x0088",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"DP_BRP": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "These bits indicate the prescaler value for Data Bit Timing as specified in the CANFD standard.
The actual value is one more than the value written to the register.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TDCOFF": {"access": "read-write",
"bit_offset": "8",
"bit_range": "",
"bit_width": "5",
"desc": "This offset is specified in CAN clock cycles and is added to the measured transnitter delay to place the Secondary Sample Point (SSP) at appropriate position (for ex. set this to half data bit time in terms of CAN clock cycles to place SSP in the middle of the data bit).
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TDC": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables TDC function as specified in the CANFD standard
0 - TDC is disabled
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2685862024,
},
"DPBTR": {"description": "Data Phase Bit Timing Register",
"address_offset": "0x008C",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"DP_TS1": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "4",
"desc": "Indicates the Sum of Propagation Segment and Phase Segment 1 as specified in the CANFD standard for Data Bit Timing.
The actual value is one more than the value written to the register.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DP_TS2": {"access": "read-write",
"bit_offset": "8",
"bit_range": "",
"bit_width": "3",
"desc": "Indicates the Phase Segment 2 as specified in the CANFD standard for Data Bit Timing. 
The actual value is one more than the value written to the register.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DP_SJW": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "3",
"desc": "Indicates the Synchronization Jump Width as specified in the CANFD standard for Data Bit Timing. 
The actual value is one more than the value written to the register.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2685862028,
},
"TRR": {"description": "Tx Buffer Ready Request Register",
"address_offset": "0x0090",
"access": "read-write",
"size": "8",
"interface": "S_AXI_LITE",
"fields": {"RR": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "This is control bit corresponds to TBi message in Tx BRAM.
Host writes 1 to indicate buffer is ready for transmission. Core clears this bit when   Buffer transmission is completed on CAN Bus or   If core is in DAR mode, then after one transmission attempt on CAN bus [either successful or unsuccessful (i.e. arbitration lost or error)] or   If message is cancelled due to cancellation request or   Any combination of Above Host writes are ignored when this bit is 1.
Note - This register remains in reset when SNOOP mode is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2685862032,
},
"IETRS": {"description": "Interrupt Enable Tx Buffer Ready Request Served/Cleared Register",
"address_offset": "0x0094",
"access": "read-write",
"size": "8",
"interface": "S_AXI_LITE",
"fields": {"ERRS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "1 - Enables setting TXRRS bit in ISR when RRi bit in TRR register clears.
0 - TXRRS bit in ISR will not set if  RRi bit in TRR register clears.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2685862036,
},
"TCR": {"description": "Tx Buffer Cancellation Request Register",
"address_offset": "0x0098",
"access": "read-write",
"size": "8",
"interface": "S_AXI_LITE",
"fields": {"CR": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "This is cancellation request bit corresponds to RR0 bit in TRR register.
Host writes 1 to indicate cancellation request of corresponding buffer ready request (i.e. RR0 bit in TRR register). Core clears this bit when cancellation request is completed. 
Host writes to this bit are ignored if CR0 is 1 or RR0 bit of TRR register is 0.
If the buffer is already locked for transmission by Transfer Layer then cancellation is performed at the end of transmission cycle irrespective whether frame transmitted successfully or failed
i.e. if message is failed due to arbitration loss or any error, then message will be cancelled (no retransmission attempt) and cancellation request will be cleared. Alongwith RR0 bit will get cleared.
If message is transmitted successfully, then RR0 bit will clear and cancellation request will be cleared anyway.
Note : If internal buffer scheduling round is in progress, then cancellation consideration is postponed till it is over.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2685862040,
},
"IETCS": {"description": "Interrupt Enable Tx Buffer Cancellation Request Served/Cleared Register",
"address_offset": "0x009C",
"access": "read-write",
"size": "8",
"interface": "S_AXI_LITE",
"fields": {"ECRS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "1 - Enables setting TXCRS bit in ISR when CR0 bit in TCS register clears.
0 - TXCRS bit in ISR will not set if  CR0 bit in TRR register clears.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2685862044,
},
"AFR": {"description": "Acceptance Filter(control) Register",
"address_offset": "0x00E0",
"access": "read-write",
"size": "8",
"interface": "S_AXI_LITE",
"fields": {"UAF": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Enables the use of acceptance filter mask pair i.
1 - Indicates Acceptance Filter Mask Register 0 (AFMR0 or M0) and Acceptance Filter ID Register 0 (AFID0 or F0) pair is used for acceptance filtering.
0 - Indicates AFMR0 and AFID0 pair is not used for acceptance filtering.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2685862112,
},
"FSR": {"description": "Rx FIFO Status Register",
"address_offset": "0x00E8",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"RI": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "5",
"desc": "Each time IRI bit is set, core increments read index by +1 (provided FILL level is not 0) and maintained it for Host to access 
next available message.
RI = 0x0 -> Next message read starts from location = 0x1100 (to 0x1147)
RI = 0x1 -> Next message read starts from location = 0x1148 (to 0x118F)...
RI = 0x1F -> Next message read starts from location = 0x19B8 (to 0x19FF)
RI is maintained if CEN bit is cleared.
RI gets reset to 0 if soft or hard reset is asserted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRI": {"access": "write-only",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "With each Host writes setting this bit as 1, core increments Read index (RI field) by 1 and update fill level (i.e. decrement  by 1).
If FILL level is 0, setting this bit has no effect. Note that FILL level may remain unchanged when IRI is written if core is just finishing a successful receive and incrementing internal write index.
This bit always read as 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FL": {"access": "read-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "6",
"desc": "Number of stored message in Receive FIFO starting from RI index given in this register.
For example, if FL = 0x5 and RI = 0x3 then Rx FIFO has 5 messages starting from Read Index 3 (Start address 0x1190).
FL is maintained if CEN bit is cleared.
FL gets reset to 0 if soft or hard reset is asserted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2685862120,
},
"WMR": {"description": "Rx FIFO Watermark Register",
"address_offset": "0x00EC",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"RXFWM": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "5",
"desc": "RXFIFO generates FULL interrupt based on the value programmed in this field.
User should set it within (1-31) range. 
The RX FIFO Full Watermark interrupt in ISR register continues to assert as long as the RX FIFO Fill Level is above RX FIFO Full watermark.
This field can be written to only when CEN bit in SRR is '0'
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2685862124,
},
"TX_BUFFER_START": {"description": "Tx Buffer Start Address",
"address_offset": "0x0100",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {},
"memoryAddr": 2685862144,
},
"TX_BUFFER_END": {"description": "Tx Buffer End Address",
"address_offset": "0x09FC",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {},
"memoryAddr": 2685864444,
},
"RX_BUFFER_START": {"description": "Rx Buffer Start Address",
"address_offset": "0x1100",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {},
"memoryAddr": 2685866240,
},
"TX_BUFFER_END_FIFO": {"description": "Rx Buffer End Address",
"address_offset": "0x19FC",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {},
"memoryAddr": 2685868540,
},
},
"canfd_2": {"SRR": {"description": "Software Reset Register",
"address_offset": "0x0000",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"SRST": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "The software reset bit for the core.
1 - core is reset.
If a 1 is written to this bit, all the core configuration registers (including the SRR) are reset.
Reads to this bit always return a 0.
Note - After performing soft or hard reset, wait for 8 AXI Clock cycles before initiating next AXILite transaction.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CEN": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "The Enable bit for the core.
1 - The core is in Loopback, Sleep, Snoop or Normal mode depending on the LBACK, SLEEP and SNOOP bits in the MSR.
0 - The core is in the Configuration mode.
Note - If the CEN bit is changed during core operation, it is recommended to reset the core so that operations start afresh.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2685927424,
},
"MSR": {"description": "Mode Select Register",
"address_offset": "0x0004",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"SLEEP": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "The Sleep Mode request bit.
1 - Request core to be in Sleep mode.
0 - No such request.
This bit is cleared when the core wakes up from the Sleep mode.
In order for core to enter Sleep mode, LBACK and SNOOP bits in this register should be set to 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"LBACK": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "The Loop Back Mode Request bit.
1 - Request core to be in Loop Back mode.
0 - No such request.
This bit can be written to only when CEN bit in SRR is '0.'
In order for core to enter LBACK mode, SLEEP and SNOOP bits in this register should be set to '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SNOOP": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "The Snoop Mode Request bit.
1 - Request core to be in Snoop mode.
0 - No such request.
This bit can be written only when CEN bit in SRR is '0'.
The user has to make sure that SNOOP mode is programmed only after system reset or software reset.
In order for core to enter Snoop mode, LBACK and SLEEP bits in this register should be set to '0'.
The features of Snoop mode are      Core transmits recessive bits on to CAN bus     Receives messages that are transmitted by other nodes but does not ACK. Stores received messages in RxBRAM based on programmed ID filtering.     Error counters are disabled and cleared to 0. Reads to error counter register will return zero.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"BRSD": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Makes core transmit CANFD frames only in nominal bit rate (by overriding Tx Message element setting).
0 - Makes core transmit CANFD frames as per BRS bit in TX Message element.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DAR": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Disable Auto retransmission to provide single shot transmission.
0 - Auto retransmission enabled.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DPEE": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Disable Protocol Exception Event detection/generation by CANFD receiver if \"res\" bit in CANFD frame is detected as 1. 
In this case, CANFD receiver will generate Form error.
0 - PEE detection/generation is enabled.  If CANFD receiver detects \"res\" bit as 1, it will go to Bus Integration
state (PEE_config) and waits for Bus Idle condition (11 consecutive nominal recessive bits). Error counter remains unchanged.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SBR": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Start Bus-off Recovery Request.
0 - No such request.
Node stays in Bus-off state until SBR bit is set to '1' (provided ABR bit in this register is not set).
This bit can be written only when node is in Bus-off state. 
This bit auto clears after node completes the bus-off recovery or leave bus-off state due to hard/soft reset or CEN de-assertion. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ABR": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Auto Bus-off Recovery Request.
0 - No such request.
If this bit is set, node do auto bus-off recovery irrespective of SBR setting in this register.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2685927428,
},
"BRPR": {"description": "Nominal Baud Rate Prescalar Register",
"address_offset": "0x0008",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"BRP": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "These bits indicate the prescaler value. 
The actual value is one more than the value written to the register.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2685927432,
},
"BTR": {"description": "Nominal Bit Timing Register",
"address_offset": "0x000C",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"TS1": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "6",
"desc": "Indicates the Sum of Propagation Segment and Phase Segment 1 as specified in the standard for Nominal Bit Timing.
The actual value is one more than the value written to the register.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TS2": {"access": "read-write",
"bit_offset": "8",
"bit_range": "",
"bit_width": "4",
"desc": "Indicates the Phase Segment 2 as specified in the CANFD standard for Nominal Bit Timing.
The actual value is one more than the value written to the register.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SJW": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "4",
"desc": "Indicates the Synchronization Jump Width as specified in the CANFD standard for Nominal Bit Timing.
The actual value is one more than the value written to the register.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2685927436,
},
"ECR": {"description": "Error Count Register",
"address_offset": "0x0010",
"access": "read-only",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"TEC": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Indicates the value of Transmit Error Counter.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"REC": {"access": "read-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "8",
"desc": "Indicates the value of Recieve Error Counter.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2685927440,
},
"ESR": {"description": "Error Status Register",
"address_offset": "0x0014",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"CRCER": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates a CRC error has occurred.
1 - Indicates a CRC error has occurred.
0 - Indicates a CRC error has not occurred on the bus after the last write to this bit.
If this bit is set, writing a 1 clears it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FMER": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates an error in one of the fixed form fields in the message frame.
1 - Indicates a form error has occurred.
0 - Indicates a form error has not occurred on the bus after the last write to this bit.
If this bit is set, writing a 1 clears it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STER": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates an error if there is a stuffing violation.
1 - Indicates a stuff error has occurred.
0 - Indicates a stuff error has not occurred on the bus after the last write to this bit.
If this bit is set, writing a 1 clears it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"BERR": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates the received bit is not the same as the transmitted bit during bus communication.
1 - Indicates a bit error has occurred.
0 - Indicates a bit error has not occurred on the bus after the last write to this bit.
If this bit is set, writing a 1 clears it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ACKER": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates an acknowledgement error.
1 - Indicates an acknowledgement error has occurred.
0 - Indicates an acknowledgement error has not occurred on the bus after the last write to this bit.
If this bit is set, writing a 1 clears it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"F_CRCER": {"access": "read-write",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates CRC error occurred in Data  Phase (Fast) data rate
0 - Indicates CRC error has not occurred in Data Phase (Fast) data rate after the last write to this bit.
If this bit is set, writing a 1 clears it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"F_FMER": {"access": "read-write",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates form error occurred in Data Phase (Fast) data rate
0 - Indicates form error has not occurred in Data Phase (Fast) data rate after the last write to this bit.
If this bit is set, writing a 1 clears it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"F_STER": {"access": "read-write",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates stuff error occurred in Data Phase (Fast) data rate
0 - Indicates stuff error has not occurred in Data Phase (Fast) data rate after the last write to this bit.
If this bit is set, writing a 1 clears it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"F_BERR": {"access": "read-write",
"bit_offset": "11",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates bit error occurred in Data Phase (Fast) data rate.
0 - Indicates bit error has not occurred in Data Phase (Fast) data rate after the last write to this bit.
If this bit is set, writing a 1 clears it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2685927444,
},
"SR": {"description": "Status Register",
"address_offset": "0x0018",
"access": "read-only",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"CONFIG": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates the core is in Configuration mode.
1 - Indicates the core is in Configuration mode.
0 - Indicates the core is not in Configuration mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"LBACK": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates the core is in Loopback mode.
1 - Indicates the core is in Loopback mode.
0 - Indicates the core is not in Loopback mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SLEEP": {"access": "read-only",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates the core is in Sleep mode.
1 - Indicates the core is in Sleep mode.
0 - Indicates the core is not in Sleep mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"NORMAL": {"access": "read-only",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates the core is in Normal Mode.
1 - Indicates the core is in Normal Mode.
0 - Indicates the core is not in Normal mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"BIDLE": {"access": "read-only",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates the CAN bus status.
1 - Indicates no bus communication is taking place.
0 - Indicates the core is either in Configuration mode or the bus is busy.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"BBSY": {"access": "read-only",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates the CAN bus status.
1 - Indicates that the core is either receiving a message or transmitting a message.
0 - Indicates that the core is either in Configuration mode or the bus is idle.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ERRWRN": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates that either the Transmit Error counter or the Receive Error counter has exceeded a value of 96.
1 - One or more error counters have a value 96.
0 - Neither of the error counters has a value 96.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ESTAT": {"access": "read-only",
"bit_offset": "7",
"bit_range": "",
"bit_width": "2",
"desc": "Indicates the error status of the core.
00 - Indicates Configuration Mode (CONFIG = 1). Error State is undefined.
01 - Indicates Error Active State.
11 - Indicates Error Passive State.
10 - Indicates Bus Off State.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PEE_CONFIG": {"access": "read-only",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates the core is in PEE Mode (Bus Integration State).
When this bit is set then BBSY and NORMAL status bits in SR register does not mean anything.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"BSFR_CONFIG": {"access": "read-only",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates the core is in Bus-off Recovery Mode (Bus Integration State)
When this bit is set then BBSY and NORMAL status bits in SR register does not mean anything.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"NISO": {"access": "read-only",
"bit_offset": "11",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Core is NISO (generated with C_IS_NISO = 1)
0 - Core is ISO (generated with C_IS_NISO = 0)
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SNOOP": {"access": "read-only",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates controller is in Snoop mode provided Normal mode bit is also set in this register.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TDCV": {"access": "read-only",
"bit_offset": "16",
"bit_range": "",
"bit_width": "7",
"desc": "This field gives the position of secondary sample point (defined as sum of TDCOFF and measured delay  
for EDL to r0 fall edge from TX to RX) in CAN clocks. 
This field is for status purpose.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2685927448,
},
"ISR": {"description": "Interrupt Status Register",
"address_offset": "0x001C",
"access": "read-only",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"ARBLST": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "1 - indicates that arbitration was lost during message transmission.
This bit can be cleared by writing to the ICR.
This bit is also cleared when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TXOK": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "1 - indicates that a message was transmitted successfully.
This bit can be cleared by writing to the ICR.
This bit is also cleared when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PEE": {"access": "read-only",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "1 - indicates that the core (CANFD) has detected PEE event.
This bit can be cleared by writing to the ICR.
This bit is also cleared when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"BSFRD": {"access": "read-only",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "1 - indicates that the core recovered from Bus Off state.
This bit can be cleared by writing to the ICR.
This bit is also cleared when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXOK": {"access": "read-only",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "1 - indicates that a message was received successfully and stored into the RX FIFO.
This bit can be cleared by writing to the ICR.
This bit is also cleared when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXFOFLW": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates that a message has been lost. This condition occurs when a new message is being received and the Receive FIFO is Full.
This bit can be cleared by writing to the ICR.
This bit is also cleared when a 0 is written to the CEN bit in the SRR only valid in FIFO Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ERROR": {"access": "read-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "1 - indicates that an error occurred during message transmission or reception.
This bit can be cleared by writing to the ICR.
This bit is also cleared when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"BSOFF": {"access": "read-only",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "1 - indicates that the core entered the Bus Off state.
This bit can be cleared by writing to the ICR.
This bit is also cleared when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SLP": {"access": "read-only",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "1 - indicates that the CAN core entered Sleep mode.
This bit can be cleared by writing to the ICR.
This bit is also cleared when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"WKUP": {"access": "read-only",
"bit_offset": "11",
"bit_range": "",
"bit_width": "1",
"desc": "1 - indicates that the core entered Normal mode from Sleep Mode
This bit can be cleared by writing to the ICR.
This bit is also cleared when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXFWMFLL": {"access": "read-only",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates that Rx FIFO is full based on watermark programming.
The interrupt continues to assert as long as the RX FIFO count is above RX FIFO Full watermark.
This bit can be cleared by writing to the respective bit in ICR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TXRRS": {"access": "read-only",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates that a Buffer Ready request was cleared.
This bit can be cleared by writing to the respective bit in ICR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TXCRS": {"access": "read-only",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates that a Cancellation request was cleared.
This bit can be cleared by writing to the respective bit in ICR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXRBF": {"access": "read-only",
"bit_offset": "15",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates that a receive buffer has received a message and become full.
This bit can be cleared by writing to the respective bit in ICR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXBOFLW": {"access": "read-only",
"bit_offset": "16",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates that a message has been lost due to buffer condition. Buffer index is captured in RXBOFLW_BI field.
This bit can be cleared by writing to the respective bit in ICR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXMNF": {"access": "read-only",
"bit_offset": "17",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates that Match process did not finish until the start of 6th Bit in EOF field and frame was discarded.
This bit can be cleared by writing to the respective bit in ICR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXLRM_BI": {"access": "read-only",
"bit_offset": "18",
"bit_range": "",
"bit_width": "6",
"desc": "Gives Rx Buffer index for last received message.
This field has meaning only if RXOK bit is set in this register.
This field is cleared at hard/soft reset or when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXBOFLW_BI": {"access": "read-only",
"bit_offset": "24",
"bit_range": "",
"bit_width": "6",
"desc": "Gives Rx Buffer index for which overflow event is generated.
This field is automatically cleared to default if RXBOFLW bit is cleared in this register.
In case more than one overflow event happens (before host could clear RXBOFLW), RXBOFLW_BI will show overflow index for the last event.
This field has meaning only if Overflow interrupt RXBOFLW bit is set.
This field is also cleared at hard/soft reset or when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2685927452,
},
"IER": {"description": "Interrupt Enable Register",
"address_offset": "0x0020",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"EARBLOST": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enable interrupt generation if ARBLST bit in ISR is set.
0 - Disable interrupt generation if ARBLST bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ETXOK": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "1 = Enable interrupt generation if TXOK bit in ISR is set.
0 = Disable interrupt generation if TXOK bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EPEE": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Protocol Exception Event interrupt enable
1 - Enable interrupt generation if PEE bit in ISR is set.
0 - Disable interrupt generation if PEE bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EBSFRD": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Bus-off Recovery Done interrupt enable
1 - Enable interrupt generation if BSFRD bit in ISR is set.
0 - Disable interrupt generation if BSFRD bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ERXOK": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "New message Received interrupt enable
1 - Enable interrupt generation if RXOK bit in ISR is set.
0 - Disable interrupt generation if RXOK bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ERFXOFLW": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enable interrupt generation if RFXOFLW bit in ISR is set.
0 - Disable interrupt generation if RFXOFLW bit in ISR is set.
Only valid in FIFO Mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EERROR": {"access": "read-write",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "Error interrupt enable
1 - Enable interrupt generation if ERROR bit in ISR is set.
0 - Disable interrupt generation if ERROR bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EBSOFF": {"access": "read-write",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enable interrupt generation if BSOFF bit in ISR is set.
0 - Disable interrupt generation if BSOFF bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ESLP": {"access": "read-write",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enable interrupt generation if SLP bit in ISR is set.
0 - Disable interrupt generation if SLP bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EWKUP": {"access": "read-write",
"bit_offset": "11",
"bit_range": "",
"bit_width": "1",
"desc": "Wakeup interrupt enable
1 - Enable interrupt generation if WKUP bit in ISR is set.
0 - Disable interrupt generation if WKUP bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ERXFWMFLL": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enable interrupt generation if RXFWMFLL bit in ISR is set.
0 - Disable interrupt generation if RXFWMFLL bit in ISR is set.
Only valid in MailBox Mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ETXRRS": {"access": "read-write",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "Tx Buffer Ready Request Served Interrupt Enable
1 - Enable interrupt generation if TXRRS bit in ISR is set.
0 - Disable interrupt generation if TXRRS bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ETXCRS": {"access": "read-write",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enable interrupt generation if TXCRS bit in ISR is set.
0 - Disable interrupt generation if TXCRS bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ERXRBF": {"access": "read-write",
"bit_offset": "15",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enable interrupt generation if RXRBF bit in ISR is set.
0 - Disable interrupt generation if RXRBF bit in ISR is set.
Only valid in MailBox Mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ERXBOFLW": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "1",
"desc": "1 = Enable interrupt generation if RXBOFLW bit in ISR is set.
0 = Disable interrupt generation if RXBOFLW bit in ISR is set.
Only valid in MailBox Mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ERXMNF": {"access": "read-write",
"bit_offset": "17",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enable interrupt generation if RXMNF bit in ISR is set.
0 - Disable interrupt generation if RXMNF bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2685927456,
},
"ICR": {"description": "Interrupt Clear Register",
"address_offset": "0x0024",
"access": "write-only",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"CARBLOST": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTXOK": {"access": "write-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Clear Transmission successful interrupt.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CPEE": {"access": "write-only",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CBSFRD": {"access": "write-only",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CRXOK": {"access": "write-only",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CRFXOFLW": {"access": "write-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
only valid in FIFO Mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CERROR": {"access": "write-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CBSOFF": {"access": "write-only",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CSLP": {"access": "write-only",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CWKUP": {"access": "write-only",
"bit_offset": "11",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CRXFWMFLL": {"access": "write-only",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
Only valid in FIFO Mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTXRRS": {"access": "write-only",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTXCRS": {"access": "write-only",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CRXRBF": {"access": "write-only",
"bit_offset": "15",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
only valid in MailBox Mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CRXBOFLW": {"access": "write-only",
"bit_offset": "16",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
only valid in MailBox Mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CRXMNF": {"access": "write-only",
"bit_offset": "17",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2685927460,
},
"TSR": {"description": "Time Stamp Register",
"address_offset": "0x0028",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"CTS": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Internal free running counter is cleared to 0 when CTS=1. 
This bit only needs to be written once with a '1' to clear the counter. 
The bit will always read as '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TIMESTAMP_CNT": {"access": "read-only",
"bit_offset": "16",
"bit_range": "",
"bit_width": "16",
"desc": "This Status field gives running value of the time stamp counter. 
This  field is cleared when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2685927464,
},
"DPBRPR": {"description": "Data Phase Baud Rate Prescalar Register",
"address_offset": "0x0088",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"DP_BRP": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "These bits indicate the prescaler value for Data Bit Timing as specified in the CANFD standard.
The actual value is one more than the value written to the register.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TDCOFF": {"access": "read-write",
"bit_offset": "8",
"bit_range": "",
"bit_width": "5",
"desc": "This offset is specified in CAN clock cycles and is added to the measured transnitter delay to place the Secondary Sample Point (SSP) at appropriate position (for ex. set this to half data bit time in terms of CAN clock cycles to place SSP in the middle of the data bit).
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TDC": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables TDC function as specified in the CANFD standard
0 - TDC is disabled
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2685927560,
},
"DPBTR": {"description": "Data Phase Bit Timing Register",
"address_offset": "0x008C",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"DP_TS1": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "4",
"desc": "Indicates the Sum of Propagation Segment and Phase Segment 1 as specified in the CANFD standard for Data Bit Timing.
The actual value is one more than the value written to the register.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DP_TS2": {"access": "read-write",
"bit_offset": "8",
"bit_range": "",
"bit_width": "3",
"desc": "Indicates the Phase Segment 2 as specified in the CANFD standard for Data Bit Timing. 
The actual value is one more than the value written to the register.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DP_SJW": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "3",
"desc": "Indicates the Synchronization Jump Width as specified in the CANFD standard for Data Bit Timing. 
The actual value is one more than the value written to the register.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2685927564,
},
"TRR": {"description": "Tx Buffer Ready Request Register",
"address_offset": "0x0090",
"access": "read-write",
"size": "8",
"interface": "S_AXI_LITE",
"fields": {"RR": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "This is control bit corresponds to TBi message in Tx BRAM.
Host writes 1 to indicate buffer is ready for transmission. Core clears this bit when   Buffer transmission is completed on CAN Bus or   If core is in DAR mode, then after one transmission attempt on CAN bus [either successful or unsuccessful (i.e. arbitration lost or error)] or   If message is cancelled due to cancellation request or   Any combination of Above Host writes are ignored when this bit is 1.
Note - This register remains in reset when SNOOP mode is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2685927568,
},
"IETRS": {"description": "Interrupt Enable Tx Buffer Ready Request Served/Cleared Register",
"address_offset": "0x0094",
"access": "read-write",
"size": "8",
"interface": "S_AXI_LITE",
"fields": {"ERRS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "1 - Enables setting TXRRS bit in ISR when RRi bit in TRR register clears.
0 - TXRRS bit in ISR will not set if  RRi bit in TRR register clears.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2685927572,
},
"TCR": {"description": "Tx Buffer Cancellation Request Register",
"address_offset": "0x0098",
"access": "read-write",
"size": "8",
"interface": "S_AXI_LITE",
"fields": {"CR": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "This is cancellation request bit corresponds to RR0 bit in TRR register.
Host writes 1 to indicate cancellation request of corresponding buffer ready request (i.e. RR0 bit in TRR register). Core clears this bit when cancellation request is completed. 
Host writes to this bit are ignored if CR0 is 1 or RR0 bit of TRR register is 0.
If the buffer is already locked for transmission by Transfer Layer then cancellation is performed at the end of transmission cycle irrespective whether frame transmitted successfully or failed
i.e. if message is failed due to arbitration loss or any error, then message will be cancelled (no retransmission attempt) and cancellation request will be cleared. Alongwith RR0 bit will get cleared.
If message is transmitted successfully, then RR0 bit will clear and cancellation request will be cleared anyway.
Note : If internal buffer scheduling round is in progress, then cancellation consideration is postponed till it is over.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2685927576,
},
"IETCS": {"description": "Interrupt Enable Tx Buffer Cancellation Request Served/Cleared Register",
"address_offset": "0x009C",
"access": "read-write",
"size": "8",
"interface": "S_AXI_LITE",
"fields": {"ECRS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "1 - Enables setting TXCRS bit in ISR when CR0 bit in TCS register clears.
0 - TXCRS bit in ISR will not set if  CR0 bit in TRR register clears.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2685927580,
},
"AFR": {"description": "Acceptance Filter(control) Register",
"address_offset": "0x00E0",
"access": "read-write",
"size": "8",
"interface": "S_AXI_LITE",
"fields": {"UAF": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Enables the use of acceptance filter mask pair i.
1 - Indicates Acceptance Filter Mask Register 0 (AFMR0 or M0) and Acceptance Filter ID Register 0 (AFID0 or F0) pair is used for acceptance filtering.
0 - Indicates AFMR0 and AFID0 pair is not used for acceptance filtering.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2685927648,
},
"FSR": {"description": "Rx FIFO Status Register",
"address_offset": "0x00E8",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"RI": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "5",
"desc": "Each time IRI bit is set, core increments read index by +1 (provided FILL level is not 0) and maintained it for Host to access 
next available message.
RI = 0x0 -> Next message read starts from location = 0x1100 (to 0x1147)
RI = 0x1 -> Next message read starts from location = 0x1148 (to 0x118F)...
RI = 0x1F -> Next message read starts from location = 0x19B8 (to 0x19FF)
RI is maintained if CEN bit is cleared.
RI gets reset to 0 if soft or hard reset is asserted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRI": {"access": "write-only",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "With each Host writes setting this bit as 1, core increments Read index (RI field) by 1 and update fill level (i.e. decrement  by 1).
If FILL level is 0, setting this bit has no effect. Note that FILL level may remain unchanged when IRI is written if core is just finishing a successful receive and incrementing internal write index.
This bit always read as 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FL": {"access": "read-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "6",
"desc": "Number of stored message in Receive FIFO starting from RI index given in this register.
For example, if FL = 0x5 and RI = 0x3 then Rx FIFO has 5 messages starting from Read Index 3 (Start address 0x1190).
FL is maintained if CEN bit is cleared.
FL gets reset to 0 if soft or hard reset is asserted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2685927656,
},
"WMR": {"description": "Rx FIFO Watermark Register",
"address_offset": "0x00EC",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"RXFWM": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "5",
"desc": "RXFIFO generates FULL interrupt based on the value programmed in this field.
User should set it within (1-31) range. 
The RX FIFO Full Watermark interrupt in ISR register continues to assert as long as the RX FIFO Fill Level is above RX FIFO Full watermark.
This field can be written to only when CEN bit in SRR is '0'
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2685927660,
},
"TX_BUFFER_START": {"description": "Tx Buffer Start Address",
"address_offset": "0x0100",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {},
"memoryAddr": 2685927680,
},
"TX_BUFFER_END": {"description": "Tx Buffer End Address",
"address_offset": "0x09FC",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {},
"memoryAddr": 2685929980,
},
"RX_BUFFER_START": {"description": "Rx Buffer Start Address",
"address_offset": "0x1100",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {},
"memoryAddr": 2685931776,
},
"TX_BUFFER_END_FIFO": {"description": "Rx Buffer End Address",
"address_offset": "0x19FC",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {},
"memoryAddr": 2685934076,
},
},
"canfd_3": {"SRR": {"description": "Software Reset Register",
"address_offset": "0x0000",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"SRST": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "The software reset bit for the core.
1 - core is reset.
If a 1 is written to this bit, all the core configuration registers (including the SRR) are reset.
Reads to this bit always return a 0.
Note - After performing soft or hard reset, wait for 8 AXI Clock cycles before initiating next AXILite transaction.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CEN": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "The Enable bit for the core.
1 - The core is in Loopback, Sleep, Snoop or Normal mode depending on the LBACK, SLEEP and SNOOP bits in the MSR.
0 - The core is in the Configuration mode.
Note - If the CEN bit is changed during core operation, it is recommended to reset the core so that operations start afresh.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2685992960,
},
"MSR": {"description": "Mode Select Register",
"address_offset": "0x0004",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"SLEEP": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "The Sleep Mode request bit.
1 - Request core to be in Sleep mode.
0 - No such request.
This bit is cleared when the core wakes up from the Sleep mode.
In order for core to enter Sleep mode, LBACK and SNOOP bits in this register should be set to 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"LBACK": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "The Loop Back Mode Request bit.
1 - Request core to be in Loop Back mode.
0 - No such request.
This bit can be written to only when CEN bit in SRR is '0.'
In order for core to enter LBACK mode, SLEEP and SNOOP bits in this register should be set to '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SNOOP": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "The Snoop Mode Request bit.
1 - Request core to be in Snoop mode.
0 - No such request.
This bit can be written only when CEN bit in SRR is '0'.
The user has to make sure that SNOOP mode is programmed only after system reset or software reset.
In order for core to enter Snoop mode, LBACK and SLEEP bits in this register should be set to '0'.
The features of Snoop mode are      Core transmits recessive bits on to CAN bus     Receives messages that are transmitted by other nodes but does not ACK. Stores received messages in RxBRAM based on programmed ID filtering.     Error counters are disabled and cleared to 0. Reads to error counter register will return zero.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"BRSD": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Makes core transmit CANFD frames only in nominal bit rate (by overriding Tx Message element setting).
0 - Makes core transmit CANFD frames as per BRS bit in TX Message element.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DAR": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Disable Auto retransmission to provide single shot transmission.
0 - Auto retransmission enabled.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DPEE": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Disable Protocol Exception Event detection/generation by CANFD receiver if \"res\" bit in CANFD frame is detected as 1. 
In this case, CANFD receiver will generate Form error.
0 - PEE detection/generation is enabled.  If CANFD receiver detects \"res\" bit as 1, it will go to Bus Integration
state (PEE_config) and waits for Bus Idle condition (11 consecutive nominal recessive bits). Error counter remains unchanged.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SBR": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Start Bus-off Recovery Request.
0 - No such request.
Node stays in Bus-off state until SBR bit is set to '1' (provided ABR bit in this register is not set).
This bit can be written only when node is in Bus-off state. 
This bit auto clears after node completes the bus-off recovery or leave bus-off state due to hard/soft reset or CEN de-assertion. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ABR": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Auto Bus-off Recovery Request.
0 - No such request.
If this bit is set, node do auto bus-off recovery irrespective of SBR setting in this register.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2685992964,
},
"BRPR": {"description": "Nominal Baud Rate Prescalar Register",
"address_offset": "0x0008",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"BRP": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "These bits indicate the prescaler value. 
The actual value is one more than the value written to the register.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2685992968,
},
"BTR": {"description": "Nominal Bit Timing Register",
"address_offset": "0x000C",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"TS1": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "6",
"desc": "Indicates the Sum of Propagation Segment and Phase Segment 1 as specified in the standard for Nominal Bit Timing.
The actual value is one more than the value written to the register.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TS2": {"access": "read-write",
"bit_offset": "8",
"bit_range": "",
"bit_width": "4",
"desc": "Indicates the Phase Segment 2 as specified in the CANFD standard for Nominal Bit Timing.
The actual value is one more than the value written to the register.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SJW": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "4",
"desc": "Indicates the Synchronization Jump Width as specified in the CANFD standard for Nominal Bit Timing.
The actual value is one more than the value written to the register.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2685992972,
},
"ECR": {"description": "Error Count Register",
"address_offset": "0x0010",
"access": "read-only",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"TEC": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Indicates the value of Transmit Error Counter.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"REC": {"access": "read-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "8",
"desc": "Indicates the value of Recieve Error Counter.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2685992976,
},
"ESR": {"description": "Error Status Register",
"address_offset": "0x0014",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"CRCER": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates a CRC error has occurred.
1 - Indicates a CRC error has occurred.
0 - Indicates a CRC error has not occurred on the bus after the last write to this bit.
If this bit is set, writing a 1 clears it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FMER": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates an error in one of the fixed form fields in the message frame.
1 - Indicates a form error has occurred.
0 - Indicates a form error has not occurred on the bus after the last write to this bit.
If this bit is set, writing a 1 clears it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STER": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates an error if there is a stuffing violation.
1 - Indicates a stuff error has occurred.
0 - Indicates a stuff error has not occurred on the bus after the last write to this bit.
If this bit is set, writing a 1 clears it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"BERR": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates the received bit is not the same as the transmitted bit during bus communication.
1 - Indicates a bit error has occurred.
0 - Indicates a bit error has not occurred on the bus after the last write to this bit.
If this bit is set, writing a 1 clears it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ACKER": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates an acknowledgement error.
1 - Indicates an acknowledgement error has occurred.
0 - Indicates an acknowledgement error has not occurred on the bus after the last write to this bit.
If this bit is set, writing a 1 clears it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"F_CRCER": {"access": "read-write",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates CRC error occurred in Data  Phase (Fast) data rate
0 - Indicates CRC error has not occurred in Data Phase (Fast) data rate after the last write to this bit.
If this bit is set, writing a 1 clears it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"F_FMER": {"access": "read-write",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates form error occurred in Data Phase (Fast) data rate
0 - Indicates form error has not occurred in Data Phase (Fast) data rate after the last write to this bit.
If this bit is set, writing a 1 clears it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"F_STER": {"access": "read-write",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates stuff error occurred in Data Phase (Fast) data rate
0 - Indicates stuff error has not occurred in Data Phase (Fast) data rate after the last write to this bit.
If this bit is set, writing a 1 clears it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"F_BERR": {"access": "read-write",
"bit_offset": "11",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates bit error occurred in Data Phase (Fast) data rate.
0 - Indicates bit error has not occurred in Data Phase (Fast) data rate after the last write to this bit.
If this bit is set, writing a 1 clears it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2685992980,
},
"SR": {"description": "Status Register",
"address_offset": "0x0018",
"access": "read-only",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"CONFIG": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates the core is in Configuration mode.
1 - Indicates the core is in Configuration mode.
0 - Indicates the core is not in Configuration mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"LBACK": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates the core is in Loopback mode.
1 - Indicates the core is in Loopback mode.
0 - Indicates the core is not in Loopback mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SLEEP": {"access": "read-only",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates the core is in Sleep mode.
1 - Indicates the core is in Sleep mode.
0 - Indicates the core is not in Sleep mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"NORMAL": {"access": "read-only",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates the core is in Normal Mode.
1 - Indicates the core is in Normal Mode.
0 - Indicates the core is not in Normal mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"BIDLE": {"access": "read-only",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates the CAN bus status.
1 - Indicates no bus communication is taking place.
0 - Indicates the core is either in Configuration mode or the bus is busy.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"BBSY": {"access": "read-only",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates the CAN bus status.
1 - Indicates that the core is either receiving a message or transmitting a message.
0 - Indicates that the core is either in Configuration mode or the bus is idle.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ERRWRN": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates that either the Transmit Error counter or the Receive Error counter has exceeded a value of 96.
1 - One or more error counters have a value 96.
0 - Neither of the error counters has a value 96.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ESTAT": {"access": "read-only",
"bit_offset": "7",
"bit_range": "",
"bit_width": "2",
"desc": "Indicates the error status of the core.
00 - Indicates Configuration Mode (CONFIG = 1). Error State is undefined.
01 - Indicates Error Active State.
11 - Indicates Error Passive State.
10 - Indicates Bus Off State.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PEE_CONFIG": {"access": "read-only",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates the core is in PEE Mode (Bus Integration State).
When this bit is set then BBSY and NORMAL status bits in SR register does not mean anything.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"BSFR_CONFIG": {"access": "read-only",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates the core is in Bus-off Recovery Mode (Bus Integration State)
When this bit is set then BBSY and NORMAL status bits in SR register does not mean anything.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"NISO": {"access": "read-only",
"bit_offset": "11",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Core is NISO (generated with C_IS_NISO = 1)
0 - Core is ISO (generated with C_IS_NISO = 0)
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SNOOP": {"access": "read-only",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates controller is in Snoop mode provided Normal mode bit is also set in this register.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TDCV": {"access": "read-only",
"bit_offset": "16",
"bit_range": "",
"bit_width": "7",
"desc": "This field gives the position of secondary sample point (defined as sum of TDCOFF and measured delay  
for EDL to r0 fall edge from TX to RX) in CAN clocks. 
This field is for status purpose.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2685992984,
},
"ISR": {"description": "Interrupt Status Register",
"address_offset": "0x001C",
"access": "read-only",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"ARBLST": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "1 - indicates that arbitration was lost during message transmission.
This bit can be cleared by writing to the ICR.
This bit is also cleared when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TXOK": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "1 - indicates that a message was transmitted successfully.
This bit can be cleared by writing to the ICR.
This bit is also cleared when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PEE": {"access": "read-only",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "1 - indicates that the core (CANFD) has detected PEE event.
This bit can be cleared by writing to the ICR.
This bit is also cleared when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"BSFRD": {"access": "read-only",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "1 - indicates that the core recovered from Bus Off state.
This bit can be cleared by writing to the ICR.
This bit is also cleared when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXOK": {"access": "read-only",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "1 - indicates that a message was received successfully and stored into the RX FIFO.
This bit can be cleared by writing to the ICR.
This bit is also cleared when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXFOFLW": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates that a message has been lost. This condition occurs when a new message is being received and the Receive FIFO is Full.
This bit can be cleared by writing to the ICR.
This bit is also cleared when a 0 is written to the CEN bit in the SRR only valid in FIFO Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ERROR": {"access": "read-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "1 - indicates that an error occurred during message transmission or reception.
This bit can be cleared by writing to the ICR.
This bit is also cleared when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"BSOFF": {"access": "read-only",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "1 - indicates that the core entered the Bus Off state.
This bit can be cleared by writing to the ICR.
This bit is also cleared when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SLP": {"access": "read-only",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "1 - indicates that the CAN core entered Sleep mode.
This bit can be cleared by writing to the ICR.
This bit is also cleared when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"WKUP": {"access": "read-only",
"bit_offset": "11",
"bit_range": "",
"bit_width": "1",
"desc": "1 - indicates that the core entered Normal mode from Sleep Mode
This bit can be cleared by writing to the ICR.
This bit is also cleared when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXFWMFLL": {"access": "read-only",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates that Rx FIFO is full based on watermark programming.
The interrupt continues to assert as long as the RX FIFO count is above RX FIFO Full watermark.
This bit can be cleared by writing to the respective bit in ICR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TXRRS": {"access": "read-only",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates that a Buffer Ready request was cleared.
This bit can be cleared by writing to the respective bit in ICR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TXCRS": {"access": "read-only",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates that a Cancellation request was cleared.
This bit can be cleared by writing to the respective bit in ICR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXRBF": {"access": "read-only",
"bit_offset": "15",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates that a receive buffer has received a message and become full.
This bit can be cleared by writing to the respective bit in ICR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXBOFLW": {"access": "read-only",
"bit_offset": "16",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates that a message has been lost due to buffer condition. Buffer index is captured in RXBOFLW_BI field.
This bit can be cleared by writing to the respective bit in ICR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXMNF": {"access": "read-only",
"bit_offset": "17",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates that Match process did not finish until the start of 6th Bit in EOF field and frame was discarded.
This bit can be cleared by writing to the respective bit in ICR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXLRM_BI": {"access": "read-only",
"bit_offset": "18",
"bit_range": "",
"bit_width": "6",
"desc": "Gives Rx Buffer index for last received message.
This field has meaning only if RXOK bit is set in this register.
This field is cleared at hard/soft reset or when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXBOFLW_BI": {"access": "read-only",
"bit_offset": "24",
"bit_range": "",
"bit_width": "6",
"desc": "Gives Rx Buffer index for which overflow event is generated.
This field is automatically cleared to default if RXBOFLW bit is cleared in this register.
In case more than one overflow event happens (before host could clear RXBOFLW), RXBOFLW_BI will show overflow index for the last event.
This field has meaning only if Overflow interrupt RXBOFLW bit is set.
This field is also cleared at hard/soft reset or when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2685992988,
},
"IER": {"description": "Interrupt Enable Register",
"address_offset": "0x0020",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"EARBLOST": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enable interrupt generation if ARBLST bit in ISR is set.
0 - Disable interrupt generation if ARBLST bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ETXOK": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "1 = Enable interrupt generation if TXOK bit in ISR is set.
0 = Disable interrupt generation if TXOK bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EPEE": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Protocol Exception Event interrupt enable
1 - Enable interrupt generation if PEE bit in ISR is set.
0 - Disable interrupt generation if PEE bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EBSFRD": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Bus-off Recovery Done interrupt enable
1 - Enable interrupt generation if BSFRD bit in ISR is set.
0 - Disable interrupt generation if BSFRD bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ERXOK": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "New message Received interrupt enable
1 - Enable interrupt generation if RXOK bit in ISR is set.
0 - Disable interrupt generation if RXOK bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ERFXOFLW": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enable interrupt generation if RFXOFLW bit in ISR is set.
0 - Disable interrupt generation if RFXOFLW bit in ISR is set.
Only valid in FIFO Mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EERROR": {"access": "read-write",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "Error interrupt enable
1 - Enable interrupt generation if ERROR bit in ISR is set.
0 - Disable interrupt generation if ERROR bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EBSOFF": {"access": "read-write",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enable interrupt generation if BSOFF bit in ISR is set.
0 - Disable interrupt generation if BSOFF bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ESLP": {"access": "read-write",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enable interrupt generation if SLP bit in ISR is set.
0 - Disable interrupt generation if SLP bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EWKUP": {"access": "read-write",
"bit_offset": "11",
"bit_range": "",
"bit_width": "1",
"desc": "Wakeup interrupt enable
1 - Enable interrupt generation if WKUP bit in ISR is set.
0 - Disable interrupt generation if WKUP bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ERXFWMFLL": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enable interrupt generation if RXFWMFLL bit in ISR is set.
0 - Disable interrupt generation if RXFWMFLL bit in ISR is set.
Only valid in MailBox Mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ETXRRS": {"access": "read-write",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "Tx Buffer Ready Request Served Interrupt Enable
1 - Enable interrupt generation if TXRRS bit in ISR is set.
0 - Disable interrupt generation if TXRRS bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ETXCRS": {"access": "read-write",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enable interrupt generation if TXCRS bit in ISR is set.
0 - Disable interrupt generation if TXCRS bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ERXRBF": {"access": "read-write",
"bit_offset": "15",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enable interrupt generation if RXRBF bit in ISR is set.
0 - Disable interrupt generation if RXRBF bit in ISR is set.
Only valid in MailBox Mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ERXBOFLW": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "1",
"desc": "1 = Enable interrupt generation if RXBOFLW bit in ISR is set.
0 = Disable interrupt generation if RXBOFLW bit in ISR is set.
Only valid in MailBox Mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ERXMNF": {"access": "read-write",
"bit_offset": "17",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enable interrupt generation if RXMNF bit in ISR is set.
0 - Disable interrupt generation if RXMNF bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2685992992,
},
"ICR": {"description": "Interrupt Clear Register",
"address_offset": "0x0024",
"access": "write-only",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"CARBLOST": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTXOK": {"access": "write-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Clear Transmission successful interrupt.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CPEE": {"access": "write-only",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CBSFRD": {"access": "write-only",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CRXOK": {"access": "write-only",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CRFXOFLW": {"access": "write-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
only valid in FIFO Mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CERROR": {"access": "write-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CBSOFF": {"access": "write-only",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CSLP": {"access": "write-only",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CWKUP": {"access": "write-only",
"bit_offset": "11",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CRXFWMFLL": {"access": "write-only",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
Only valid in FIFO Mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTXRRS": {"access": "write-only",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTXCRS": {"access": "write-only",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CRXRBF": {"access": "write-only",
"bit_offset": "15",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
only valid in MailBox Mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CRXBOFLW": {"access": "write-only",
"bit_offset": "16",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
only valid in MailBox Mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CRXMNF": {"access": "write-only",
"bit_offset": "17",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2685992996,
},
"TSR": {"description": "Time Stamp Register",
"address_offset": "0x0028",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"CTS": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Internal free running counter is cleared to 0 when CTS=1. 
This bit only needs to be written once with a '1' to clear the counter. 
The bit will always read as '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TIMESTAMP_CNT": {"access": "read-only",
"bit_offset": "16",
"bit_range": "",
"bit_width": "16",
"desc": "This Status field gives running value of the time stamp counter. 
This  field is cleared when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2685993000,
},
"DPBRPR": {"description": "Data Phase Baud Rate Prescalar Register",
"address_offset": "0x0088",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"DP_BRP": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "These bits indicate the prescaler value for Data Bit Timing as specified in the CANFD standard.
The actual value is one more than the value written to the register.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TDCOFF": {"access": "read-write",
"bit_offset": "8",
"bit_range": "",
"bit_width": "5",
"desc": "This offset is specified in CAN clock cycles and is added to the measured transnitter delay to place the Secondary Sample Point (SSP) at appropriate position (for ex. set this to half data bit time in terms of CAN clock cycles to place SSP in the middle of the data bit).
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TDC": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables TDC function as specified in the CANFD standard
0 - TDC is disabled
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2685993096,
},
"DPBTR": {"description": "Data Phase Bit Timing Register",
"address_offset": "0x008C",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"DP_TS1": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "4",
"desc": "Indicates the Sum of Propagation Segment and Phase Segment 1 as specified in the CANFD standard for Data Bit Timing.
The actual value is one more than the value written to the register.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DP_TS2": {"access": "read-write",
"bit_offset": "8",
"bit_range": "",
"bit_width": "3",
"desc": "Indicates the Phase Segment 2 as specified in the CANFD standard for Data Bit Timing. 
The actual value is one more than the value written to the register.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DP_SJW": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "3",
"desc": "Indicates the Synchronization Jump Width as specified in the CANFD standard for Data Bit Timing. 
The actual value is one more than the value written to the register.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2685993100,
},
"TRR": {"description": "Tx Buffer Ready Request Register",
"address_offset": "0x0090",
"access": "read-write",
"size": "8",
"interface": "S_AXI_LITE",
"fields": {"RR": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "This is control bit corresponds to TBi message in Tx BRAM.
Host writes 1 to indicate buffer is ready for transmission. Core clears this bit when   Buffer transmission is completed on CAN Bus or   If core is in DAR mode, then after one transmission attempt on CAN bus [either successful or unsuccessful (i.e. arbitration lost or error)] or   If message is cancelled due to cancellation request or   Any combination of Above Host writes are ignored when this bit is 1.
Note - This register remains in reset when SNOOP mode is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2685993104,
},
"IETRS": {"description": "Interrupt Enable Tx Buffer Ready Request Served/Cleared Register",
"address_offset": "0x0094",
"access": "read-write",
"size": "8",
"interface": "S_AXI_LITE",
"fields": {"ERRS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "1 - Enables setting TXRRS bit in ISR when RRi bit in TRR register clears.
0 - TXRRS bit in ISR will not set if  RRi bit in TRR register clears.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2685993108,
},
"TCR": {"description": "Tx Buffer Cancellation Request Register",
"address_offset": "0x0098",
"access": "read-write",
"size": "8",
"interface": "S_AXI_LITE",
"fields": {"CR": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "This is cancellation request bit corresponds to RR0 bit in TRR register.
Host writes 1 to indicate cancellation request of corresponding buffer ready request (i.e. RR0 bit in TRR register). Core clears this bit when cancellation request is completed. 
Host writes to this bit are ignored if CR0 is 1 or RR0 bit of TRR register is 0.
If the buffer is already locked for transmission by Transfer Layer then cancellation is performed at the end of transmission cycle irrespective whether frame transmitted successfully or failed
i.e. if message is failed due to arbitration loss or any error, then message will be cancelled (no retransmission attempt) and cancellation request will be cleared. Alongwith RR0 bit will get cleared.
If message is transmitted successfully, then RR0 bit will clear and cancellation request will be cleared anyway.
Note : If internal buffer scheduling round is in progress, then cancellation consideration is postponed till it is over.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2685993112,
},
"IETCS": {"description": "Interrupt Enable Tx Buffer Cancellation Request Served/Cleared Register",
"address_offset": "0x009C",
"access": "read-write",
"size": "8",
"interface": "S_AXI_LITE",
"fields": {"ECRS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "1 - Enables setting TXCRS bit in ISR when CR0 bit in TCS register clears.
0 - TXCRS bit in ISR will not set if  CR0 bit in TRR register clears.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2685993116,
},
"AFR": {"description": "Acceptance Filter(control) Register",
"address_offset": "0x00E0",
"access": "read-write",
"size": "8",
"interface": "S_AXI_LITE",
"fields": {"UAF": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Enables the use of acceptance filter mask pair i.
1 - Indicates Acceptance Filter Mask Register 0 (AFMR0 or M0) and Acceptance Filter ID Register 0 (AFID0 or F0) pair is used for acceptance filtering.
0 - Indicates AFMR0 and AFID0 pair is not used for acceptance filtering.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2685993184,
},
"FSR": {"description": "Rx FIFO Status Register",
"address_offset": "0x00E8",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"RI": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "5",
"desc": "Each time IRI bit is set, core increments read index by +1 (provided FILL level is not 0) and maintained it for Host to access 
next available message.
RI = 0x0 -> Next message read starts from location = 0x1100 (to 0x1147)
RI = 0x1 -> Next message read starts from location = 0x1148 (to 0x118F)...
RI = 0x1F -> Next message read starts from location = 0x19B8 (to 0x19FF)
RI is maintained if CEN bit is cleared.
RI gets reset to 0 if soft or hard reset is asserted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRI": {"access": "write-only",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "With each Host writes setting this bit as 1, core increments Read index (RI field) by 1 and update fill level (i.e. decrement  by 1).
If FILL level is 0, setting this bit has no effect. Note that FILL level may remain unchanged when IRI is written if core is just finishing a successful receive and incrementing internal write index.
This bit always read as 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FL": {"access": "read-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "6",
"desc": "Number of stored message in Receive FIFO starting from RI index given in this register.
For example, if FL = 0x5 and RI = 0x3 then Rx FIFO has 5 messages starting from Read Index 3 (Start address 0x1190).
FL is maintained if CEN bit is cleared.
FL gets reset to 0 if soft or hard reset is asserted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2685993192,
},
"WMR": {"description": "Rx FIFO Watermark Register",
"address_offset": "0x00EC",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"RXFWM": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "5",
"desc": "RXFIFO generates FULL interrupt based on the value programmed in this field.
User should set it within (1-31) range. 
The RX FIFO Full Watermark interrupt in ISR register continues to assert as long as the RX FIFO Fill Level is above RX FIFO Full watermark.
This field can be written to only when CEN bit in SRR is '0'
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2685993196,
},
"TX_BUFFER_START": {"description": "Tx Buffer Start Address",
"address_offset": "0x0100",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {},
"memoryAddr": 2685993216,
},
"TX_BUFFER_END": {"description": "Tx Buffer End Address",
"address_offset": "0x09FC",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {},
"memoryAddr": 2685995516,
},
"RX_BUFFER_START": {"description": "Rx Buffer Start Address",
"address_offset": "0x1100",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {},
"memoryAddr": 2685997312,
},
"TX_BUFFER_END_FIFO": {"description": "Rx Buffer End Address",
"address_offset": "0x19FC",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {},
"memoryAddr": 2685999612,
},
},
"canfd_4": {"SRR": {"description": "Software Reset Register",
"address_offset": "0x0000",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"SRST": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "The software reset bit for the core.
1 - core is reset.
If a 1 is written to this bit, all the core configuration registers (including the SRR) are reset.
Reads to this bit always return a 0.
Note - After performing soft or hard reset, wait for 8 AXI Clock cycles before initiating next AXILite transaction.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CEN": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "The Enable bit for the core.
1 - The core is in Loopback, Sleep, Snoop or Normal mode depending on the LBACK, SLEEP and SNOOP bits in the MSR.
0 - The core is in the Configuration mode.
Note - If the CEN bit is changed during core operation, it is recommended to reset the core so that operations start afresh.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2686058496,
},
"MSR": {"description": "Mode Select Register",
"address_offset": "0x0004",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"SLEEP": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "The Sleep Mode request bit.
1 - Request core to be in Sleep mode.
0 - No such request.
This bit is cleared when the core wakes up from the Sleep mode.
In order for core to enter Sleep mode, LBACK and SNOOP bits in this register should be set to 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"LBACK": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "The Loop Back Mode Request bit.
1 - Request core to be in Loop Back mode.
0 - No such request.
This bit can be written to only when CEN bit in SRR is '0.'
In order for core to enter LBACK mode, SLEEP and SNOOP bits in this register should be set to '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SNOOP": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "The Snoop Mode Request bit.
1 - Request core to be in Snoop mode.
0 - No such request.
This bit can be written only when CEN bit in SRR is '0'.
The user has to make sure that SNOOP mode is programmed only after system reset or software reset.
In order for core to enter Snoop mode, LBACK and SLEEP bits in this register should be set to '0'.
The features of Snoop mode are      Core transmits recessive bits on to CAN bus     Receives messages that are transmitted by other nodes but does not ACK. Stores received messages in RxBRAM based on programmed ID filtering.     Error counters are disabled and cleared to 0. Reads to error counter register will return zero.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"BRSD": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Makes core transmit CANFD frames only in nominal bit rate (by overriding Tx Message element setting).
0 - Makes core transmit CANFD frames as per BRS bit in TX Message element.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DAR": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Disable Auto retransmission to provide single shot transmission.
0 - Auto retransmission enabled.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DPEE": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Disable Protocol Exception Event detection/generation by CANFD receiver if \"res\" bit in CANFD frame is detected as 1. 
In this case, CANFD receiver will generate Form error.
0 - PEE detection/generation is enabled.  If CANFD receiver detects \"res\" bit as 1, it will go to Bus Integration
state (PEE_config) and waits for Bus Idle condition (11 consecutive nominal recessive bits). Error counter remains unchanged.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SBR": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Start Bus-off Recovery Request.
0 - No such request.
Node stays in Bus-off state until SBR bit is set to '1' (provided ABR bit in this register is not set).
This bit can be written only when node is in Bus-off state. 
This bit auto clears after node completes the bus-off recovery or leave bus-off state due to hard/soft reset or CEN de-assertion. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ABR": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Auto Bus-off Recovery Request.
0 - No such request.
If this bit is set, node do auto bus-off recovery irrespective of SBR setting in this register.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2686058500,
},
"BRPR": {"description": "Nominal Baud Rate Prescalar Register",
"address_offset": "0x0008",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"BRP": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "These bits indicate the prescaler value. 
The actual value is one more than the value written to the register.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2686058504,
},
"BTR": {"description": "Nominal Bit Timing Register",
"address_offset": "0x000C",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"TS1": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "6",
"desc": "Indicates the Sum of Propagation Segment and Phase Segment 1 as specified in the standard for Nominal Bit Timing.
The actual value is one more than the value written to the register.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TS2": {"access": "read-write",
"bit_offset": "8",
"bit_range": "",
"bit_width": "4",
"desc": "Indicates the Phase Segment 2 as specified in the CANFD standard for Nominal Bit Timing.
The actual value is one more than the value written to the register.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SJW": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "4",
"desc": "Indicates the Synchronization Jump Width as specified in the CANFD standard for Nominal Bit Timing.
The actual value is one more than the value written to the register.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2686058508,
},
"ECR": {"description": "Error Count Register",
"address_offset": "0x0010",
"access": "read-only",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"TEC": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Indicates the value of Transmit Error Counter.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"REC": {"access": "read-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "8",
"desc": "Indicates the value of Recieve Error Counter.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2686058512,
},
"ESR": {"description": "Error Status Register",
"address_offset": "0x0014",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"CRCER": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates a CRC error has occurred.
1 - Indicates a CRC error has occurred.
0 - Indicates a CRC error has not occurred on the bus after the last write to this bit.
If this bit is set, writing a 1 clears it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FMER": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates an error in one of the fixed form fields in the message frame.
1 - Indicates a form error has occurred.
0 - Indicates a form error has not occurred on the bus after the last write to this bit.
If this bit is set, writing a 1 clears it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STER": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates an error if there is a stuffing violation.
1 - Indicates a stuff error has occurred.
0 - Indicates a stuff error has not occurred on the bus after the last write to this bit.
If this bit is set, writing a 1 clears it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"BERR": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates the received bit is not the same as the transmitted bit during bus communication.
1 - Indicates a bit error has occurred.
0 - Indicates a bit error has not occurred on the bus after the last write to this bit.
If this bit is set, writing a 1 clears it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ACKER": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates an acknowledgement error.
1 - Indicates an acknowledgement error has occurred.
0 - Indicates an acknowledgement error has not occurred on the bus after the last write to this bit.
If this bit is set, writing a 1 clears it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"F_CRCER": {"access": "read-write",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates CRC error occurred in Data  Phase (Fast) data rate
0 - Indicates CRC error has not occurred in Data Phase (Fast) data rate after the last write to this bit.
If this bit is set, writing a 1 clears it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"F_FMER": {"access": "read-write",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates form error occurred in Data Phase (Fast) data rate
0 - Indicates form error has not occurred in Data Phase (Fast) data rate after the last write to this bit.
If this bit is set, writing a 1 clears it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"F_STER": {"access": "read-write",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates stuff error occurred in Data Phase (Fast) data rate
0 - Indicates stuff error has not occurred in Data Phase (Fast) data rate after the last write to this bit.
If this bit is set, writing a 1 clears it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"F_BERR": {"access": "read-write",
"bit_offset": "11",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates bit error occurred in Data Phase (Fast) data rate.
0 - Indicates bit error has not occurred in Data Phase (Fast) data rate after the last write to this bit.
If this bit is set, writing a 1 clears it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2686058516,
},
"SR": {"description": "Status Register",
"address_offset": "0x0018",
"access": "read-only",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"CONFIG": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates the core is in Configuration mode.
1 - Indicates the core is in Configuration mode.
0 - Indicates the core is not in Configuration mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"LBACK": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates the core is in Loopback mode.
1 - Indicates the core is in Loopback mode.
0 - Indicates the core is not in Loopback mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SLEEP": {"access": "read-only",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates the core is in Sleep mode.
1 - Indicates the core is in Sleep mode.
0 - Indicates the core is not in Sleep mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"NORMAL": {"access": "read-only",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates the core is in Normal Mode.
1 - Indicates the core is in Normal Mode.
0 - Indicates the core is not in Normal mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"BIDLE": {"access": "read-only",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates the CAN bus status.
1 - Indicates no bus communication is taking place.
0 - Indicates the core is either in Configuration mode or the bus is busy.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"BBSY": {"access": "read-only",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates the CAN bus status.
1 - Indicates that the core is either receiving a message or transmitting a message.
0 - Indicates that the core is either in Configuration mode or the bus is idle.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ERRWRN": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates that either the Transmit Error counter or the Receive Error counter has exceeded a value of 96.
1 - One or more error counters have a value 96.
0 - Neither of the error counters has a value 96.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ESTAT": {"access": "read-only",
"bit_offset": "7",
"bit_range": "",
"bit_width": "2",
"desc": "Indicates the error status of the core.
00 - Indicates Configuration Mode (CONFIG = 1). Error State is undefined.
01 - Indicates Error Active State.
11 - Indicates Error Passive State.
10 - Indicates Bus Off State.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PEE_CONFIG": {"access": "read-only",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates the core is in PEE Mode (Bus Integration State).
When this bit is set then BBSY and NORMAL status bits in SR register does not mean anything.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"BSFR_CONFIG": {"access": "read-only",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates the core is in Bus-off Recovery Mode (Bus Integration State)
When this bit is set then BBSY and NORMAL status bits in SR register does not mean anything.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"NISO": {"access": "read-only",
"bit_offset": "11",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Core is NISO (generated with C_IS_NISO = 1)
0 - Core is ISO (generated with C_IS_NISO = 0)
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SNOOP": {"access": "read-only",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates controller is in Snoop mode provided Normal mode bit is also set in this register.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TDCV": {"access": "read-only",
"bit_offset": "16",
"bit_range": "",
"bit_width": "7",
"desc": "This field gives the position of secondary sample point (defined as sum of TDCOFF and measured delay  
for EDL to r0 fall edge from TX to RX) in CAN clocks. 
This field is for status purpose.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2686058520,
},
"ISR": {"description": "Interrupt Status Register",
"address_offset": "0x001C",
"access": "read-only",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"ARBLST": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "1 - indicates that arbitration was lost during message transmission.
This bit can be cleared by writing to the ICR.
This bit is also cleared when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TXOK": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "1 - indicates that a message was transmitted successfully.
This bit can be cleared by writing to the ICR.
This bit is also cleared when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PEE": {"access": "read-only",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "1 - indicates that the core (CANFD) has detected PEE event.
This bit can be cleared by writing to the ICR.
This bit is also cleared when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"BSFRD": {"access": "read-only",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "1 - indicates that the core recovered from Bus Off state.
This bit can be cleared by writing to the ICR.
This bit is also cleared when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXOK": {"access": "read-only",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "1 - indicates that a message was received successfully and stored into the RX FIFO.
This bit can be cleared by writing to the ICR.
This bit is also cleared when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXFOFLW": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates that a message has been lost. This condition occurs when a new message is being received and the Receive FIFO is Full.
This bit can be cleared by writing to the ICR.
This bit is also cleared when a 0 is written to the CEN bit in the SRR only valid in FIFO Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ERROR": {"access": "read-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "1 - indicates that an error occurred during message transmission or reception.
This bit can be cleared by writing to the ICR.
This bit is also cleared when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"BSOFF": {"access": "read-only",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "1 - indicates that the core entered the Bus Off state.
This bit can be cleared by writing to the ICR.
This bit is also cleared when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SLP": {"access": "read-only",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "1 - indicates that the CAN core entered Sleep mode.
This bit can be cleared by writing to the ICR.
This bit is also cleared when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"WKUP": {"access": "read-only",
"bit_offset": "11",
"bit_range": "",
"bit_width": "1",
"desc": "1 - indicates that the core entered Normal mode from Sleep Mode
This bit can be cleared by writing to the ICR.
This bit is also cleared when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXFWMFLL": {"access": "read-only",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates that Rx FIFO is full based on watermark programming.
The interrupt continues to assert as long as the RX FIFO count is above RX FIFO Full watermark.
This bit can be cleared by writing to the respective bit in ICR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TXRRS": {"access": "read-only",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates that a Buffer Ready request was cleared.
This bit can be cleared by writing to the respective bit in ICR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TXCRS": {"access": "read-only",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates that a Cancellation request was cleared.
This bit can be cleared by writing to the respective bit in ICR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXRBF": {"access": "read-only",
"bit_offset": "15",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates that a receive buffer has received a message and become full.
This bit can be cleared by writing to the respective bit in ICR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXBOFLW": {"access": "read-only",
"bit_offset": "16",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates that a message has been lost due to buffer condition. Buffer index is captured in RXBOFLW_BI field.
This bit can be cleared by writing to the respective bit in ICR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXMNF": {"access": "read-only",
"bit_offset": "17",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates that Match process did not finish until the start of 6th Bit in EOF field and frame was discarded.
This bit can be cleared by writing to the respective bit in ICR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXLRM_BI": {"access": "read-only",
"bit_offset": "18",
"bit_range": "",
"bit_width": "6",
"desc": "Gives Rx Buffer index for last received message.
This field has meaning only if RXOK bit is set in this register.
This field is cleared at hard/soft reset or when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXBOFLW_BI": {"access": "read-only",
"bit_offset": "24",
"bit_range": "",
"bit_width": "6",
"desc": "Gives Rx Buffer index for which overflow event is generated.
This field is automatically cleared to default if RXBOFLW bit is cleared in this register.
In case more than one overflow event happens (before host could clear RXBOFLW), RXBOFLW_BI will show overflow index for the last event.
This field has meaning only if Overflow interrupt RXBOFLW bit is set.
This field is also cleared at hard/soft reset or when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2686058524,
},
"IER": {"description": "Interrupt Enable Register",
"address_offset": "0x0020",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"EARBLOST": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enable interrupt generation if ARBLST bit in ISR is set.
0 - Disable interrupt generation if ARBLST bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ETXOK": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "1 = Enable interrupt generation if TXOK bit in ISR is set.
0 = Disable interrupt generation if TXOK bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EPEE": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Protocol Exception Event interrupt enable
1 - Enable interrupt generation if PEE bit in ISR is set.
0 - Disable interrupt generation if PEE bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EBSFRD": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Bus-off Recovery Done interrupt enable
1 - Enable interrupt generation if BSFRD bit in ISR is set.
0 - Disable interrupt generation if BSFRD bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ERXOK": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "New message Received interrupt enable
1 - Enable interrupt generation if RXOK bit in ISR is set.
0 - Disable interrupt generation if RXOK bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ERFXOFLW": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enable interrupt generation if RFXOFLW bit in ISR is set.
0 - Disable interrupt generation if RFXOFLW bit in ISR is set.
Only valid in FIFO Mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EERROR": {"access": "read-write",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "Error interrupt enable
1 - Enable interrupt generation if ERROR bit in ISR is set.
0 - Disable interrupt generation if ERROR bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EBSOFF": {"access": "read-write",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enable interrupt generation if BSOFF bit in ISR is set.
0 - Disable interrupt generation if BSOFF bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ESLP": {"access": "read-write",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enable interrupt generation if SLP bit in ISR is set.
0 - Disable interrupt generation if SLP bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EWKUP": {"access": "read-write",
"bit_offset": "11",
"bit_range": "",
"bit_width": "1",
"desc": "Wakeup interrupt enable
1 - Enable interrupt generation if WKUP bit in ISR is set.
0 - Disable interrupt generation if WKUP bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ERXFWMFLL": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enable interrupt generation if RXFWMFLL bit in ISR is set.
0 - Disable interrupt generation if RXFWMFLL bit in ISR is set.
Only valid in MailBox Mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ETXRRS": {"access": "read-write",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "Tx Buffer Ready Request Served Interrupt Enable
1 - Enable interrupt generation if TXRRS bit in ISR is set.
0 - Disable interrupt generation if TXRRS bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ETXCRS": {"access": "read-write",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enable interrupt generation if TXCRS bit in ISR is set.
0 - Disable interrupt generation if TXCRS bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ERXRBF": {"access": "read-write",
"bit_offset": "15",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enable interrupt generation if RXRBF bit in ISR is set.
0 - Disable interrupt generation if RXRBF bit in ISR is set.
Only valid in MailBox Mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ERXBOFLW": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "1",
"desc": "1 = Enable interrupt generation if RXBOFLW bit in ISR is set.
0 = Disable interrupt generation if RXBOFLW bit in ISR is set.
Only valid in MailBox Mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ERXMNF": {"access": "read-write",
"bit_offset": "17",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enable interrupt generation if RXMNF bit in ISR is set.
0 - Disable interrupt generation if RXMNF bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2686058528,
},
"ICR": {"description": "Interrupt Clear Register",
"address_offset": "0x0024",
"access": "write-only",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"CARBLOST": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTXOK": {"access": "write-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Clear Transmission successful interrupt.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CPEE": {"access": "write-only",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CBSFRD": {"access": "write-only",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CRXOK": {"access": "write-only",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CRFXOFLW": {"access": "write-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
only valid in FIFO Mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CERROR": {"access": "write-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CBSOFF": {"access": "write-only",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CSLP": {"access": "write-only",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CWKUP": {"access": "write-only",
"bit_offset": "11",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CRXFWMFLL": {"access": "write-only",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
Only valid in FIFO Mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTXRRS": {"access": "write-only",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTXCRS": {"access": "write-only",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CRXRBF": {"access": "write-only",
"bit_offset": "15",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
only valid in MailBox Mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CRXBOFLW": {"access": "write-only",
"bit_offset": "16",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
only valid in MailBox Mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CRXMNF": {"access": "write-only",
"bit_offset": "17",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2686058532,
},
"TSR": {"description": "Time Stamp Register",
"address_offset": "0x0028",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"CTS": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Internal free running counter is cleared to 0 when CTS=1. 
This bit only needs to be written once with a '1' to clear the counter. 
The bit will always read as '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TIMESTAMP_CNT": {"access": "read-only",
"bit_offset": "16",
"bit_range": "",
"bit_width": "16",
"desc": "This Status field gives running value of the time stamp counter. 
This  field is cleared when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2686058536,
},
"DPBRPR": {"description": "Data Phase Baud Rate Prescalar Register",
"address_offset": "0x0088",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"DP_BRP": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "These bits indicate the prescaler value for Data Bit Timing as specified in the CANFD standard.
The actual value is one more than the value written to the register.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TDCOFF": {"access": "read-write",
"bit_offset": "8",
"bit_range": "",
"bit_width": "5",
"desc": "This offset is specified in CAN clock cycles and is added to the measured transnitter delay to place the Secondary Sample Point (SSP) at appropriate position (for ex. set this to half data bit time in terms of CAN clock cycles to place SSP in the middle of the data bit).
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TDC": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables TDC function as specified in the CANFD standard
0 - TDC is disabled
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2686058632,
},
"DPBTR": {"description": "Data Phase Bit Timing Register",
"address_offset": "0x008C",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"DP_TS1": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "4",
"desc": "Indicates the Sum of Propagation Segment and Phase Segment 1 as specified in the CANFD standard for Data Bit Timing.
The actual value is one more than the value written to the register.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DP_TS2": {"access": "read-write",
"bit_offset": "8",
"bit_range": "",
"bit_width": "3",
"desc": "Indicates the Phase Segment 2 as specified in the CANFD standard for Data Bit Timing. 
The actual value is one more than the value written to the register.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DP_SJW": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "3",
"desc": "Indicates the Synchronization Jump Width as specified in the CANFD standard for Data Bit Timing. 
The actual value is one more than the value written to the register.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2686058636,
},
"TRR": {"description": "Tx Buffer Ready Request Register",
"address_offset": "0x0090",
"access": "read-write",
"size": "8",
"interface": "S_AXI_LITE",
"fields": {"RR": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "This is control bit corresponds to TBi message in Tx BRAM.
Host writes 1 to indicate buffer is ready for transmission. Core clears this bit when   Buffer transmission is completed on CAN Bus or   If core is in DAR mode, then after one transmission attempt on CAN bus [either successful or unsuccessful (i.e. arbitration lost or error)] or   If message is cancelled due to cancellation request or   Any combination of Above Host writes are ignored when this bit is 1.
Note - This register remains in reset when SNOOP mode is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2686058640,
},
"IETRS": {"description": "Interrupt Enable Tx Buffer Ready Request Served/Cleared Register",
"address_offset": "0x0094",
"access": "read-write",
"size": "8",
"interface": "S_AXI_LITE",
"fields": {"ERRS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "1 - Enables setting TXRRS bit in ISR when RRi bit in TRR register clears.
0 - TXRRS bit in ISR will not set if  RRi bit in TRR register clears.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2686058644,
},
"TCR": {"description": "Tx Buffer Cancellation Request Register",
"address_offset": "0x0098",
"access": "read-write",
"size": "8",
"interface": "S_AXI_LITE",
"fields": {"CR": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "This is cancellation request bit corresponds to RR0 bit in TRR register.
Host writes 1 to indicate cancellation request of corresponding buffer ready request (i.e. RR0 bit in TRR register). Core clears this bit when cancellation request is completed. 
Host writes to this bit are ignored if CR0 is 1 or RR0 bit of TRR register is 0.
If the buffer is already locked for transmission by Transfer Layer then cancellation is performed at the end of transmission cycle irrespective whether frame transmitted successfully or failed
i.e. if message is failed due to arbitration loss or any error, then message will be cancelled (no retransmission attempt) and cancellation request will be cleared. Alongwith RR0 bit will get cleared.
If message is transmitted successfully, then RR0 bit will clear and cancellation request will be cleared anyway.
Note : If internal buffer scheduling round is in progress, then cancellation consideration is postponed till it is over.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2686058648,
},
"IETCS": {"description": "Interrupt Enable Tx Buffer Cancellation Request Served/Cleared Register",
"address_offset": "0x009C",
"access": "read-write",
"size": "8",
"interface": "S_AXI_LITE",
"fields": {"ECRS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "1 - Enables setting TXCRS bit in ISR when CR0 bit in TCS register clears.
0 - TXCRS bit in ISR will not set if  CR0 bit in TRR register clears.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2686058652,
},
"AFR": {"description": "Acceptance Filter(control) Register",
"address_offset": "0x00E0",
"access": "read-write",
"size": "8",
"interface": "S_AXI_LITE",
"fields": {"UAF": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Enables the use of acceptance filter mask pair i.
1 - Indicates Acceptance Filter Mask Register 0 (AFMR0 or M0) and Acceptance Filter ID Register 0 (AFID0 or F0) pair is used for acceptance filtering.
0 - Indicates AFMR0 and AFID0 pair is not used for acceptance filtering.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2686058720,
},
"FSR": {"description": "Rx FIFO Status Register",
"address_offset": "0x00E8",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"RI": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "5",
"desc": "Each time IRI bit is set, core increments read index by +1 (provided FILL level is not 0) and maintained it for Host to access 
next available message.
RI = 0x0 -> Next message read starts from location = 0x1100 (to 0x1147)
RI = 0x1 -> Next message read starts from location = 0x1148 (to 0x118F)...
RI = 0x1F -> Next message read starts from location = 0x19B8 (to 0x19FF)
RI is maintained if CEN bit is cleared.
RI gets reset to 0 if soft or hard reset is asserted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRI": {"access": "write-only",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "With each Host writes setting this bit as 1, core increments Read index (RI field) by 1 and update fill level (i.e. decrement  by 1).
If FILL level is 0, setting this bit has no effect. Note that FILL level may remain unchanged when IRI is written if core is just finishing a successful receive and incrementing internal write index.
This bit always read as 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FL": {"access": "read-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "6",
"desc": "Number of stored message in Receive FIFO starting from RI index given in this register.
For example, if FL = 0x5 and RI = 0x3 then Rx FIFO has 5 messages starting from Read Index 3 (Start address 0x1190).
FL is maintained if CEN bit is cleared.
FL gets reset to 0 if soft or hard reset is asserted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2686058728,
},
"WMR": {"description": "Rx FIFO Watermark Register",
"address_offset": "0x00EC",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"RXFWM": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "5",
"desc": "RXFIFO generates FULL interrupt based on the value programmed in this field.
User should set it within (1-31) range. 
The RX FIFO Full Watermark interrupt in ISR register continues to assert as long as the RX FIFO Fill Level is above RX FIFO Full watermark.
This field can be written to only when CEN bit in SRR is '0'
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2686058732,
},
"TX_BUFFER_START": {"description": "Tx Buffer Start Address",
"address_offset": "0x0100",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {},
"memoryAddr": 2686058752,
},
"TX_BUFFER_END": {"description": "Tx Buffer End Address",
"address_offset": "0x09FC",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {},
"memoryAddr": 2686061052,
},
"RX_BUFFER_START": {"description": "Rx Buffer Start Address",
"address_offset": "0x1100",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {},
"memoryAddr": 2686062848,
},
"TX_BUFFER_END_FIFO": {"description": "Rx Buffer End Address",
"address_offset": "0x19FC",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {},
"memoryAddr": 2686065148,
},
},
"canfd_5": {"SRR": {"description": "Software Reset Register",
"address_offset": "0x0000",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"SRST": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "The software reset bit for the core.
1 - core is reset.
If a 1 is written to this bit, all the core configuration registers (including the SRR) are reset.
Reads to this bit always return a 0.
Note - After performing soft or hard reset, wait for 8 AXI Clock cycles before initiating next AXILite transaction.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CEN": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "The Enable bit for the core.
1 - The core is in Loopback, Sleep, Snoop or Normal mode depending on the LBACK, SLEEP and SNOOP bits in the MSR.
0 - The core is in the Configuration mode.
Note - If the CEN bit is changed during core operation, it is recommended to reset the core so that operations start afresh.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2686124032,
},
"MSR": {"description": "Mode Select Register",
"address_offset": "0x0004",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"SLEEP": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "The Sleep Mode request bit.
1 - Request core to be in Sleep mode.
0 - No such request.
This bit is cleared when the core wakes up from the Sleep mode.
In order for core to enter Sleep mode, LBACK and SNOOP bits in this register should be set to 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"LBACK": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "The Loop Back Mode Request bit.
1 - Request core to be in Loop Back mode.
0 - No such request.
This bit can be written to only when CEN bit in SRR is '0.'
In order for core to enter LBACK mode, SLEEP and SNOOP bits in this register should be set to '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SNOOP": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "The Snoop Mode Request bit.
1 - Request core to be in Snoop mode.
0 - No such request.
This bit can be written only when CEN bit in SRR is '0'.
The user has to make sure that SNOOP mode is programmed only after system reset or software reset.
In order for core to enter Snoop mode, LBACK and SLEEP bits in this register should be set to '0'.
The features of Snoop mode are      Core transmits recessive bits on to CAN bus     Receives messages that are transmitted by other nodes but does not ACK. Stores received messages in RxBRAM based on programmed ID filtering.     Error counters are disabled and cleared to 0. Reads to error counter register will return zero.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"BRSD": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Makes core transmit CANFD frames only in nominal bit rate (by overriding Tx Message element setting).
0 - Makes core transmit CANFD frames as per BRS bit in TX Message element.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DAR": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Disable Auto retransmission to provide single shot transmission.
0 - Auto retransmission enabled.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DPEE": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Disable Protocol Exception Event detection/generation by CANFD receiver if \"res\" bit in CANFD frame is detected as 1. 
In this case, CANFD receiver will generate Form error.
0 - PEE detection/generation is enabled.  If CANFD receiver detects \"res\" bit as 1, it will go to Bus Integration
state (PEE_config) and waits for Bus Idle condition (11 consecutive nominal recessive bits). Error counter remains unchanged.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SBR": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Start Bus-off Recovery Request.
0 - No such request.
Node stays in Bus-off state until SBR bit is set to '1' (provided ABR bit in this register is not set).
This bit can be written only when node is in Bus-off state. 
This bit auto clears after node completes the bus-off recovery or leave bus-off state due to hard/soft reset or CEN de-assertion. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ABR": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Auto Bus-off Recovery Request.
0 - No such request.
If this bit is set, node do auto bus-off recovery irrespective of SBR setting in this register.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2686124036,
},
"BRPR": {"description": "Nominal Baud Rate Prescalar Register",
"address_offset": "0x0008",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"BRP": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "These bits indicate the prescaler value. 
The actual value is one more than the value written to the register.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2686124040,
},
"BTR": {"description": "Nominal Bit Timing Register",
"address_offset": "0x000C",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"TS1": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "6",
"desc": "Indicates the Sum of Propagation Segment and Phase Segment 1 as specified in the standard for Nominal Bit Timing.
The actual value is one more than the value written to the register.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TS2": {"access": "read-write",
"bit_offset": "8",
"bit_range": "",
"bit_width": "4",
"desc": "Indicates the Phase Segment 2 as specified in the CANFD standard for Nominal Bit Timing.
The actual value is one more than the value written to the register.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SJW": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "4",
"desc": "Indicates the Synchronization Jump Width as specified in the CANFD standard for Nominal Bit Timing.
The actual value is one more than the value written to the register.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2686124044,
},
"ECR": {"description": "Error Count Register",
"address_offset": "0x0010",
"access": "read-only",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"TEC": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Indicates the value of Transmit Error Counter.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"REC": {"access": "read-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "8",
"desc": "Indicates the value of Recieve Error Counter.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2686124048,
},
"ESR": {"description": "Error Status Register",
"address_offset": "0x0014",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"CRCER": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates a CRC error has occurred.
1 - Indicates a CRC error has occurred.
0 - Indicates a CRC error has not occurred on the bus after the last write to this bit.
If this bit is set, writing a 1 clears it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FMER": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates an error in one of the fixed form fields in the message frame.
1 - Indicates a form error has occurred.
0 - Indicates a form error has not occurred on the bus after the last write to this bit.
If this bit is set, writing a 1 clears it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STER": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates an error if there is a stuffing violation.
1 - Indicates a stuff error has occurred.
0 - Indicates a stuff error has not occurred on the bus after the last write to this bit.
If this bit is set, writing a 1 clears it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"BERR": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates the received bit is not the same as the transmitted bit during bus communication.
1 - Indicates a bit error has occurred.
0 - Indicates a bit error has not occurred on the bus after the last write to this bit.
If this bit is set, writing a 1 clears it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ACKER": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates an acknowledgement error.
1 - Indicates an acknowledgement error has occurred.
0 - Indicates an acknowledgement error has not occurred on the bus after the last write to this bit.
If this bit is set, writing a 1 clears it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"F_CRCER": {"access": "read-write",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates CRC error occurred in Data  Phase (Fast) data rate
0 - Indicates CRC error has not occurred in Data Phase (Fast) data rate after the last write to this bit.
If this bit is set, writing a 1 clears it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"F_FMER": {"access": "read-write",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates form error occurred in Data Phase (Fast) data rate
0 - Indicates form error has not occurred in Data Phase (Fast) data rate after the last write to this bit.
If this bit is set, writing a 1 clears it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"F_STER": {"access": "read-write",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates stuff error occurred in Data Phase (Fast) data rate
0 - Indicates stuff error has not occurred in Data Phase (Fast) data rate after the last write to this bit.
If this bit is set, writing a 1 clears it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"F_BERR": {"access": "read-write",
"bit_offset": "11",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates bit error occurred in Data Phase (Fast) data rate.
0 - Indicates bit error has not occurred in Data Phase (Fast) data rate after the last write to this bit.
If this bit is set, writing a 1 clears it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2686124052,
},
"SR": {"description": "Status Register",
"address_offset": "0x0018",
"access": "read-only",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"CONFIG": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates the core is in Configuration mode.
1 - Indicates the core is in Configuration mode.
0 - Indicates the core is not in Configuration mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"LBACK": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates the core is in Loopback mode.
1 - Indicates the core is in Loopback mode.
0 - Indicates the core is not in Loopback mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SLEEP": {"access": "read-only",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates the core is in Sleep mode.
1 - Indicates the core is in Sleep mode.
0 - Indicates the core is not in Sleep mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"NORMAL": {"access": "read-only",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates the core is in Normal Mode.
1 - Indicates the core is in Normal Mode.
0 - Indicates the core is not in Normal mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"BIDLE": {"access": "read-only",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates the CAN bus status.
1 - Indicates no bus communication is taking place.
0 - Indicates the core is either in Configuration mode or the bus is busy.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"BBSY": {"access": "read-only",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates the CAN bus status.
1 - Indicates that the core is either receiving a message or transmitting a message.
0 - Indicates that the core is either in Configuration mode or the bus is idle.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ERRWRN": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates that either the Transmit Error counter or the Receive Error counter has exceeded a value of 96.
1 - One or more error counters have a value 96.
0 - Neither of the error counters has a value 96.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ESTAT": {"access": "read-only",
"bit_offset": "7",
"bit_range": "",
"bit_width": "2",
"desc": "Indicates the error status of the core.
00 - Indicates Configuration Mode (CONFIG = 1). Error State is undefined.
01 - Indicates Error Active State.
11 - Indicates Error Passive State.
10 - Indicates Bus Off State.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PEE_CONFIG": {"access": "read-only",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates the core is in PEE Mode (Bus Integration State).
When this bit is set then BBSY and NORMAL status bits in SR register does not mean anything.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"BSFR_CONFIG": {"access": "read-only",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates the core is in Bus-off Recovery Mode (Bus Integration State)
When this bit is set then BBSY and NORMAL status bits in SR register does not mean anything.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"NISO": {"access": "read-only",
"bit_offset": "11",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Core is NISO (generated with C_IS_NISO = 1)
0 - Core is ISO (generated with C_IS_NISO = 0)
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SNOOP": {"access": "read-only",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates controller is in Snoop mode provided Normal mode bit is also set in this register.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TDCV": {"access": "read-only",
"bit_offset": "16",
"bit_range": "",
"bit_width": "7",
"desc": "This field gives the position of secondary sample point (defined as sum of TDCOFF and measured delay  
for EDL to r0 fall edge from TX to RX) in CAN clocks. 
This field is for status purpose.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2686124056,
},
"ISR": {"description": "Interrupt Status Register",
"address_offset": "0x001C",
"access": "read-only",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"ARBLST": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "1 - indicates that arbitration was lost during message transmission.
This bit can be cleared by writing to the ICR.
This bit is also cleared when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TXOK": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "1 - indicates that a message was transmitted successfully.
This bit can be cleared by writing to the ICR.
This bit is also cleared when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PEE": {"access": "read-only",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "1 - indicates that the core (CANFD) has detected PEE event.
This bit can be cleared by writing to the ICR.
This bit is also cleared when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"BSFRD": {"access": "read-only",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "1 - indicates that the core recovered from Bus Off state.
This bit can be cleared by writing to the ICR.
This bit is also cleared when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXOK": {"access": "read-only",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "1 - indicates that a message was received successfully and stored into the RX FIFO.
This bit can be cleared by writing to the ICR.
This bit is also cleared when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXFOFLW": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates that a message has been lost. This condition occurs when a new message is being received and the Receive FIFO is Full.
This bit can be cleared by writing to the ICR.
This bit is also cleared when a 0 is written to the CEN bit in the SRR only valid in FIFO Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ERROR": {"access": "read-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "1 - indicates that an error occurred during message transmission or reception.
This bit can be cleared by writing to the ICR.
This bit is also cleared when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"BSOFF": {"access": "read-only",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "1 - indicates that the core entered the Bus Off state.
This bit can be cleared by writing to the ICR.
This bit is also cleared when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SLP": {"access": "read-only",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "1 - indicates that the CAN core entered Sleep mode.
This bit can be cleared by writing to the ICR.
This bit is also cleared when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"WKUP": {"access": "read-only",
"bit_offset": "11",
"bit_range": "",
"bit_width": "1",
"desc": "1 - indicates that the core entered Normal mode from Sleep Mode
This bit can be cleared by writing to the ICR.
This bit is also cleared when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXFWMFLL": {"access": "read-only",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates that Rx FIFO is full based on watermark programming.
The interrupt continues to assert as long as the RX FIFO count is above RX FIFO Full watermark.
This bit can be cleared by writing to the respective bit in ICR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TXRRS": {"access": "read-only",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates that a Buffer Ready request was cleared.
This bit can be cleared by writing to the respective bit in ICR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TXCRS": {"access": "read-only",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates that a Cancellation request was cleared.
This bit can be cleared by writing to the respective bit in ICR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXRBF": {"access": "read-only",
"bit_offset": "15",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates that a receive buffer has received a message and become full.
This bit can be cleared by writing to the respective bit in ICR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXBOFLW": {"access": "read-only",
"bit_offset": "16",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates that a message has been lost due to buffer condition. Buffer index is captured in RXBOFLW_BI field.
This bit can be cleared by writing to the respective bit in ICR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXMNF": {"access": "read-only",
"bit_offset": "17",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates that Match process did not finish until the start of 6th Bit in EOF field and frame was discarded.
This bit can be cleared by writing to the respective bit in ICR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXLRM_BI": {"access": "read-only",
"bit_offset": "18",
"bit_range": "",
"bit_width": "6",
"desc": "Gives Rx Buffer index for last received message.
This field has meaning only if RXOK bit is set in this register.
This field is cleared at hard/soft reset or when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXBOFLW_BI": {"access": "read-only",
"bit_offset": "24",
"bit_range": "",
"bit_width": "6",
"desc": "Gives Rx Buffer index for which overflow event is generated.
This field is automatically cleared to default if RXBOFLW bit is cleared in this register.
In case more than one overflow event happens (before host could clear RXBOFLW), RXBOFLW_BI will show overflow index for the last event.
This field has meaning only if Overflow interrupt RXBOFLW bit is set.
This field is also cleared at hard/soft reset or when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2686124060,
},
"IER": {"description": "Interrupt Enable Register",
"address_offset": "0x0020",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"EARBLOST": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enable interrupt generation if ARBLST bit in ISR is set.
0 - Disable interrupt generation if ARBLST bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ETXOK": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "1 = Enable interrupt generation if TXOK bit in ISR is set.
0 = Disable interrupt generation if TXOK bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EPEE": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Protocol Exception Event interrupt enable
1 - Enable interrupt generation if PEE bit in ISR is set.
0 - Disable interrupt generation if PEE bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EBSFRD": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Bus-off Recovery Done interrupt enable
1 - Enable interrupt generation if BSFRD bit in ISR is set.
0 - Disable interrupt generation if BSFRD bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ERXOK": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "New message Received interrupt enable
1 - Enable interrupt generation if RXOK bit in ISR is set.
0 - Disable interrupt generation if RXOK bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ERFXOFLW": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enable interrupt generation if RFXOFLW bit in ISR is set.
0 - Disable interrupt generation if RFXOFLW bit in ISR is set.
Only valid in FIFO Mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EERROR": {"access": "read-write",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "Error interrupt enable
1 - Enable interrupt generation if ERROR bit in ISR is set.
0 - Disable interrupt generation if ERROR bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EBSOFF": {"access": "read-write",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enable interrupt generation if BSOFF bit in ISR is set.
0 - Disable interrupt generation if BSOFF bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ESLP": {"access": "read-write",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enable interrupt generation if SLP bit in ISR is set.
0 - Disable interrupt generation if SLP bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EWKUP": {"access": "read-write",
"bit_offset": "11",
"bit_range": "",
"bit_width": "1",
"desc": "Wakeup interrupt enable
1 - Enable interrupt generation if WKUP bit in ISR is set.
0 - Disable interrupt generation if WKUP bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ERXFWMFLL": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enable interrupt generation if RXFWMFLL bit in ISR is set.
0 - Disable interrupt generation if RXFWMFLL bit in ISR is set.
Only valid in MailBox Mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ETXRRS": {"access": "read-write",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "Tx Buffer Ready Request Served Interrupt Enable
1 - Enable interrupt generation if TXRRS bit in ISR is set.
0 - Disable interrupt generation if TXRRS bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ETXCRS": {"access": "read-write",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enable interrupt generation if TXCRS bit in ISR is set.
0 - Disable interrupt generation if TXCRS bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ERXRBF": {"access": "read-write",
"bit_offset": "15",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enable interrupt generation if RXRBF bit in ISR is set.
0 - Disable interrupt generation if RXRBF bit in ISR is set.
Only valid in MailBox Mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ERXBOFLW": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "1",
"desc": "1 = Enable interrupt generation if RXBOFLW bit in ISR is set.
0 = Disable interrupt generation if RXBOFLW bit in ISR is set.
Only valid in MailBox Mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ERXMNF": {"access": "read-write",
"bit_offset": "17",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enable interrupt generation if RXMNF bit in ISR is set.
0 - Disable interrupt generation if RXMNF bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2686124064,
},
"ICR": {"description": "Interrupt Clear Register",
"address_offset": "0x0024",
"access": "write-only",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"CARBLOST": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTXOK": {"access": "write-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Clear Transmission successful interrupt.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CPEE": {"access": "write-only",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CBSFRD": {"access": "write-only",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CRXOK": {"access": "write-only",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CRFXOFLW": {"access": "write-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
only valid in FIFO Mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CERROR": {"access": "write-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CBSOFF": {"access": "write-only",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CSLP": {"access": "write-only",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CWKUP": {"access": "write-only",
"bit_offset": "11",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CRXFWMFLL": {"access": "write-only",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
Only valid in FIFO Mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTXRRS": {"access": "write-only",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTXCRS": {"access": "write-only",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CRXRBF": {"access": "write-only",
"bit_offset": "15",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
only valid in MailBox Mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CRXBOFLW": {"access": "write-only",
"bit_offset": "16",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
only valid in MailBox Mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CRXMNF": {"access": "write-only",
"bit_offset": "17",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2686124068,
},
"TSR": {"description": "Time Stamp Register",
"address_offset": "0x0028",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"CTS": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Internal free running counter is cleared to 0 when CTS=1. 
This bit only needs to be written once with a '1' to clear the counter. 
The bit will always read as '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TIMESTAMP_CNT": {"access": "read-only",
"bit_offset": "16",
"bit_range": "",
"bit_width": "16",
"desc": "This Status field gives running value of the time stamp counter. 
This  field is cleared when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2686124072,
},
"DPBRPR": {"description": "Data Phase Baud Rate Prescalar Register",
"address_offset": "0x0088",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"DP_BRP": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "These bits indicate the prescaler value for Data Bit Timing as specified in the CANFD standard.
The actual value is one more than the value written to the register.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TDCOFF": {"access": "read-write",
"bit_offset": "8",
"bit_range": "",
"bit_width": "5",
"desc": "This offset is specified in CAN clock cycles and is added to the measured transnitter delay to place the Secondary Sample Point (SSP) at appropriate position (for ex. set this to half data bit time in terms of CAN clock cycles to place SSP in the middle of the data bit).
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TDC": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables TDC function as specified in the CANFD standard
0 - TDC is disabled
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2686124168,
},
"DPBTR": {"description": "Data Phase Bit Timing Register",
"address_offset": "0x008C",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"DP_TS1": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "4",
"desc": "Indicates the Sum of Propagation Segment and Phase Segment 1 as specified in the CANFD standard for Data Bit Timing.
The actual value is one more than the value written to the register.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DP_TS2": {"access": "read-write",
"bit_offset": "8",
"bit_range": "",
"bit_width": "3",
"desc": "Indicates the Phase Segment 2 as specified in the CANFD standard for Data Bit Timing. 
The actual value is one more than the value written to the register.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DP_SJW": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "3",
"desc": "Indicates the Synchronization Jump Width as specified in the CANFD standard for Data Bit Timing. 
The actual value is one more than the value written to the register.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2686124172,
},
"TRR": {"description": "Tx Buffer Ready Request Register",
"address_offset": "0x0090",
"access": "read-write",
"size": "8",
"interface": "S_AXI_LITE",
"fields": {"RR": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "This is control bit corresponds to TBi message in Tx BRAM.
Host writes 1 to indicate buffer is ready for transmission. Core clears this bit when   Buffer transmission is completed on CAN Bus or   If core is in DAR mode, then after one transmission attempt on CAN bus [either successful or unsuccessful (i.e. arbitration lost or error)] or   If message is cancelled due to cancellation request or   Any combination of Above Host writes are ignored when this bit is 1.
Note - This register remains in reset when SNOOP mode is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2686124176,
},
"IETRS": {"description": "Interrupt Enable Tx Buffer Ready Request Served/Cleared Register",
"address_offset": "0x0094",
"access": "read-write",
"size": "8",
"interface": "S_AXI_LITE",
"fields": {"ERRS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "1 - Enables setting TXRRS bit in ISR when RRi bit in TRR register clears.
0 - TXRRS bit in ISR will not set if  RRi bit in TRR register clears.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2686124180,
},
"TCR": {"description": "Tx Buffer Cancellation Request Register",
"address_offset": "0x0098",
"access": "read-write",
"size": "8",
"interface": "S_AXI_LITE",
"fields": {"CR": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "This is cancellation request bit corresponds to RR0 bit in TRR register.
Host writes 1 to indicate cancellation request of corresponding buffer ready request (i.e. RR0 bit in TRR register). Core clears this bit when cancellation request is completed. 
Host writes to this bit are ignored if CR0 is 1 or RR0 bit of TRR register is 0.
If the buffer is already locked for transmission by Transfer Layer then cancellation is performed at the end of transmission cycle irrespective whether frame transmitted successfully or failed
i.e. if message is failed due to arbitration loss or any error, then message will be cancelled (no retransmission attempt) and cancellation request will be cleared. Alongwith RR0 bit will get cleared.
If message is transmitted successfully, then RR0 bit will clear and cancellation request will be cleared anyway.
Note : If internal buffer scheduling round is in progress, then cancellation consideration is postponed till it is over.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2686124184,
},
"IETCS": {"description": "Interrupt Enable Tx Buffer Cancellation Request Served/Cleared Register",
"address_offset": "0x009C",
"access": "read-write",
"size": "8",
"interface": "S_AXI_LITE",
"fields": {"ECRS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "1 - Enables setting TXCRS bit in ISR when CR0 bit in TCS register clears.
0 - TXCRS bit in ISR will not set if  CR0 bit in TRR register clears.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2686124188,
},
"AFR": {"description": "Acceptance Filter(control) Register",
"address_offset": "0x00E0",
"access": "read-write",
"size": "8",
"interface": "S_AXI_LITE",
"fields": {"UAF": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Enables the use of acceptance filter mask pair i.
1 - Indicates Acceptance Filter Mask Register 0 (AFMR0 or M0) and Acceptance Filter ID Register 0 (AFID0 or F0) pair is used for acceptance filtering.
0 - Indicates AFMR0 and AFID0 pair is not used for acceptance filtering.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2686124256,
},
"FSR": {"description": "Rx FIFO Status Register",
"address_offset": "0x00E8",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"RI": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "5",
"desc": "Each time IRI bit is set, core increments read index by +1 (provided FILL level is not 0) and maintained it for Host to access 
next available message.
RI = 0x0 -> Next message read starts from location = 0x1100 (to 0x1147)
RI = 0x1 -> Next message read starts from location = 0x1148 (to 0x118F)...
RI = 0x1F -> Next message read starts from location = 0x19B8 (to 0x19FF)
RI is maintained if CEN bit is cleared.
RI gets reset to 0 if soft or hard reset is asserted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRI": {"access": "write-only",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "With each Host writes setting this bit as 1, core increments Read index (RI field) by 1 and update fill level (i.e. decrement  by 1).
If FILL level is 0, setting this bit has no effect. Note that FILL level may remain unchanged when IRI is written if core is just finishing a successful receive and incrementing internal write index.
This bit always read as 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FL": {"access": "read-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "6",
"desc": "Number of stored message in Receive FIFO starting from RI index given in this register.
For example, if FL = 0x5 and RI = 0x3 then Rx FIFO has 5 messages starting from Read Index 3 (Start address 0x1190).
FL is maintained if CEN bit is cleared.
FL gets reset to 0 if soft or hard reset is asserted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2686124264,
},
"WMR": {"description": "Rx FIFO Watermark Register",
"address_offset": "0x00EC",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"RXFWM": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "5",
"desc": "RXFIFO generates FULL interrupt based on the value programmed in this field.
User should set it within (1-31) range. 
The RX FIFO Full Watermark interrupt in ISR register continues to assert as long as the RX FIFO Fill Level is above RX FIFO Full watermark.
This field can be written to only when CEN bit in SRR is '0'
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2686124268,
},
"TX_BUFFER_START": {"description": "Tx Buffer Start Address",
"address_offset": "0x0100",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {},
"memoryAddr": 2686124288,
},
"TX_BUFFER_END": {"description": "Tx Buffer End Address",
"address_offset": "0x09FC",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {},
"memoryAddr": 2686126588,
},
"RX_BUFFER_START": {"description": "Rx Buffer Start Address",
"address_offset": "0x1100",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {},
"memoryAddr": 2686128384,
},
"TX_BUFFER_END_FIFO": {"description": "Rx Buffer End Address",
"address_offset": "0x19FC",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {},
"memoryAddr": 2686130684,
},
},
"canfd_6": {"SRR": {"description": "Software Reset Register",
"address_offset": "0x0000",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"SRST": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "The software reset bit for the core.
1 - core is reset.
If a 1 is written to this bit, all the core configuration registers (including the SRR) are reset.
Reads to this bit always return a 0.
Note - After performing soft or hard reset, wait for 8 AXI Clock cycles before initiating next AXILite transaction.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CEN": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "The Enable bit for the core.
1 - The core is in Loopback, Sleep, Snoop or Normal mode depending on the LBACK, SLEEP and SNOOP bits in the MSR.
0 - The core is in the Configuration mode.
Note - If the CEN bit is changed during core operation, it is recommended to reset the core so that operations start afresh.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2686189568,
},
"MSR": {"description": "Mode Select Register",
"address_offset": "0x0004",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"SLEEP": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "The Sleep Mode request bit.
1 - Request core to be in Sleep mode.
0 - No such request.
This bit is cleared when the core wakes up from the Sleep mode.
In order for core to enter Sleep mode, LBACK and SNOOP bits in this register should be set to 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"LBACK": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "The Loop Back Mode Request bit.
1 - Request core to be in Loop Back mode.
0 - No such request.
This bit can be written to only when CEN bit in SRR is '0.'
In order for core to enter LBACK mode, SLEEP and SNOOP bits in this register should be set to '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SNOOP": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "The Snoop Mode Request bit.
1 - Request core to be in Snoop mode.
0 - No such request.
This bit can be written only when CEN bit in SRR is '0'.
The user has to make sure that SNOOP mode is programmed only after system reset or software reset.
In order for core to enter Snoop mode, LBACK and SLEEP bits in this register should be set to '0'.
The features of Snoop mode are      Core transmits recessive bits on to CAN bus     Receives messages that are transmitted by other nodes but does not ACK. Stores received messages in RxBRAM based on programmed ID filtering.     Error counters are disabled and cleared to 0. Reads to error counter register will return zero.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"BRSD": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Makes core transmit CANFD frames only in nominal bit rate (by overriding Tx Message element setting).
0 - Makes core transmit CANFD frames as per BRS bit in TX Message element.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DAR": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Disable Auto retransmission to provide single shot transmission.
0 - Auto retransmission enabled.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DPEE": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Disable Protocol Exception Event detection/generation by CANFD receiver if \"res\" bit in CANFD frame is detected as 1. 
In this case, CANFD receiver will generate Form error.
0 - PEE detection/generation is enabled.  If CANFD receiver detects \"res\" bit as 1, it will go to Bus Integration
state (PEE_config) and waits for Bus Idle condition (11 consecutive nominal recessive bits). Error counter remains unchanged.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SBR": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Start Bus-off Recovery Request.
0 - No such request.
Node stays in Bus-off state until SBR bit is set to '1' (provided ABR bit in this register is not set).
This bit can be written only when node is in Bus-off state. 
This bit auto clears after node completes the bus-off recovery or leave bus-off state due to hard/soft reset or CEN de-assertion. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ABR": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Auto Bus-off Recovery Request.
0 - No such request.
If this bit is set, node do auto bus-off recovery irrespective of SBR setting in this register.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2686189572,
},
"BRPR": {"description": "Nominal Baud Rate Prescalar Register",
"address_offset": "0x0008",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"BRP": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "These bits indicate the prescaler value. 
The actual value is one more than the value written to the register.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2686189576,
},
"BTR": {"description": "Nominal Bit Timing Register",
"address_offset": "0x000C",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"TS1": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "6",
"desc": "Indicates the Sum of Propagation Segment and Phase Segment 1 as specified in the standard for Nominal Bit Timing.
The actual value is one more than the value written to the register.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TS2": {"access": "read-write",
"bit_offset": "8",
"bit_range": "",
"bit_width": "4",
"desc": "Indicates the Phase Segment 2 as specified in the CANFD standard for Nominal Bit Timing.
The actual value is one more than the value written to the register.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SJW": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "4",
"desc": "Indicates the Synchronization Jump Width as specified in the CANFD standard for Nominal Bit Timing.
The actual value is one more than the value written to the register.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2686189580,
},
"ECR": {"description": "Error Count Register",
"address_offset": "0x0010",
"access": "read-only",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"TEC": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Indicates the value of Transmit Error Counter.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"REC": {"access": "read-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "8",
"desc": "Indicates the value of Recieve Error Counter.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2686189584,
},
"ESR": {"description": "Error Status Register",
"address_offset": "0x0014",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"CRCER": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates a CRC error has occurred.
1 - Indicates a CRC error has occurred.
0 - Indicates a CRC error has not occurred on the bus after the last write to this bit.
If this bit is set, writing a 1 clears it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FMER": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates an error in one of the fixed form fields in the message frame.
1 - Indicates a form error has occurred.
0 - Indicates a form error has not occurred on the bus after the last write to this bit.
If this bit is set, writing a 1 clears it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STER": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates an error if there is a stuffing violation.
1 - Indicates a stuff error has occurred.
0 - Indicates a stuff error has not occurred on the bus after the last write to this bit.
If this bit is set, writing a 1 clears it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"BERR": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates the received bit is not the same as the transmitted bit during bus communication.
1 - Indicates a bit error has occurred.
0 - Indicates a bit error has not occurred on the bus after the last write to this bit.
If this bit is set, writing a 1 clears it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ACKER": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates an acknowledgement error.
1 - Indicates an acknowledgement error has occurred.
0 - Indicates an acknowledgement error has not occurred on the bus after the last write to this bit.
If this bit is set, writing a 1 clears it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"F_CRCER": {"access": "read-write",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates CRC error occurred in Data  Phase (Fast) data rate
0 - Indicates CRC error has not occurred in Data Phase (Fast) data rate after the last write to this bit.
If this bit is set, writing a 1 clears it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"F_FMER": {"access": "read-write",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates form error occurred in Data Phase (Fast) data rate
0 - Indicates form error has not occurred in Data Phase (Fast) data rate after the last write to this bit.
If this bit is set, writing a 1 clears it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"F_STER": {"access": "read-write",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates stuff error occurred in Data Phase (Fast) data rate
0 - Indicates stuff error has not occurred in Data Phase (Fast) data rate after the last write to this bit.
If this bit is set, writing a 1 clears it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"F_BERR": {"access": "read-write",
"bit_offset": "11",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates bit error occurred in Data Phase (Fast) data rate.
0 - Indicates bit error has not occurred in Data Phase (Fast) data rate after the last write to this bit.
If this bit is set, writing a 1 clears it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2686189588,
},
"SR": {"description": "Status Register",
"address_offset": "0x0018",
"access": "read-only",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"CONFIG": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates the core is in Configuration mode.
1 - Indicates the core is in Configuration mode.
0 - Indicates the core is not in Configuration mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"LBACK": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates the core is in Loopback mode.
1 - Indicates the core is in Loopback mode.
0 - Indicates the core is not in Loopback mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SLEEP": {"access": "read-only",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates the core is in Sleep mode.
1 - Indicates the core is in Sleep mode.
0 - Indicates the core is not in Sleep mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"NORMAL": {"access": "read-only",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates the core is in Normal Mode.
1 - Indicates the core is in Normal Mode.
0 - Indicates the core is not in Normal mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"BIDLE": {"access": "read-only",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates the CAN bus status.
1 - Indicates no bus communication is taking place.
0 - Indicates the core is either in Configuration mode or the bus is busy.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"BBSY": {"access": "read-only",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates the CAN bus status.
1 - Indicates that the core is either receiving a message or transmitting a message.
0 - Indicates that the core is either in Configuration mode or the bus is idle.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ERRWRN": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates that either the Transmit Error counter or the Receive Error counter has exceeded a value of 96.
1 - One or more error counters have a value 96.
0 - Neither of the error counters has a value 96.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ESTAT": {"access": "read-only",
"bit_offset": "7",
"bit_range": "",
"bit_width": "2",
"desc": "Indicates the error status of the core.
00 - Indicates Configuration Mode (CONFIG = 1). Error State is undefined.
01 - Indicates Error Active State.
11 - Indicates Error Passive State.
10 - Indicates Bus Off State.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PEE_CONFIG": {"access": "read-only",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates the core is in PEE Mode (Bus Integration State).
When this bit is set then BBSY and NORMAL status bits in SR register does not mean anything.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"BSFR_CONFIG": {"access": "read-only",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates the core is in Bus-off Recovery Mode (Bus Integration State)
When this bit is set then BBSY and NORMAL status bits in SR register does not mean anything.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"NISO": {"access": "read-only",
"bit_offset": "11",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Core is NISO (generated with C_IS_NISO = 1)
0 - Core is ISO (generated with C_IS_NISO = 0)
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SNOOP": {"access": "read-only",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates controller is in Snoop mode provided Normal mode bit is also set in this register.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TDCV": {"access": "read-only",
"bit_offset": "16",
"bit_range": "",
"bit_width": "7",
"desc": "This field gives the position of secondary sample point (defined as sum of TDCOFF and measured delay  
for EDL to r0 fall edge from TX to RX) in CAN clocks. 
This field is for status purpose.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2686189592,
},
"ISR": {"description": "Interrupt Status Register",
"address_offset": "0x001C",
"access": "read-only",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"ARBLST": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "1 - indicates that arbitration was lost during message transmission.
This bit can be cleared by writing to the ICR.
This bit is also cleared when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TXOK": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "1 - indicates that a message was transmitted successfully.
This bit can be cleared by writing to the ICR.
This bit is also cleared when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PEE": {"access": "read-only",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "1 - indicates that the core (CANFD) has detected PEE event.
This bit can be cleared by writing to the ICR.
This bit is also cleared when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"BSFRD": {"access": "read-only",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "1 - indicates that the core recovered from Bus Off state.
This bit can be cleared by writing to the ICR.
This bit is also cleared when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXOK": {"access": "read-only",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "1 - indicates that a message was received successfully and stored into the RX FIFO.
This bit can be cleared by writing to the ICR.
This bit is also cleared when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXFOFLW": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates that a message has been lost. This condition occurs when a new message is being received and the Receive FIFO is Full.
This bit can be cleared by writing to the ICR.
This bit is also cleared when a 0 is written to the CEN bit in the SRR only valid in FIFO Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ERROR": {"access": "read-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "1 - indicates that an error occurred during message transmission or reception.
This bit can be cleared by writing to the ICR.
This bit is also cleared when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"BSOFF": {"access": "read-only",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "1 - indicates that the core entered the Bus Off state.
This bit can be cleared by writing to the ICR.
This bit is also cleared when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SLP": {"access": "read-only",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "1 - indicates that the CAN core entered Sleep mode.
This bit can be cleared by writing to the ICR.
This bit is also cleared when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"WKUP": {"access": "read-only",
"bit_offset": "11",
"bit_range": "",
"bit_width": "1",
"desc": "1 - indicates that the core entered Normal mode from Sleep Mode
This bit can be cleared by writing to the ICR.
This bit is also cleared when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXFWMFLL": {"access": "read-only",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates that Rx FIFO is full based on watermark programming.
The interrupt continues to assert as long as the RX FIFO count is above RX FIFO Full watermark.
This bit can be cleared by writing to the respective bit in ICR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TXRRS": {"access": "read-only",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates that a Buffer Ready request was cleared.
This bit can be cleared by writing to the respective bit in ICR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TXCRS": {"access": "read-only",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates that a Cancellation request was cleared.
This bit can be cleared by writing to the respective bit in ICR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXRBF": {"access": "read-only",
"bit_offset": "15",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates that a receive buffer has received a message and become full.
This bit can be cleared by writing to the respective bit in ICR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXBOFLW": {"access": "read-only",
"bit_offset": "16",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates that a message has been lost due to buffer condition. Buffer index is captured in RXBOFLW_BI field.
This bit can be cleared by writing to the respective bit in ICR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXMNF": {"access": "read-only",
"bit_offset": "17",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates that Match process did not finish until the start of 6th Bit in EOF field and frame was discarded.
This bit can be cleared by writing to the respective bit in ICR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXLRM_BI": {"access": "read-only",
"bit_offset": "18",
"bit_range": "",
"bit_width": "6",
"desc": "Gives Rx Buffer index for last received message.
This field has meaning only if RXOK bit is set in this register.
This field is cleared at hard/soft reset or when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXBOFLW_BI": {"access": "read-only",
"bit_offset": "24",
"bit_range": "",
"bit_width": "6",
"desc": "Gives Rx Buffer index for which overflow event is generated.
This field is automatically cleared to default if RXBOFLW bit is cleared in this register.
In case more than one overflow event happens (before host could clear RXBOFLW), RXBOFLW_BI will show overflow index for the last event.
This field has meaning only if Overflow interrupt RXBOFLW bit is set.
This field is also cleared at hard/soft reset or when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2686189596,
},
"IER": {"description": "Interrupt Enable Register",
"address_offset": "0x0020",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"EARBLOST": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enable interrupt generation if ARBLST bit in ISR is set.
0 - Disable interrupt generation if ARBLST bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ETXOK": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "1 = Enable interrupt generation if TXOK bit in ISR is set.
0 = Disable interrupt generation if TXOK bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EPEE": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Protocol Exception Event interrupt enable
1 - Enable interrupt generation if PEE bit in ISR is set.
0 - Disable interrupt generation if PEE bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EBSFRD": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Bus-off Recovery Done interrupt enable
1 - Enable interrupt generation if BSFRD bit in ISR is set.
0 - Disable interrupt generation if BSFRD bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ERXOK": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "New message Received interrupt enable
1 - Enable interrupt generation if RXOK bit in ISR is set.
0 - Disable interrupt generation if RXOK bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ERFXOFLW": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enable interrupt generation if RFXOFLW bit in ISR is set.
0 - Disable interrupt generation if RFXOFLW bit in ISR is set.
Only valid in FIFO Mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EERROR": {"access": "read-write",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "Error interrupt enable
1 - Enable interrupt generation if ERROR bit in ISR is set.
0 - Disable interrupt generation if ERROR bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EBSOFF": {"access": "read-write",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enable interrupt generation if BSOFF bit in ISR is set.
0 - Disable interrupt generation if BSOFF bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ESLP": {"access": "read-write",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enable interrupt generation if SLP bit in ISR is set.
0 - Disable interrupt generation if SLP bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EWKUP": {"access": "read-write",
"bit_offset": "11",
"bit_range": "",
"bit_width": "1",
"desc": "Wakeup interrupt enable
1 - Enable interrupt generation if WKUP bit in ISR is set.
0 - Disable interrupt generation if WKUP bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ERXFWMFLL": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enable interrupt generation if RXFWMFLL bit in ISR is set.
0 - Disable interrupt generation if RXFWMFLL bit in ISR is set.
Only valid in MailBox Mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ETXRRS": {"access": "read-write",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "Tx Buffer Ready Request Served Interrupt Enable
1 - Enable interrupt generation if TXRRS bit in ISR is set.
0 - Disable interrupt generation if TXRRS bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ETXCRS": {"access": "read-write",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enable interrupt generation if TXCRS bit in ISR is set.
0 - Disable interrupt generation if TXCRS bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ERXRBF": {"access": "read-write",
"bit_offset": "15",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enable interrupt generation if RXRBF bit in ISR is set.
0 - Disable interrupt generation if RXRBF bit in ISR is set.
Only valid in MailBox Mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ERXBOFLW": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "1",
"desc": "1 = Enable interrupt generation if RXBOFLW bit in ISR is set.
0 = Disable interrupt generation if RXBOFLW bit in ISR is set.
Only valid in MailBox Mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ERXMNF": {"access": "read-write",
"bit_offset": "17",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enable interrupt generation if RXMNF bit in ISR is set.
0 - Disable interrupt generation if RXMNF bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2686189600,
},
"ICR": {"description": "Interrupt Clear Register",
"address_offset": "0x0024",
"access": "write-only",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"CARBLOST": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTXOK": {"access": "write-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Clear Transmission successful interrupt.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CPEE": {"access": "write-only",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CBSFRD": {"access": "write-only",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CRXOK": {"access": "write-only",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CRFXOFLW": {"access": "write-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
only valid in FIFO Mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CERROR": {"access": "write-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CBSOFF": {"access": "write-only",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CSLP": {"access": "write-only",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CWKUP": {"access": "write-only",
"bit_offset": "11",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CRXFWMFLL": {"access": "write-only",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
Only valid in FIFO Mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTXRRS": {"access": "write-only",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTXCRS": {"access": "write-only",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CRXRBF": {"access": "write-only",
"bit_offset": "15",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
only valid in MailBox Mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CRXBOFLW": {"access": "write-only",
"bit_offset": "16",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
only valid in MailBox Mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CRXMNF": {"access": "write-only",
"bit_offset": "17",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2686189604,
},
"TSR": {"description": "Time Stamp Register",
"address_offset": "0x0028",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"CTS": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Internal free running counter is cleared to 0 when CTS=1. 
This bit only needs to be written once with a '1' to clear the counter. 
The bit will always read as '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TIMESTAMP_CNT": {"access": "read-only",
"bit_offset": "16",
"bit_range": "",
"bit_width": "16",
"desc": "This Status field gives running value of the time stamp counter. 
This  field is cleared when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2686189608,
},
"DPBRPR": {"description": "Data Phase Baud Rate Prescalar Register",
"address_offset": "0x0088",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"DP_BRP": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "These bits indicate the prescaler value for Data Bit Timing as specified in the CANFD standard.
The actual value is one more than the value written to the register.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TDCOFF": {"access": "read-write",
"bit_offset": "8",
"bit_range": "",
"bit_width": "5",
"desc": "This offset is specified in CAN clock cycles and is added to the measured transnitter delay to place the Secondary Sample Point (SSP) at appropriate position (for ex. set this to half data bit time in terms of CAN clock cycles to place SSP in the middle of the data bit).
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TDC": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables TDC function as specified in the CANFD standard
0 - TDC is disabled
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2686189704,
},
"DPBTR": {"description": "Data Phase Bit Timing Register",
"address_offset": "0x008C",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"DP_TS1": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "4",
"desc": "Indicates the Sum of Propagation Segment and Phase Segment 1 as specified in the CANFD standard for Data Bit Timing.
The actual value is one more than the value written to the register.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DP_TS2": {"access": "read-write",
"bit_offset": "8",
"bit_range": "",
"bit_width": "3",
"desc": "Indicates the Phase Segment 2 as specified in the CANFD standard for Data Bit Timing. 
The actual value is one more than the value written to the register.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DP_SJW": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "3",
"desc": "Indicates the Synchronization Jump Width as specified in the CANFD standard for Data Bit Timing. 
The actual value is one more than the value written to the register.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2686189708,
},
"TRR": {"description": "Tx Buffer Ready Request Register",
"address_offset": "0x0090",
"access": "read-write",
"size": "8",
"interface": "S_AXI_LITE",
"fields": {"RR": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "This is control bit corresponds to TBi message in Tx BRAM.
Host writes 1 to indicate buffer is ready for transmission. Core clears this bit when   Buffer transmission is completed on CAN Bus or   If core is in DAR mode, then after one transmission attempt on CAN bus [either successful or unsuccessful (i.e. arbitration lost or error)] or   If message is cancelled due to cancellation request or   Any combination of Above Host writes are ignored when this bit is 1.
Note - This register remains in reset when SNOOP mode is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2686189712,
},
"IETRS": {"description": "Interrupt Enable Tx Buffer Ready Request Served/Cleared Register",
"address_offset": "0x0094",
"access": "read-write",
"size": "8",
"interface": "S_AXI_LITE",
"fields": {"ERRS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "1 - Enables setting TXRRS bit in ISR when RRi bit in TRR register clears.
0 - TXRRS bit in ISR will not set if  RRi bit in TRR register clears.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2686189716,
},
"TCR": {"description": "Tx Buffer Cancellation Request Register",
"address_offset": "0x0098",
"access": "read-write",
"size": "8",
"interface": "S_AXI_LITE",
"fields": {"CR": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "This is cancellation request bit corresponds to RR0 bit in TRR register.
Host writes 1 to indicate cancellation request of corresponding buffer ready request (i.e. RR0 bit in TRR register). Core clears this bit when cancellation request is completed. 
Host writes to this bit are ignored if CR0 is 1 or RR0 bit of TRR register is 0.
If the buffer is already locked for transmission by Transfer Layer then cancellation is performed at the end of transmission cycle irrespective whether frame transmitted successfully or failed
i.e. if message is failed due to arbitration loss or any error, then message will be cancelled (no retransmission attempt) and cancellation request will be cleared. Alongwith RR0 bit will get cleared.
If message is transmitted successfully, then RR0 bit will clear and cancellation request will be cleared anyway.
Note : If internal buffer scheduling round is in progress, then cancellation consideration is postponed till it is over.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2686189720,
},
"IETCS": {"description": "Interrupt Enable Tx Buffer Cancellation Request Served/Cleared Register",
"address_offset": "0x009C",
"access": "read-write",
"size": "8",
"interface": "S_AXI_LITE",
"fields": {"ECRS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "1 - Enables setting TXCRS bit in ISR when CR0 bit in TCS register clears.
0 - TXCRS bit in ISR will not set if  CR0 bit in TRR register clears.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2686189724,
},
"AFR": {"description": "Acceptance Filter(control) Register",
"address_offset": "0x00E0",
"access": "read-write",
"size": "8",
"interface": "S_AXI_LITE",
"fields": {"UAF": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Enables the use of acceptance filter mask pair i.
1 - Indicates Acceptance Filter Mask Register 0 (AFMR0 or M0) and Acceptance Filter ID Register 0 (AFID0 or F0) pair is used for acceptance filtering.
0 - Indicates AFMR0 and AFID0 pair is not used for acceptance filtering.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2686189792,
},
"FSR": {"description": "Rx FIFO Status Register",
"address_offset": "0x00E8",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"RI": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "5",
"desc": "Each time IRI bit is set, core increments read index by +1 (provided FILL level is not 0) and maintained it for Host to access 
next available message.
RI = 0x0 -> Next message read starts from location = 0x1100 (to 0x1147)
RI = 0x1 -> Next message read starts from location = 0x1148 (to 0x118F)...
RI = 0x1F -> Next message read starts from location = 0x19B8 (to 0x19FF)
RI is maintained if CEN bit is cleared.
RI gets reset to 0 if soft or hard reset is asserted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRI": {"access": "write-only",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "With each Host writes setting this bit as 1, core increments Read index (RI field) by 1 and update fill level (i.e. decrement  by 1).
If FILL level is 0, setting this bit has no effect. Note that FILL level may remain unchanged when IRI is written if core is just finishing a successful receive and incrementing internal write index.
This bit always read as 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FL": {"access": "read-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "6",
"desc": "Number of stored message in Receive FIFO starting from RI index given in this register.
For example, if FL = 0x5 and RI = 0x3 then Rx FIFO has 5 messages starting from Read Index 3 (Start address 0x1190).
FL is maintained if CEN bit is cleared.
FL gets reset to 0 if soft or hard reset is asserted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2686189800,
},
"WMR": {"description": "Rx FIFO Watermark Register",
"address_offset": "0x00EC",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"RXFWM": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "5",
"desc": "RXFIFO generates FULL interrupt based on the value programmed in this field.
User should set it within (1-31) range. 
The RX FIFO Full Watermark interrupt in ISR register continues to assert as long as the RX FIFO Fill Level is above RX FIFO Full watermark.
This field can be written to only when CEN bit in SRR is '0'
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2686189804,
},
"TX_BUFFER_START": {"description": "Tx Buffer Start Address",
"address_offset": "0x0100",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {},
"memoryAddr": 2686189824,
},
"TX_BUFFER_END": {"description": "Tx Buffer End Address",
"address_offset": "0x09FC",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {},
"memoryAddr": 2686192124,
},
"RX_BUFFER_START": {"description": "Rx Buffer Start Address",
"address_offset": "0x1100",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {},
"memoryAddr": 2686193920,
},
"TX_BUFFER_END_FIFO": {"description": "Rx Buffer End Address",
"address_offset": "0x19FC",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {},
"memoryAddr": 2686196220,
},
},
"canfd_7": {"SRR": {"description": "Software Reset Register",
"address_offset": "0x0000",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"SRST": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "The software reset bit for the core.
1 - core is reset.
If a 1 is written to this bit, all the core configuration registers (including the SRR) are reset.
Reads to this bit always return a 0.
Note - After performing soft or hard reset, wait for 8 AXI Clock cycles before initiating next AXILite transaction.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CEN": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "The Enable bit for the core.
1 - The core is in Loopback, Sleep, Snoop or Normal mode depending on the LBACK, SLEEP and SNOOP bits in the MSR.
0 - The core is in the Configuration mode.
Note - If the CEN bit is changed during core operation, it is recommended to reset the core so that operations start afresh.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2686255104,
},
"MSR": {"description": "Mode Select Register",
"address_offset": "0x0004",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"SLEEP": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "The Sleep Mode request bit.
1 - Request core to be in Sleep mode.
0 - No such request.
This bit is cleared when the core wakes up from the Sleep mode.
In order for core to enter Sleep mode, LBACK and SNOOP bits in this register should be set to 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"LBACK": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "The Loop Back Mode Request bit.
1 - Request core to be in Loop Back mode.
0 - No such request.
This bit can be written to only when CEN bit in SRR is '0.'
In order for core to enter LBACK mode, SLEEP and SNOOP bits in this register should be set to '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SNOOP": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "The Snoop Mode Request bit.
1 - Request core to be in Snoop mode.
0 - No such request.
This bit can be written only when CEN bit in SRR is '0'.
The user has to make sure that SNOOP mode is programmed only after system reset or software reset.
In order for core to enter Snoop mode, LBACK and SLEEP bits in this register should be set to '0'.
The features of Snoop mode are      Core transmits recessive bits on to CAN bus     Receives messages that are transmitted by other nodes but does not ACK. Stores received messages in RxBRAM based on programmed ID filtering.     Error counters are disabled and cleared to 0. Reads to error counter register will return zero.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"BRSD": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Makes core transmit CANFD frames only in nominal bit rate (by overriding Tx Message element setting).
0 - Makes core transmit CANFD frames as per BRS bit in TX Message element.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DAR": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Disable Auto retransmission to provide single shot transmission.
0 - Auto retransmission enabled.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DPEE": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Disable Protocol Exception Event detection/generation by CANFD receiver if \"res\" bit in CANFD frame is detected as 1. 
In this case, CANFD receiver will generate Form error.
0 - PEE detection/generation is enabled.  If CANFD receiver detects \"res\" bit as 1, it will go to Bus Integration
state (PEE_config) and waits for Bus Idle condition (11 consecutive nominal recessive bits). Error counter remains unchanged.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SBR": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Start Bus-off Recovery Request.
0 - No such request.
Node stays in Bus-off state until SBR bit is set to '1' (provided ABR bit in this register is not set).
This bit can be written only when node is in Bus-off state. 
This bit auto clears after node completes the bus-off recovery or leave bus-off state due to hard/soft reset or CEN de-assertion. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ABR": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Auto Bus-off Recovery Request.
0 - No such request.
If this bit is set, node do auto bus-off recovery irrespective of SBR setting in this register.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2686255108,
},
"BRPR": {"description": "Nominal Baud Rate Prescalar Register",
"address_offset": "0x0008",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"BRP": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "These bits indicate the prescaler value. 
The actual value is one more than the value written to the register.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2686255112,
},
"BTR": {"description": "Nominal Bit Timing Register",
"address_offset": "0x000C",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"TS1": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "6",
"desc": "Indicates the Sum of Propagation Segment and Phase Segment 1 as specified in the standard for Nominal Bit Timing.
The actual value is one more than the value written to the register.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TS2": {"access": "read-write",
"bit_offset": "8",
"bit_range": "",
"bit_width": "4",
"desc": "Indicates the Phase Segment 2 as specified in the CANFD standard for Nominal Bit Timing.
The actual value is one more than the value written to the register.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SJW": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "4",
"desc": "Indicates the Synchronization Jump Width as specified in the CANFD standard for Nominal Bit Timing.
The actual value is one more than the value written to the register.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2686255116,
},
"ECR": {"description": "Error Count Register",
"address_offset": "0x0010",
"access": "read-only",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"TEC": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Indicates the value of Transmit Error Counter.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"REC": {"access": "read-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "8",
"desc": "Indicates the value of Recieve Error Counter.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2686255120,
},
"ESR": {"description": "Error Status Register",
"address_offset": "0x0014",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"CRCER": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates a CRC error has occurred.
1 - Indicates a CRC error has occurred.
0 - Indicates a CRC error has not occurred on the bus after the last write to this bit.
If this bit is set, writing a 1 clears it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FMER": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates an error in one of the fixed form fields in the message frame.
1 - Indicates a form error has occurred.
0 - Indicates a form error has not occurred on the bus after the last write to this bit.
If this bit is set, writing a 1 clears it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STER": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates an error if there is a stuffing violation.
1 - Indicates a stuff error has occurred.
0 - Indicates a stuff error has not occurred on the bus after the last write to this bit.
If this bit is set, writing a 1 clears it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"BERR": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates the received bit is not the same as the transmitted bit during bus communication.
1 - Indicates a bit error has occurred.
0 - Indicates a bit error has not occurred on the bus after the last write to this bit.
If this bit is set, writing a 1 clears it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ACKER": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates an acknowledgement error.
1 - Indicates an acknowledgement error has occurred.
0 - Indicates an acknowledgement error has not occurred on the bus after the last write to this bit.
If this bit is set, writing a 1 clears it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"F_CRCER": {"access": "read-write",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates CRC error occurred in Data  Phase (Fast) data rate
0 - Indicates CRC error has not occurred in Data Phase (Fast) data rate after the last write to this bit.
If this bit is set, writing a 1 clears it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"F_FMER": {"access": "read-write",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates form error occurred in Data Phase (Fast) data rate
0 - Indicates form error has not occurred in Data Phase (Fast) data rate after the last write to this bit.
If this bit is set, writing a 1 clears it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"F_STER": {"access": "read-write",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates stuff error occurred in Data Phase (Fast) data rate
0 - Indicates stuff error has not occurred in Data Phase (Fast) data rate after the last write to this bit.
If this bit is set, writing a 1 clears it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"F_BERR": {"access": "read-write",
"bit_offset": "11",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates bit error occurred in Data Phase (Fast) data rate.
0 - Indicates bit error has not occurred in Data Phase (Fast) data rate after the last write to this bit.
If this bit is set, writing a 1 clears it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2686255124,
},
"SR": {"description": "Status Register",
"address_offset": "0x0018",
"access": "read-only",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"CONFIG": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates the core is in Configuration mode.
1 - Indicates the core is in Configuration mode.
0 - Indicates the core is not in Configuration mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"LBACK": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates the core is in Loopback mode.
1 - Indicates the core is in Loopback mode.
0 - Indicates the core is not in Loopback mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SLEEP": {"access": "read-only",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates the core is in Sleep mode.
1 - Indicates the core is in Sleep mode.
0 - Indicates the core is not in Sleep mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"NORMAL": {"access": "read-only",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates the core is in Normal Mode.
1 - Indicates the core is in Normal Mode.
0 - Indicates the core is not in Normal mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"BIDLE": {"access": "read-only",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates the CAN bus status.
1 - Indicates no bus communication is taking place.
0 - Indicates the core is either in Configuration mode or the bus is busy.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"BBSY": {"access": "read-only",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates the CAN bus status.
1 - Indicates that the core is either receiving a message or transmitting a message.
0 - Indicates that the core is either in Configuration mode or the bus is idle.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ERRWRN": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates that either the Transmit Error counter or the Receive Error counter has exceeded a value of 96.
1 - One or more error counters have a value 96.
0 - Neither of the error counters has a value 96.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ESTAT": {"access": "read-only",
"bit_offset": "7",
"bit_range": "",
"bit_width": "2",
"desc": "Indicates the error status of the core.
00 - Indicates Configuration Mode (CONFIG = 1). Error State is undefined.
01 - Indicates Error Active State.
11 - Indicates Error Passive State.
10 - Indicates Bus Off State.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PEE_CONFIG": {"access": "read-only",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates the core is in PEE Mode (Bus Integration State).
When this bit is set then BBSY and NORMAL status bits in SR register does not mean anything.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"BSFR_CONFIG": {"access": "read-only",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates the core is in Bus-off Recovery Mode (Bus Integration State)
When this bit is set then BBSY and NORMAL status bits in SR register does not mean anything.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"NISO": {"access": "read-only",
"bit_offset": "11",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Core is NISO (generated with C_IS_NISO = 1)
0 - Core is ISO (generated with C_IS_NISO = 0)
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SNOOP": {"access": "read-only",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates controller is in Snoop mode provided Normal mode bit is also set in this register.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TDCV": {"access": "read-only",
"bit_offset": "16",
"bit_range": "",
"bit_width": "7",
"desc": "This field gives the position of secondary sample point (defined as sum of TDCOFF and measured delay  
for EDL to r0 fall edge from TX to RX) in CAN clocks. 
This field is for status purpose.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2686255128,
},
"ISR": {"description": "Interrupt Status Register",
"address_offset": "0x001C",
"access": "read-only",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"ARBLST": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "1 - indicates that arbitration was lost during message transmission.
This bit can be cleared by writing to the ICR.
This bit is also cleared when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TXOK": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "1 - indicates that a message was transmitted successfully.
This bit can be cleared by writing to the ICR.
This bit is also cleared when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PEE": {"access": "read-only",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "1 - indicates that the core (CANFD) has detected PEE event.
This bit can be cleared by writing to the ICR.
This bit is also cleared when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"BSFRD": {"access": "read-only",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "1 - indicates that the core recovered from Bus Off state.
This bit can be cleared by writing to the ICR.
This bit is also cleared when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXOK": {"access": "read-only",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "1 - indicates that a message was received successfully and stored into the RX FIFO.
This bit can be cleared by writing to the ICR.
This bit is also cleared when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXFOFLW": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates that a message has been lost. This condition occurs when a new message is being received and the Receive FIFO is Full.
This bit can be cleared by writing to the ICR.
This bit is also cleared when a 0 is written to the CEN bit in the SRR only valid in FIFO Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ERROR": {"access": "read-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "1 - indicates that an error occurred during message transmission or reception.
This bit can be cleared by writing to the ICR.
This bit is also cleared when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"BSOFF": {"access": "read-only",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "1 - indicates that the core entered the Bus Off state.
This bit can be cleared by writing to the ICR.
This bit is also cleared when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SLP": {"access": "read-only",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "1 - indicates that the CAN core entered Sleep mode.
This bit can be cleared by writing to the ICR.
This bit is also cleared when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"WKUP": {"access": "read-only",
"bit_offset": "11",
"bit_range": "",
"bit_width": "1",
"desc": "1 - indicates that the core entered Normal mode from Sleep Mode
This bit can be cleared by writing to the ICR.
This bit is also cleared when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXFWMFLL": {"access": "read-only",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates that Rx FIFO is full based on watermark programming.
The interrupt continues to assert as long as the RX FIFO count is above RX FIFO Full watermark.
This bit can be cleared by writing to the respective bit in ICR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TXRRS": {"access": "read-only",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates that a Buffer Ready request was cleared.
This bit can be cleared by writing to the respective bit in ICR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TXCRS": {"access": "read-only",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates that a Cancellation request was cleared.
This bit can be cleared by writing to the respective bit in ICR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXRBF": {"access": "read-only",
"bit_offset": "15",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates that a receive buffer has received a message and become full.
This bit can be cleared by writing to the respective bit in ICR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXBOFLW": {"access": "read-only",
"bit_offset": "16",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates that a message has been lost due to buffer condition. Buffer index is captured in RXBOFLW_BI field.
This bit can be cleared by writing to the respective bit in ICR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXMNF": {"access": "read-only",
"bit_offset": "17",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates that Match process did not finish until the start of 6th Bit in EOF field and frame was discarded.
This bit can be cleared by writing to the respective bit in ICR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXLRM_BI": {"access": "read-only",
"bit_offset": "18",
"bit_range": "",
"bit_width": "6",
"desc": "Gives Rx Buffer index for last received message.
This field has meaning only if RXOK bit is set in this register.
This field is cleared at hard/soft reset or when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXBOFLW_BI": {"access": "read-only",
"bit_offset": "24",
"bit_range": "",
"bit_width": "6",
"desc": "Gives Rx Buffer index for which overflow event is generated.
This field is automatically cleared to default if RXBOFLW bit is cleared in this register.
In case more than one overflow event happens (before host could clear RXBOFLW), RXBOFLW_BI will show overflow index for the last event.
This field has meaning only if Overflow interrupt RXBOFLW bit is set.
This field is also cleared at hard/soft reset or when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2686255132,
},
"IER": {"description": "Interrupt Enable Register",
"address_offset": "0x0020",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"EARBLOST": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enable interrupt generation if ARBLST bit in ISR is set.
0 - Disable interrupt generation if ARBLST bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ETXOK": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "1 = Enable interrupt generation if TXOK bit in ISR is set.
0 = Disable interrupt generation if TXOK bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EPEE": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Protocol Exception Event interrupt enable
1 - Enable interrupt generation if PEE bit in ISR is set.
0 - Disable interrupt generation if PEE bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EBSFRD": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Bus-off Recovery Done interrupt enable
1 - Enable interrupt generation if BSFRD bit in ISR is set.
0 - Disable interrupt generation if BSFRD bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ERXOK": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "New message Received interrupt enable
1 - Enable interrupt generation if RXOK bit in ISR is set.
0 - Disable interrupt generation if RXOK bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ERFXOFLW": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enable interrupt generation if RFXOFLW bit in ISR is set.
0 - Disable interrupt generation if RFXOFLW bit in ISR is set.
Only valid in FIFO Mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EERROR": {"access": "read-write",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "Error interrupt enable
1 - Enable interrupt generation if ERROR bit in ISR is set.
0 - Disable interrupt generation if ERROR bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EBSOFF": {"access": "read-write",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enable interrupt generation if BSOFF bit in ISR is set.
0 - Disable interrupt generation if BSOFF bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ESLP": {"access": "read-write",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enable interrupt generation if SLP bit in ISR is set.
0 - Disable interrupt generation if SLP bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EWKUP": {"access": "read-write",
"bit_offset": "11",
"bit_range": "",
"bit_width": "1",
"desc": "Wakeup interrupt enable
1 - Enable interrupt generation if WKUP bit in ISR is set.
0 - Disable interrupt generation if WKUP bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ERXFWMFLL": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enable interrupt generation if RXFWMFLL bit in ISR is set.
0 - Disable interrupt generation if RXFWMFLL bit in ISR is set.
Only valid in MailBox Mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ETXRRS": {"access": "read-write",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "Tx Buffer Ready Request Served Interrupt Enable
1 - Enable interrupt generation if TXRRS bit in ISR is set.
0 - Disable interrupt generation if TXRRS bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ETXCRS": {"access": "read-write",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enable interrupt generation if TXCRS bit in ISR is set.
0 - Disable interrupt generation if TXCRS bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ERXRBF": {"access": "read-write",
"bit_offset": "15",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enable interrupt generation if RXRBF bit in ISR is set.
0 - Disable interrupt generation if RXRBF bit in ISR is set.
Only valid in MailBox Mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ERXBOFLW": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "1",
"desc": "1 = Enable interrupt generation if RXBOFLW bit in ISR is set.
0 = Disable interrupt generation if RXBOFLW bit in ISR is set.
Only valid in MailBox Mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ERXMNF": {"access": "read-write",
"bit_offset": "17",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enable interrupt generation if RXMNF bit in ISR is set.
0 - Disable interrupt generation if RXMNF bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2686255136,
},
"ICR": {"description": "Interrupt Clear Register",
"address_offset": "0x0024",
"access": "write-only",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"CARBLOST": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTXOK": {"access": "write-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Clear Transmission successful interrupt.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CPEE": {"access": "write-only",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CBSFRD": {"access": "write-only",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CRXOK": {"access": "write-only",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CRFXOFLW": {"access": "write-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
only valid in FIFO Mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CERROR": {"access": "write-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CBSOFF": {"access": "write-only",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CSLP": {"access": "write-only",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CWKUP": {"access": "write-only",
"bit_offset": "11",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CRXFWMFLL": {"access": "write-only",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
Only valid in FIFO Mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTXRRS": {"access": "write-only",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTXCRS": {"access": "write-only",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CRXRBF": {"access": "write-only",
"bit_offset": "15",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
only valid in MailBox Mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CRXBOFLW": {"access": "write-only",
"bit_offset": "16",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
only valid in MailBox Mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CRXMNF": {"access": "write-only",
"bit_offset": "17",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2686255140,
},
"TSR": {"description": "Time Stamp Register",
"address_offset": "0x0028",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"CTS": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Internal free running counter is cleared to 0 when CTS=1. 
This bit only needs to be written once with a '1' to clear the counter. 
The bit will always read as '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TIMESTAMP_CNT": {"access": "read-only",
"bit_offset": "16",
"bit_range": "",
"bit_width": "16",
"desc": "This Status field gives running value of the time stamp counter. 
This  field is cleared when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2686255144,
},
"DPBRPR": {"description": "Data Phase Baud Rate Prescalar Register",
"address_offset": "0x0088",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"DP_BRP": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "These bits indicate the prescaler value for Data Bit Timing as specified in the CANFD standard.
The actual value is one more than the value written to the register.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TDCOFF": {"access": "read-write",
"bit_offset": "8",
"bit_range": "",
"bit_width": "5",
"desc": "This offset is specified in CAN clock cycles and is added to the measured transnitter delay to place the Secondary Sample Point (SSP) at appropriate position (for ex. set this to half data bit time in terms of CAN clock cycles to place SSP in the middle of the data bit).
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TDC": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables TDC function as specified in the CANFD standard
0 - TDC is disabled
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2686255240,
},
"DPBTR": {"description": "Data Phase Bit Timing Register",
"address_offset": "0x008C",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"DP_TS1": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "4",
"desc": "Indicates the Sum of Propagation Segment and Phase Segment 1 as specified in the CANFD standard for Data Bit Timing.
The actual value is one more than the value written to the register.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DP_TS2": {"access": "read-write",
"bit_offset": "8",
"bit_range": "",
"bit_width": "3",
"desc": "Indicates the Phase Segment 2 as specified in the CANFD standard for Data Bit Timing. 
The actual value is one more than the value written to the register.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DP_SJW": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "3",
"desc": "Indicates the Synchronization Jump Width as specified in the CANFD standard for Data Bit Timing. 
The actual value is one more than the value written to the register.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2686255244,
},
"TRR": {"description": "Tx Buffer Ready Request Register",
"address_offset": "0x0090",
"access": "read-write",
"size": "8",
"interface": "S_AXI_LITE",
"fields": {"RR": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "This is control bit corresponds to TBi message in Tx BRAM.
Host writes 1 to indicate buffer is ready for transmission. Core clears this bit when   Buffer transmission is completed on CAN Bus or   If core is in DAR mode, then after one transmission attempt on CAN bus [either successful or unsuccessful (i.e. arbitration lost or error)] or   If message is cancelled due to cancellation request or   Any combination of Above Host writes are ignored when this bit is 1.
Note - This register remains in reset when SNOOP mode is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2686255248,
},
"IETRS": {"description": "Interrupt Enable Tx Buffer Ready Request Served/Cleared Register",
"address_offset": "0x0094",
"access": "read-write",
"size": "8",
"interface": "S_AXI_LITE",
"fields": {"ERRS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "1 - Enables setting TXRRS bit in ISR when RRi bit in TRR register clears.
0 - TXRRS bit in ISR will not set if  RRi bit in TRR register clears.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2686255252,
},
"TCR": {"description": "Tx Buffer Cancellation Request Register",
"address_offset": "0x0098",
"access": "read-write",
"size": "8",
"interface": "S_AXI_LITE",
"fields": {"CR": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "This is cancellation request bit corresponds to RR0 bit in TRR register.
Host writes 1 to indicate cancellation request of corresponding buffer ready request (i.e. RR0 bit in TRR register). Core clears this bit when cancellation request is completed. 
Host writes to this bit are ignored if CR0 is 1 or RR0 bit of TRR register is 0.
If the buffer is already locked for transmission by Transfer Layer then cancellation is performed at the end of transmission cycle irrespective whether frame transmitted successfully or failed
i.e. if message is failed due to arbitration loss or any error, then message will be cancelled (no retransmission attempt) and cancellation request will be cleared. Alongwith RR0 bit will get cleared.
If message is transmitted successfully, then RR0 bit will clear and cancellation request will be cleared anyway.
Note : If internal buffer scheduling round is in progress, then cancellation consideration is postponed till it is over.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2686255256,
},
"IETCS": {"description": "Interrupt Enable Tx Buffer Cancellation Request Served/Cleared Register",
"address_offset": "0x009C",
"access": "read-write",
"size": "8",
"interface": "S_AXI_LITE",
"fields": {"ECRS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "1 - Enables setting TXCRS bit in ISR when CR0 bit in TCS register clears.
0 - TXCRS bit in ISR will not set if  CR0 bit in TRR register clears.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2686255260,
},
"AFR": {"description": "Acceptance Filter(control) Register",
"address_offset": "0x00E0",
"access": "read-write",
"size": "8",
"interface": "S_AXI_LITE",
"fields": {"UAF": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Enables the use of acceptance filter mask pair i.
1 - Indicates Acceptance Filter Mask Register 0 (AFMR0 or M0) and Acceptance Filter ID Register 0 (AFID0 or F0) pair is used for acceptance filtering.
0 - Indicates AFMR0 and AFID0 pair is not used for acceptance filtering.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2686255328,
},
"FSR": {"description": "Rx FIFO Status Register",
"address_offset": "0x00E8",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"RI": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "5",
"desc": "Each time IRI bit is set, core increments read index by +1 (provided FILL level is not 0) and maintained it for Host to access 
next available message.
RI = 0x0 -> Next message read starts from location = 0x1100 (to 0x1147)
RI = 0x1 -> Next message read starts from location = 0x1148 (to 0x118F)...
RI = 0x1F -> Next message read starts from location = 0x19B8 (to 0x19FF)
RI is maintained if CEN bit is cleared.
RI gets reset to 0 if soft or hard reset is asserted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRI": {"access": "write-only",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "With each Host writes setting this bit as 1, core increments Read index (RI field) by 1 and update fill level (i.e. decrement  by 1).
If FILL level is 0, setting this bit has no effect. Note that FILL level may remain unchanged when IRI is written if core is just finishing a successful receive and incrementing internal write index.
This bit always read as 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FL": {"access": "read-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "6",
"desc": "Number of stored message in Receive FIFO starting from RI index given in this register.
For example, if FL = 0x5 and RI = 0x3 then Rx FIFO has 5 messages starting from Read Index 3 (Start address 0x1190).
FL is maintained if CEN bit is cleared.
FL gets reset to 0 if soft or hard reset is asserted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2686255336,
},
"WMR": {"description": "Rx FIFO Watermark Register",
"address_offset": "0x00EC",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"RXFWM": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "5",
"desc": "RXFIFO generates FULL interrupt based on the value programmed in this field.
User should set it within (1-31) range. 
The RX FIFO Full Watermark interrupt in ISR register continues to assert as long as the RX FIFO Fill Level is above RX FIFO Full watermark.
This field can be written to only when CEN bit in SRR is '0'
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2686255340,
},
"TX_BUFFER_START": {"description": "Tx Buffer Start Address",
"address_offset": "0x0100",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {},
"memoryAddr": 2686255360,
},
"TX_BUFFER_END": {"description": "Tx Buffer End Address",
"address_offset": "0x09FC",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {},
"memoryAddr": 2686257660,
},
"RX_BUFFER_START": {"description": "Rx Buffer Start Address",
"address_offset": "0x1100",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {},
"memoryAddr": 2686259456,
},
"TX_BUFFER_END_FIFO": {"description": "Rx Buffer End Address",
"address_offset": "0x19FC",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {},
"memoryAddr": 2686261756,
},
},
"canfd_8": {"SRR": {"description": "Software Reset Register",
"address_offset": "0x0000",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"SRST": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "The software reset bit for the core.
1 - core is reset.
If a 1 is written to this bit, all the core configuration registers (including the SRR) are reset.
Reads to this bit always return a 0.
Note - After performing soft or hard reset, wait for 8 AXI Clock cycles before initiating next AXILite transaction.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CEN": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "The Enable bit for the core.
1 - The core is in Loopback, Sleep, Snoop or Normal mode depending on the LBACK, SLEEP and SNOOP bits in the MSR.
0 - The core is in the Configuration mode.
Note - If the CEN bit is changed during core operation, it is recommended to reset the core so that operations start afresh.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2686320640,
},
"MSR": {"description": "Mode Select Register",
"address_offset": "0x0004",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"SLEEP": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "The Sleep Mode request bit.
1 - Request core to be in Sleep mode.
0 - No such request.
This bit is cleared when the core wakes up from the Sleep mode.
In order for core to enter Sleep mode, LBACK and SNOOP bits in this register should be set to 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"LBACK": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "The Loop Back Mode Request bit.
1 - Request core to be in Loop Back mode.
0 - No such request.
This bit can be written to only when CEN bit in SRR is '0.'
In order for core to enter LBACK mode, SLEEP and SNOOP bits in this register should be set to '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SNOOP": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "The Snoop Mode Request bit.
1 - Request core to be in Snoop mode.
0 - No such request.
This bit can be written only when CEN bit in SRR is '0'.
The user has to make sure that SNOOP mode is programmed only after system reset or software reset.
In order for core to enter Snoop mode, LBACK and SLEEP bits in this register should be set to '0'.
The features of Snoop mode are      Core transmits recessive bits on to CAN bus     Receives messages that are transmitted by other nodes but does not ACK. Stores received messages in RxBRAM based on programmed ID filtering.     Error counters are disabled and cleared to 0. Reads to error counter register will return zero.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"BRSD": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Makes core transmit CANFD frames only in nominal bit rate (by overriding Tx Message element setting).
0 - Makes core transmit CANFD frames as per BRS bit in TX Message element.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DAR": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Disable Auto retransmission to provide single shot transmission.
0 - Auto retransmission enabled.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DPEE": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Disable Protocol Exception Event detection/generation by CANFD receiver if \"res\" bit in CANFD frame is detected as 1. 
In this case, CANFD receiver will generate Form error.
0 - PEE detection/generation is enabled.  If CANFD receiver detects \"res\" bit as 1, it will go to Bus Integration
state (PEE_config) and waits for Bus Idle condition (11 consecutive nominal recessive bits). Error counter remains unchanged.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SBR": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Start Bus-off Recovery Request.
0 - No such request.
Node stays in Bus-off state until SBR bit is set to '1' (provided ABR bit in this register is not set).
This bit can be written only when node is in Bus-off state. 
This bit auto clears after node completes the bus-off recovery or leave bus-off state due to hard/soft reset or CEN de-assertion. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ABR": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Auto Bus-off Recovery Request.
0 - No such request.
If this bit is set, node do auto bus-off recovery irrespective of SBR setting in this register.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2686320644,
},
"BRPR": {"description": "Nominal Baud Rate Prescalar Register",
"address_offset": "0x0008",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"BRP": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "These bits indicate the prescaler value. 
The actual value is one more than the value written to the register.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2686320648,
},
"BTR": {"description": "Nominal Bit Timing Register",
"address_offset": "0x000C",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"TS1": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "6",
"desc": "Indicates the Sum of Propagation Segment and Phase Segment 1 as specified in the standard for Nominal Bit Timing.
The actual value is one more than the value written to the register.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TS2": {"access": "read-write",
"bit_offset": "8",
"bit_range": "",
"bit_width": "4",
"desc": "Indicates the Phase Segment 2 as specified in the CANFD standard for Nominal Bit Timing.
The actual value is one more than the value written to the register.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SJW": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "4",
"desc": "Indicates the Synchronization Jump Width as specified in the CANFD standard for Nominal Bit Timing.
The actual value is one more than the value written to the register.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2686320652,
},
"ECR": {"description": "Error Count Register",
"address_offset": "0x0010",
"access": "read-only",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"TEC": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Indicates the value of Transmit Error Counter.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"REC": {"access": "read-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "8",
"desc": "Indicates the value of Recieve Error Counter.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2686320656,
},
"ESR": {"description": "Error Status Register",
"address_offset": "0x0014",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"CRCER": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates a CRC error has occurred.
1 - Indicates a CRC error has occurred.
0 - Indicates a CRC error has not occurred on the bus after the last write to this bit.
If this bit is set, writing a 1 clears it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FMER": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates an error in one of the fixed form fields in the message frame.
1 - Indicates a form error has occurred.
0 - Indicates a form error has not occurred on the bus after the last write to this bit.
If this bit is set, writing a 1 clears it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STER": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates an error if there is a stuffing violation.
1 - Indicates a stuff error has occurred.
0 - Indicates a stuff error has not occurred on the bus after the last write to this bit.
If this bit is set, writing a 1 clears it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"BERR": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates the received bit is not the same as the transmitted bit during bus communication.
1 - Indicates a bit error has occurred.
0 - Indicates a bit error has not occurred on the bus after the last write to this bit.
If this bit is set, writing a 1 clears it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ACKER": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates an acknowledgement error.
1 - Indicates an acknowledgement error has occurred.
0 - Indicates an acknowledgement error has not occurred on the bus after the last write to this bit.
If this bit is set, writing a 1 clears it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"F_CRCER": {"access": "read-write",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates CRC error occurred in Data  Phase (Fast) data rate
0 - Indicates CRC error has not occurred in Data Phase (Fast) data rate after the last write to this bit.
If this bit is set, writing a 1 clears it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"F_FMER": {"access": "read-write",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates form error occurred in Data Phase (Fast) data rate
0 - Indicates form error has not occurred in Data Phase (Fast) data rate after the last write to this bit.
If this bit is set, writing a 1 clears it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"F_STER": {"access": "read-write",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates stuff error occurred in Data Phase (Fast) data rate
0 - Indicates stuff error has not occurred in Data Phase (Fast) data rate after the last write to this bit.
If this bit is set, writing a 1 clears it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"F_BERR": {"access": "read-write",
"bit_offset": "11",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates bit error occurred in Data Phase (Fast) data rate.
0 - Indicates bit error has not occurred in Data Phase (Fast) data rate after the last write to this bit.
If this bit is set, writing a 1 clears it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2686320660,
},
"SR": {"description": "Status Register",
"address_offset": "0x0018",
"access": "read-only",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"CONFIG": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates the core is in Configuration mode.
1 - Indicates the core is in Configuration mode.
0 - Indicates the core is not in Configuration mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"LBACK": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates the core is in Loopback mode.
1 - Indicates the core is in Loopback mode.
0 - Indicates the core is not in Loopback mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SLEEP": {"access": "read-only",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates the core is in Sleep mode.
1 - Indicates the core is in Sleep mode.
0 - Indicates the core is not in Sleep mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"NORMAL": {"access": "read-only",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates the core is in Normal Mode.
1 - Indicates the core is in Normal Mode.
0 - Indicates the core is not in Normal mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"BIDLE": {"access": "read-only",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates the CAN bus status.
1 - Indicates no bus communication is taking place.
0 - Indicates the core is either in Configuration mode or the bus is busy.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"BBSY": {"access": "read-only",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates the CAN bus status.
1 - Indicates that the core is either receiving a message or transmitting a message.
0 - Indicates that the core is either in Configuration mode or the bus is idle.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ERRWRN": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates that either the Transmit Error counter or the Receive Error counter has exceeded a value of 96.
1 - One or more error counters have a value 96.
0 - Neither of the error counters has a value 96.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ESTAT": {"access": "read-only",
"bit_offset": "7",
"bit_range": "",
"bit_width": "2",
"desc": "Indicates the error status of the core.
00 - Indicates Configuration Mode (CONFIG = 1). Error State is undefined.
01 - Indicates Error Active State.
11 - Indicates Error Passive State.
10 - Indicates Bus Off State.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PEE_CONFIG": {"access": "read-only",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates the core is in PEE Mode (Bus Integration State).
When this bit is set then BBSY and NORMAL status bits in SR register does not mean anything.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"BSFR_CONFIG": {"access": "read-only",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates the core is in Bus-off Recovery Mode (Bus Integration State)
When this bit is set then BBSY and NORMAL status bits in SR register does not mean anything.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"NISO": {"access": "read-only",
"bit_offset": "11",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Core is NISO (generated with C_IS_NISO = 1)
0 - Core is ISO (generated with C_IS_NISO = 0)
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SNOOP": {"access": "read-only",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates controller is in Snoop mode provided Normal mode bit is also set in this register.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TDCV": {"access": "read-only",
"bit_offset": "16",
"bit_range": "",
"bit_width": "7",
"desc": "This field gives the position of secondary sample point (defined as sum of TDCOFF and measured delay  
for EDL to r0 fall edge from TX to RX) in CAN clocks. 
This field is for status purpose.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2686320664,
},
"ISR": {"description": "Interrupt Status Register",
"address_offset": "0x001C",
"access": "read-only",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"ARBLST": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "1 - indicates that arbitration was lost during message transmission.
This bit can be cleared by writing to the ICR.
This bit is also cleared when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TXOK": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "1 - indicates that a message was transmitted successfully.
This bit can be cleared by writing to the ICR.
This bit is also cleared when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PEE": {"access": "read-only",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "1 - indicates that the core (CANFD) has detected PEE event.
This bit can be cleared by writing to the ICR.
This bit is also cleared when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"BSFRD": {"access": "read-only",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "1 - indicates that the core recovered from Bus Off state.
This bit can be cleared by writing to the ICR.
This bit is also cleared when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXOK": {"access": "read-only",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "1 - indicates that a message was received successfully and stored into the RX FIFO.
This bit can be cleared by writing to the ICR.
This bit is also cleared when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXFOFLW": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates that a message has been lost. This condition occurs when a new message is being received and the Receive FIFO is Full.
This bit can be cleared by writing to the ICR.
This bit is also cleared when a 0 is written to the CEN bit in the SRR only valid in FIFO Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ERROR": {"access": "read-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "1 - indicates that an error occurred during message transmission or reception.
This bit can be cleared by writing to the ICR.
This bit is also cleared when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"BSOFF": {"access": "read-only",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "1 - indicates that the core entered the Bus Off state.
This bit can be cleared by writing to the ICR.
This bit is also cleared when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SLP": {"access": "read-only",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "1 - indicates that the CAN core entered Sleep mode.
This bit can be cleared by writing to the ICR.
This bit is also cleared when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"WKUP": {"access": "read-only",
"bit_offset": "11",
"bit_range": "",
"bit_width": "1",
"desc": "1 - indicates that the core entered Normal mode from Sleep Mode
This bit can be cleared by writing to the ICR.
This bit is also cleared when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXFWMFLL": {"access": "read-only",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates that Rx FIFO is full based on watermark programming.
The interrupt continues to assert as long as the RX FIFO count is above RX FIFO Full watermark.
This bit can be cleared by writing to the respective bit in ICR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TXRRS": {"access": "read-only",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates that a Buffer Ready request was cleared.
This bit can be cleared by writing to the respective bit in ICR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TXCRS": {"access": "read-only",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates that a Cancellation request was cleared.
This bit can be cleared by writing to the respective bit in ICR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXRBF": {"access": "read-only",
"bit_offset": "15",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates that a receive buffer has received a message and become full.
This bit can be cleared by writing to the respective bit in ICR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXBOFLW": {"access": "read-only",
"bit_offset": "16",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates that a message has been lost due to buffer condition. Buffer index is captured in RXBOFLW_BI field.
This bit can be cleared by writing to the respective bit in ICR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXMNF": {"access": "read-only",
"bit_offset": "17",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates that Match process did not finish until the start of 6th Bit in EOF field and frame was discarded.
This bit can be cleared by writing to the respective bit in ICR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXLRM_BI": {"access": "read-only",
"bit_offset": "18",
"bit_range": "",
"bit_width": "6",
"desc": "Gives Rx Buffer index for last received message.
This field has meaning only if RXOK bit is set in this register.
This field is cleared at hard/soft reset or when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXBOFLW_BI": {"access": "read-only",
"bit_offset": "24",
"bit_range": "",
"bit_width": "6",
"desc": "Gives Rx Buffer index for which overflow event is generated.
This field is automatically cleared to default if RXBOFLW bit is cleared in this register.
In case more than one overflow event happens (before host could clear RXBOFLW), RXBOFLW_BI will show overflow index for the last event.
This field has meaning only if Overflow interrupt RXBOFLW bit is set.
This field is also cleared at hard/soft reset or when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2686320668,
},
"IER": {"description": "Interrupt Enable Register",
"address_offset": "0x0020",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"EARBLOST": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enable interrupt generation if ARBLST bit in ISR is set.
0 - Disable interrupt generation if ARBLST bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ETXOK": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "1 = Enable interrupt generation if TXOK bit in ISR is set.
0 = Disable interrupt generation if TXOK bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EPEE": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Protocol Exception Event interrupt enable
1 - Enable interrupt generation if PEE bit in ISR is set.
0 - Disable interrupt generation if PEE bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EBSFRD": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Bus-off Recovery Done interrupt enable
1 - Enable interrupt generation if BSFRD bit in ISR is set.
0 - Disable interrupt generation if BSFRD bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ERXOK": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "New message Received interrupt enable
1 - Enable interrupt generation if RXOK bit in ISR is set.
0 - Disable interrupt generation if RXOK bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ERFXOFLW": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enable interrupt generation if RFXOFLW bit in ISR is set.
0 - Disable interrupt generation if RFXOFLW bit in ISR is set.
Only valid in FIFO Mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EERROR": {"access": "read-write",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "Error interrupt enable
1 - Enable interrupt generation if ERROR bit in ISR is set.
0 - Disable interrupt generation if ERROR bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EBSOFF": {"access": "read-write",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enable interrupt generation if BSOFF bit in ISR is set.
0 - Disable interrupt generation if BSOFF bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ESLP": {"access": "read-write",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enable interrupt generation if SLP bit in ISR is set.
0 - Disable interrupt generation if SLP bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EWKUP": {"access": "read-write",
"bit_offset": "11",
"bit_range": "",
"bit_width": "1",
"desc": "Wakeup interrupt enable
1 - Enable interrupt generation if WKUP bit in ISR is set.
0 - Disable interrupt generation if WKUP bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ERXFWMFLL": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enable interrupt generation if RXFWMFLL bit in ISR is set.
0 - Disable interrupt generation if RXFWMFLL bit in ISR is set.
Only valid in MailBox Mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ETXRRS": {"access": "read-write",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "Tx Buffer Ready Request Served Interrupt Enable
1 - Enable interrupt generation if TXRRS bit in ISR is set.
0 - Disable interrupt generation if TXRRS bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ETXCRS": {"access": "read-write",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enable interrupt generation if TXCRS bit in ISR is set.
0 - Disable interrupt generation if TXCRS bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ERXRBF": {"access": "read-write",
"bit_offset": "15",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enable interrupt generation if RXRBF bit in ISR is set.
0 - Disable interrupt generation if RXRBF bit in ISR is set.
Only valid in MailBox Mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ERXBOFLW": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "1",
"desc": "1 = Enable interrupt generation if RXBOFLW bit in ISR is set.
0 = Disable interrupt generation if RXBOFLW bit in ISR is set.
Only valid in MailBox Mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ERXMNF": {"access": "read-write",
"bit_offset": "17",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enable interrupt generation if RXMNF bit in ISR is set.
0 - Disable interrupt generation if RXMNF bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2686320672,
},
"ICR": {"description": "Interrupt Clear Register",
"address_offset": "0x0024",
"access": "write-only",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"CARBLOST": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTXOK": {"access": "write-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Clear Transmission successful interrupt.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CPEE": {"access": "write-only",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CBSFRD": {"access": "write-only",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CRXOK": {"access": "write-only",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CRFXOFLW": {"access": "write-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
only valid in FIFO Mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CERROR": {"access": "write-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CBSOFF": {"access": "write-only",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CSLP": {"access": "write-only",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CWKUP": {"access": "write-only",
"bit_offset": "11",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CRXFWMFLL": {"access": "write-only",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
Only valid in FIFO Mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTXRRS": {"access": "write-only",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTXCRS": {"access": "write-only",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CRXRBF": {"access": "write-only",
"bit_offset": "15",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
only valid in MailBox Mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CRXBOFLW": {"access": "write-only",
"bit_offset": "16",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
only valid in MailBox Mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CRXMNF": {"access": "write-only",
"bit_offset": "17",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2686320676,
},
"TSR": {"description": "Time Stamp Register",
"address_offset": "0x0028",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"CTS": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Internal free running counter is cleared to 0 when CTS=1. 
This bit only needs to be written once with a '1' to clear the counter. 
The bit will always read as '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TIMESTAMP_CNT": {"access": "read-only",
"bit_offset": "16",
"bit_range": "",
"bit_width": "16",
"desc": "This Status field gives running value of the time stamp counter. 
This  field is cleared when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2686320680,
},
"DPBRPR": {"description": "Data Phase Baud Rate Prescalar Register",
"address_offset": "0x0088",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"DP_BRP": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "These bits indicate the prescaler value for Data Bit Timing as specified in the CANFD standard.
The actual value is one more than the value written to the register.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TDCOFF": {"access": "read-write",
"bit_offset": "8",
"bit_range": "",
"bit_width": "5",
"desc": "This offset is specified in CAN clock cycles and is added to the measured transnitter delay to place the Secondary Sample Point (SSP) at appropriate position (for ex. set this to half data bit time in terms of CAN clock cycles to place SSP in the middle of the data bit).
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TDC": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables TDC function as specified in the CANFD standard
0 - TDC is disabled
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2686320776,
},
"DPBTR": {"description": "Data Phase Bit Timing Register",
"address_offset": "0x008C",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"DP_TS1": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "4",
"desc": "Indicates the Sum of Propagation Segment and Phase Segment 1 as specified in the CANFD standard for Data Bit Timing.
The actual value is one more than the value written to the register.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DP_TS2": {"access": "read-write",
"bit_offset": "8",
"bit_range": "",
"bit_width": "3",
"desc": "Indicates the Phase Segment 2 as specified in the CANFD standard for Data Bit Timing. 
The actual value is one more than the value written to the register.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DP_SJW": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "3",
"desc": "Indicates the Synchronization Jump Width as specified in the CANFD standard for Data Bit Timing. 
The actual value is one more than the value written to the register.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2686320780,
},
"TRR": {"description": "Tx Buffer Ready Request Register",
"address_offset": "0x0090",
"access": "read-write",
"size": "8",
"interface": "S_AXI_LITE",
"fields": {"RR": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "This is control bit corresponds to TBi message in Tx BRAM.
Host writes 1 to indicate buffer is ready for transmission. Core clears this bit when   Buffer transmission is completed on CAN Bus or   If core is in DAR mode, then after one transmission attempt on CAN bus [either successful or unsuccessful (i.e. arbitration lost or error)] or   If message is cancelled due to cancellation request or   Any combination of Above Host writes are ignored when this bit is 1.
Note - This register remains in reset when SNOOP mode is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2686320784,
},
"IETRS": {"description": "Interrupt Enable Tx Buffer Ready Request Served/Cleared Register",
"address_offset": "0x0094",
"access": "read-write",
"size": "8",
"interface": "S_AXI_LITE",
"fields": {"ERRS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "1 - Enables setting TXRRS bit in ISR when RRi bit in TRR register clears.
0 - TXRRS bit in ISR will not set if  RRi bit in TRR register clears.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2686320788,
},
"TCR": {"description": "Tx Buffer Cancellation Request Register",
"address_offset": "0x0098",
"access": "read-write",
"size": "8",
"interface": "S_AXI_LITE",
"fields": {"CR": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "This is cancellation request bit corresponds to RR0 bit in TRR register.
Host writes 1 to indicate cancellation request of corresponding buffer ready request (i.e. RR0 bit in TRR register). Core clears this bit when cancellation request is completed. 
Host writes to this bit are ignored if CR0 is 1 or RR0 bit of TRR register is 0.
If the buffer is already locked for transmission by Transfer Layer then cancellation is performed at the end of transmission cycle irrespective whether frame transmitted successfully or failed
i.e. if message is failed due to arbitration loss or any error, then message will be cancelled (no retransmission attempt) and cancellation request will be cleared. Alongwith RR0 bit will get cleared.
If message is transmitted successfully, then RR0 bit will clear and cancellation request will be cleared anyway.
Note : If internal buffer scheduling round is in progress, then cancellation consideration is postponed till it is over.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2686320792,
},
"IETCS": {"description": "Interrupt Enable Tx Buffer Cancellation Request Served/Cleared Register",
"address_offset": "0x009C",
"access": "read-write",
"size": "8",
"interface": "S_AXI_LITE",
"fields": {"ECRS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "1 - Enables setting TXCRS bit in ISR when CR0 bit in TCS register clears.
0 - TXCRS bit in ISR will not set if  CR0 bit in TRR register clears.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2686320796,
},
"AFR": {"description": "Acceptance Filter(control) Register",
"address_offset": "0x00E0",
"access": "read-write",
"size": "8",
"interface": "S_AXI_LITE",
"fields": {"UAF": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Enables the use of acceptance filter mask pair i.
1 - Indicates Acceptance Filter Mask Register 0 (AFMR0 or M0) and Acceptance Filter ID Register 0 (AFID0 or F0) pair is used for acceptance filtering.
0 - Indicates AFMR0 and AFID0 pair is not used for acceptance filtering.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2686320864,
},
"FSR": {"description": "Rx FIFO Status Register",
"address_offset": "0x00E8",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"RI": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "5",
"desc": "Each time IRI bit is set, core increments read index by +1 (provided FILL level is not 0) and maintained it for Host to access 
next available message.
RI = 0x0 -> Next message read starts from location = 0x1100 (to 0x1147)
RI = 0x1 -> Next message read starts from location = 0x1148 (to 0x118F)...
RI = 0x1F -> Next message read starts from location = 0x19B8 (to 0x19FF)
RI is maintained if CEN bit is cleared.
RI gets reset to 0 if soft or hard reset is asserted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRI": {"access": "write-only",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "With each Host writes setting this bit as 1, core increments Read index (RI field) by 1 and update fill level (i.e. decrement  by 1).
If FILL level is 0, setting this bit has no effect. Note that FILL level may remain unchanged when IRI is written if core is just finishing a successful receive and incrementing internal write index.
This bit always read as 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FL": {"access": "read-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "6",
"desc": "Number of stored message in Receive FIFO starting from RI index given in this register.
For example, if FL = 0x5 and RI = 0x3 then Rx FIFO has 5 messages starting from Read Index 3 (Start address 0x1190).
FL is maintained if CEN bit is cleared.
FL gets reset to 0 if soft or hard reset is asserted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2686320872,
},
"WMR": {"description": "Rx FIFO Watermark Register",
"address_offset": "0x00EC",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"RXFWM": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "5",
"desc": "RXFIFO generates FULL interrupt based on the value programmed in this field.
User should set it within (1-31) range. 
The RX FIFO Full Watermark interrupt in ISR register continues to assert as long as the RX FIFO Fill Level is above RX FIFO Full watermark.
This field can be written to only when CEN bit in SRR is '0'
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2686320876,
},
"TX_BUFFER_START": {"description": "Tx Buffer Start Address",
"address_offset": "0x0100",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {},
"memoryAddr": 2686320896,
},
"TX_BUFFER_END": {"description": "Tx Buffer End Address",
"address_offset": "0x09FC",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {},
"memoryAddr": 2686323196,
},
"RX_BUFFER_START": {"description": "Rx Buffer Start Address",
"address_offset": "0x1100",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {},
"memoryAddr": 2686324992,
},
"TX_BUFFER_END_FIFO": {"description": "Rx Buffer End Address",
"address_offset": "0x19FC",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {},
"memoryAddr": 2686327292,
},
},
"canfd_9": {"SRR": {"description": "Software Reset Register",
"address_offset": "0x0000",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"SRST": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "The software reset bit for the core.
1 - core is reset.
If a 1 is written to this bit, all the core configuration registers (including the SRR) are reset.
Reads to this bit always return a 0.
Note - After performing soft or hard reset, wait for 8 AXI Clock cycles before initiating next AXILite transaction.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CEN": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "The Enable bit for the core.
1 - The core is in Loopback, Sleep, Snoop or Normal mode depending on the LBACK, SLEEP and SNOOP bits in the MSR.
0 - The core is in the Configuration mode.
Note - If the CEN bit is changed during core operation, it is recommended to reset the core so that operations start afresh.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2686386176,
},
"MSR": {"description": "Mode Select Register",
"address_offset": "0x0004",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"SLEEP": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "The Sleep Mode request bit.
1 - Request core to be in Sleep mode.
0 - No such request.
This bit is cleared when the core wakes up from the Sleep mode.
In order for core to enter Sleep mode, LBACK and SNOOP bits in this register should be set to 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"LBACK": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "The Loop Back Mode Request bit.
1 - Request core to be in Loop Back mode.
0 - No such request.
This bit can be written to only when CEN bit in SRR is '0.'
In order for core to enter LBACK mode, SLEEP and SNOOP bits in this register should be set to '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SNOOP": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "The Snoop Mode Request bit.
1 - Request core to be in Snoop mode.
0 - No such request.
This bit can be written only when CEN bit in SRR is '0'.
The user has to make sure that SNOOP mode is programmed only after system reset or software reset.
In order for core to enter Snoop mode, LBACK and SLEEP bits in this register should be set to '0'.
The features of Snoop mode are      Core transmits recessive bits on to CAN bus     Receives messages that are transmitted by other nodes but does not ACK. Stores received messages in RxBRAM based on programmed ID filtering.     Error counters are disabled and cleared to 0. Reads to error counter register will return zero.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"BRSD": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Makes core transmit CANFD frames only in nominal bit rate (by overriding Tx Message element setting).
0 - Makes core transmit CANFD frames as per BRS bit in TX Message element.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DAR": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Disable Auto retransmission to provide single shot transmission.
0 - Auto retransmission enabled.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DPEE": {"access": "read-write",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Disable Protocol Exception Event detection/generation by CANFD receiver if \"res\" bit in CANFD frame is detected as 1. 
In this case, CANFD receiver will generate Form error.
0 - PEE detection/generation is enabled.  If CANFD receiver detects \"res\" bit as 1, it will go to Bus Integration
state (PEE_config) and waits for Bus Idle condition (11 consecutive nominal recessive bits). Error counter remains unchanged.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SBR": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Start Bus-off Recovery Request.
0 - No such request.
Node stays in Bus-off state until SBR bit is set to '1' (provided ABR bit in this register is not set).
This bit can be written only when node is in Bus-off state. 
This bit auto clears after node completes the bus-off recovery or leave bus-off state due to hard/soft reset or CEN de-assertion. 
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ABR": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Auto Bus-off Recovery Request.
0 - No such request.
If this bit is set, node do auto bus-off recovery irrespective of SBR setting in this register.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2686386180,
},
"BRPR": {"description": "Nominal Baud Rate Prescalar Register",
"address_offset": "0x0008",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"BRP": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "These bits indicate the prescaler value. 
The actual value is one more than the value written to the register.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2686386184,
},
"BTR": {"description": "Nominal Bit Timing Register",
"address_offset": "0x000C",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"TS1": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "6",
"desc": "Indicates the Sum of Propagation Segment and Phase Segment 1 as specified in the standard for Nominal Bit Timing.
The actual value is one more than the value written to the register.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TS2": {"access": "read-write",
"bit_offset": "8",
"bit_range": "",
"bit_width": "4",
"desc": "Indicates the Phase Segment 2 as specified in the CANFD standard for Nominal Bit Timing.
The actual value is one more than the value written to the register.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SJW": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "4",
"desc": "Indicates the Synchronization Jump Width as specified in the CANFD standard for Nominal Bit Timing.
The actual value is one more than the value written to the register.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2686386188,
},
"ECR": {"description": "Error Count Register",
"address_offset": "0x0010",
"access": "read-only",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"TEC": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Indicates the value of Transmit Error Counter.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"REC": {"access": "read-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "8",
"desc": "Indicates the value of Recieve Error Counter.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2686386192,
},
"ESR": {"description": "Error Status Register",
"address_offset": "0x0014",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"CRCER": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates a CRC error has occurred.
1 - Indicates a CRC error has occurred.
0 - Indicates a CRC error has not occurred on the bus after the last write to this bit.
If this bit is set, writing a 1 clears it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FMER": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates an error in one of the fixed form fields in the message frame.
1 - Indicates a form error has occurred.
0 - Indicates a form error has not occurred on the bus after the last write to this bit.
If this bit is set, writing a 1 clears it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"STER": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates an error if there is a stuffing violation.
1 - Indicates a stuff error has occurred.
0 - Indicates a stuff error has not occurred on the bus after the last write to this bit.
If this bit is set, writing a 1 clears it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"BERR": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates the received bit is not the same as the transmitted bit during bus communication.
1 - Indicates a bit error has occurred.
0 - Indicates a bit error has not occurred on the bus after the last write to this bit.
If this bit is set, writing a 1 clears it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ACKER": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates an acknowledgement error.
1 - Indicates an acknowledgement error has occurred.
0 - Indicates an acknowledgement error has not occurred on the bus after the last write to this bit.
If this bit is set, writing a 1 clears it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"F_CRCER": {"access": "read-write",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates CRC error occurred in Data  Phase (Fast) data rate
0 - Indicates CRC error has not occurred in Data Phase (Fast) data rate after the last write to this bit.
If this bit is set, writing a 1 clears it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"F_FMER": {"access": "read-write",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates form error occurred in Data Phase (Fast) data rate
0 - Indicates form error has not occurred in Data Phase (Fast) data rate after the last write to this bit.
If this bit is set, writing a 1 clears it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"F_STER": {"access": "read-write",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates stuff error occurred in Data Phase (Fast) data rate
0 - Indicates stuff error has not occurred in Data Phase (Fast) data rate after the last write to this bit.
If this bit is set, writing a 1 clears it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"F_BERR": {"access": "read-write",
"bit_offset": "11",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates bit error occurred in Data Phase (Fast) data rate.
0 - Indicates bit error has not occurred in Data Phase (Fast) data rate after the last write to this bit.
If this bit is set, writing a 1 clears it.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2686386196,
},
"SR": {"description": "Status Register",
"address_offset": "0x0018",
"access": "read-only",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"CONFIG": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates the core is in Configuration mode.
1 - Indicates the core is in Configuration mode.
0 - Indicates the core is not in Configuration mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"LBACK": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates the core is in Loopback mode.
1 - Indicates the core is in Loopback mode.
0 - Indicates the core is not in Loopback mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SLEEP": {"access": "read-only",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates the core is in Sleep mode.
1 - Indicates the core is in Sleep mode.
0 - Indicates the core is not in Sleep mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"NORMAL": {"access": "read-only",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates the core is in Normal Mode.
1 - Indicates the core is in Normal Mode.
0 - Indicates the core is not in Normal mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"BIDLE": {"access": "read-only",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates the CAN bus status.
1 - Indicates no bus communication is taking place.
0 - Indicates the core is either in Configuration mode or the bus is busy.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"BBSY": {"access": "read-only",
"bit_offset": "5",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates the CAN bus status.
1 - Indicates that the core is either receiving a message or transmitting a message.
0 - Indicates that the core is either in Configuration mode or the bus is idle.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ERRWRN": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "Indicates that either the Transmit Error counter or the Receive Error counter has exceeded a value of 96.
1 - One or more error counters have a value 96.
0 - Neither of the error counters has a value 96.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ESTAT": {"access": "read-only",
"bit_offset": "7",
"bit_range": "",
"bit_width": "2",
"desc": "Indicates the error status of the core.
00 - Indicates Configuration Mode (CONFIG = 1). Error State is undefined.
01 - Indicates Error Active State.
11 - Indicates Error Passive State.
10 - Indicates Bus Off State.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PEE_CONFIG": {"access": "read-only",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates the core is in PEE Mode (Bus Integration State).
When this bit is set then BBSY and NORMAL status bits in SR register does not mean anything.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"BSFR_CONFIG": {"access": "read-only",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates the core is in Bus-off Recovery Mode (Bus Integration State)
When this bit is set then BBSY and NORMAL status bits in SR register does not mean anything.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"NISO": {"access": "read-only",
"bit_offset": "11",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Core is NISO (generated with C_IS_NISO = 1)
0 - Core is ISO (generated with C_IS_NISO = 0)
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SNOOP": {"access": "read-only",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates controller is in Snoop mode provided Normal mode bit is also set in this register.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TDCV": {"access": "read-only",
"bit_offset": "16",
"bit_range": "",
"bit_width": "7",
"desc": "This field gives the position of secondary sample point (defined as sum of TDCOFF and measured delay  
for EDL to r0 fall edge from TX to RX) in CAN clocks. 
This field is for status purpose.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2686386200,
},
"ISR": {"description": "Interrupt Status Register",
"address_offset": "0x001C",
"access": "read-only",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"ARBLST": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "1 - indicates that arbitration was lost during message transmission.
This bit can be cleared by writing to the ICR.
This bit is also cleared when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TXOK": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "1 - indicates that a message was transmitted successfully.
This bit can be cleared by writing to the ICR.
This bit is also cleared when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"PEE": {"access": "read-only",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "1 - indicates that the core (CANFD) has detected PEE event.
This bit can be cleared by writing to the ICR.
This bit is also cleared when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"BSFRD": {"access": "read-only",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "1 - indicates that the core recovered from Bus Off state.
This bit can be cleared by writing to the ICR.
This bit is also cleared when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXOK": {"access": "read-only",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "1 - indicates that a message was received successfully and stored into the RX FIFO.
This bit can be cleared by writing to the ICR.
This bit is also cleared when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXFOFLW": {"access": "read-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates that a message has been lost. This condition occurs when a new message is being received and the Receive FIFO is Full.
This bit can be cleared by writing to the ICR.
This bit is also cleared when a 0 is written to the CEN bit in the SRR only valid in FIFO Mode.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ERROR": {"access": "read-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "1 - indicates that an error occurred during message transmission or reception.
This bit can be cleared by writing to the ICR.
This bit is also cleared when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"BSOFF": {"access": "read-only",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "1 - indicates that the core entered the Bus Off state.
This bit can be cleared by writing to the ICR.
This bit is also cleared when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"SLP": {"access": "read-only",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "1 - indicates that the CAN core entered Sleep mode.
This bit can be cleared by writing to the ICR.
This bit is also cleared when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"WKUP": {"access": "read-only",
"bit_offset": "11",
"bit_range": "",
"bit_width": "1",
"desc": "1 - indicates that the core entered Normal mode from Sleep Mode
This bit can be cleared by writing to the ICR.
This bit is also cleared when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXFWMFLL": {"access": "read-only",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates that Rx FIFO is full based on watermark programming.
The interrupt continues to assert as long as the RX FIFO count is above RX FIFO Full watermark.
This bit can be cleared by writing to the respective bit in ICR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TXRRS": {"access": "read-only",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates that a Buffer Ready request was cleared.
This bit can be cleared by writing to the respective bit in ICR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TXCRS": {"access": "read-only",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates that a Cancellation request was cleared.
This bit can be cleared by writing to the respective bit in ICR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXRBF": {"access": "read-only",
"bit_offset": "15",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates that a receive buffer has received a message and become full.
This bit can be cleared by writing to the respective bit in ICR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXBOFLW": {"access": "read-only",
"bit_offset": "16",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates that a message has been lost due to buffer condition. Buffer index is captured in RXBOFLW_BI field.
This bit can be cleared by writing to the respective bit in ICR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXMNF": {"access": "read-only",
"bit_offset": "17",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Indicates that Match process did not finish until the start of 6th Bit in EOF field and frame was discarded.
This bit can be cleared by writing to the respective bit in ICR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXLRM_BI": {"access": "read-only",
"bit_offset": "18",
"bit_range": "",
"bit_width": "6",
"desc": "Gives Rx Buffer index for last received message.
This field has meaning only if RXOK bit is set in this register.
This field is cleared at hard/soft reset or when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RXBOFLW_BI": {"access": "read-only",
"bit_offset": "24",
"bit_range": "",
"bit_width": "6",
"desc": "Gives Rx Buffer index for which overflow event is generated.
This field is automatically cleared to default if RXBOFLW bit is cleared in this register.
In case more than one overflow event happens (before host could clear RXBOFLW), RXBOFLW_BI will show overflow index for the last event.
This field has meaning only if Overflow interrupt RXBOFLW bit is set.
This field is also cleared at hard/soft reset or when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2686386204,
},
"IER": {"description": "Interrupt Enable Register",
"address_offset": "0x0020",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"EARBLOST": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enable interrupt generation if ARBLST bit in ISR is set.
0 - Disable interrupt generation if ARBLST bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ETXOK": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "1 = Enable interrupt generation if TXOK bit in ISR is set.
0 = Disable interrupt generation if TXOK bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EPEE": {"access": "read-write",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Protocol Exception Event interrupt enable
1 - Enable interrupt generation if PEE bit in ISR is set.
0 - Disable interrupt generation if PEE bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EBSFRD": {"access": "read-write",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Bus-off Recovery Done interrupt enable
1 - Enable interrupt generation if BSFRD bit in ISR is set.
0 - Disable interrupt generation if BSFRD bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ERXOK": {"access": "read-write",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "New message Received interrupt enable
1 - Enable interrupt generation if RXOK bit in ISR is set.
0 - Disable interrupt generation if RXOK bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ERFXOFLW": {"access": "read-write",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enable interrupt generation if RFXOFLW bit in ISR is set.
0 - Disable interrupt generation if RFXOFLW bit in ISR is set.
Only valid in FIFO Mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EERROR": {"access": "read-write",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "Error interrupt enable
1 - Enable interrupt generation if ERROR bit in ISR is set.
0 - Disable interrupt generation if ERROR bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EBSOFF": {"access": "read-write",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enable interrupt generation if BSOFF bit in ISR is set.
0 - Disable interrupt generation if BSOFF bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ESLP": {"access": "read-write",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enable interrupt generation if SLP bit in ISR is set.
0 - Disable interrupt generation if SLP bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"EWKUP": {"access": "read-write",
"bit_offset": "11",
"bit_range": "",
"bit_width": "1",
"desc": "Wakeup interrupt enable
1 - Enable interrupt generation if WKUP bit in ISR is set.
0 - Disable interrupt generation if WKUP bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ERXFWMFLL": {"access": "read-write",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enable interrupt generation if RXFWMFLL bit in ISR is set.
0 - Disable interrupt generation if RXFWMFLL bit in ISR is set.
Only valid in MailBox Mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ETXRRS": {"access": "read-write",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "Tx Buffer Ready Request Served Interrupt Enable
1 - Enable interrupt generation if TXRRS bit in ISR is set.
0 - Disable interrupt generation if TXRRS bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ETXCRS": {"access": "read-write",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enable interrupt generation if TXCRS bit in ISR is set.
0 - Disable interrupt generation if TXCRS bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ERXRBF": {"access": "read-write",
"bit_offset": "15",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enable interrupt generation if RXRBF bit in ISR is set.
0 - Disable interrupt generation if RXRBF bit in ISR is set.
Only valid in MailBox Mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ERXBOFLW": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "1",
"desc": "1 = Enable interrupt generation if RXBOFLW bit in ISR is set.
0 = Disable interrupt generation if RXBOFLW bit in ISR is set.
Only valid in MailBox Mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"ERXMNF": {"access": "read-write",
"bit_offset": "17",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enable interrupt generation if RXMNF bit in ISR is set.
0 - Disable interrupt generation if RXMNF bit in ISR is set.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2686386208,
},
"ICR": {"description": "Interrupt Clear Register",
"address_offset": "0x0024",
"access": "write-only",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"CARBLOST": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTXOK": {"access": "write-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Clear Transmission successful interrupt.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CPEE": {"access": "write-only",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CBSFRD": {"access": "write-only",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CRXOK": {"access": "write-only",
"bit_offset": "4",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CRFXOFLW": {"access": "write-only",
"bit_offset": "6",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
only valid in FIFO Mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CERROR": {"access": "write-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CBSOFF": {"access": "write-only",
"bit_offset": "9",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CSLP": {"access": "write-only",
"bit_offset": "10",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CWKUP": {"access": "write-only",
"bit_offset": "11",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CRXFWMFLL": {"access": "write-only",
"bit_offset": "12",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
Only valid in FIFO Mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTXRRS": {"access": "write-only",
"bit_offset": "13",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CTXCRS": {"access": "write-only",
"bit_offset": "14",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CRXRBF": {"access": "write-only",
"bit_offset": "15",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
only valid in MailBox Mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CRXBOFLW": {"access": "write-only",
"bit_offset": "16",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
only valid in MailBox Mode
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CRXMNF": {"access": "write-only",
"bit_offset": "17",
"bit_range": "",
"bit_width": "1",
"desc": "Writing a 1 to this bit clears the respective bit in the ISR. Reads always 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2686386212,
},
"TSR": {"description": "Time Stamp Register",
"address_offset": "0x0028",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"CTS": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Internal free running counter is cleared to 0 when CTS=1. 
This bit only needs to be written once with a '1' to clear the counter. 
The bit will always read as '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TIMESTAMP_CNT": {"access": "read-only",
"bit_offset": "16",
"bit_range": "",
"bit_width": "16",
"desc": "This Status field gives running value of the time stamp counter. 
This  field is cleared when a 0 is written to the CEN bit in the SRR.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2686386216,
},
"DPBRPR": {"description": "Data Phase Baud Rate Prescalar Register",
"address_offset": "0x0088",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"DP_BRP": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "These bits indicate the prescaler value for Data Bit Timing as specified in the CANFD standard.
The actual value is one more than the value written to the register.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TDCOFF": {"access": "read-write",
"bit_offset": "8",
"bit_range": "",
"bit_width": "5",
"desc": "This offset is specified in CAN clock cycles and is added to the measured transnitter delay to place the Secondary Sample Point (SSP) at appropriate position (for ex. set this to half data bit time in terms of CAN clock cycles to place SSP in the middle of the data bit).
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"TDC": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "1",
"desc": "1 - Enables TDC function as specified in the CANFD standard
0 - TDC is disabled
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2686386312,
},
"DPBTR": {"description": "Data Phase Bit Timing Register",
"address_offset": "0x008C",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"DP_TS1": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "4",
"desc": "Indicates the Sum of Propagation Segment and Phase Segment 1 as specified in the CANFD standard for Data Bit Timing.
The actual value is one more than the value written to the register.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DP_TS2": {"access": "read-write",
"bit_offset": "8",
"bit_range": "",
"bit_width": "3",
"desc": "Indicates the Phase Segment 2 as specified in the CANFD standard for Data Bit Timing. 
The actual value is one more than the value written to the register.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"DP_SJW": {"access": "read-write",
"bit_offset": "16",
"bit_range": "",
"bit_width": "3",
"desc": "Indicates the Synchronization Jump Width as specified in the CANFD standard for Data Bit Timing. 
The actual value is one more than the value written to the register.
This bit can be written only when CEN bit in SRR is '0'.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2686386316,
},
"TRR": {"description": "Tx Buffer Ready Request Register",
"address_offset": "0x0090",
"access": "read-write",
"size": "8",
"interface": "S_AXI_LITE",
"fields": {"RR": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "This is control bit corresponds to TBi message in Tx BRAM.
Host writes 1 to indicate buffer is ready for transmission. Core clears this bit when   Buffer transmission is completed on CAN Bus or   If core is in DAR mode, then after one transmission attempt on CAN bus [either successful or unsuccessful (i.e. arbitration lost or error)] or   If message is cancelled due to cancellation request or   Any combination of Above Host writes are ignored when this bit is 1.
Note - This register remains in reset when SNOOP mode is enabled.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2686386320,
},
"IETRS": {"description": "Interrupt Enable Tx Buffer Ready Request Served/Cleared Register",
"address_offset": "0x0094",
"access": "read-write",
"size": "8",
"interface": "S_AXI_LITE",
"fields": {"ERRS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "1 - Enables setting TXRRS bit in ISR when RRi bit in TRR register clears.
0 - TXRRS bit in ISR will not set if  RRi bit in TRR register clears.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2686386324,
},
"TCR": {"description": "Tx Buffer Cancellation Request Register",
"address_offset": "0x0098",
"access": "read-write",
"size": "8",
"interface": "S_AXI_LITE",
"fields": {"CR": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "This is cancellation request bit corresponds to RR0 bit in TRR register.
Host writes 1 to indicate cancellation request of corresponding buffer ready request (i.e. RR0 bit in TRR register). Core clears this bit when cancellation request is completed. 
Host writes to this bit are ignored if CR0 is 1 or RR0 bit of TRR register is 0.
If the buffer is already locked for transmission by Transfer Layer then cancellation is performed at the end of transmission cycle irrespective whether frame transmitted successfully or failed
i.e. if message is failed due to arbitration loss or any error, then message will be cancelled (no retransmission attempt) and cancellation request will be cleared. Alongwith RR0 bit will get cleared.
If message is transmitted successfully, then RR0 bit will clear and cancellation request will be cleared anyway.
Note : If internal buffer scheduling round is in progress, then cancellation consideration is postponed till it is over.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2686386328,
},
"IETCS": {"description": "Interrupt Enable Tx Buffer Cancellation Request Served/Cleared Register",
"address_offset": "0x009C",
"access": "read-write",
"size": "8",
"interface": "S_AXI_LITE",
"fields": {"ECRS": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "1 - Enables setting TXCRS bit in ISR when CR0 bit in TCS register clears.
0 - TXCRS bit in ISR will not set if  CR0 bit in TRR register clears.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2686386332,
},
"AFR": {"description": "Acceptance Filter(control) Register",
"address_offset": "0x00E0",
"access": "read-write",
"size": "8",
"interface": "S_AXI_LITE",
"fields": {"UAF": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Enables the use of acceptance filter mask pair i.
1 - Indicates Acceptance Filter Mask Register 0 (AFMR0 or M0) and Acceptance Filter ID Register 0 (AFID0 or F0) pair is used for acceptance filtering.
0 - Indicates AFMR0 and AFID0 pair is not used for acceptance filtering.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2686386400,
},
"FSR": {"description": "Rx FIFO Status Register",
"address_offset": "0x00E8",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"RI": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "5",
"desc": "Each time IRI bit is set, core increments read index by +1 (provided FILL level is not 0) and maintained it for Host to access 
next available message.
RI = 0x0 -> Next message read starts from location = 0x1100 (to 0x1147)
RI = 0x1 -> Next message read starts from location = 0x1148 (to 0x118F)...
RI = 0x1F -> Next message read starts from location = 0x19B8 (to 0x19FF)
RI is maintained if CEN bit is cleared.
RI gets reset to 0 if soft or hard reset is asserted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"IRI": {"access": "write-only",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "With each Host writes setting this bit as 1, core increments Read index (RI field) by 1 and update fill level (i.e. decrement  by 1).
If FILL level is 0, setting this bit has no effect. Note that FILL level may remain unchanged when IRI is written if core is just finishing a successful receive and incrementing internal write index.
This bit always read as 0.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"FL": {"access": "read-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "6",
"desc": "Number of stored message in Receive FIFO starting from RI index given in this register.
For example, if FL = 0x5 and RI = 0x3 then Rx FIFO has 5 messages starting from Read Index 3 (Start address 0x1190).
FL is maintained if CEN bit is cleared.
FL gets reset to 0 if soft or hard reset is asserted.
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2686386408,
},
"WMR": {"description": "Rx FIFO Watermark Register",
"address_offset": "0x00EC",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {"RXFWM": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "5",
"desc": "RXFIFO generates FULL interrupt based on the value programmed in this field.
User should set it within (1-31) range. 
The RX FIFO Full Watermark interrupt in ISR register continues to assert as long as the RX FIFO Fill Level is above RX FIFO Full watermark.
This field can be written to only when CEN bit in SRR is '0'
",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 2686386412,
},
"TX_BUFFER_START": {"description": "Tx Buffer Start Address",
"address_offset": "0x0100",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {},
"memoryAddr": 2686386432,
},
"TX_BUFFER_END": {"description": "Tx Buffer End Address",
"address_offset": "0x09FC",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {},
"memoryAddr": 2686388732,
},
"RX_BUFFER_START": {"description": "Rx Buffer Start Address",
"address_offset": "0x1100",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {},
"memoryAddr": 2686390528,
},
"TX_BUFFER_END_FIFO": {"description": "Rx Buffer End Address",
"address_offset": "0x19FC",
"access": "read-write",
"size": "32",
"interface": "S_AXI_LITE",
"fields": {},
"memoryAddr": 2686392828,
},
},
"clu_0": {"CTRL": {"description": "Control signals",
"address_offset": "0",
"access": "read-write",
"size": "32",
"interface": "s_axi_EN",
"fields": {"AP_START": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Control signal Register for 'ap_start'.",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"AP_DONE": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Control signal Register for 'ap_done'.",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
"AP_IDLE": {"access": "read-only",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Control signal Register for 'ap_idle'.",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
"AP_READY": {"access": "read-only",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Control signal Register for 'ap_ready'.",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
"RESERVED_1": {"access": "read-only",
"bit_offset": "4",
"bit_range": "",
"bit_width": "3",
"desc": "Reserved.  0s on read.",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
"AUTO_RESTART": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "Control signal Register for 'auto_restart'.",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RESERVED_2": {"access": "read-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "24",
"desc": "Reserved.  0s on read.",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
},
"memoryAddr": 0,
},
"GIER": {"description": "Global Interrupt Enable Register",
"address_offset": "4",
"access": "read-write",
"size": "32",
"interface": "s_axi_EN",
"fields": {"Enable": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Master enable for the device interrupt output to the system interrupt controller: 0 = Disabled, 1 = Enabled",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RESERVED": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "31",
"desc": "Reserved.  0s on read.",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
},
"memoryAddr": 4,
},
"IP_IER": {"description": "IP Interrupt Enable Register",
"address_offset": "8",
"access": "read-write",
"size": "32",
"interface": "s_axi_EN",
"fields": {"CHAN0_INT_EN": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Enable Channel 0 (ap_done) Interrupt.  0 = Disabled, 1 = Enabled.",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CHAN1_INT_EN": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Enable Channel 1 (ap_ready) Interrupt.  0 = Disabled, 1 = Enabled.",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RESERVED": {"access": "read-only",
"bit_offset": "2",
"bit_range": "",
"bit_width": "30",
"desc": "Reserved.  0s on read.",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
},
"memoryAddr": 8,
},
"IP_ISR": {"description": "IP Interrupt Status Register",
"address_offset": "12",
"access": "read-write",
"size": "32",
"interface": "s_axi_EN",
"fields": {"CHAN0_INT_ST": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Channel 0 (ap_done) Interrupt Status. 0 = No Channel 0 input interrupt, 1 = Channel 0 input interrup",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
"CHAN1_INT_ST": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Channel 1 (ap_ready) Interrupt Status. 0 = No Channel 1 input interrupt, 1 = Channel 1 input interrup",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
"RESERVED": {"access": "read-only",
"bit_offset": "2",
"bit_range": "",
"bit_width": "30",
"desc": "Reserved.  0s on read.",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
},
"memoryAddr": 12,
},
"received_can_i": {"description": "Data signal of received_can_i",
"address_offset": "16",
"access": "write-only",
"size": "32",
"interface": "s_axi_EN",
"fields": {"received_can_i": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 31 to 0 of received_can_i",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 16,
},
"received_can_o": {"description": "Data signal of received_can_o",
"address_offset": "24",
"access": "read-only",
"size": "32",
"interface": "s_axi_EN",
"fields": {"received_can_o": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 31 to 0 of received_can_o",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
},
"memoryAddr": 24,
},
"received_can_o_ctrl": {"description": "Control signal of received_can_o",
"address_offset": "28",
"access": "read-only",
"size": "32",
"interface": "s_axi_EN",
"fields": {"received_can_o_ap_vld": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Control signal received_can_o_ap_vld",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
"RESERVED": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "31",
"desc": "Reserved.  0s on read.",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
},
"memoryAddr": 28,
},
"received_uart_i": {"description": "Data signal of received_uart_i",
"address_offset": "32",
"access": "write-only",
"size": "32",
"interface": "s_axi_EN",
"fields": {"received_uart_i": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 31 to 0 of received_uart_i",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 32,
},
"received_uart_o": {"description": "Data signal of received_uart_o",
"address_offset": "40",
"access": "read-only",
"size": "32",
"interface": "s_axi_EN",
"fields": {"received_uart_o": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 31 to 0 of received_uart_o",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
},
"memoryAddr": 40,
},
"received_uart_o_ctrl": {"description": "Control signal of received_uart_o",
"address_offset": "44",
"access": "read-only",
"size": "32",
"interface": "s_axi_EN",
"fields": {"received_uart_o_ap_vld": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Control signal received_uart_o_ap_vld",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
"RESERVED": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "31",
"desc": "Reserved.  0s on read.",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
},
"memoryAddr": 44,
},
"received_lin_i": {"description": "Data signal of received_lin_i",
"address_offset": "48",
"access": "write-only",
"size": "32",
"interface": "s_axi_EN",
"fields": {"received_lin_i": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 31 to 0 of received_lin_i",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 48,
},
"received_lin_o": {"description": "Data signal of received_lin_o",
"address_offset": "56",
"access": "read-only",
"size": "32",
"interface": "s_axi_EN",
"fields": {"received_lin_o": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 31 to 0 of received_lin_o",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
},
"memoryAddr": 56,
},
"received_lin_o_ctrl": {"description": "Control signal of received_lin_o",
"address_offset": "60",
"access": "read-only",
"size": "32",
"interface": "s_axi_EN",
"fields": {"received_lin_o_ap_vld": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Control signal received_lin_o_ap_vld",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
"RESERVED": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "31",
"desc": "Reserved.  0s on read.",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
},
"memoryAddr": 60,
},
"can_en": {"description": "Data signal of can_en",
"address_offset": "64",
"access": "write-only",
"size": "32",
"interface": "s_axi_EN",
"fields": {"can_en": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 31 to 0 of can_en",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 64,
},
"uart_en": {"description": "Data signal of uart_en",
"address_offset": "72",
"access": "write-only",
"size": "32",
"interface": "s_axi_EN",
"fields": {"uart_en": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "8",
"desc": "Bit 7 to 0 of uart_en",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RESERVED": {"access": "read-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "24",
"desc": "Reserved.  0s on read.",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
},
"memoryAddr": 72,
},
"lin_en": {"description": "Data signal of lin_en",
"address_offset": "80",
"access": "write-only",
"size": "32",
"interface": "s_axi_EN",
"fields": {"lin_en": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 31 to 0 of lin_en",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 80,
},
},
"mac_logger_0": {"CTRL": {"description": "Control signals",
"address_offset": "0",
"access": "read-write",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"AP_START": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Control signal Register for 'ap_start'.",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"AP_DONE": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Control signal Register for 'ap_done'.",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
"AP_IDLE": {"access": "read-only",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Control signal Register for 'ap_idle'.",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
"AP_READY": {"access": "read-only",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Control signal Register for 'ap_ready'.",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
"RESERVED_1": {"access": "read-only",
"bit_offset": "4",
"bit_range": "",
"bit_width": "3",
"desc": "Reserved.  0s on read.",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
"AUTO_RESTART": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "Control signal Register for 'auto_restart'.",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RESERVED_2": {"access": "read-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "24",
"desc": "Reserved.  0s on read.",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
},
"memoryAddr": 0,
},
"GIER": {"description": "Global Interrupt Enable Register",
"address_offset": "4",
"access": "read-write",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"Enable": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Master enable for the device interrupt output to the system interrupt controller: 0 = Disabled, 1 = Enabled",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RESERVED": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "31",
"desc": "Reserved.  0s on read.",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
},
"memoryAddr": 4,
},
"IP_IER": {"description": "IP Interrupt Enable Register",
"address_offset": "8",
"access": "read-write",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"CHAN0_INT_EN": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Enable Channel 0 (ap_done) Interrupt.  0 = Disabled, 1 = Enabled.",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CHAN1_INT_EN": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Enable Channel 1 (ap_ready) Interrupt.  0 = Disabled, 1 = Enabled.",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RESERVED": {"access": "read-only",
"bit_offset": "2",
"bit_range": "",
"bit_width": "30",
"desc": "Reserved.  0s on read.",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
},
"memoryAddr": 8,
},
"IP_ISR": {"description": "IP Interrupt Status Register",
"address_offset": "12",
"access": "read-write",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"CHAN0_INT_ST": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Channel 0 (ap_done) Interrupt Status. 0 = No Channel 0 input interrupt, 1 = Channel 0 input interrup",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
"CHAN1_INT_ST": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Channel 1 (ap_ready) Interrupt Status. 0 = No Channel 1 input interrupt, 1 = Channel 1 input interrup",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
"RESERVED": {"access": "read-only",
"bit_offset": "2",
"bit_range": "",
"bit_width": "30",
"desc": "Reserved.  0s on read.",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
},
"memoryAddr": 12,
},
"fifo_1": {"description": "Data signal of fifo",
"address_offset": "16",
"access": "write-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"fifo": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 31 to 0 of fifo",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 16,
},
"fifo_2": {"description": "Data signal of fifo",
"address_offset": "20",
"access": "write-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"fifo": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 63 to 32 of fifo",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 20,
},
"ddr_1": {"description": "Data signal of ddr",
"address_offset": "28",
"access": "write-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"ddr": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 31 to 0 of ddr",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 28,
},
"ddr_2": {"description": "Data signal of ddr",
"address_offset": "32",
"access": "write-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"ddr": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 63 to 32 of ddr",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 32,
},
"status": {"description": "Data signal of status",
"address_offset": "40",
"access": "write-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"status": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 31 to 0 of status",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 40,
},
"writeStatus": {"description": "Data signal of writeStatus",
"address_offset": "48",
"access": "write-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"writeStatus": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "Bit 15 to 0 of writeStatus",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RESERVED": {"access": "read-only",
"bit_offset": "16",
"bit_range": "",
"bit_width": "16",
"desc": "Reserved.  0s on read.",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
},
"memoryAddr": 48,
},
"logger_vlan_enable_mask": {"description": "Data signal of logger_vlan_enable_mask",
"address_offset": "56",
"access": "write-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"logger_vlan_enable_mask": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 31 to 0 of logger_vlan_enable_mask",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 56,
},
"vlan100_received": {"description": "Data signal of vlan100_received",
"address_offset": "64",
"access": "read-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"vlan100_received": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 31 to 0 of vlan100_received",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
},
"memoryAddr": 64,
},
"vlan100_received_ctrl": {"description": "Control signal of vlan100_received",
"address_offset": "68",
"access": "read-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"vlan100_received_ap_vld": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Control signal vlan100_received_ap_vld",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
"RESERVED": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "31",
"desc": "Reserved.  0s on read.",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
},
"memoryAddr": 68,
},
"vlan101_received": {"description": "Data signal of vlan101_received",
"address_offset": "72",
"access": "read-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"vlan101_received": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 31 to 0 of vlan101_received",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
},
"memoryAddr": 72,
},
"vlan101_received_ctrl": {"description": "Control signal of vlan101_received",
"address_offset": "76",
"access": "read-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"vlan101_received_ap_vld": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Control signal vlan101_received_ap_vld",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
"RESERVED": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "31",
"desc": "Reserved.  0s on read.",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
},
"memoryAddr": 76,
},
"fifo_axi_full_offset_1": {"description": "Data signal of fifo_axi_full_offset",
"address_offset": "80",
"access": "write-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"fifo_axi_full_offset": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 31 to 0 of fifo_axi_full_offset",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 80,
},
"fifo_axi_full_offset_2": {"description": "Data signal of fifo_axi_full_offset",
"address_offset": "84",
"access": "write-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"fifo_axi_full_offset": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 63 to 32 of fifo_axi_full_offset",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 84,
},
"vlan104_received": {"description": "Data signal of vlan104_received",
"address_offset": "96",
"access": "read-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"vlan104_received": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 31 to 0 of vlan104_received",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
},
"memoryAddr": 96,
},
"vlan104_received_ctrl": {"description": "Control signal of vlan104_received",
"address_offset": "100",
"access": "read-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"vlan104_received_ap_vld": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Control signal vlan104_received_ap_vld",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
"RESERVED": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "31",
"desc": "Reserved.  0s on read.",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
},
"memoryAddr": 100,
},
"vlan105_received": {"description": "Data signal of vlan105_received",
"address_offset": "104",
"access": "read-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"vlan105_received": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 31 to 0 of vlan105_received",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
},
"memoryAddr": 104,
},
"vlan105_received_ctrl": {"description": "Control signal of vlan105_received",
"address_offset": "108",
"access": "read-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"vlan105_received_ap_vld": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Control signal vlan105_received_ap_vld",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
"RESERVED": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "31",
"desc": "Reserved.  0s on read.",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
},
"memoryAddr": 108,
},
"vlan106_received": {"description": "Data signal of vlan106_received",
"address_offset": "112",
"access": "read-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"vlan106_received": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 31 to 0 of vlan106_received",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
},
"memoryAddr": 112,
},
"vlan106_received_ctrl": {"description": "Control signal of vlan106_received",
"address_offset": "116",
"access": "read-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"vlan106_received_ap_vld": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Control signal vlan106_received_ap_vld",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
"RESERVED": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "31",
"desc": "Reserved.  0s on read.",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
},
"memoryAddr": 116,
},
"vlan107_received": {"description": "Data signal of vlan107_received",
"address_offset": "120",
"access": "read-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"vlan107_received": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 31 to 0 of vlan107_received",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
},
"memoryAddr": 120,
},
"vlan107_received_ctrl": {"description": "Control signal of vlan107_received",
"address_offset": "124",
"access": "read-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"vlan107_received_ap_vld": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Control signal vlan107_received_ap_vld",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
"RESERVED": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "31",
"desc": "Reserved.  0s on read.",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
},
"memoryAddr": 124,
},
"vlan108_received": {"description": "Data signal of vlan108_received",
"address_offset": "128",
"access": "read-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"vlan108_received": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 31 to 0 of vlan108_received",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
},
"memoryAddr": 128,
},
"vlan108_received_ctrl": {"description": "Control signal of vlan108_received",
"address_offset": "132",
"access": "read-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"vlan108_received_ap_vld": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Control signal vlan108_received_ap_vld",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
"RESERVED": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "31",
"desc": "Reserved.  0s on read.",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
},
"memoryAddr": 132,
},
"vlan109_received": {"description": "Data signal of vlan109_received",
"address_offset": "136",
"access": "read-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"vlan109_received": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 31 to 0 of vlan109_received",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
},
"memoryAddr": 136,
},
"vlan109_received_ctrl": {"description": "Control signal of vlan109_received",
"address_offset": "140",
"access": "read-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"vlan109_received_ap_vld": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Control signal vlan109_received_ap_vld",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
"RESERVED": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "31",
"desc": "Reserved.  0s on read.",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
},
"memoryAddr": 140,
},
"droped": {"description": "Data signal of droped",
"address_offset": "144",
"access": "read-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"droped": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 31 to 0 of droped",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
},
"memoryAddr": 144,
},
"droped_ctrl": {"description": "Control signal of droped",
"address_offset": "148",
"access": "read-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"droped_ap_vld": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Control signal droped_ap_vld",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
"RESERVED": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "31",
"desc": "Reserved.  0s on read.",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
},
"memoryAddr": 148,
},
"multicast_recv_enable": {"description": "Data signal of multicast_recv_enable",
"address_offset": "152",
"access": "write-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"multicast_recv_enable": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 31 to 0 of multicast_recv_enable",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 152,
},
"unicast_filter_enable": {"description": "Data signal of unicast_filter_enable",
"address_offset": "160",
"access": "write-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"unicast_filter_enable": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 31 to 0 of unicast_filter_enable",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 160,
},
"unicast_vlan100_macaddr_lsb": {"description": "Data signal of unicast_vlan100_macaddr_lsb",
"address_offset": "168",
"access": "write-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"unicast_vlan100_macaddr_lsb": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 31 to 0 of unicast_vlan100_macaddr_lsb",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 168,
},
"unicast_vlan100_macaddr_msb": {"description": "Data signal of unicast_vlan100_macaddr_msb",
"address_offset": "176",
"access": "write-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"unicast_vlan100_macaddr_msb": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 31 to 0 of unicast_vlan100_macaddr_msb",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 176,
},
"unicast_vlan101_macaddr_lsb": {"description": "Data signal of unicast_vlan101_macaddr_lsb",
"address_offset": "184",
"access": "write-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"unicast_vlan101_macaddr_lsb": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 31 to 0 of unicast_vlan101_macaddr_lsb",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 184,
},
"unicast_vlan101_macaddr_msb": {"description": "Data signal of unicast_vlan101_macaddr_msb",
"address_offset": "192",
"access": "write-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"unicast_vlan101_macaddr_msb": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 31 to 0 of unicast_vlan101_macaddr_msb",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 192,
},
"unicast_vlan102_macaddr_lsb": {"description": "Data signal of unicast_vlan102_macaddr_lsb",
"address_offset": "200",
"access": "write-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"unicast_vlan102_macaddr_lsb": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 31 to 0 of unicast_vlan102_macaddr_lsb",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 200,
},
"unicast_vlan102_macaddr_msb": {"description": "Data signal of unicast_vlan102_macaddr_msb",
"address_offset": "208",
"access": "write-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"unicast_vlan102_macaddr_msb": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 31 to 0 of unicast_vlan102_macaddr_msb",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 208,
},
"unicast_vlan103_macaddr_lsb": {"description": "Data signal of unicast_vlan103_macaddr_lsb",
"address_offset": "216",
"access": "write-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"unicast_vlan103_macaddr_lsb": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 31 to 0 of unicast_vlan103_macaddr_lsb",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 216,
},
"unicast_vlan103_macaddr_msb": {"description": "Data signal of unicast_vlan103_macaddr_msb",
"address_offset": "224",
"access": "write-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"unicast_vlan103_macaddr_msb": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 31 to 0 of unicast_vlan103_macaddr_msb",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 224,
},
"unicast_vlan104_macaddr_lsb": {"description": "Data signal of unicast_vlan104_macaddr_lsb",
"address_offset": "232",
"access": "write-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"unicast_vlan104_macaddr_lsb": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 31 to 0 of unicast_vlan104_macaddr_lsb",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 232,
},
"unicast_vlan104_macaddr_msb": {"description": "Data signal of unicast_vlan104_macaddr_msb",
"address_offset": "240",
"access": "write-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"unicast_vlan104_macaddr_msb": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 31 to 0 of unicast_vlan104_macaddr_msb",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 240,
},
"unicast_vlan105_macaddr_lsb": {"description": "Data signal of unicast_vlan105_macaddr_lsb",
"address_offset": "248",
"access": "write-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"unicast_vlan105_macaddr_lsb": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 31 to 0 of unicast_vlan105_macaddr_lsb",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 248,
},
"unicast_vlan105_macaddr_msb": {"description": "Data signal of unicast_vlan105_macaddr_msb",
"address_offset": "256",
"access": "write-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"unicast_vlan105_macaddr_msb": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 31 to 0 of unicast_vlan105_macaddr_msb",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 256,
},
"unicast_vlan106_macaddr_lsb": {"description": "Data signal of unicast_vlan106_macaddr_lsb",
"address_offset": "264",
"access": "write-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"unicast_vlan106_macaddr_lsb": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 31 to 0 of unicast_vlan106_macaddr_lsb",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 264,
},
"unicast_vlan106_macaddr_msb": {"description": "Data signal of unicast_vlan106_macaddr_msb",
"address_offset": "272",
"access": "write-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"unicast_vlan106_macaddr_msb": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 31 to 0 of unicast_vlan106_macaddr_msb",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 272,
},
"unicast_vlan107_macaddr_lsb": {"description": "Data signal of unicast_vlan107_macaddr_lsb",
"address_offset": "280",
"access": "write-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"unicast_vlan107_macaddr_lsb": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 31 to 0 of unicast_vlan107_macaddr_lsb",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 280,
},
"unicast_vlan107_macaddr_msb": {"description": "Data signal of unicast_vlan107_macaddr_msb",
"address_offset": "288",
"access": "write-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"unicast_vlan107_macaddr_msb": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 31 to 0 of unicast_vlan107_macaddr_msb",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 288,
},
"unicast_vlan108_macaddr_lsb": {"description": "Data signal of unicast_vlan108_macaddr_lsb",
"address_offset": "296",
"access": "write-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"unicast_vlan108_macaddr_lsb": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 31 to 0 of unicast_vlan108_macaddr_lsb",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 296,
},
"unicast_vlan108_macaddr_msb": {"description": "Data signal of unicast_vlan108_macaddr_msb",
"address_offset": "304",
"access": "write-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"unicast_vlan108_macaddr_msb": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 31 to 0 of unicast_vlan108_macaddr_msb",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 304,
},
"unicast_vlan109_macaddr_lsb": {"description": "Data signal of unicast_vlan109_macaddr_lsb",
"address_offset": "312",
"access": "write-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"unicast_vlan109_macaddr_lsb": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 31 to 0 of unicast_vlan109_macaddr_lsb",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 312,
},
"unicast_vlan109_macaddr_msb": {"description": "Data signal of unicast_vlan109_macaddr_msb",
"address_offset": "320",
"access": "write-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"unicast_vlan109_macaddr_msb": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 31 to 0 of unicast_vlan109_macaddr_msb",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 320,
},
"log_all_mask": {"description": "Data signal of log_all_mask",
"address_offset": "328",
"access": "write-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"log_all_mask": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 31 to 0 of log_all_mask",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 328,
},
"driver_1": {"description": "Data signal of driver",
"address_offset": "336",
"access": "write-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"driver": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 31 to 0 of driver",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 336,
},
"driver_2": {"description": "Data signal of driver",
"address_offset": "340",
"access": "write-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"driver": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 63 to 32 of driver",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 340,
},
"vlan102_received": {"description": "Data signal of vlan102_received",
"address_offset": "348",
"access": "read-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"vlan102_received": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 31 to 0 of vlan102_received",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
},
"memoryAddr": 348,
},
"vlan102_received_ctrl": {"description": "Control signal of vlan102_received",
"address_offset": "352",
"access": "read-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"vlan102_received_ap_vld": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Control signal vlan102_received_ap_vld",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
"RESERVED": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "31",
"desc": "Reserved.  0s on read.",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
},
"memoryAddr": 352,
},
"vlan103_received": {"description": "Data signal of vlan103_received",
"address_offset": "356",
"access": "read-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"vlan103_received": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 31 to 0 of vlan103_received",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
},
"memoryAddr": 356,
},
"vlan103_received_ctrl": {"description": "Control signal of vlan103_received",
"address_offset": "360",
"access": "read-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"vlan103_received_ap_vld": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Control signal vlan103_received_ap_vld",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
"RESERVED": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "31",
"desc": "Reserved.  0s on read.",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
},
"memoryAddr": 360,
},
},
"mac_logger_1": {"CTRL": {"description": "Control signals",
"address_offset": "0",
"access": "read-write",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"AP_START": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Control signal Register for 'ap_start'.",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"AP_DONE": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Control signal Register for 'ap_done'.",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
"AP_IDLE": {"access": "read-only",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Control signal Register for 'ap_idle'.",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
"AP_READY": {"access": "read-only",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Control signal Register for 'ap_ready'.",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
"RESERVED_1": {"access": "read-only",
"bit_offset": "4",
"bit_range": "",
"bit_width": "3",
"desc": "Reserved.  0s on read.",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
"AUTO_RESTART": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "Control signal Register for 'auto_restart'.",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RESERVED_2": {"access": "read-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "24",
"desc": "Reserved.  0s on read.",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
},
"memoryAddr": 0,
},
"GIER": {"description": "Global Interrupt Enable Register",
"address_offset": "4",
"access": "read-write",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"Enable": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Master enable for the device interrupt output to the system interrupt controller: 0 = Disabled, 1 = Enabled",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RESERVED": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "31",
"desc": "Reserved.  0s on read.",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
},
"memoryAddr": 4,
},
"IP_IER": {"description": "IP Interrupt Enable Register",
"address_offset": "8",
"access": "read-write",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"CHAN0_INT_EN": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Enable Channel 0 (ap_done) Interrupt.  0 = Disabled, 1 = Enabled.",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CHAN1_INT_EN": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Enable Channel 1 (ap_ready) Interrupt.  0 = Disabled, 1 = Enabled.",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RESERVED": {"access": "read-only",
"bit_offset": "2",
"bit_range": "",
"bit_width": "30",
"desc": "Reserved.  0s on read.",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
},
"memoryAddr": 8,
},
"IP_ISR": {"description": "IP Interrupt Status Register",
"address_offset": "12",
"access": "read-write",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"CHAN0_INT_ST": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Channel 0 (ap_done) Interrupt Status. 0 = No Channel 0 input interrupt, 1 = Channel 0 input interrup",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
"CHAN1_INT_ST": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Channel 1 (ap_ready) Interrupt Status. 0 = No Channel 1 input interrupt, 1 = Channel 1 input interrup",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
"RESERVED": {"access": "read-only",
"bit_offset": "2",
"bit_range": "",
"bit_width": "30",
"desc": "Reserved.  0s on read.",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
},
"memoryAddr": 12,
},
"fifo_1": {"description": "Data signal of fifo",
"address_offset": "16",
"access": "write-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"fifo": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 31 to 0 of fifo",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 16,
},
"fifo_2": {"description": "Data signal of fifo",
"address_offset": "20",
"access": "write-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"fifo": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 63 to 32 of fifo",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 20,
},
"ddr_1": {"description": "Data signal of ddr",
"address_offset": "28",
"access": "write-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"ddr": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 31 to 0 of ddr",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 28,
},
"ddr_2": {"description": "Data signal of ddr",
"address_offset": "32",
"access": "write-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"ddr": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 63 to 32 of ddr",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 32,
},
"status": {"description": "Data signal of status",
"address_offset": "40",
"access": "write-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"status": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 31 to 0 of status",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 40,
},
"writeStatus": {"description": "Data signal of writeStatus",
"address_offset": "48",
"access": "write-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"writeStatus": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "Bit 15 to 0 of writeStatus",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RESERVED": {"access": "read-only",
"bit_offset": "16",
"bit_range": "",
"bit_width": "16",
"desc": "Reserved.  0s on read.",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
},
"memoryAddr": 48,
},
"logger_vlan_enable_mask": {"description": "Data signal of logger_vlan_enable_mask",
"address_offset": "56",
"access": "write-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"logger_vlan_enable_mask": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 31 to 0 of logger_vlan_enable_mask",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 56,
},
"vlan100_received": {"description": "Data signal of vlan100_received",
"address_offset": "64",
"access": "read-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"vlan100_received": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 31 to 0 of vlan100_received",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
},
"memoryAddr": 64,
},
"vlan100_received_ctrl": {"description": "Control signal of vlan100_received",
"address_offset": "68",
"access": "read-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"vlan100_received_ap_vld": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Control signal vlan100_received_ap_vld",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
"RESERVED": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "31",
"desc": "Reserved.  0s on read.",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
},
"memoryAddr": 68,
},
"vlan101_received": {"description": "Data signal of vlan101_received",
"address_offset": "72",
"access": "read-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"vlan101_received": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 31 to 0 of vlan101_received",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
},
"memoryAddr": 72,
},
"vlan101_received_ctrl": {"description": "Control signal of vlan101_received",
"address_offset": "76",
"access": "read-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"vlan101_received_ap_vld": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Control signal vlan101_received_ap_vld",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
"RESERVED": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "31",
"desc": "Reserved.  0s on read.",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
},
"memoryAddr": 76,
},
"fifo_axi_full_offset_1": {"description": "Data signal of fifo_axi_full_offset",
"address_offset": "80",
"access": "write-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"fifo_axi_full_offset": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 31 to 0 of fifo_axi_full_offset",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 80,
},
"fifo_axi_full_offset_2": {"description": "Data signal of fifo_axi_full_offset",
"address_offset": "84",
"access": "write-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"fifo_axi_full_offset": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 63 to 32 of fifo_axi_full_offset",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 84,
},
"vlan104_received": {"description": "Data signal of vlan104_received",
"address_offset": "96",
"access": "read-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"vlan104_received": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 31 to 0 of vlan104_received",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
},
"memoryAddr": 96,
},
"vlan104_received_ctrl": {"description": "Control signal of vlan104_received",
"address_offset": "100",
"access": "read-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"vlan104_received_ap_vld": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Control signal vlan104_received_ap_vld",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
"RESERVED": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "31",
"desc": "Reserved.  0s on read.",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
},
"memoryAddr": 100,
},
"vlan105_received": {"description": "Data signal of vlan105_received",
"address_offset": "104",
"access": "read-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"vlan105_received": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 31 to 0 of vlan105_received",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
},
"memoryAddr": 104,
},
"vlan105_received_ctrl": {"description": "Control signal of vlan105_received",
"address_offset": "108",
"access": "read-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"vlan105_received_ap_vld": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Control signal vlan105_received_ap_vld",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
"RESERVED": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "31",
"desc": "Reserved.  0s on read.",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
},
"memoryAddr": 108,
},
"vlan106_received": {"description": "Data signal of vlan106_received",
"address_offset": "112",
"access": "read-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"vlan106_received": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 31 to 0 of vlan106_received",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
},
"memoryAddr": 112,
},
"vlan106_received_ctrl": {"description": "Control signal of vlan106_received",
"address_offset": "116",
"access": "read-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"vlan106_received_ap_vld": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Control signal vlan106_received_ap_vld",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
"RESERVED": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "31",
"desc": "Reserved.  0s on read.",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
},
"memoryAddr": 116,
},
"vlan107_received": {"description": "Data signal of vlan107_received",
"address_offset": "120",
"access": "read-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"vlan107_received": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 31 to 0 of vlan107_received",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
},
"memoryAddr": 120,
},
"vlan107_received_ctrl": {"description": "Control signal of vlan107_received",
"address_offset": "124",
"access": "read-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"vlan107_received_ap_vld": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Control signal vlan107_received_ap_vld",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
"RESERVED": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "31",
"desc": "Reserved.  0s on read.",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
},
"memoryAddr": 124,
},
"vlan108_received": {"description": "Data signal of vlan108_received",
"address_offset": "128",
"access": "read-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"vlan108_received": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 31 to 0 of vlan108_received",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
},
"memoryAddr": 128,
},
"vlan108_received_ctrl": {"description": "Control signal of vlan108_received",
"address_offset": "132",
"access": "read-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"vlan108_received_ap_vld": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Control signal vlan108_received_ap_vld",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
"RESERVED": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "31",
"desc": "Reserved.  0s on read.",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
},
"memoryAddr": 132,
},
"vlan109_received": {"description": "Data signal of vlan109_received",
"address_offset": "136",
"access": "read-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"vlan109_received": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 31 to 0 of vlan109_received",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
},
"memoryAddr": 136,
},
"vlan109_received_ctrl": {"description": "Control signal of vlan109_received",
"address_offset": "140",
"access": "read-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"vlan109_received_ap_vld": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Control signal vlan109_received_ap_vld",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
"RESERVED": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "31",
"desc": "Reserved.  0s on read.",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
},
"memoryAddr": 140,
},
"droped": {"description": "Data signal of droped",
"address_offset": "144",
"access": "read-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"droped": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 31 to 0 of droped",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
},
"memoryAddr": 144,
},
"droped_ctrl": {"description": "Control signal of droped",
"address_offset": "148",
"access": "read-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"droped_ap_vld": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Control signal droped_ap_vld",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
"RESERVED": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "31",
"desc": "Reserved.  0s on read.",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
},
"memoryAddr": 148,
},
"multicast_recv_enable": {"description": "Data signal of multicast_recv_enable",
"address_offset": "152",
"access": "write-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"multicast_recv_enable": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 31 to 0 of multicast_recv_enable",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 152,
},
"unicast_filter_enable": {"description": "Data signal of unicast_filter_enable",
"address_offset": "160",
"access": "write-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"unicast_filter_enable": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 31 to 0 of unicast_filter_enable",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 160,
},
"unicast_vlan100_macaddr_lsb": {"description": "Data signal of unicast_vlan100_macaddr_lsb",
"address_offset": "168",
"access": "write-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"unicast_vlan100_macaddr_lsb": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 31 to 0 of unicast_vlan100_macaddr_lsb",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 168,
},
"unicast_vlan100_macaddr_msb": {"description": "Data signal of unicast_vlan100_macaddr_msb",
"address_offset": "176",
"access": "write-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"unicast_vlan100_macaddr_msb": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 31 to 0 of unicast_vlan100_macaddr_msb",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 176,
},
"unicast_vlan101_macaddr_lsb": {"description": "Data signal of unicast_vlan101_macaddr_lsb",
"address_offset": "184",
"access": "write-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"unicast_vlan101_macaddr_lsb": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 31 to 0 of unicast_vlan101_macaddr_lsb",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 184,
},
"unicast_vlan101_macaddr_msb": {"description": "Data signal of unicast_vlan101_macaddr_msb",
"address_offset": "192",
"access": "write-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"unicast_vlan101_macaddr_msb": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 31 to 0 of unicast_vlan101_macaddr_msb",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 192,
},
"unicast_vlan102_macaddr_lsb": {"description": "Data signal of unicast_vlan102_macaddr_lsb",
"address_offset": "200",
"access": "write-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"unicast_vlan102_macaddr_lsb": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 31 to 0 of unicast_vlan102_macaddr_lsb",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 200,
},
"unicast_vlan102_macaddr_msb": {"description": "Data signal of unicast_vlan102_macaddr_msb",
"address_offset": "208",
"access": "write-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"unicast_vlan102_macaddr_msb": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 31 to 0 of unicast_vlan102_macaddr_msb",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 208,
},
"unicast_vlan103_macaddr_lsb": {"description": "Data signal of unicast_vlan103_macaddr_lsb",
"address_offset": "216",
"access": "write-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"unicast_vlan103_macaddr_lsb": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 31 to 0 of unicast_vlan103_macaddr_lsb",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 216,
},
"unicast_vlan103_macaddr_msb": {"description": "Data signal of unicast_vlan103_macaddr_msb",
"address_offset": "224",
"access": "write-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"unicast_vlan103_macaddr_msb": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 31 to 0 of unicast_vlan103_macaddr_msb",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 224,
},
"unicast_vlan104_macaddr_lsb": {"description": "Data signal of unicast_vlan104_macaddr_lsb",
"address_offset": "232",
"access": "write-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"unicast_vlan104_macaddr_lsb": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 31 to 0 of unicast_vlan104_macaddr_lsb",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 232,
},
"unicast_vlan104_macaddr_msb": {"description": "Data signal of unicast_vlan104_macaddr_msb",
"address_offset": "240",
"access": "write-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"unicast_vlan104_macaddr_msb": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 31 to 0 of unicast_vlan104_macaddr_msb",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 240,
},
"unicast_vlan105_macaddr_lsb": {"description": "Data signal of unicast_vlan105_macaddr_lsb",
"address_offset": "248",
"access": "write-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"unicast_vlan105_macaddr_lsb": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 31 to 0 of unicast_vlan105_macaddr_lsb",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 248,
},
"unicast_vlan105_macaddr_msb": {"description": "Data signal of unicast_vlan105_macaddr_msb",
"address_offset": "256",
"access": "write-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"unicast_vlan105_macaddr_msb": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 31 to 0 of unicast_vlan105_macaddr_msb",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 256,
},
"unicast_vlan106_macaddr_lsb": {"description": "Data signal of unicast_vlan106_macaddr_lsb",
"address_offset": "264",
"access": "write-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"unicast_vlan106_macaddr_lsb": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 31 to 0 of unicast_vlan106_macaddr_lsb",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 264,
},
"unicast_vlan106_macaddr_msb": {"description": "Data signal of unicast_vlan106_macaddr_msb",
"address_offset": "272",
"access": "write-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"unicast_vlan106_macaddr_msb": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 31 to 0 of unicast_vlan106_macaddr_msb",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 272,
},
"unicast_vlan107_macaddr_lsb": {"description": "Data signal of unicast_vlan107_macaddr_lsb",
"address_offset": "280",
"access": "write-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"unicast_vlan107_macaddr_lsb": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 31 to 0 of unicast_vlan107_macaddr_lsb",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 280,
},
"unicast_vlan107_macaddr_msb": {"description": "Data signal of unicast_vlan107_macaddr_msb",
"address_offset": "288",
"access": "write-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"unicast_vlan107_macaddr_msb": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 31 to 0 of unicast_vlan107_macaddr_msb",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 288,
},
"unicast_vlan108_macaddr_lsb": {"description": "Data signal of unicast_vlan108_macaddr_lsb",
"address_offset": "296",
"access": "write-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"unicast_vlan108_macaddr_lsb": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 31 to 0 of unicast_vlan108_macaddr_lsb",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 296,
},
"unicast_vlan108_macaddr_msb": {"description": "Data signal of unicast_vlan108_macaddr_msb",
"address_offset": "304",
"access": "write-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"unicast_vlan108_macaddr_msb": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 31 to 0 of unicast_vlan108_macaddr_msb",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 304,
},
"unicast_vlan109_macaddr_lsb": {"description": "Data signal of unicast_vlan109_macaddr_lsb",
"address_offset": "312",
"access": "write-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"unicast_vlan109_macaddr_lsb": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 31 to 0 of unicast_vlan109_macaddr_lsb",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 312,
},
"unicast_vlan109_macaddr_msb": {"description": "Data signal of unicast_vlan109_macaddr_msb",
"address_offset": "320",
"access": "write-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"unicast_vlan109_macaddr_msb": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 31 to 0 of unicast_vlan109_macaddr_msb",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 320,
},
"log_all_mask": {"description": "Data signal of log_all_mask",
"address_offset": "328",
"access": "write-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"log_all_mask": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 31 to 0 of log_all_mask",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 328,
},
"driver_1": {"description": "Data signal of driver",
"address_offset": "336",
"access": "write-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"driver": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 31 to 0 of driver",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 336,
},
"driver_2": {"description": "Data signal of driver",
"address_offset": "340",
"access": "write-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"driver": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 63 to 32 of driver",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 340,
},
"vlan102_received": {"description": "Data signal of vlan102_received",
"address_offset": "348",
"access": "read-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"vlan102_received": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 31 to 0 of vlan102_received",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
},
"memoryAddr": 348,
},
"vlan102_received_ctrl": {"description": "Control signal of vlan102_received",
"address_offset": "352",
"access": "read-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"vlan102_received_ap_vld": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Control signal vlan102_received_ap_vld",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
"RESERVED": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "31",
"desc": "Reserved.  0s on read.",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
},
"memoryAddr": 352,
},
"vlan103_received": {"description": "Data signal of vlan103_received",
"address_offset": "356",
"access": "read-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"vlan103_received": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 31 to 0 of vlan103_received",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
},
"memoryAddr": 356,
},
"vlan103_received_ctrl": {"description": "Control signal of vlan103_received",
"address_offset": "360",
"access": "read-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"vlan103_received_ap_vld": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Control signal vlan103_received_ap_vld",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
"RESERVED": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "31",
"desc": "Reserved.  0s on read.",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
},
"memoryAddr": 360,
},
},
"mac_logger_2": {"CTRL": {"description": "Control signals",
"address_offset": "0",
"access": "read-write",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"AP_START": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Control signal Register for 'ap_start'.",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"AP_DONE": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Control signal Register for 'ap_done'.",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
"AP_IDLE": {"access": "read-only",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Control signal Register for 'ap_idle'.",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
"AP_READY": {"access": "read-only",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Control signal Register for 'ap_ready'.",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
"RESERVED_1": {"access": "read-only",
"bit_offset": "4",
"bit_range": "",
"bit_width": "3",
"desc": "Reserved.  0s on read.",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
"AUTO_RESTART": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "Control signal Register for 'auto_restart'.",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RESERVED_2": {"access": "read-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "24",
"desc": "Reserved.  0s on read.",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
},
"memoryAddr": 0,
},
"GIER": {"description": "Global Interrupt Enable Register",
"address_offset": "4",
"access": "read-write",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"Enable": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Master enable for the device interrupt output to the system interrupt controller: 0 = Disabled, 1 = Enabled",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RESERVED": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "31",
"desc": "Reserved.  0s on read.",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
},
"memoryAddr": 4,
},
"IP_IER": {"description": "IP Interrupt Enable Register",
"address_offset": "8",
"access": "read-write",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"CHAN0_INT_EN": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Enable Channel 0 (ap_done) Interrupt.  0 = Disabled, 1 = Enabled.",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CHAN1_INT_EN": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Enable Channel 1 (ap_ready) Interrupt.  0 = Disabled, 1 = Enabled.",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RESERVED": {"access": "read-only",
"bit_offset": "2",
"bit_range": "",
"bit_width": "30",
"desc": "Reserved.  0s on read.",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
},
"memoryAddr": 8,
},
"IP_ISR": {"description": "IP Interrupt Status Register",
"address_offset": "12",
"access": "read-write",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"CHAN0_INT_ST": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Channel 0 (ap_done) Interrupt Status. 0 = No Channel 0 input interrupt, 1 = Channel 0 input interrup",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
"CHAN1_INT_ST": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Channel 1 (ap_ready) Interrupt Status. 0 = No Channel 1 input interrupt, 1 = Channel 1 input interrup",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
"RESERVED": {"access": "read-only",
"bit_offset": "2",
"bit_range": "",
"bit_width": "30",
"desc": "Reserved.  0s on read.",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
},
"memoryAddr": 12,
},
"fifo_1": {"description": "Data signal of fifo",
"address_offset": "16",
"access": "write-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"fifo": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 31 to 0 of fifo",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 16,
},
"fifo_2": {"description": "Data signal of fifo",
"address_offset": "20",
"access": "write-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"fifo": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 63 to 32 of fifo",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 20,
},
"ddr_1": {"description": "Data signal of ddr",
"address_offset": "28",
"access": "write-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"ddr": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 31 to 0 of ddr",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 28,
},
"ddr_2": {"description": "Data signal of ddr",
"address_offset": "32",
"access": "write-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"ddr": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 63 to 32 of ddr",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 32,
},
"status": {"description": "Data signal of status",
"address_offset": "40",
"access": "write-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"status": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 31 to 0 of status",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 40,
},
"writeStatus": {"description": "Data signal of writeStatus",
"address_offset": "48",
"access": "write-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"writeStatus": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "16",
"desc": "Bit 15 to 0 of writeStatus",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RESERVED": {"access": "read-only",
"bit_offset": "16",
"bit_range": "",
"bit_width": "16",
"desc": "Reserved.  0s on read.",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
},
"memoryAddr": 48,
},
"logger_vlan_enable_mask": {"description": "Data signal of logger_vlan_enable_mask",
"address_offset": "56",
"access": "write-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"logger_vlan_enable_mask": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 31 to 0 of logger_vlan_enable_mask",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 56,
},
"vlan100_received": {"description": "Data signal of vlan100_received",
"address_offset": "64",
"access": "read-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"vlan100_received": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 31 to 0 of vlan100_received",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
},
"memoryAddr": 64,
},
"vlan100_received_ctrl": {"description": "Control signal of vlan100_received",
"address_offset": "68",
"access": "read-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"vlan100_received_ap_vld": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Control signal vlan100_received_ap_vld",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
"RESERVED": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "31",
"desc": "Reserved.  0s on read.",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
},
"memoryAddr": 68,
},
"vlan101_received": {"description": "Data signal of vlan101_received",
"address_offset": "72",
"access": "read-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"vlan101_received": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 31 to 0 of vlan101_received",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
},
"memoryAddr": 72,
},
"vlan101_received_ctrl": {"description": "Control signal of vlan101_received",
"address_offset": "76",
"access": "read-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"vlan101_received_ap_vld": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Control signal vlan101_received_ap_vld",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
"RESERVED": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "31",
"desc": "Reserved.  0s on read.",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
},
"memoryAddr": 76,
},
"fifo_axi_full_offset_1": {"description": "Data signal of fifo_axi_full_offset",
"address_offset": "80",
"access": "write-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"fifo_axi_full_offset": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 31 to 0 of fifo_axi_full_offset",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 80,
},
"fifo_axi_full_offset_2": {"description": "Data signal of fifo_axi_full_offset",
"address_offset": "84",
"access": "write-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"fifo_axi_full_offset": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 63 to 32 of fifo_axi_full_offset",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 84,
},
"vlan104_received": {"description": "Data signal of vlan104_received",
"address_offset": "96",
"access": "read-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"vlan104_received": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 31 to 0 of vlan104_received",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
},
"memoryAddr": 96,
},
"vlan104_received_ctrl": {"description": "Control signal of vlan104_received",
"address_offset": "100",
"access": "read-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"vlan104_received_ap_vld": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Control signal vlan104_received_ap_vld",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
"RESERVED": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "31",
"desc": "Reserved.  0s on read.",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
},
"memoryAddr": 100,
},
"vlan105_received": {"description": "Data signal of vlan105_received",
"address_offset": "104",
"access": "read-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"vlan105_received": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 31 to 0 of vlan105_received",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
},
"memoryAddr": 104,
},
"vlan105_received_ctrl": {"description": "Control signal of vlan105_received",
"address_offset": "108",
"access": "read-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"vlan105_received_ap_vld": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Control signal vlan105_received_ap_vld",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
"RESERVED": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "31",
"desc": "Reserved.  0s on read.",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
},
"memoryAddr": 108,
},
"vlan106_received": {"description": "Data signal of vlan106_received",
"address_offset": "112",
"access": "read-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"vlan106_received": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 31 to 0 of vlan106_received",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
},
"memoryAddr": 112,
},
"vlan106_received_ctrl": {"description": "Control signal of vlan106_received",
"address_offset": "116",
"access": "read-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"vlan106_received_ap_vld": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Control signal vlan106_received_ap_vld",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
"RESERVED": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "31",
"desc": "Reserved.  0s on read.",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
},
"memoryAddr": 116,
},
"vlan107_received": {"description": "Data signal of vlan107_received",
"address_offset": "120",
"access": "read-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"vlan107_received": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 31 to 0 of vlan107_received",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
},
"memoryAddr": 120,
},
"vlan107_received_ctrl": {"description": "Control signal of vlan107_received",
"address_offset": "124",
"access": "read-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"vlan107_received_ap_vld": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Control signal vlan107_received_ap_vld",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
"RESERVED": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "31",
"desc": "Reserved.  0s on read.",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
},
"memoryAddr": 124,
},
"vlan108_received": {"description": "Data signal of vlan108_received",
"address_offset": "128",
"access": "read-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"vlan108_received": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 31 to 0 of vlan108_received",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
},
"memoryAddr": 128,
},
"vlan108_received_ctrl": {"description": "Control signal of vlan108_received",
"address_offset": "132",
"access": "read-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"vlan108_received_ap_vld": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Control signal vlan108_received_ap_vld",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
"RESERVED": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "31",
"desc": "Reserved.  0s on read.",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
},
"memoryAddr": 132,
},
"vlan109_received": {"description": "Data signal of vlan109_received",
"address_offset": "136",
"access": "read-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"vlan109_received": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 31 to 0 of vlan109_received",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
},
"memoryAddr": 136,
},
"vlan109_received_ctrl": {"description": "Control signal of vlan109_received",
"address_offset": "140",
"access": "read-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"vlan109_received_ap_vld": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Control signal vlan109_received_ap_vld",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
"RESERVED": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "31",
"desc": "Reserved.  0s on read.",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
},
"memoryAddr": 140,
},
"droped": {"description": "Data signal of droped",
"address_offset": "144",
"access": "read-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"droped": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 31 to 0 of droped",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
},
"memoryAddr": 144,
},
"droped_ctrl": {"description": "Control signal of droped",
"address_offset": "148",
"access": "read-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"droped_ap_vld": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Control signal droped_ap_vld",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
"RESERVED": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "31",
"desc": "Reserved.  0s on read.",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
},
"memoryAddr": 148,
},
"multicast_recv_enable": {"description": "Data signal of multicast_recv_enable",
"address_offset": "152",
"access": "write-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"multicast_recv_enable": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 31 to 0 of multicast_recv_enable",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 152,
},
"unicast_filter_enable": {"description": "Data signal of unicast_filter_enable",
"address_offset": "160",
"access": "write-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"unicast_filter_enable": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 31 to 0 of unicast_filter_enable",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 160,
},
"unicast_vlan100_macaddr_lsb": {"description": "Data signal of unicast_vlan100_macaddr_lsb",
"address_offset": "168",
"access": "write-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"unicast_vlan100_macaddr_lsb": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 31 to 0 of unicast_vlan100_macaddr_lsb",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 168,
},
"unicast_vlan100_macaddr_msb": {"description": "Data signal of unicast_vlan100_macaddr_msb",
"address_offset": "176",
"access": "write-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"unicast_vlan100_macaddr_msb": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 31 to 0 of unicast_vlan100_macaddr_msb",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 176,
},
"unicast_vlan101_macaddr_lsb": {"description": "Data signal of unicast_vlan101_macaddr_lsb",
"address_offset": "184",
"access": "write-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"unicast_vlan101_macaddr_lsb": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 31 to 0 of unicast_vlan101_macaddr_lsb",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 184,
},
"unicast_vlan101_macaddr_msb": {"description": "Data signal of unicast_vlan101_macaddr_msb",
"address_offset": "192",
"access": "write-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"unicast_vlan101_macaddr_msb": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 31 to 0 of unicast_vlan101_macaddr_msb",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 192,
},
"unicast_vlan102_macaddr_lsb": {"description": "Data signal of unicast_vlan102_macaddr_lsb",
"address_offset": "200",
"access": "write-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"unicast_vlan102_macaddr_lsb": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 31 to 0 of unicast_vlan102_macaddr_lsb",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 200,
},
"unicast_vlan102_macaddr_msb": {"description": "Data signal of unicast_vlan102_macaddr_msb",
"address_offset": "208",
"access": "write-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"unicast_vlan102_macaddr_msb": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 31 to 0 of unicast_vlan102_macaddr_msb",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 208,
},
"unicast_vlan103_macaddr_lsb": {"description": "Data signal of unicast_vlan103_macaddr_lsb",
"address_offset": "216",
"access": "write-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"unicast_vlan103_macaddr_lsb": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 31 to 0 of unicast_vlan103_macaddr_lsb",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 216,
},
"unicast_vlan103_macaddr_msb": {"description": "Data signal of unicast_vlan103_macaddr_msb",
"address_offset": "224",
"access": "write-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"unicast_vlan103_macaddr_msb": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 31 to 0 of unicast_vlan103_macaddr_msb",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 224,
},
"unicast_vlan104_macaddr_lsb": {"description": "Data signal of unicast_vlan104_macaddr_lsb",
"address_offset": "232",
"access": "write-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"unicast_vlan104_macaddr_lsb": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 31 to 0 of unicast_vlan104_macaddr_lsb",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 232,
},
"unicast_vlan104_macaddr_msb": {"description": "Data signal of unicast_vlan104_macaddr_msb",
"address_offset": "240",
"access": "write-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"unicast_vlan104_macaddr_msb": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 31 to 0 of unicast_vlan104_macaddr_msb",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 240,
},
"unicast_vlan105_macaddr_lsb": {"description": "Data signal of unicast_vlan105_macaddr_lsb",
"address_offset": "248",
"access": "write-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"unicast_vlan105_macaddr_lsb": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 31 to 0 of unicast_vlan105_macaddr_lsb",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 248,
},
"unicast_vlan105_macaddr_msb": {"description": "Data signal of unicast_vlan105_macaddr_msb",
"address_offset": "256",
"access": "write-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"unicast_vlan105_macaddr_msb": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 31 to 0 of unicast_vlan105_macaddr_msb",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 256,
},
"unicast_vlan106_macaddr_lsb": {"description": "Data signal of unicast_vlan106_macaddr_lsb",
"address_offset": "264",
"access": "write-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"unicast_vlan106_macaddr_lsb": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 31 to 0 of unicast_vlan106_macaddr_lsb",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 264,
},
"unicast_vlan106_macaddr_msb": {"description": "Data signal of unicast_vlan106_macaddr_msb",
"address_offset": "272",
"access": "write-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"unicast_vlan106_macaddr_msb": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 31 to 0 of unicast_vlan106_macaddr_msb",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 272,
},
"unicast_vlan107_macaddr_lsb": {"description": "Data signal of unicast_vlan107_macaddr_lsb",
"address_offset": "280",
"access": "write-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"unicast_vlan107_macaddr_lsb": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 31 to 0 of unicast_vlan107_macaddr_lsb",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 280,
},
"unicast_vlan107_macaddr_msb": {"description": "Data signal of unicast_vlan107_macaddr_msb",
"address_offset": "288",
"access": "write-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"unicast_vlan107_macaddr_msb": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 31 to 0 of unicast_vlan107_macaddr_msb",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 288,
},
"unicast_vlan108_macaddr_lsb": {"description": "Data signal of unicast_vlan108_macaddr_lsb",
"address_offset": "296",
"access": "write-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"unicast_vlan108_macaddr_lsb": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 31 to 0 of unicast_vlan108_macaddr_lsb",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 296,
},
"unicast_vlan108_macaddr_msb": {"description": "Data signal of unicast_vlan108_macaddr_msb",
"address_offset": "304",
"access": "write-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"unicast_vlan108_macaddr_msb": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 31 to 0 of unicast_vlan108_macaddr_msb",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 304,
},
"unicast_vlan109_macaddr_lsb": {"description": "Data signal of unicast_vlan109_macaddr_lsb",
"address_offset": "312",
"access": "write-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"unicast_vlan109_macaddr_lsb": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 31 to 0 of unicast_vlan109_macaddr_lsb",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 312,
},
"unicast_vlan109_macaddr_msb": {"description": "Data signal of unicast_vlan109_macaddr_msb",
"address_offset": "320",
"access": "write-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"unicast_vlan109_macaddr_msb": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 31 to 0 of unicast_vlan109_macaddr_msb",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 320,
},
"log_all_mask": {"description": "Data signal of log_all_mask",
"address_offset": "328",
"access": "write-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"log_all_mask": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 31 to 0 of log_all_mask",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 328,
},
"driver_1": {"description": "Data signal of driver",
"address_offset": "336",
"access": "write-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"driver": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 31 to 0 of driver",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 336,
},
"driver_2": {"description": "Data signal of driver",
"address_offset": "340",
"access": "write-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"driver": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 63 to 32 of driver",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 340,
},
"vlan102_received": {"description": "Data signal of vlan102_received",
"address_offset": "348",
"access": "read-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"vlan102_received": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 31 to 0 of vlan102_received",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
},
"memoryAddr": 348,
},
"vlan102_received_ctrl": {"description": "Control signal of vlan102_received",
"address_offset": "352",
"access": "read-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"vlan102_received_ap_vld": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Control signal vlan102_received_ap_vld",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
"RESERVED": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "31",
"desc": "Reserved.  0s on read.",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
},
"memoryAddr": 352,
},
"vlan103_received": {"description": "Data signal of vlan103_received",
"address_offset": "356",
"access": "read-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"vlan103_received": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 31 to 0 of vlan103_received",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
},
"memoryAddr": 356,
},
"vlan103_received_ctrl": {"description": "Control signal of vlan103_received",
"address_offset": "360",
"access": "read-only",
"size": "32",
"interface": "s_axi_axilites",
"fields": {"vlan103_received_ap_vld": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Control signal vlan103_received_ap_vld",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
"RESERVED": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "31",
"desc": "Reserved.  0s on read.",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
},
"memoryAddr": 360,
},
},
"psu_adma_0": {},
"psu_adma_1": {},
"psu_adma_2": {},
"psu_adma_3": {},
"psu_adma_4": {},
"psu_adma_5": {},
"psu_adma_6": {},
"psu_adma_7": {},
"psu_afi_0": {},
"psu_afi_1": {},
"psu_afi_2": {},
"psu_afi_3": {},
"psu_afi_4": {},
"psu_afi_5": {},
"psu_afi_6": {},
"psu_ams": {},
"psu_apm_0": {},
"psu_apm_1": {},
"psu_apm_2": {},
"psu_apm_5": {},
"psu_apu": {},
"psu_bbram_0": {},
"psu_cci_gpv": {},
"psu_cci_reg": {},
"psu_crf_apb": {},
"psu_crl_apb": {},
"psu_csu_0": {},
"psu_csudma": {},
"psu_ctrl_ipi": {},
"psu_ddr_0": {},
"psu_ddr_phy": {},
"psu_ddr_qos_ctrl": {},
"psu_ddr_xmpu0_cfg": {},
"psu_ddr_xmpu1_cfg": {},
"psu_ddr_xmpu2_cfg": {},
"psu_ddr_xmpu3_cfg": {},
"psu_ddr_xmpu4_cfg": {},
"psu_ddr_xmpu5_cfg": {},
"psu_ddrc_0": {},
"psu_efuse": {},
"psu_ethernet_0": {},
"psu_ethernet_1": {},
"psu_ethernet_2": {},
"psu_ethernet_3": {},
"psu_fpd_gpv": {},
"psu_fpd_slcr": {},
"psu_fpd_slcr_secure": {},
"psu_fpd_xmpu_cfg": {},
"psu_fpd_xmpu_sink": {},
"psu_gdma_0": {},
"psu_gdma_1": {},
"psu_gdma_2": {},
"psu_gdma_3": {},
"psu_gdma_4": {},
"psu_gdma_5": {},
"psu_gdma_6": {},
"psu_gdma_7": {},
"psu_gpio_0": {},
"psu_gpu": {},
"psu_i2c_1": {},
"psu_iou_scntr": {},
"psu_iou_scntrs": {},
"psu_iousecure_slcr": {},
"psu_iouslcr_0": {},
"psu_ipi_3": {},
"psu_ipi_4": {},
"psu_ipi_5": {},
"psu_ipi_6": {},
"psu_lpd_slcr": {},
"psu_lpd_slcr_secure": {},
"psu_lpd_xppu": {},
"psu_lpd_xppu_sink": {},
"psu_mbistjtag": {},
"psu_message_buffers": {},
"psu_ocm": {},
"psu_ocm_ram_0": {},
"psu_ocm_xmpu_cfg": {},
"psu_pcie": {},
"psu_pcie_attrib_0": {},
"psu_pcie_dma": {},
"psu_pcie_high1": {},
"psu_pcie_high2": {},
"psu_pcie_low": {},
"psu_pmu_global_0": {},
"psu_pmu_iomodule": {},
"psu_pmu_ram": {},
"psu_qspi_0": {},
"psu_qspi_linear_0": {},
"psu_r5_0_atcm_global": {},
"psu_r5_0_btcm_global": {},
"psu_r5_1_atcm_global": {},
"psu_r5_1_btcm_global": {},
"psu_r5_tcm_ram_global": {},
"psu_rpu": {},
"psu_rsa": {},
"psu_rtc": {},
"psu_sata": {},
"psu_sd_0": {},
"psu_sd_1": {},
"psu_serdes": {},
"psu_siou": {},
"psu_smmu_gpv": {},
"psu_smmu_reg": {},
"psu_ttc_0": {},
"psu_ttc_1": {},
"psu_ttc_2": {},
"psu_ttc_3": {},
"psu_uart_0": {},
"psu_uart_1": {},
"psu_usb_0": {},
"psu_usb_xhci_0": {},
"timestamp_0": {"CTRL": {"description": "Control signals",
"address_offset": "0",
"access": "read-write",
"size": "32",
"interface": "s_axi_ts_base",
"fields": {"AP_START": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Control signal Register for 'ap_start'.",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"AP_DONE": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Control signal Register for 'ap_done'.",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
"AP_IDLE": {"access": "read-only",
"bit_offset": "2",
"bit_range": "",
"bit_width": "1",
"desc": "Control signal Register for 'ap_idle'.",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
"AP_READY": {"access": "read-only",
"bit_offset": "3",
"bit_range": "",
"bit_width": "1",
"desc": "Control signal Register for 'ap_ready'.",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
"RESERVED_1": {"access": "read-only",
"bit_offset": "4",
"bit_range": "",
"bit_width": "3",
"desc": "Reserved.  0s on read.",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
"AUTO_RESTART": {"access": "read-write",
"bit_offset": "7",
"bit_range": "",
"bit_width": "1",
"desc": "Control signal Register for 'auto_restart'.",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RESERVED_2": {"access": "read-only",
"bit_offset": "8",
"bit_range": "",
"bit_width": "24",
"desc": "Reserved.  0s on read.",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
},
"memoryAddr": 0,
},
"GIER": {"description": "Global Interrupt Enable Register",
"address_offset": "4",
"access": "read-write",
"size": "32",
"interface": "s_axi_ts_base",
"fields": {"Enable": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Master enable for the device interrupt output to the system interrupt controller: 0 = Disabled, 1 = Enabled",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RESERVED": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "31",
"desc": "Reserved.  0s on read.",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
},
"memoryAddr": 4,
},
"IP_IER": {"description": "IP Interrupt Enable Register",
"address_offset": "8",
"access": "read-write",
"size": "32",
"interface": "s_axi_ts_base",
"fields": {"CHAN0_INT_EN": {"access": "read-write",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Enable Channel 0 (ap_done) Interrupt.  0 = Disabled, 1 = Enabled.",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"CHAN1_INT_EN": {"access": "read-write",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Enable Channel 1 (ap_ready) Interrupt.  0 = Disabled, 1 = Enabled.",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
"RESERVED": {"access": "read-only",
"bit_offset": "2",
"bit_range": "",
"bit_width": "30",
"desc": "Reserved.  0s on read.",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
},
"memoryAddr": 8,
},
"IP_ISR": {"description": "IP Interrupt Status Register",
"address_offset": "12",
"access": "read-write",
"size": "32",
"interface": "s_axi_ts_base",
"fields": {"CHAN0_INT_ST": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Channel 0 (ap_done) Interrupt Status. 0 = No Channel 0 input interrupt, 1 = Channel 0 input interrup",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
"CHAN1_INT_ST": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "1",
"desc": "Channel 1 (ap_ready) Interrupt Status. 0 = No Channel 1 input interrupt, 1 = Channel 1 input interrup",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
"RESERVED": {"access": "read-only",
"bit_offset": "2",
"bit_range": "",
"bit_width": "30",
"desc": "Reserved.  0s on read.",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
},
"memoryAddr": 12,
},
"ts_base": {"description": "Data signal of ts_base",
"address_offset": "16",
"access": "write-only",
"size": "32",
"interface": "s_axi_ts_base",
"fields": {"ts_base": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 31 to 0 of ts_base",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 16,
},
"timestamp_high": {"description": "Data signal of timestamp_high",
"address_offset": "24",
"access": "read-only",
"size": "32",
"interface": "s_axi_ts_base",
"fields": {"timestamp_high": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 31 to 0 of timestamp_high",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
},
"memoryAddr": 24,
},
"timestamp_high_ctrl": {"description": "Control signal of timestamp_high",
"address_offset": "28",
"access": "read-only",
"size": "32",
"interface": "s_axi_ts_base",
"fields": {"timestamp_high_ap_vld": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Control signal timestamp_high_ap_vld",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
"RESERVED": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "31",
"desc": "Reserved.  0s on read.",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
},
"memoryAddr": 28,
},
"timestamp_low": {"description": "Data signal of timestamp_low",
"address_offset": "40",
"access": "read-only",
"size": "32",
"interface": "s_axi_ts_base",
"fields": {"timestamp_low": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 31 to 0 of timestamp_low",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
},
"memoryAddr": 40,
},
"timestamp_low_ctrl": {"description": "Control signal of timestamp_low",
"address_offset": "44",
"access": "read-only",
"size": "32",
"interface": "s_axi_ts_base",
"fields": {"timestamp_low_ap_vld": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Control signal timestamp_low_ap_vld",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
"RESERVED": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "31",
"desc": "Reserved.  0s on read.",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
},
"memoryAddr": 44,
},
"ts_base_10ns": {"description": "Data signal of ts_base_10ns",
"address_offset": "56",
"access": "write-only",
"size": "32",
"interface": "s_axi_ts_base",
"fields": {"ts_base_10ns": {"access": "write-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 31 to 0 of ts_base_10ns",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "",
},
},
"memoryAddr": 56,
},
"timestamp_ps_1": {"description": "Data signal of timestamp_ps",
"address_offset": "64",
"access": "read-only",
"size": "32",
"interface": "s_axi_ts_base",
"fields": {"timestamp_ps": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 31 to 0 of timestamp_ps",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
},
"memoryAddr": 64,
},
"timestamp_ps_2": {"description": "Data signal of timestamp_ps",
"address_offset": "68",
"access": "read-only",
"size": "32",
"interface": "s_axi_ts_base",
"fields": {"timestamp_ps": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "32",
"desc": "Bit 63 to 32 of timestamp_ps",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
},
"memoryAddr": 68,
},
"timestamp_ps_ctrl": {"description": "Control signal of timestamp_ps",
"address_offset": "72",
"access": "read-only",
"size": "32",
"interface": "s_axi_ts_base",
"fields": {"timestamp_ps_ap_vld": {"access": "read-only",
"bit_offset": "0",
"bit_range": "",
"bit_width": "1",
"desc": "Control signal timestamp_ps_ap_vld",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
"RESERVED": {"access": "read-only",
"bit_offset": "1",
"bit_range": "",
"bit_width": "31",
"desc": "Reserved.  0s on read.",
"enum_values": "",
"lsb": "",
"mod_write_val": "",
"msb": "",
"read_action": "modify",
},
},
"memoryAddr": 72,
},
},
}]. Thread: main
