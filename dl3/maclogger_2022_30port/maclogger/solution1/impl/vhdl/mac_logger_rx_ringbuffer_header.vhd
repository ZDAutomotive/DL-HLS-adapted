-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
-- Version: 2022.2
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity mac_logger_rx_ringbuffer_header is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    m_axi_ps_AWVALID : OUT STD_LOGIC;
    m_axi_ps_AWREADY : IN STD_LOGIC;
    m_axi_ps_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_ps_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_ps_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_ps_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_ps_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_ps_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_ps_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_ps_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_ps_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_ps_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_ps_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_ps_WVALID : OUT STD_LOGIC;
    m_axi_ps_WREADY : IN STD_LOGIC;
    m_axi_ps_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_ps_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_ps_WLAST : OUT STD_LOGIC;
    m_axi_ps_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_ps_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_ps_ARVALID : OUT STD_LOGIC;
    m_axi_ps_ARREADY : IN STD_LOGIC;
    m_axi_ps_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_ps_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_ps_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_ps_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_ps_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_ps_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_ps_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_ps_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_ps_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_ps_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_ps_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_ps_RVALID : IN STD_LOGIC;
    m_axi_ps_RREADY : OUT STD_LOGIC;
    m_axi_ps_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    m_axi_ps_RLAST : IN STD_LOGIC;
    m_axi_ps_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_ps_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
    m_axi_ps_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_ps_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_ps_BVALID : IN STD_LOGIC;
    m_axi_ps_BREADY : OUT STD_LOGIC;
    m_axi_ps_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_ps_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_ps_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    log_ddr : IN STD_LOGIC_VECTOR (63 downto 0);
    tap_ddr : IN STD_LOGIC_VECTOR (63 downto 0);
    log_header_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    log_header_ce0 : OUT STD_LOGIC;
    log_header_we0 : OUT STD_LOGIC;
    log_header_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    tap_header_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    tap_header_ce0 : OUT STD_LOGIC;
    tap_header_we0 : OUT STD_LOGIC;
    tap_header_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    ap_return_1 : OUT STD_LOGIC_VECTOR (63 downto 0) );
end;


architecture behav of mac_logger_rx_ringbuffer_header is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (17 downto 0) := "000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (17 downto 0) := "000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (17 downto 0) := "000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (17 downto 0) := "000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (17 downto 0) := "000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (17 downto 0) := "000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (17 downto 0) := "000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (17 downto 0) := "000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (17 downto 0) := "000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (17 downto 0) := "001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (17 downto 0) := "010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (17 downto 0) := "100000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";

attribute shreg_extract : string;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ps_blk_n_AR : STD_LOGIC;
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal trunc_ln28_fu_92_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal trunc_ln28_reg_149 : STD_LOGIC_VECTOR (61 downto 0);
    signal trunc_ln32_fu_113_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal trunc_ln32_reg_164 : STD_LOGIC_VECTOR (61 downto 0);
    signal grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_28_1_fu_74_ap_start : STD_LOGIC;
    signal grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_28_1_fu_74_ap_done : STD_LOGIC;
    signal grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_28_1_fu_74_ap_idle : STD_LOGIC;
    signal grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_28_1_fu_74_ap_ready : STD_LOGIC;
    signal grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_28_1_fu_74_m_axi_ps_AWVALID : STD_LOGIC;
    signal grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_28_1_fu_74_m_axi_ps_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_28_1_fu_74_m_axi_ps_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_28_1_fu_74_m_axi_ps_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_28_1_fu_74_m_axi_ps_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_28_1_fu_74_m_axi_ps_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_28_1_fu_74_m_axi_ps_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_28_1_fu_74_m_axi_ps_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_28_1_fu_74_m_axi_ps_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_28_1_fu_74_m_axi_ps_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_28_1_fu_74_m_axi_ps_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_28_1_fu_74_m_axi_ps_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_28_1_fu_74_m_axi_ps_WVALID : STD_LOGIC;
    signal grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_28_1_fu_74_m_axi_ps_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_28_1_fu_74_m_axi_ps_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_28_1_fu_74_m_axi_ps_WLAST : STD_LOGIC;
    signal grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_28_1_fu_74_m_axi_ps_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_28_1_fu_74_m_axi_ps_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_28_1_fu_74_m_axi_ps_ARVALID : STD_LOGIC;
    signal grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_28_1_fu_74_m_axi_ps_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_28_1_fu_74_m_axi_ps_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_28_1_fu_74_m_axi_ps_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_28_1_fu_74_m_axi_ps_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_28_1_fu_74_m_axi_ps_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_28_1_fu_74_m_axi_ps_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_28_1_fu_74_m_axi_ps_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_28_1_fu_74_m_axi_ps_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_28_1_fu_74_m_axi_ps_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_28_1_fu_74_m_axi_ps_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_28_1_fu_74_m_axi_ps_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_28_1_fu_74_m_axi_ps_RREADY : STD_LOGIC;
    signal grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_28_1_fu_74_m_axi_ps_BREADY : STD_LOGIC;
    signal grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_28_1_fu_74_log_header_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_28_1_fu_74_log_header_ce0 : STD_LOGIC;
    signal grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_28_1_fu_74_log_header_we0 : STD_LOGIC;
    signal grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_28_1_fu_74_log_header_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_32_2_fu_83_ap_start : STD_LOGIC;
    signal grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_32_2_fu_83_ap_done : STD_LOGIC;
    signal grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_32_2_fu_83_ap_idle : STD_LOGIC;
    signal grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_32_2_fu_83_ap_ready : STD_LOGIC;
    signal grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_32_2_fu_83_m_axi_ps_AWVALID : STD_LOGIC;
    signal grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_32_2_fu_83_m_axi_ps_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_32_2_fu_83_m_axi_ps_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_32_2_fu_83_m_axi_ps_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_32_2_fu_83_m_axi_ps_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_32_2_fu_83_m_axi_ps_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_32_2_fu_83_m_axi_ps_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_32_2_fu_83_m_axi_ps_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_32_2_fu_83_m_axi_ps_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_32_2_fu_83_m_axi_ps_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_32_2_fu_83_m_axi_ps_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_32_2_fu_83_m_axi_ps_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_32_2_fu_83_m_axi_ps_WVALID : STD_LOGIC;
    signal grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_32_2_fu_83_m_axi_ps_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_32_2_fu_83_m_axi_ps_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_32_2_fu_83_m_axi_ps_WLAST : STD_LOGIC;
    signal grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_32_2_fu_83_m_axi_ps_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_32_2_fu_83_m_axi_ps_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_32_2_fu_83_m_axi_ps_ARVALID : STD_LOGIC;
    signal grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_32_2_fu_83_m_axi_ps_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_32_2_fu_83_m_axi_ps_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_32_2_fu_83_m_axi_ps_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_32_2_fu_83_m_axi_ps_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_32_2_fu_83_m_axi_ps_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_32_2_fu_83_m_axi_ps_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_32_2_fu_83_m_axi_ps_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_32_2_fu_83_m_axi_ps_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_32_2_fu_83_m_axi_ps_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_32_2_fu_83_m_axi_ps_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_32_2_fu_83_m_axi_ps_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_32_2_fu_83_m_axi_ps_RREADY : STD_LOGIC;
    signal grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_32_2_fu_83_m_axi_ps_BREADY : STD_LOGIC;
    signal grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_32_2_fu_83_tap_header_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_32_2_fu_83_tap_header_ce0 : STD_LOGIC;
    signal grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_32_2_fu_83_tap_header_we0 : STD_LOGIC;
    signal grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_32_2_fu_83_tap_header_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_28_1_fu_74_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_32_2_fu_83_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal sext_ln28_fu_102_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln32_fu_123_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal ap_return_0_preg : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal ap_return_1_preg : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_ST_fsm_state17_blk : STD_LOGIC;
    signal ap_ST_fsm_state18_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component mac_logger_rx_ringbuffer_header_Pipeline_VITIS_LOOP_28_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_ps_AWVALID : OUT STD_LOGIC;
        m_axi_ps_AWREADY : IN STD_LOGIC;
        m_axi_ps_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_ps_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_ps_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_ps_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_ps_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_ps_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_ps_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_ps_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_ps_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_ps_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_ps_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_ps_WVALID : OUT STD_LOGIC;
        m_axi_ps_WREADY : IN STD_LOGIC;
        m_axi_ps_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_ps_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_ps_WLAST : OUT STD_LOGIC;
        m_axi_ps_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_ps_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_ps_ARVALID : OUT STD_LOGIC;
        m_axi_ps_ARREADY : IN STD_LOGIC;
        m_axi_ps_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_ps_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_ps_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_ps_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_ps_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_ps_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_ps_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_ps_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_ps_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_ps_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_ps_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_ps_RVALID : IN STD_LOGIC;
        m_axi_ps_RREADY : OUT STD_LOGIC;
        m_axi_ps_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_ps_RLAST : IN STD_LOGIC;
        m_axi_ps_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_ps_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_ps_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_ps_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_ps_BVALID : IN STD_LOGIC;
        m_axi_ps_BREADY : OUT STD_LOGIC;
        m_axi_ps_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_ps_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_ps_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        sext_ln28 : IN STD_LOGIC_VECTOR (61 downto 0);
        log_header_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        log_header_ce0 : OUT STD_LOGIC;
        log_header_we0 : OUT STD_LOGIC;
        log_header_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component mac_logger_rx_ringbuffer_header_Pipeline_VITIS_LOOP_32_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_ps_AWVALID : OUT STD_LOGIC;
        m_axi_ps_AWREADY : IN STD_LOGIC;
        m_axi_ps_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_ps_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_ps_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_ps_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_ps_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_ps_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_ps_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_ps_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_ps_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_ps_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_ps_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_ps_WVALID : OUT STD_LOGIC;
        m_axi_ps_WREADY : IN STD_LOGIC;
        m_axi_ps_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_ps_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_ps_WLAST : OUT STD_LOGIC;
        m_axi_ps_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_ps_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_ps_ARVALID : OUT STD_LOGIC;
        m_axi_ps_ARREADY : IN STD_LOGIC;
        m_axi_ps_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_ps_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_ps_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_ps_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_ps_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_ps_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_ps_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_ps_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_ps_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_ps_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_ps_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_ps_RVALID : IN STD_LOGIC;
        m_axi_ps_RREADY : OUT STD_LOGIC;
        m_axi_ps_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_ps_RLAST : IN STD_LOGIC;
        m_axi_ps_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_ps_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_ps_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_ps_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_ps_BVALID : IN STD_LOGIC;
        m_axi_ps_BREADY : OUT STD_LOGIC;
        m_axi_ps_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_ps_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_ps_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        sext_ln32 : IN STD_LOGIC_VECTOR (61 downto 0);
        tap_header_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        tap_header_ce0 : OUT STD_LOGIC;
        tap_header_we0 : OUT STD_LOGIC;
        tap_header_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_28_1_fu_74 : component mac_logger_rx_ringbuffer_header_Pipeline_VITIS_LOOP_28_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_28_1_fu_74_ap_start,
        ap_done => grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_28_1_fu_74_ap_done,
        ap_idle => grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_28_1_fu_74_ap_idle,
        ap_ready => grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_28_1_fu_74_ap_ready,
        m_axi_ps_AWVALID => grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_28_1_fu_74_m_axi_ps_AWVALID,
        m_axi_ps_AWREADY => ap_const_logic_0,
        m_axi_ps_AWADDR => grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_28_1_fu_74_m_axi_ps_AWADDR,
        m_axi_ps_AWID => grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_28_1_fu_74_m_axi_ps_AWID,
        m_axi_ps_AWLEN => grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_28_1_fu_74_m_axi_ps_AWLEN,
        m_axi_ps_AWSIZE => grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_28_1_fu_74_m_axi_ps_AWSIZE,
        m_axi_ps_AWBURST => grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_28_1_fu_74_m_axi_ps_AWBURST,
        m_axi_ps_AWLOCK => grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_28_1_fu_74_m_axi_ps_AWLOCK,
        m_axi_ps_AWCACHE => grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_28_1_fu_74_m_axi_ps_AWCACHE,
        m_axi_ps_AWPROT => grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_28_1_fu_74_m_axi_ps_AWPROT,
        m_axi_ps_AWQOS => grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_28_1_fu_74_m_axi_ps_AWQOS,
        m_axi_ps_AWREGION => grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_28_1_fu_74_m_axi_ps_AWREGION,
        m_axi_ps_AWUSER => grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_28_1_fu_74_m_axi_ps_AWUSER,
        m_axi_ps_WVALID => grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_28_1_fu_74_m_axi_ps_WVALID,
        m_axi_ps_WREADY => ap_const_logic_0,
        m_axi_ps_WDATA => grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_28_1_fu_74_m_axi_ps_WDATA,
        m_axi_ps_WSTRB => grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_28_1_fu_74_m_axi_ps_WSTRB,
        m_axi_ps_WLAST => grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_28_1_fu_74_m_axi_ps_WLAST,
        m_axi_ps_WID => grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_28_1_fu_74_m_axi_ps_WID,
        m_axi_ps_WUSER => grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_28_1_fu_74_m_axi_ps_WUSER,
        m_axi_ps_ARVALID => grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_28_1_fu_74_m_axi_ps_ARVALID,
        m_axi_ps_ARREADY => m_axi_ps_ARREADY,
        m_axi_ps_ARADDR => grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_28_1_fu_74_m_axi_ps_ARADDR,
        m_axi_ps_ARID => grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_28_1_fu_74_m_axi_ps_ARID,
        m_axi_ps_ARLEN => grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_28_1_fu_74_m_axi_ps_ARLEN,
        m_axi_ps_ARSIZE => grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_28_1_fu_74_m_axi_ps_ARSIZE,
        m_axi_ps_ARBURST => grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_28_1_fu_74_m_axi_ps_ARBURST,
        m_axi_ps_ARLOCK => grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_28_1_fu_74_m_axi_ps_ARLOCK,
        m_axi_ps_ARCACHE => grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_28_1_fu_74_m_axi_ps_ARCACHE,
        m_axi_ps_ARPROT => grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_28_1_fu_74_m_axi_ps_ARPROT,
        m_axi_ps_ARQOS => grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_28_1_fu_74_m_axi_ps_ARQOS,
        m_axi_ps_ARREGION => grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_28_1_fu_74_m_axi_ps_ARREGION,
        m_axi_ps_ARUSER => grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_28_1_fu_74_m_axi_ps_ARUSER,
        m_axi_ps_RVALID => m_axi_ps_RVALID,
        m_axi_ps_RREADY => grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_28_1_fu_74_m_axi_ps_RREADY,
        m_axi_ps_RDATA => m_axi_ps_RDATA,
        m_axi_ps_RLAST => m_axi_ps_RLAST,
        m_axi_ps_RID => m_axi_ps_RID,
        m_axi_ps_RFIFONUM => m_axi_ps_RFIFONUM,
        m_axi_ps_RUSER => m_axi_ps_RUSER,
        m_axi_ps_RRESP => m_axi_ps_RRESP,
        m_axi_ps_BVALID => ap_const_logic_0,
        m_axi_ps_BREADY => grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_28_1_fu_74_m_axi_ps_BREADY,
        m_axi_ps_BRESP => ap_const_lv2_0,
        m_axi_ps_BID => ap_const_lv1_0,
        m_axi_ps_BUSER => ap_const_lv1_0,
        sext_ln28 => trunc_ln28_reg_149,
        log_header_address0 => grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_28_1_fu_74_log_header_address0,
        log_header_ce0 => grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_28_1_fu_74_log_header_ce0,
        log_header_we0 => grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_28_1_fu_74_log_header_we0,
        log_header_d0 => grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_28_1_fu_74_log_header_d0);

    grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_32_2_fu_83 : component mac_logger_rx_ringbuffer_header_Pipeline_VITIS_LOOP_32_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_32_2_fu_83_ap_start,
        ap_done => grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_32_2_fu_83_ap_done,
        ap_idle => grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_32_2_fu_83_ap_idle,
        ap_ready => grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_32_2_fu_83_ap_ready,
        m_axi_ps_AWVALID => grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_32_2_fu_83_m_axi_ps_AWVALID,
        m_axi_ps_AWREADY => ap_const_logic_0,
        m_axi_ps_AWADDR => grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_32_2_fu_83_m_axi_ps_AWADDR,
        m_axi_ps_AWID => grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_32_2_fu_83_m_axi_ps_AWID,
        m_axi_ps_AWLEN => grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_32_2_fu_83_m_axi_ps_AWLEN,
        m_axi_ps_AWSIZE => grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_32_2_fu_83_m_axi_ps_AWSIZE,
        m_axi_ps_AWBURST => grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_32_2_fu_83_m_axi_ps_AWBURST,
        m_axi_ps_AWLOCK => grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_32_2_fu_83_m_axi_ps_AWLOCK,
        m_axi_ps_AWCACHE => grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_32_2_fu_83_m_axi_ps_AWCACHE,
        m_axi_ps_AWPROT => grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_32_2_fu_83_m_axi_ps_AWPROT,
        m_axi_ps_AWQOS => grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_32_2_fu_83_m_axi_ps_AWQOS,
        m_axi_ps_AWREGION => grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_32_2_fu_83_m_axi_ps_AWREGION,
        m_axi_ps_AWUSER => grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_32_2_fu_83_m_axi_ps_AWUSER,
        m_axi_ps_WVALID => grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_32_2_fu_83_m_axi_ps_WVALID,
        m_axi_ps_WREADY => ap_const_logic_0,
        m_axi_ps_WDATA => grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_32_2_fu_83_m_axi_ps_WDATA,
        m_axi_ps_WSTRB => grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_32_2_fu_83_m_axi_ps_WSTRB,
        m_axi_ps_WLAST => grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_32_2_fu_83_m_axi_ps_WLAST,
        m_axi_ps_WID => grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_32_2_fu_83_m_axi_ps_WID,
        m_axi_ps_WUSER => grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_32_2_fu_83_m_axi_ps_WUSER,
        m_axi_ps_ARVALID => grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_32_2_fu_83_m_axi_ps_ARVALID,
        m_axi_ps_ARREADY => m_axi_ps_ARREADY,
        m_axi_ps_ARADDR => grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_32_2_fu_83_m_axi_ps_ARADDR,
        m_axi_ps_ARID => grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_32_2_fu_83_m_axi_ps_ARID,
        m_axi_ps_ARLEN => grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_32_2_fu_83_m_axi_ps_ARLEN,
        m_axi_ps_ARSIZE => grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_32_2_fu_83_m_axi_ps_ARSIZE,
        m_axi_ps_ARBURST => grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_32_2_fu_83_m_axi_ps_ARBURST,
        m_axi_ps_ARLOCK => grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_32_2_fu_83_m_axi_ps_ARLOCK,
        m_axi_ps_ARCACHE => grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_32_2_fu_83_m_axi_ps_ARCACHE,
        m_axi_ps_ARPROT => grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_32_2_fu_83_m_axi_ps_ARPROT,
        m_axi_ps_ARQOS => grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_32_2_fu_83_m_axi_ps_ARQOS,
        m_axi_ps_ARREGION => grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_32_2_fu_83_m_axi_ps_ARREGION,
        m_axi_ps_ARUSER => grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_32_2_fu_83_m_axi_ps_ARUSER,
        m_axi_ps_RVALID => m_axi_ps_RVALID,
        m_axi_ps_RREADY => grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_32_2_fu_83_m_axi_ps_RREADY,
        m_axi_ps_RDATA => m_axi_ps_RDATA,
        m_axi_ps_RLAST => m_axi_ps_RLAST,
        m_axi_ps_RID => m_axi_ps_RID,
        m_axi_ps_RFIFONUM => m_axi_ps_RFIFONUM,
        m_axi_ps_RUSER => m_axi_ps_RUSER,
        m_axi_ps_RRESP => m_axi_ps_RRESP,
        m_axi_ps_BVALID => ap_const_logic_0,
        m_axi_ps_BREADY => grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_32_2_fu_83_m_axi_ps_BREADY,
        m_axi_ps_BRESP => ap_const_lv2_0,
        m_axi_ps_BID => ap_const_lv1_0,
        m_axi_ps_BUSER => ap_const_lv1_0,
        sext_ln32 => trunc_ln32_reg_164,
        tap_header_address0 => grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_32_2_fu_83_tap_header_address0,
        tap_header_ce0 => grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_32_2_fu_83_tap_header_ce0,
        tap_header_we0 => grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_32_2_fu_83_tap_header_we0,
        tap_header_d0 => grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_32_2_fu_83_tap_header_d0);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state18) and (grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_32_2_fu_83_ap_done = ap_const_logic_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_return_0_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_0_preg <= ap_const_lv64_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state18) and (grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_32_2_fu_83_ap_done = ap_const_logic_1))) then 
                    ap_return_0_preg <= log_ddr;
                end if; 
            end if;
        end if;
    end process;


    ap_return_1_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_1_preg <= ap_const_lv64_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state18) and (grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_32_2_fu_83_ap_done = ap_const_logic_1))) then 
                    ap_return_1_preg <= tap_ddr;
                end if; 
            end if;
        end if;
    end process;


    grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_28_1_fu_74_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_28_1_fu_74_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                    grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_28_1_fu_74_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_28_1_fu_74_ap_ready = ap_const_logic_1)) then 
                    grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_28_1_fu_74_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_32_2_fu_83_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_32_2_fu_83_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
                    grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_32_2_fu_83_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_32_2_fu_83_ap_ready = ap_const_logic_1)) then 
                    grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_32_2_fu_83_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                trunc_ln28_reg_149 <= log_ddr(63 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then
                trunc_ln32_reg_164 <= tap_ddr(63 downto 2);
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, m_axi_ps_ARREADY, ap_CS_fsm_state10, grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_28_1_fu_74_ap_done, grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_32_2_fu_83_ap_done, ap_CS_fsm_state9, ap_CS_fsm_state18)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((m_axi_ps_ARREADY = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state9) and (grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_28_1_fu_74_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state10 => 
                if (((m_axi_ps_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state18) and (grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_32_2_fu_83_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state18;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_ST_fsm_state10_blk_assign_proc : process(m_axi_ps_ARREADY)
    begin
        if ((m_axi_ps_ARREADY = ap_const_logic_0)) then 
            ap_ST_fsm_state10_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state10_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state11_blk <= ap_const_logic_0;
    ap_ST_fsm_state12_blk <= ap_const_logic_0;
    ap_ST_fsm_state13_blk <= ap_const_logic_0;
    ap_ST_fsm_state14_blk <= ap_const_logic_0;
    ap_ST_fsm_state15_blk <= ap_const_logic_0;
    ap_ST_fsm_state16_blk <= ap_const_logic_0;
    ap_ST_fsm_state17_blk <= ap_const_logic_0;

    ap_ST_fsm_state18_blk_assign_proc : process(grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_32_2_fu_83_ap_done)
    begin
        if ((grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_32_2_fu_83_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state18_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state18_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state1_blk_assign_proc : process(ap_start, ap_done_reg, m_axi_ps_ARREADY)
    begin
        if (((m_axi_ps_ARREADY = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;

    ap_ST_fsm_state9_blk_assign_proc : process(grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_28_1_fu_74_ap_done)
    begin
        if ((grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_28_1_fu_74_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state9_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state9_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_block_state1_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_done_reg, grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_32_2_fu_83_ap_done, ap_CS_fsm_state18)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state18) and (grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_32_2_fu_83_ap_done = ap_const_logic_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_32_2_fu_83_ap_done, ap_CS_fsm_state18)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state18) and (grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_32_2_fu_83_ap_done = ap_const_logic_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_return_0_assign_proc : process(log_ddr, grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_32_2_fu_83_ap_done, ap_CS_fsm_state18, ap_return_0_preg)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state18) and (grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_32_2_fu_83_ap_done = ap_const_logic_1))) then 
            ap_return_0 <= log_ddr;
        else 
            ap_return_0 <= ap_return_0_preg;
        end if; 
    end process;


    ap_return_1_assign_proc : process(tap_ddr, grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_32_2_fu_83_ap_done, ap_CS_fsm_state18, ap_return_1_preg)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state18) and (grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_32_2_fu_83_ap_done = ap_const_logic_1))) then 
            ap_return_1 <= tap_ddr;
        else 
            ap_return_1 <= ap_return_1_preg;
        end if; 
    end process;

    grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_28_1_fu_74_ap_start <= grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_28_1_fu_74_ap_start_reg;
    grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_32_2_fu_83_ap_start <= grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_32_2_fu_83_ap_start_reg;
    log_header_address0 <= grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_28_1_fu_74_log_header_address0;
    log_header_ce0 <= grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_28_1_fu_74_log_header_ce0;
    log_header_d0 <= grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_28_1_fu_74_log_header_d0;
    log_header_we0 <= grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_28_1_fu_74_log_header_we0;

    m_axi_ps_ARADDR_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, m_axi_ps_ARREADY, ap_CS_fsm_state10, grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_28_1_fu_74_m_axi_ps_ARADDR, grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_32_2_fu_83_m_axi_ps_ARADDR, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state17, ap_CS_fsm_state18, sext_ln28_fu_102_p1, sext_ln32_fu_123_p1)
    begin
        if (((m_axi_ps_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            m_axi_ps_ARADDR <= sext_ln32_fu_123_p1;
        elsif ((not(((m_axi_ps_ARREADY = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            m_axi_ps_ARADDR <= sext_ln28_fu_102_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            m_axi_ps_ARADDR <= grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_32_2_fu_83_m_axi_ps_ARADDR;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            m_axi_ps_ARADDR <= grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_28_1_fu_74_m_axi_ps_ARADDR;
        else 
            m_axi_ps_ARADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    m_axi_ps_ARBURST_assign_proc : process(grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_28_1_fu_74_m_axi_ps_ARBURST, grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_32_2_fu_83_m_axi_ps_ARBURST, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state17, ap_CS_fsm_state18)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            m_axi_ps_ARBURST <= grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_32_2_fu_83_m_axi_ps_ARBURST;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            m_axi_ps_ARBURST <= grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_28_1_fu_74_m_axi_ps_ARBURST;
        else 
            m_axi_ps_ARBURST <= ap_const_lv2_0;
        end if; 
    end process;


    m_axi_ps_ARCACHE_assign_proc : process(grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_28_1_fu_74_m_axi_ps_ARCACHE, grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_32_2_fu_83_m_axi_ps_ARCACHE, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state17, ap_CS_fsm_state18)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            m_axi_ps_ARCACHE <= grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_32_2_fu_83_m_axi_ps_ARCACHE;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            m_axi_ps_ARCACHE <= grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_28_1_fu_74_m_axi_ps_ARCACHE;
        else 
            m_axi_ps_ARCACHE <= ap_const_lv4_0;
        end if; 
    end process;


    m_axi_ps_ARID_assign_proc : process(grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_28_1_fu_74_m_axi_ps_ARID, grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_32_2_fu_83_m_axi_ps_ARID, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state17, ap_CS_fsm_state18)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            m_axi_ps_ARID <= grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_32_2_fu_83_m_axi_ps_ARID;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            m_axi_ps_ARID <= grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_28_1_fu_74_m_axi_ps_ARID;
        else 
            m_axi_ps_ARID <= ap_const_lv1_0;
        end if; 
    end process;


    m_axi_ps_ARLEN_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, m_axi_ps_ARREADY, ap_CS_fsm_state10, grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_28_1_fu_74_m_axi_ps_ARLEN, grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_32_2_fu_83_m_axi_ps_ARLEN, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state17, ap_CS_fsm_state18)
    begin
        if ((((m_axi_ps_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10)) or (not(((m_axi_ps_ARREADY = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            m_axi_ps_ARLEN <= ap_const_lv32_7;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            m_axi_ps_ARLEN <= grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_32_2_fu_83_m_axi_ps_ARLEN;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            m_axi_ps_ARLEN <= grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_28_1_fu_74_m_axi_ps_ARLEN;
        else 
            m_axi_ps_ARLEN <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    m_axi_ps_ARLOCK_assign_proc : process(grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_28_1_fu_74_m_axi_ps_ARLOCK, grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_32_2_fu_83_m_axi_ps_ARLOCK, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state17, ap_CS_fsm_state18)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            m_axi_ps_ARLOCK <= grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_32_2_fu_83_m_axi_ps_ARLOCK;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            m_axi_ps_ARLOCK <= grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_28_1_fu_74_m_axi_ps_ARLOCK;
        else 
            m_axi_ps_ARLOCK <= ap_const_lv2_0;
        end if; 
    end process;


    m_axi_ps_ARPROT_assign_proc : process(grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_28_1_fu_74_m_axi_ps_ARPROT, grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_32_2_fu_83_m_axi_ps_ARPROT, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state17, ap_CS_fsm_state18)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            m_axi_ps_ARPROT <= grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_32_2_fu_83_m_axi_ps_ARPROT;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            m_axi_ps_ARPROT <= grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_28_1_fu_74_m_axi_ps_ARPROT;
        else 
            m_axi_ps_ARPROT <= ap_const_lv3_0;
        end if; 
    end process;


    m_axi_ps_ARQOS_assign_proc : process(grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_28_1_fu_74_m_axi_ps_ARQOS, grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_32_2_fu_83_m_axi_ps_ARQOS, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state17, ap_CS_fsm_state18)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            m_axi_ps_ARQOS <= grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_32_2_fu_83_m_axi_ps_ARQOS;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            m_axi_ps_ARQOS <= grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_28_1_fu_74_m_axi_ps_ARQOS;
        else 
            m_axi_ps_ARQOS <= ap_const_lv4_0;
        end if; 
    end process;


    m_axi_ps_ARREGION_assign_proc : process(grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_28_1_fu_74_m_axi_ps_ARREGION, grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_32_2_fu_83_m_axi_ps_ARREGION, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state17, ap_CS_fsm_state18)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            m_axi_ps_ARREGION <= grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_32_2_fu_83_m_axi_ps_ARREGION;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            m_axi_ps_ARREGION <= grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_28_1_fu_74_m_axi_ps_ARREGION;
        else 
            m_axi_ps_ARREGION <= ap_const_lv4_0;
        end if; 
    end process;


    m_axi_ps_ARSIZE_assign_proc : process(grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_28_1_fu_74_m_axi_ps_ARSIZE, grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_32_2_fu_83_m_axi_ps_ARSIZE, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state17, ap_CS_fsm_state18)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            m_axi_ps_ARSIZE <= grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_32_2_fu_83_m_axi_ps_ARSIZE;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            m_axi_ps_ARSIZE <= grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_28_1_fu_74_m_axi_ps_ARSIZE;
        else 
            m_axi_ps_ARSIZE <= ap_const_lv3_0;
        end if; 
    end process;


    m_axi_ps_ARUSER_assign_proc : process(grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_28_1_fu_74_m_axi_ps_ARUSER, grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_32_2_fu_83_m_axi_ps_ARUSER, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state17, ap_CS_fsm_state18)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            m_axi_ps_ARUSER <= grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_32_2_fu_83_m_axi_ps_ARUSER;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            m_axi_ps_ARUSER <= grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_28_1_fu_74_m_axi_ps_ARUSER;
        else 
            m_axi_ps_ARUSER <= ap_const_lv1_0;
        end if; 
    end process;


    m_axi_ps_ARVALID_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, m_axi_ps_ARREADY, ap_CS_fsm_state10, grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_28_1_fu_74_m_axi_ps_ARVALID, grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_32_2_fu_83_m_axi_ps_ARVALID, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state17, ap_CS_fsm_state18)
    begin
        if ((((m_axi_ps_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10)) or (not(((m_axi_ps_ARREADY = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            m_axi_ps_ARVALID <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            m_axi_ps_ARVALID <= grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_32_2_fu_83_m_axi_ps_ARVALID;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            m_axi_ps_ARVALID <= grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_28_1_fu_74_m_axi_ps_ARVALID;
        else 
            m_axi_ps_ARVALID <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_ps_AWADDR <= ap_const_lv64_0;
    m_axi_ps_AWBURST <= ap_const_lv2_0;
    m_axi_ps_AWCACHE <= ap_const_lv4_0;
    m_axi_ps_AWID <= ap_const_lv1_0;
    m_axi_ps_AWLEN <= ap_const_lv32_0;
    m_axi_ps_AWLOCK <= ap_const_lv2_0;
    m_axi_ps_AWPROT <= ap_const_lv3_0;
    m_axi_ps_AWQOS <= ap_const_lv4_0;
    m_axi_ps_AWREGION <= ap_const_lv4_0;
    m_axi_ps_AWSIZE <= ap_const_lv3_0;
    m_axi_ps_AWUSER <= ap_const_lv1_0;
    m_axi_ps_AWVALID <= ap_const_logic_0;
    m_axi_ps_BREADY <= ap_const_logic_0;

    m_axi_ps_RREADY_assign_proc : process(grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_28_1_fu_74_m_axi_ps_RREADY, grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_32_2_fu_83_m_axi_ps_RREADY, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state17, ap_CS_fsm_state18)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            m_axi_ps_RREADY <= grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_32_2_fu_83_m_axi_ps_RREADY;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            m_axi_ps_RREADY <= grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_28_1_fu_74_m_axi_ps_RREADY;
        else 
            m_axi_ps_RREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_ps_WDATA <= ap_const_lv32_0;
    m_axi_ps_WID <= ap_const_lv1_0;
    m_axi_ps_WLAST <= ap_const_logic_0;
    m_axi_ps_WSTRB <= ap_const_lv4_0;
    m_axi_ps_WUSER <= ap_const_lv1_0;
    m_axi_ps_WVALID <= ap_const_logic_0;

    ps_blk_n_AR_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, m_axi_ps_ARREADY, ap_CS_fsm_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) or (not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ps_blk_n_AR <= m_axi_ps_ARREADY;
        else 
            ps_blk_n_AR <= ap_const_logic_1;
        end if; 
    end process;

        sext_ln28_fu_102_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln28_fu_92_p4),64));

        sext_ln32_fu_123_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln32_fu_113_p4),64));

    tap_header_address0 <= grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_32_2_fu_83_tap_header_address0;
    tap_header_ce0 <= grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_32_2_fu_83_tap_header_ce0;
    tap_header_d0 <= grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_32_2_fu_83_tap_header_d0;
    tap_header_we0 <= grp_rx_ringbuffer_header_Pipeline_VITIS_LOOP_32_2_fu_83_tap_header_we0;
    trunc_ln28_fu_92_p4 <= log_ddr(63 downto 2);
    trunc_ln32_fu_113_p4 <= tap_ddr(63 downto 2);
end behav;
