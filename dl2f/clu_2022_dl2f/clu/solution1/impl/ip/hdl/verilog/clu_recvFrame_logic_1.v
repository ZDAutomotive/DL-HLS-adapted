// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module clu_recvFrame_logic_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_can_addr_AWVALID,
        m_axi_can_addr_AWREADY,
        m_axi_can_addr_AWADDR,
        m_axi_can_addr_AWID,
        m_axi_can_addr_AWLEN,
        m_axi_can_addr_AWSIZE,
        m_axi_can_addr_AWBURST,
        m_axi_can_addr_AWLOCK,
        m_axi_can_addr_AWCACHE,
        m_axi_can_addr_AWPROT,
        m_axi_can_addr_AWQOS,
        m_axi_can_addr_AWREGION,
        m_axi_can_addr_AWUSER,
        m_axi_can_addr_WVALID,
        m_axi_can_addr_WREADY,
        m_axi_can_addr_WDATA,
        m_axi_can_addr_WSTRB,
        m_axi_can_addr_WLAST,
        m_axi_can_addr_WID,
        m_axi_can_addr_WUSER,
        m_axi_can_addr_ARVALID,
        m_axi_can_addr_ARREADY,
        m_axi_can_addr_ARADDR,
        m_axi_can_addr_ARID,
        m_axi_can_addr_ARLEN,
        m_axi_can_addr_ARSIZE,
        m_axi_can_addr_ARBURST,
        m_axi_can_addr_ARLOCK,
        m_axi_can_addr_ARCACHE,
        m_axi_can_addr_ARPROT,
        m_axi_can_addr_ARQOS,
        m_axi_can_addr_ARREGION,
        m_axi_can_addr_ARUSER,
        m_axi_can_addr_RVALID,
        m_axi_can_addr_RREADY,
        m_axi_can_addr_RDATA,
        m_axi_can_addr_RLAST,
        m_axi_can_addr_RID,
        m_axi_can_addr_RFIFONUM,
        m_axi_can_addr_RUSER,
        m_axi_can_addr_RRESP,
        m_axi_can_addr_BVALID,
        m_axi_can_addr_BREADY,
        m_axi_can_addr_BRESP,
        m_axi_can_addr_BID,
        m_axi_can_addr_BUSER,
        canbase,
        m_axi_ps_ddr_AWVALID,
        m_axi_ps_ddr_AWREADY,
        m_axi_ps_ddr_AWADDR,
        m_axi_ps_ddr_AWID,
        m_axi_ps_ddr_AWLEN,
        m_axi_ps_ddr_AWSIZE,
        m_axi_ps_ddr_AWBURST,
        m_axi_ps_ddr_AWLOCK,
        m_axi_ps_ddr_AWCACHE,
        m_axi_ps_ddr_AWPROT,
        m_axi_ps_ddr_AWQOS,
        m_axi_ps_ddr_AWREGION,
        m_axi_ps_ddr_AWUSER,
        m_axi_ps_ddr_WVALID,
        m_axi_ps_ddr_WREADY,
        m_axi_ps_ddr_WDATA,
        m_axi_ps_ddr_WSTRB,
        m_axi_ps_ddr_WLAST,
        m_axi_ps_ddr_WID,
        m_axi_ps_ddr_WUSER,
        m_axi_ps_ddr_ARVALID,
        m_axi_ps_ddr_ARREADY,
        m_axi_ps_ddr_ARADDR,
        m_axi_ps_ddr_ARID,
        m_axi_ps_ddr_ARLEN,
        m_axi_ps_ddr_ARSIZE,
        m_axi_ps_ddr_ARBURST,
        m_axi_ps_ddr_ARLOCK,
        m_axi_ps_ddr_ARCACHE,
        m_axi_ps_ddr_ARPROT,
        m_axi_ps_ddr_ARQOS,
        m_axi_ps_ddr_ARREGION,
        m_axi_ps_ddr_ARUSER,
        m_axi_ps_ddr_RVALID,
        m_axi_ps_ddr_RREADY,
        m_axi_ps_ddr_RDATA,
        m_axi_ps_ddr_RLAST,
        m_axi_ps_ddr_RID,
        m_axi_ps_ddr_RFIFONUM,
        m_axi_ps_ddr_RUSER,
        m_axi_ps_ddr_RRESP,
        m_axi_ps_ddr_BVALID,
        m_axi_ps_ddr_BREADY,
        m_axi_ps_ddr_BRESP,
        m_axi_ps_ddr_BID,
        m_axi_ps_ddr_BUSER,
        ddr,
        readIndex,
        EN,
        timestamp,
        received_can,
        received_can_ap_vld
);

parameter    ap_ST_fsm_state1 = 31'd1;
parameter    ap_ST_fsm_state2 = 31'd2;
parameter    ap_ST_fsm_state3 = 31'd4;
parameter    ap_ST_fsm_state4 = 31'd8;
parameter    ap_ST_fsm_state5 = 31'd16;
parameter    ap_ST_fsm_state6 = 31'd32;
parameter    ap_ST_fsm_state7 = 31'd64;
parameter    ap_ST_fsm_state8 = 31'd128;
parameter    ap_ST_fsm_state9 = 31'd256;
parameter    ap_ST_fsm_state10 = 31'd512;
parameter    ap_ST_fsm_state11 = 31'd1024;
parameter    ap_ST_fsm_state12 = 31'd2048;
parameter    ap_ST_fsm_state13 = 31'd4096;
parameter    ap_ST_fsm_state14 = 31'd8192;
parameter    ap_ST_fsm_state15 = 31'd16384;
parameter    ap_ST_fsm_state16 = 31'd32768;
parameter    ap_ST_fsm_state17 = 31'd65536;
parameter    ap_ST_fsm_state18 = 31'd131072;
parameter    ap_ST_fsm_state19 = 31'd262144;
parameter    ap_ST_fsm_state20 = 31'd524288;
parameter    ap_ST_fsm_state21 = 31'd1048576;
parameter    ap_ST_fsm_state22 = 31'd2097152;
parameter    ap_ST_fsm_state23 = 31'd4194304;
parameter    ap_ST_fsm_state24 = 31'd8388608;
parameter    ap_ST_fsm_state25 = 31'd16777216;
parameter    ap_ST_fsm_state26 = 31'd33554432;
parameter    ap_ST_fsm_state27 = 31'd67108864;
parameter    ap_ST_fsm_state28 = 31'd134217728;
parameter    ap_ST_fsm_state29 = 31'd268435456;
parameter    ap_ST_fsm_state30 = 31'd536870912;
parameter    ap_ST_fsm_state31 = 31'd1073741824;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_can_addr_AWVALID;
input   m_axi_can_addr_AWREADY;
output  [31:0] m_axi_can_addr_AWADDR;
output  [0:0] m_axi_can_addr_AWID;
output  [31:0] m_axi_can_addr_AWLEN;
output  [2:0] m_axi_can_addr_AWSIZE;
output  [1:0] m_axi_can_addr_AWBURST;
output  [1:0] m_axi_can_addr_AWLOCK;
output  [3:0] m_axi_can_addr_AWCACHE;
output  [2:0] m_axi_can_addr_AWPROT;
output  [3:0] m_axi_can_addr_AWQOS;
output  [3:0] m_axi_can_addr_AWREGION;
output  [0:0] m_axi_can_addr_AWUSER;
output   m_axi_can_addr_WVALID;
input   m_axi_can_addr_WREADY;
output  [31:0] m_axi_can_addr_WDATA;
output  [3:0] m_axi_can_addr_WSTRB;
output   m_axi_can_addr_WLAST;
output  [0:0] m_axi_can_addr_WID;
output  [0:0] m_axi_can_addr_WUSER;
output   m_axi_can_addr_ARVALID;
input   m_axi_can_addr_ARREADY;
output  [31:0] m_axi_can_addr_ARADDR;
output  [0:0] m_axi_can_addr_ARID;
output  [31:0] m_axi_can_addr_ARLEN;
output  [2:0] m_axi_can_addr_ARSIZE;
output  [1:0] m_axi_can_addr_ARBURST;
output  [1:0] m_axi_can_addr_ARLOCK;
output  [3:0] m_axi_can_addr_ARCACHE;
output  [2:0] m_axi_can_addr_ARPROT;
output  [3:0] m_axi_can_addr_ARQOS;
output  [3:0] m_axi_can_addr_ARREGION;
output  [0:0] m_axi_can_addr_ARUSER;
input   m_axi_can_addr_RVALID;
output   m_axi_can_addr_RREADY;
input  [31:0] m_axi_can_addr_RDATA;
input   m_axi_can_addr_RLAST;
input  [0:0] m_axi_can_addr_RID;
input  [8:0] m_axi_can_addr_RFIFONUM;
input  [0:0] m_axi_can_addr_RUSER;
input  [1:0] m_axi_can_addr_RRESP;
input   m_axi_can_addr_BVALID;
output   m_axi_can_addr_BREADY;
input  [1:0] m_axi_can_addr_BRESP;
input  [0:0] m_axi_can_addr_BID;
input  [0:0] m_axi_can_addr_BUSER;
input  [31:0] canbase;
output   m_axi_ps_ddr_AWVALID;
input   m_axi_ps_ddr_AWREADY;
output  [31:0] m_axi_ps_ddr_AWADDR;
output  [0:0] m_axi_ps_ddr_AWID;
output  [31:0] m_axi_ps_ddr_AWLEN;
output  [2:0] m_axi_ps_ddr_AWSIZE;
output  [1:0] m_axi_ps_ddr_AWBURST;
output  [1:0] m_axi_ps_ddr_AWLOCK;
output  [3:0] m_axi_ps_ddr_AWCACHE;
output  [2:0] m_axi_ps_ddr_AWPROT;
output  [3:0] m_axi_ps_ddr_AWQOS;
output  [3:0] m_axi_ps_ddr_AWREGION;
output  [0:0] m_axi_ps_ddr_AWUSER;
output   m_axi_ps_ddr_WVALID;
input   m_axi_ps_ddr_WREADY;
output  [7:0] m_axi_ps_ddr_WDATA;
output  [0:0] m_axi_ps_ddr_WSTRB;
output   m_axi_ps_ddr_WLAST;
output  [0:0] m_axi_ps_ddr_WID;
output  [0:0] m_axi_ps_ddr_WUSER;
output   m_axi_ps_ddr_ARVALID;
input   m_axi_ps_ddr_ARREADY;
output  [31:0] m_axi_ps_ddr_ARADDR;
output  [0:0] m_axi_ps_ddr_ARID;
output  [31:0] m_axi_ps_ddr_ARLEN;
output  [2:0] m_axi_ps_ddr_ARSIZE;
output  [1:0] m_axi_ps_ddr_ARBURST;
output  [1:0] m_axi_ps_ddr_ARLOCK;
output  [3:0] m_axi_ps_ddr_ARCACHE;
output  [2:0] m_axi_ps_ddr_ARPROT;
output  [3:0] m_axi_ps_ddr_ARQOS;
output  [3:0] m_axi_ps_ddr_ARREGION;
output  [0:0] m_axi_ps_ddr_ARUSER;
input   m_axi_ps_ddr_RVALID;
output   m_axi_ps_ddr_RREADY;
input  [7:0] m_axi_ps_ddr_RDATA;
input   m_axi_ps_ddr_RLAST;
input  [0:0] m_axi_ps_ddr_RID;
input  [10:0] m_axi_ps_ddr_RFIFONUM;
input  [0:0] m_axi_ps_ddr_RUSER;
input  [1:0] m_axi_ps_ddr_RRESP;
input   m_axi_ps_ddr_BVALID;
output   m_axi_ps_ddr_BREADY;
input  [1:0] m_axi_ps_ddr_BRESP;
input  [0:0] m_axi_ps_ddr_BID;
input  [0:0] m_axi_ps_ddr_BUSER;
input  [31:0] ddr;
input  [7:0] readIndex;
input  [3:0] EN;
input  [63:0] timestamp;
output  [31:0] received_can;
output   received_can_ap_vld;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg m_axi_can_addr_AWVALID;
reg m_axi_can_addr_WVALID;
reg m_axi_can_addr_ARVALID;
reg[31:0] m_axi_can_addr_ARADDR;
reg[0:0] m_axi_can_addr_ARID;
reg[31:0] m_axi_can_addr_ARLEN;
reg[2:0] m_axi_can_addr_ARSIZE;
reg[1:0] m_axi_can_addr_ARBURST;
reg[1:0] m_axi_can_addr_ARLOCK;
reg[3:0] m_axi_can_addr_ARCACHE;
reg[2:0] m_axi_can_addr_ARPROT;
reg[3:0] m_axi_can_addr_ARQOS;
reg[3:0] m_axi_can_addr_ARREGION;
reg[0:0] m_axi_can_addr_ARUSER;
reg m_axi_can_addr_RREADY;
reg m_axi_can_addr_BREADY;
reg m_axi_ps_ddr_AWVALID;
reg m_axi_ps_ddr_WVALID;
reg m_axi_ps_ddr_ARVALID;
reg m_axi_ps_ddr_RREADY;
reg m_axi_ps_ddr_BREADY;
reg received_can_ap_vld;

(* fsm_encoding = "none" *) reg   [30:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [31:0] internal_can_counter;
reg    can_addr_blk_n_AR;
wire    ap_CS_fsm_state2;
reg    can_addr_blk_n_R;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state24;
reg    can_addr_blk_n_AW;
wire    ap_CS_fsm_state25;
reg    can_addr_blk_n_W;
wire    ap_CS_fsm_state26;
reg    can_addr_blk_n_B;
wire    ap_CS_fsm_state31;
wire   [14:0] add_ln150_2_fu_577_p2;
reg   [14:0] add_ln150_2_reg_1305;
reg   [29:0] trunc_ln150_1_reg_1311;
reg   [29:0] trunc_ln173_1_reg_1322;
wire    ap_CS_fsm_state3;
reg   [7:0] trunc_ln11_reg_1327;
reg   [7:0] trunc_ln12_reg_1332;
reg   [7:0] trunc_ln13_reg_1337;
reg   [7:0] trunc_ln14_reg_1342;
reg   [7:0] trunc_ln15_reg_1347;
wire   [7:0] trunc_ln192_fu_751_p1;
reg   [7:0] trunc_ln192_reg_1352;
wire   [0:0] trunc_ln146_fu_780_p1;
reg   [0:0] trunc_ln146_reg_1363;
reg   [0:0] tmp_2_reg_1368;
reg   [10:0] trunc_ln158_1_reg_1375;
reg   [0:0] tmp_6_reg_1381;
reg   [17:0] trunc_ln161_2_reg_1386;
reg   [4:0] tmp_3_reg_1391;
wire    ap_CS_fsm_state10;
reg   [7:0] trunc_ln_reg_1396;
reg   [7:0] trunc_ln8_reg_1401;
wire   [7:0] trunc_ln168_fu_880_p1;
reg   [7:0] trunc_ln168_reg_1406;
reg   [31:0] frameDLC_reg_1411;
reg   [0:0] tmp_7_reg_1417;
wire   [2:0] select_ln32_5_fu_1045_p3;
reg   [2:0] select_ln32_5_reg_1422;
wire    ap_CS_fsm_state12;
wire   [0:0] icmp_ln32_7_fu_1053_p2;
reg   [0:0] icmp_ln32_7_reg_1427;
wire   [0:0] icmp_ln32_8_fu_1059_p2;
reg   [0:0] icmp_ln32_8_reg_1432;
wire   [0:0] icmp_ln32_9_fu_1065_p2;
reg   [0:0] icmp_ln32_9_reg_1438;
wire   [0:0] icmp_ln32_10_fu_1071_p2;
reg   [0:0] icmp_ln32_10_reg_1443;
wire   [0:0] icmp_ln32_11_fu_1077_p2;
reg   [0:0] icmp_ln32_11_reg_1449;
wire   [0:0] icmp_ln32_12_fu_1083_p2;
reg   [0:0] icmp_ln32_12_reg_1454;
wire   [0:0] icmp_ln32_13_fu_1089_p2;
reg   [0:0] icmp_ln32_13_reg_1460;
wire   [0:0] icmp_ln32_14_fu_1095_p2;
reg   [0:0] icmp_ln32_14_reg_1465;
wire    ap_CS_fsm_state13;
wire   [6:0] NofBytes_fu_1184_p3;
reg   [6:0] NofBytes_reg_1476;
wire   [14:0] add115_fu_1212_p2;
reg   [14:0] add115_reg_1481;
wire   [0:0] icmp_ln205_fu_1217_p2;
reg   [0:0] icmp_ln205_reg_1487;
reg   [3:0] trunc_ln16_reg_1491;
reg   [29:0] trunc_ln17_reg_1496;
wire    ap_CS_fsm_state15;
wire   [4:0] add_ln205_1_fu_1274_p2;
reg   [4:0] add_ln205_1_reg_1501;
wire    ap_CS_fsm_state16;
reg   [31:0] can_addr_addr_2_reg_1506;
reg   [31:0] can_addr_addr_2_read_reg_1513;
reg   [6:0] can_frame_address0;
reg    can_frame_ce0;
reg    can_frame_we0;
reg   [7:0] can_frame_d0;
wire   [7:0] can_frame_q0;
reg   [6:0] can_frame_address1;
reg    can_frame_ce1;
reg    can_frame_we1;
reg   [7:0] can_frame_d1;
wire    grp_recvFrame_logic_1_Pipeline_1_fu_517_ap_start;
wire    grp_recvFrame_logic_1_Pipeline_1_fu_517_ap_done;
wire    grp_recvFrame_logic_1_Pipeline_1_fu_517_ap_idle;
wire    grp_recvFrame_logic_1_Pipeline_1_fu_517_ap_ready;
wire   [6:0] grp_recvFrame_logic_1_Pipeline_1_fu_517_can_frame_address0;
wire    grp_recvFrame_logic_1_Pipeline_1_fu_517_can_frame_ce0;
wire    grp_recvFrame_logic_1_Pipeline_1_fu_517_can_frame_we0;
wire   [7:0] grp_recvFrame_logic_1_Pipeline_1_fu_517_can_frame_d0;
wire    grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_523_ap_start;
wire    grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_523_ap_done;
wire    grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_523_ap_idle;
wire    grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_523_ap_ready;
wire    grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_523_m_axi_can_addr_AWVALID;
wire   [31:0] grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_523_m_axi_can_addr_AWADDR;
wire   [0:0] grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_523_m_axi_can_addr_AWID;
wire   [31:0] grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_523_m_axi_can_addr_AWLEN;
wire   [2:0] grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_523_m_axi_can_addr_AWSIZE;
wire   [1:0] grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_523_m_axi_can_addr_AWBURST;
wire   [1:0] grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_523_m_axi_can_addr_AWLOCK;
wire   [3:0] grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_523_m_axi_can_addr_AWCACHE;
wire   [2:0] grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_523_m_axi_can_addr_AWPROT;
wire   [3:0] grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_523_m_axi_can_addr_AWQOS;
wire   [3:0] grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_523_m_axi_can_addr_AWREGION;
wire   [0:0] grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_523_m_axi_can_addr_AWUSER;
wire    grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_523_m_axi_can_addr_WVALID;
wire   [31:0] grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_523_m_axi_can_addr_WDATA;
wire   [3:0] grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_523_m_axi_can_addr_WSTRB;
wire    grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_523_m_axi_can_addr_WLAST;
wire   [0:0] grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_523_m_axi_can_addr_WID;
wire   [0:0] grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_523_m_axi_can_addr_WUSER;
wire    grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_523_m_axi_can_addr_ARVALID;
wire   [31:0] grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_523_m_axi_can_addr_ARADDR;
wire   [0:0] grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_523_m_axi_can_addr_ARID;
wire   [31:0] grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_523_m_axi_can_addr_ARLEN;
wire   [2:0] grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_523_m_axi_can_addr_ARSIZE;
wire   [1:0] grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_523_m_axi_can_addr_ARBURST;
wire   [1:0] grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_523_m_axi_can_addr_ARLOCK;
wire   [3:0] grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_523_m_axi_can_addr_ARCACHE;
wire   [2:0] grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_523_m_axi_can_addr_ARPROT;
wire   [3:0] grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_523_m_axi_can_addr_ARQOS;
wire   [3:0] grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_523_m_axi_can_addr_ARREGION;
wire   [0:0] grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_523_m_axi_can_addr_ARUSER;
wire    grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_523_m_axi_can_addr_RREADY;
wire    grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_523_m_axi_can_addr_BREADY;
wire   [6:0] grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_523_can_frame_address0;
wire    grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_523_can_frame_ce0;
wire    grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_523_can_frame_we0;
wire   [7:0] grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_523_can_frame_d0;
wire   [6:0] grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_523_can_frame_address1;
wire    grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_523_can_frame_ce1;
wire    grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_523_can_frame_we1;
wire   [7:0] grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_523_can_frame_d1;
wire    grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_533_ap_start;
wire    grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_533_ap_done;
wire    grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_533_ap_idle;
wire    grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_533_ap_ready;
wire    grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_533_m_axi_can_addr_AWVALID;
wire   [31:0] grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_533_m_axi_can_addr_AWADDR;
wire   [0:0] grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_533_m_axi_can_addr_AWID;
wire   [31:0] grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_533_m_axi_can_addr_AWLEN;
wire   [2:0] grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_533_m_axi_can_addr_AWSIZE;
wire   [1:0] grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_533_m_axi_can_addr_AWBURST;
wire   [1:0] grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_533_m_axi_can_addr_AWLOCK;
wire   [3:0] grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_533_m_axi_can_addr_AWCACHE;
wire   [2:0] grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_533_m_axi_can_addr_AWPROT;
wire   [3:0] grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_533_m_axi_can_addr_AWQOS;
wire   [3:0] grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_533_m_axi_can_addr_AWREGION;
wire   [0:0] grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_533_m_axi_can_addr_AWUSER;
wire    grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_533_m_axi_can_addr_WVALID;
wire   [31:0] grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_533_m_axi_can_addr_WDATA;
wire   [3:0] grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_533_m_axi_can_addr_WSTRB;
wire    grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_533_m_axi_can_addr_WLAST;
wire   [0:0] grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_533_m_axi_can_addr_WID;
wire   [0:0] grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_533_m_axi_can_addr_WUSER;
wire    grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_533_m_axi_can_addr_ARVALID;
wire   [31:0] grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_533_m_axi_can_addr_ARADDR;
wire   [0:0] grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_533_m_axi_can_addr_ARID;
wire   [31:0] grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_533_m_axi_can_addr_ARLEN;
wire   [2:0] grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_533_m_axi_can_addr_ARSIZE;
wire   [1:0] grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_533_m_axi_can_addr_ARBURST;
wire   [1:0] grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_533_m_axi_can_addr_ARLOCK;
wire   [3:0] grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_533_m_axi_can_addr_ARCACHE;
wire   [2:0] grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_533_m_axi_can_addr_ARPROT;
wire   [3:0] grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_533_m_axi_can_addr_ARQOS;
wire   [3:0] grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_533_m_axi_can_addr_ARREGION;
wire   [0:0] grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_533_m_axi_can_addr_ARUSER;
wire    grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_533_m_axi_can_addr_RREADY;
wire    grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_533_m_axi_can_addr_BREADY;
wire   [6:0] grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_533_can_frame_address0;
wire    grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_533_can_frame_ce0;
wire    grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_533_can_frame_we0;
wire   [7:0] grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_533_can_frame_d0;
wire   [6:0] grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_533_can_frame_address1;
wire    grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_533_can_frame_ce1;
wire    grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_533_can_frame_we1;
wire   [7:0] grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_533_can_frame_d1;
wire    grp_write_ddr_1_fu_543_ap_start;
wire    grp_write_ddr_1_fu_543_ap_done;
wire    grp_write_ddr_1_fu_543_ap_idle;
wire    grp_write_ddr_1_fu_543_ap_ready;
wire    grp_write_ddr_1_fu_543_m_axi_ps_ddr_AWVALID;
wire   [31:0] grp_write_ddr_1_fu_543_m_axi_ps_ddr_AWADDR;
wire   [0:0] grp_write_ddr_1_fu_543_m_axi_ps_ddr_AWID;
wire   [31:0] grp_write_ddr_1_fu_543_m_axi_ps_ddr_AWLEN;
wire   [2:0] grp_write_ddr_1_fu_543_m_axi_ps_ddr_AWSIZE;
wire   [1:0] grp_write_ddr_1_fu_543_m_axi_ps_ddr_AWBURST;
wire   [1:0] grp_write_ddr_1_fu_543_m_axi_ps_ddr_AWLOCK;
wire   [3:0] grp_write_ddr_1_fu_543_m_axi_ps_ddr_AWCACHE;
wire   [2:0] grp_write_ddr_1_fu_543_m_axi_ps_ddr_AWPROT;
wire   [3:0] grp_write_ddr_1_fu_543_m_axi_ps_ddr_AWQOS;
wire   [3:0] grp_write_ddr_1_fu_543_m_axi_ps_ddr_AWREGION;
wire   [0:0] grp_write_ddr_1_fu_543_m_axi_ps_ddr_AWUSER;
wire    grp_write_ddr_1_fu_543_m_axi_ps_ddr_WVALID;
wire   [7:0] grp_write_ddr_1_fu_543_m_axi_ps_ddr_WDATA;
wire   [0:0] grp_write_ddr_1_fu_543_m_axi_ps_ddr_WSTRB;
wire    grp_write_ddr_1_fu_543_m_axi_ps_ddr_WLAST;
wire   [0:0] grp_write_ddr_1_fu_543_m_axi_ps_ddr_WID;
wire   [0:0] grp_write_ddr_1_fu_543_m_axi_ps_ddr_WUSER;
wire    grp_write_ddr_1_fu_543_m_axi_ps_ddr_ARVALID;
wire   [31:0] grp_write_ddr_1_fu_543_m_axi_ps_ddr_ARADDR;
wire   [0:0] grp_write_ddr_1_fu_543_m_axi_ps_ddr_ARID;
wire   [31:0] grp_write_ddr_1_fu_543_m_axi_ps_ddr_ARLEN;
wire   [2:0] grp_write_ddr_1_fu_543_m_axi_ps_ddr_ARSIZE;
wire   [1:0] grp_write_ddr_1_fu_543_m_axi_ps_ddr_ARBURST;
wire   [1:0] grp_write_ddr_1_fu_543_m_axi_ps_ddr_ARLOCK;
wire   [3:0] grp_write_ddr_1_fu_543_m_axi_ps_ddr_ARCACHE;
wire   [2:0] grp_write_ddr_1_fu_543_m_axi_ps_ddr_ARPROT;
wire   [3:0] grp_write_ddr_1_fu_543_m_axi_ps_ddr_ARQOS;
wire   [3:0] grp_write_ddr_1_fu_543_m_axi_ps_ddr_ARREGION;
wire   [0:0] grp_write_ddr_1_fu_543_m_axi_ps_ddr_ARUSER;
wire    grp_write_ddr_1_fu_543_m_axi_ps_ddr_RREADY;
wire    grp_write_ddr_1_fu_543_m_axi_ps_ddr_BREADY;
wire   [6:0] grp_write_ddr_1_fu_543_data_address0;
wire    grp_write_ddr_1_fu_543_data_ce0;
reg    grp_recvFrame_logic_1_Pipeline_1_fu_517_ap_start_reg;
reg    grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_523_ap_start_reg;
wire    ap_CS_fsm_state14;
reg    grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_533_ap_start_reg;
reg    grp_write_ddr_1_fu_543_ap_start_reg;
wire    ap_CS_fsm_state18;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state8;
wire  signed [31:0] sext_ln150_fu_627_p1;
wire  signed [31:0] sext_ln173_fu_755_p1;
wire  signed [31:0] sext_ln233_fu_1281_p1;
wire   [31:0] add_ln230_fu_1243_p2;
reg    ap_predicate_op208_call_state15;
reg    ap_block_state15_on_subcall_done;
wire   [7:0] zext_ln179_1_fu_775_p1;
wire   [7:0] zext_ln153_fu_820_p1;
wire   [7:0] zext_ln158_1_fu_845_p1;
wire   [7:0] zext_ln165_fu_884_p1;
wire   [7:0] zext_ln196_1_fu_1207_p1;
wire   [7:0] zext_ln196_fu_1196_p1;
wire   [13:0] shl_ln_fu_553_p3;
wire   [10:0] shl_ln150_1_fu_565_p3;
wire   [14:0] zext_ln150_fu_561_p1;
wire   [14:0] zext_ln150_1_fu_573_p1;
wire   [14:0] add_ln150_fu_583_p2;
wire   [12:0] tmp_fu_589_p4;
wire   [14:0] shl_ln150_2_fu_599_p3;
wire   [31:0] zext_ln150_2_fu_607_p1;
wire   [31:0] add_ln150_1_fu_611_p2;
wire   [14:0] add_ln173_fu_637_p2;
wire   [12:0] tmp_4_fu_642_p4;
wire   [14:0] shl_ln1_fu_652_p3;
wire   [31:0] zext_ln173_fu_660_p1;
wire   [31:0] add_ln173_1_fu_664_p2;
wire   [4:0] zext_ln179_fu_765_p1;
wire   [4:0] id_can_fu_769_p2;
wire   [28:0] FrameID_fu_827_p3;
wire   [28:0] zext_ln158_fu_824_p1;
wire   [0:0] select_ln158_fu_833_p3;
wire   [28:0] FrameID_1_fu_838_p3;
wire   [3:0] tmp_5_fu_896_p4;
wire   [0:0] icmp_ln28_fu_918_p2;
wire   [0:0] xor_ln28_fu_913_p2;
wire   [0:0] and_ln28_fu_923_p2;
wire   [31:0] Dlc_assign_fu_905_p3;
wire   [31:0] select_ln28_fu_929_p3;
wire   [0:0] icmp_ln32_fu_937_p2;
wire   [0:0] icmp_ln32_2_fu_953_p2;
wire   [0:0] icmp_ln32_1_fu_947_p2;
wire   [0:0] or_ln32_fu_967_p2;
wire   [1:0] select_ln32_fu_959_p3;
wire   [1:0] zext_ln32_fu_943_p1;
wire   [1:0] select_ln32_1_fu_973_p3;
wire   [0:0] icmp_ln32_4_fu_991_p2;
wire   [0:0] icmp_ln32_3_fu_985_p2;
wire   [0:0] or_ln32_1_fu_1005_p2;
wire   [2:0] select_ln32_2_fu_997_p3;
wire   [2:0] zext_ln32_1_fu_981_p1;
wire   [0:0] icmp_ln32_6_fu_1025_p2;
wire   [0:0] icmp_ln32_5_fu_1019_p2;
wire   [0:0] or_ln32_2_fu_1039_p2;
wire   [2:0] select_ln32_4_fu_1031_p3;
wire   [2:0] select_ln32_3_fu_1011_p3;
wire   [0:0] or_ln32_3_fu_1111_p2;
wire   [3:0] select_ln32_6_fu_1104_p3;
wire   [3:0] zext_ln32_2_fu_1101_p1;
wire   [3:0] select_ln32_7_fu_1115_p3;
wire   [0:0] or_ln32_4_fu_1134_p2;
wire   [4:0] select_ln32_8_fu_1127_p3;
wire   [4:0] zext_ln32_3_fu_1123_p1;
wire   [4:0] select_ln32_9_fu_1138_p3;
wire   [0:0] or_ln32_5_fu_1157_p2;
wire   [5:0] select_ln32_10_fu_1150_p3;
wire   [5:0] zext_ln32_4_fu_1146_p1;
wire   [5:0] select_ln32_11_fu_1161_p3;
wire   [0:0] empty_69_fu_1180_p2;
wire   [6:0] empty_fu_1173_p3;
wire   [6:0] zext_ln32_5_fu_1169_p1;
wire   [6:0] add_ln196_fu_1201_p2;
wire   [5:0] trunc_ln27_fu_1192_p1;
wire   [5:0] add_ln205_fu_1223_p2;
wire   [31:0] add_ln233_fu_1256_p2;
wire   [4:0] zext_ln205_fu_1271_p1;
reg   [30:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
reg    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
reg    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
reg    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
reg    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
reg    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
reg    ap_ST_fsm_state17_blk;
reg    ap_ST_fsm_state18_blk;
wire    ap_ST_fsm_state19_blk;
wire    ap_ST_fsm_state20_blk;
wire    ap_ST_fsm_state21_blk;
wire    ap_ST_fsm_state22_blk;
wire    ap_ST_fsm_state23_blk;
reg    ap_ST_fsm_state24_blk;
reg    ap_ST_fsm_state25_blk;
reg    ap_ST_fsm_state26_blk;
wire    ap_ST_fsm_state27_blk;
wire    ap_ST_fsm_state28_blk;
wire    ap_ST_fsm_state29_blk;
wire    ap_ST_fsm_state30_blk;
reg    ap_ST_fsm_state31_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 31'd1;
#0 internal_can_counter = 32'd0;
#0 grp_recvFrame_logic_1_Pipeline_1_fu_517_ap_start_reg = 1'b0;
#0 grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_523_ap_start_reg = 1'b0;
#0 grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_533_ap_start_reg = 1'b0;
#0 grp_write_ddr_1_fu_543_ap_start_reg = 1'b0;
end

clu_recvFrame_logic_1_can_frame_RAM_AUTO_1R1W #(
    .DataWidth( 8 ),
    .AddressRange( 92 ),
    .AddressWidth( 7 ))
can_frame_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(can_frame_address0),
    .ce0(can_frame_ce0),
    .we0(can_frame_we0),
    .d0(can_frame_d0),
    .q0(can_frame_q0),
    .address1(can_frame_address1),
    .ce1(can_frame_ce1),
    .we1(can_frame_we1),
    .d1(can_frame_d1)
);

clu_recvFrame_logic_1_Pipeline_1 grp_recvFrame_logic_1_Pipeline_1_fu_517(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_recvFrame_logic_1_Pipeline_1_fu_517_ap_start),
    .ap_done(grp_recvFrame_logic_1_Pipeline_1_fu_517_ap_done),
    .ap_idle(grp_recvFrame_logic_1_Pipeline_1_fu_517_ap_idle),
    .ap_ready(grp_recvFrame_logic_1_Pipeline_1_fu_517_ap_ready),
    .can_frame_address0(grp_recvFrame_logic_1_Pipeline_1_fu_517_can_frame_address0),
    .can_frame_ce0(grp_recvFrame_logic_1_Pipeline_1_fu_517_can_frame_ce0),
    .can_frame_we0(grp_recvFrame_logic_1_Pipeline_1_fu_517_can_frame_we0),
    .can_frame_d0(grp_recvFrame_logic_1_Pipeline_1_fu_517_can_frame_d0)
);

clu_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2 grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_523(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_523_ap_start),
    .ap_done(grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_523_ap_done),
    .ap_idle(grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_523_ap_idle),
    .ap_ready(grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_523_ap_ready),
    .m_axi_can_addr_AWVALID(grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_523_m_axi_can_addr_AWVALID),
    .m_axi_can_addr_AWREADY(1'b0),
    .m_axi_can_addr_AWADDR(grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_523_m_axi_can_addr_AWADDR),
    .m_axi_can_addr_AWID(grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_523_m_axi_can_addr_AWID),
    .m_axi_can_addr_AWLEN(grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_523_m_axi_can_addr_AWLEN),
    .m_axi_can_addr_AWSIZE(grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_523_m_axi_can_addr_AWSIZE),
    .m_axi_can_addr_AWBURST(grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_523_m_axi_can_addr_AWBURST),
    .m_axi_can_addr_AWLOCK(grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_523_m_axi_can_addr_AWLOCK),
    .m_axi_can_addr_AWCACHE(grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_523_m_axi_can_addr_AWCACHE),
    .m_axi_can_addr_AWPROT(grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_523_m_axi_can_addr_AWPROT),
    .m_axi_can_addr_AWQOS(grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_523_m_axi_can_addr_AWQOS),
    .m_axi_can_addr_AWREGION(grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_523_m_axi_can_addr_AWREGION),
    .m_axi_can_addr_AWUSER(grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_523_m_axi_can_addr_AWUSER),
    .m_axi_can_addr_WVALID(grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_523_m_axi_can_addr_WVALID),
    .m_axi_can_addr_WREADY(1'b0),
    .m_axi_can_addr_WDATA(grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_523_m_axi_can_addr_WDATA),
    .m_axi_can_addr_WSTRB(grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_523_m_axi_can_addr_WSTRB),
    .m_axi_can_addr_WLAST(grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_523_m_axi_can_addr_WLAST),
    .m_axi_can_addr_WID(grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_523_m_axi_can_addr_WID),
    .m_axi_can_addr_WUSER(grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_523_m_axi_can_addr_WUSER),
    .m_axi_can_addr_ARVALID(grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_523_m_axi_can_addr_ARVALID),
    .m_axi_can_addr_ARREADY(m_axi_can_addr_ARREADY),
    .m_axi_can_addr_ARADDR(grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_523_m_axi_can_addr_ARADDR),
    .m_axi_can_addr_ARID(grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_523_m_axi_can_addr_ARID),
    .m_axi_can_addr_ARLEN(grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_523_m_axi_can_addr_ARLEN),
    .m_axi_can_addr_ARSIZE(grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_523_m_axi_can_addr_ARSIZE),
    .m_axi_can_addr_ARBURST(grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_523_m_axi_can_addr_ARBURST),
    .m_axi_can_addr_ARLOCK(grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_523_m_axi_can_addr_ARLOCK),
    .m_axi_can_addr_ARCACHE(grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_523_m_axi_can_addr_ARCACHE),
    .m_axi_can_addr_ARPROT(grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_523_m_axi_can_addr_ARPROT),
    .m_axi_can_addr_ARQOS(grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_523_m_axi_can_addr_ARQOS),
    .m_axi_can_addr_ARREGION(grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_523_m_axi_can_addr_ARREGION),
    .m_axi_can_addr_ARUSER(grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_523_m_axi_can_addr_ARUSER),
    .m_axi_can_addr_RVALID(m_axi_can_addr_RVALID),
    .m_axi_can_addr_RREADY(grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_523_m_axi_can_addr_RREADY),
    .m_axi_can_addr_RDATA(m_axi_can_addr_RDATA),
    .m_axi_can_addr_RLAST(m_axi_can_addr_RLAST),
    .m_axi_can_addr_RID(m_axi_can_addr_RID),
    .m_axi_can_addr_RFIFONUM(m_axi_can_addr_RFIFONUM),
    .m_axi_can_addr_RUSER(m_axi_can_addr_RUSER),
    .m_axi_can_addr_RRESP(m_axi_can_addr_RRESP),
    .m_axi_can_addr_BVALID(1'b0),
    .m_axi_can_addr_BREADY(grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_523_m_axi_can_addr_BREADY),
    .m_axi_can_addr_BRESP(2'd0),
    .m_axi_can_addr_BID(1'd0),
    .m_axi_can_addr_BUSER(1'd0),
    .zext_ln27(NofBytes_reg_1476),
    .zext_ln205(add115_reg_1481),
    .canbase(canbase),
    .can_frame_address0(grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_523_can_frame_address0),
    .can_frame_ce0(grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_523_can_frame_ce0),
    .can_frame_we0(grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_523_can_frame_we0),
    .can_frame_d0(grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_523_can_frame_d0),
    .can_frame_address1(grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_523_can_frame_address1),
    .can_frame_ce1(grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_523_can_frame_ce1),
    .can_frame_we1(grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_523_can_frame_we1),
    .can_frame_d1(grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_523_can_frame_d1)
);

clu_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1 grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_533(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_533_ap_start),
    .ap_done(grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_533_ap_done),
    .ap_idle(grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_533_ap_idle),
    .ap_ready(grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_533_ap_ready),
    .m_axi_can_addr_AWVALID(grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_533_m_axi_can_addr_AWVALID),
    .m_axi_can_addr_AWREADY(1'b0),
    .m_axi_can_addr_AWADDR(grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_533_m_axi_can_addr_AWADDR),
    .m_axi_can_addr_AWID(grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_533_m_axi_can_addr_AWID),
    .m_axi_can_addr_AWLEN(grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_533_m_axi_can_addr_AWLEN),
    .m_axi_can_addr_AWSIZE(grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_533_m_axi_can_addr_AWSIZE),
    .m_axi_can_addr_AWBURST(grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_533_m_axi_can_addr_AWBURST),
    .m_axi_can_addr_AWLOCK(grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_533_m_axi_can_addr_AWLOCK),
    .m_axi_can_addr_AWCACHE(grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_533_m_axi_can_addr_AWCACHE),
    .m_axi_can_addr_AWPROT(grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_533_m_axi_can_addr_AWPROT),
    .m_axi_can_addr_AWQOS(grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_533_m_axi_can_addr_AWQOS),
    .m_axi_can_addr_AWREGION(grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_533_m_axi_can_addr_AWREGION),
    .m_axi_can_addr_AWUSER(grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_533_m_axi_can_addr_AWUSER),
    .m_axi_can_addr_WVALID(grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_533_m_axi_can_addr_WVALID),
    .m_axi_can_addr_WREADY(1'b0),
    .m_axi_can_addr_WDATA(grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_533_m_axi_can_addr_WDATA),
    .m_axi_can_addr_WSTRB(grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_533_m_axi_can_addr_WSTRB),
    .m_axi_can_addr_WLAST(grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_533_m_axi_can_addr_WLAST),
    .m_axi_can_addr_WID(grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_533_m_axi_can_addr_WID),
    .m_axi_can_addr_WUSER(grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_533_m_axi_can_addr_WUSER),
    .m_axi_can_addr_ARVALID(grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_533_m_axi_can_addr_ARVALID),
    .m_axi_can_addr_ARREADY(m_axi_can_addr_ARREADY),
    .m_axi_can_addr_ARADDR(grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_533_m_axi_can_addr_ARADDR),
    .m_axi_can_addr_ARID(grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_533_m_axi_can_addr_ARID),
    .m_axi_can_addr_ARLEN(grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_533_m_axi_can_addr_ARLEN),
    .m_axi_can_addr_ARSIZE(grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_533_m_axi_can_addr_ARSIZE),
    .m_axi_can_addr_ARBURST(grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_533_m_axi_can_addr_ARBURST),
    .m_axi_can_addr_ARLOCK(grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_533_m_axi_can_addr_ARLOCK),
    .m_axi_can_addr_ARCACHE(grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_533_m_axi_can_addr_ARCACHE),
    .m_axi_can_addr_ARPROT(grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_533_m_axi_can_addr_ARPROT),
    .m_axi_can_addr_ARQOS(grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_533_m_axi_can_addr_ARQOS),
    .m_axi_can_addr_ARREGION(grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_533_m_axi_can_addr_ARREGION),
    .m_axi_can_addr_ARUSER(grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_533_m_axi_can_addr_ARUSER),
    .m_axi_can_addr_RVALID(m_axi_can_addr_RVALID),
    .m_axi_can_addr_RREADY(grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_533_m_axi_can_addr_RREADY),
    .m_axi_can_addr_RDATA(m_axi_can_addr_RDATA),
    .m_axi_can_addr_RLAST(m_axi_can_addr_RLAST),
    .m_axi_can_addr_RID(m_axi_can_addr_RID),
    .m_axi_can_addr_RFIFONUM(m_axi_can_addr_RFIFONUM),
    .m_axi_can_addr_RUSER(m_axi_can_addr_RUSER),
    .m_axi_can_addr_RRESP(m_axi_can_addr_RRESP),
    .m_axi_can_addr_BVALID(1'b0),
    .m_axi_can_addr_BREADY(grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_533_m_axi_can_addr_BREADY),
    .m_axi_can_addr_BRESP(2'd0),
    .m_axi_can_addr_BID(1'd0),
    .m_axi_can_addr_BUSER(1'd0),
    .add_ln205_1(add_ln205_1_reg_1501),
    .canbase(canbase),
    .zext_ln205(add115_reg_1481),
    .can_frame_address0(grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_533_can_frame_address0),
    .can_frame_ce0(grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_533_can_frame_ce0),
    .can_frame_we0(grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_533_can_frame_we0),
    .can_frame_d0(grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_533_can_frame_d0),
    .can_frame_address1(grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_533_can_frame_address1),
    .can_frame_ce1(grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_533_can_frame_ce1),
    .can_frame_we1(grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_533_can_frame_we1),
    .can_frame_d1(grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_533_can_frame_d1)
);

clu_write_ddr_1 grp_write_ddr_1_fu_543(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_write_ddr_1_fu_543_ap_start),
    .ap_done(grp_write_ddr_1_fu_543_ap_done),
    .ap_idle(grp_write_ddr_1_fu_543_ap_idle),
    .ap_ready(grp_write_ddr_1_fu_543_ap_ready),
    .m_axi_ps_ddr_AWVALID(grp_write_ddr_1_fu_543_m_axi_ps_ddr_AWVALID),
    .m_axi_ps_ddr_AWREADY(m_axi_ps_ddr_AWREADY),
    .m_axi_ps_ddr_AWADDR(grp_write_ddr_1_fu_543_m_axi_ps_ddr_AWADDR),
    .m_axi_ps_ddr_AWID(grp_write_ddr_1_fu_543_m_axi_ps_ddr_AWID),
    .m_axi_ps_ddr_AWLEN(grp_write_ddr_1_fu_543_m_axi_ps_ddr_AWLEN),
    .m_axi_ps_ddr_AWSIZE(grp_write_ddr_1_fu_543_m_axi_ps_ddr_AWSIZE),
    .m_axi_ps_ddr_AWBURST(grp_write_ddr_1_fu_543_m_axi_ps_ddr_AWBURST),
    .m_axi_ps_ddr_AWLOCK(grp_write_ddr_1_fu_543_m_axi_ps_ddr_AWLOCK),
    .m_axi_ps_ddr_AWCACHE(grp_write_ddr_1_fu_543_m_axi_ps_ddr_AWCACHE),
    .m_axi_ps_ddr_AWPROT(grp_write_ddr_1_fu_543_m_axi_ps_ddr_AWPROT),
    .m_axi_ps_ddr_AWQOS(grp_write_ddr_1_fu_543_m_axi_ps_ddr_AWQOS),
    .m_axi_ps_ddr_AWREGION(grp_write_ddr_1_fu_543_m_axi_ps_ddr_AWREGION),
    .m_axi_ps_ddr_AWUSER(grp_write_ddr_1_fu_543_m_axi_ps_ddr_AWUSER),
    .m_axi_ps_ddr_WVALID(grp_write_ddr_1_fu_543_m_axi_ps_ddr_WVALID),
    .m_axi_ps_ddr_WREADY(m_axi_ps_ddr_WREADY),
    .m_axi_ps_ddr_WDATA(grp_write_ddr_1_fu_543_m_axi_ps_ddr_WDATA),
    .m_axi_ps_ddr_WSTRB(grp_write_ddr_1_fu_543_m_axi_ps_ddr_WSTRB),
    .m_axi_ps_ddr_WLAST(grp_write_ddr_1_fu_543_m_axi_ps_ddr_WLAST),
    .m_axi_ps_ddr_WID(grp_write_ddr_1_fu_543_m_axi_ps_ddr_WID),
    .m_axi_ps_ddr_WUSER(grp_write_ddr_1_fu_543_m_axi_ps_ddr_WUSER),
    .m_axi_ps_ddr_ARVALID(grp_write_ddr_1_fu_543_m_axi_ps_ddr_ARVALID),
    .m_axi_ps_ddr_ARREADY(m_axi_ps_ddr_ARREADY),
    .m_axi_ps_ddr_ARADDR(grp_write_ddr_1_fu_543_m_axi_ps_ddr_ARADDR),
    .m_axi_ps_ddr_ARID(grp_write_ddr_1_fu_543_m_axi_ps_ddr_ARID),
    .m_axi_ps_ddr_ARLEN(grp_write_ddr_1_fu_543_m_axi_ps_ddr_ARLEN),
    .m_axi_ps_ddr_ARSIZE(grp_write_ddr_1_fu_543_m_axi_ps_ddr_ARSIZE),
    .m_axi_ps_ddr_ARBURST(grp_write_ddr_1_fu_543_m_axi_ps_ddr_ARBURST),
    .m_axi_ps_ddr_ARLOCK(grp_write_ddr_1_fu_543_m_axi_ps_ddr_ARLOCK),
    .m_axi_ps_ddr_ARCACHE(grp_write_ddr_1_fu_543_m_axi_ps_ddr_ARCACHE),
    .m_axi_ps_ddr_ARPROT(grp_write_ddr_1_fu_543_m_axi_ps_ddr_ARPROT),
    .m_axi_ps_ddr_ARQOS(grp_write_ddr_1_fu_543_m_axi_ps_ddr_ARQOS),
    .m_axi_ps_ddr_ARREGION(grp_write_ddr_1_fu_543_m_axi_ps_ddr_ARREGION),
    .m_axi_ps_ddr_ARUSER(grp_write_ddr_1_fu_543_m_axi_ps_ddr_ARUSER),
    .m_axi_ps_ddr_RVALID(m_axi_ps_ddr_RVALID),
    .m_axi_ps_ddr_RREADY(grp_write_ddr_1_fu_543_m_axi_ps_ddr_RREADY),
    .m_axi_ps_ddr_RDATA(m_axi_ps_ddr_RDATA),
    .m_axi_ps_ddr_RLAST(m_axi_ps_ddr_RLAST),
    .m_axi_ps_ddr_RID(m_axi_ps_ddr_RID),
    .m_axi_ps_ddr_RFIFONUM(m_axi_ps_ddr_RFIFONUM),
    .m_axi_ps_ddr_RUSER(m_axi_ps_ddr_RUSER),
    .m_axi_ps_ddr_RRESP(m_axi_ps_ddr_RRESP),
    .m_axi_ps_ddr_BVALID(m_axi_ps_ddr_BVALID),
    .m_axi_ps_ddr_BREADY(grp_write_ddr_1_fu_543_m_axi_ps_ddr_BREADY),
    .m_axi_ps_ddr_BRESP(m_axi_ps_ddr_BRESP),
    .m_axi_ps_ddr_BID(m_axi_ps_ddr_BID),
    .m_axi_ps_ddr_BUSER(m_axi_ps_ddr_BUSER),
    .ddr_header(ddr),
    .data_address0(grp_write_ddr_1_fu_543_data_address0),
    .data_ce0(grp_write_ddr_1_fu_543_data_ce0),
    .data_q0(can_frame_q0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_recvFrame_logic_1_Pipeline_1_fu_517_ap_start_reg <= 1'b0;
    end else begin
        if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            grp_recvFrame_logic_1_Pipeline_1_fu_517_ap_start_reg <= 1'b1;
        end else if ((grp_recvFrame_logic_1_Pipeline_1_fu_517_ap_ready == 1'b1)) begin
            grp_recvFrame_logic_1_Pipeline_1_fu_517_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_533_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state16)) begin
            grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_533_ap_start_reg <= 1'b1;
        end else if ((grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_533_ap_ready == 1'b1)) begin
            grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_533_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_523_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state14)) begin
            grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_523_ap_start_reg <= 1'b1;
        end else if ((grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_523_ap_ready == 1'b1)) begin
            grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_523_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_write_ddr_1_fu_543_ap_start_reg <= 1'b0;
    end else begin
        if (((m_axi_can_addr_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state17))) begin
            grp_write_ddr_1_fu_543_ap_start_reg <= 1'b1;
        end else if ((grp_write_ddr_1_fu_543_ap_ready == 1'b1)) begin
            grp_write_ddr_1_fu_543_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        NofBytes_reg_1476 <= NofBytes_fu_1184_p3;
        add115_reg_1481[14 : 3] <= add115_fu_1212_p2[14 : 3];
        icmp_ln205_reg_1487 <= icmp_ln205_fu_1217_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        add_ln150_2_reg_1305[14 : 3] <= add_ln150_2_fu_577_p2[14 : 3];
        trunc_ln150_1_reg_1311 <= {{add_ln150_1_fu_611_p2[31:2]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        add_ln205_1_reg_1501 <= add_ln205_1_fu_1274_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        can_addr_addr_2_read_reg_1513 <= m_axi_can_addr_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        can_addr_addr_2_reg_1506 <= sext_ln233_fu_1281_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        frameDLC_reg_1411 <= m_axi_can_addr_RDATA;
        tmp_7_reg_1417 <= m_axi_can_addr_RDATA[32'd27];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        icmp_ln32_10_reg_1443 <= icmp_ln32_10_fu_1071_p2;
        icmp_ln32_11_reg_1449 <= icmp_ln32_11_fu_1077_p2;
        icmp_ln32_12_reg_1454 <= icmp_ln32_12_fu_1083_p2;
        icmp_ln32_13_reg_1460 <= icmp_ln32_13_fu_1089_p2;
        icmp_ln32_14_reg_1465 <= icmp_ln32_14_fu_1095_p2;
        icmp_ln32_7_reg_1427 <= icmp_ln32_7_fu_1053_p2;
        icmp_ln32_8_reg_1432 <= icmp_ln32_8_fu_1059_p2;
        icmp_ln32_9_reg_1438 <= icmp_ln32_9_fu_1065_p2;
        select_ln32_5_reg_1422 <= select_ln32_5_fu_1045_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state15_on_subcall_done) & (1'b1 == ap_CS_fsm_state15))) begin
        internal_can_counter <= add_ln230_fu_1243_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        tmp_2_reg_1368 <= m_axi_can_addr_RDATA[32'd19];
        tmp_6_reg_1381 <= m_axi_can_addr_RDATA[32'd20];
        trunc_ln146_reg_1363 <= trunc_ln146_fu_780_p1;
        trunc_ln158_1_reg_1375 <= {{m_axi_can_addr_RDATA[31:21]}};
        trunc_ln161_2_reg_1386 <= {{m_axi_can_addr_RDATA[18:1]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        tmp_3_reg_1391 <= {{FrameID_1_fu_838_p3[28:24]}};
        trunc_ln168_reg_1406 <= trunc_ln168_fu_880_p1;
        trunc_ln8_reg_1401 <= {{FrameID_1_fu_838_p3[15:8]}};
        trunc_ln_reg_1396 <= {{FrameID_1_fu_838_p3[23:16]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        trunc_ln11_reg_1327 <= {{timestamp[47:40]}};
        trunc_ln12_reg_1332 <= {{timestamp[39:32]}};
        trunc_ln13_reg_1337 <= {{timestamp[31:24]}};
        trunc_ln14_reg_1342 <= {{timestamp[23:16]}};
        trunc_ln15_reg_1347 <= {{timestamp[15:8]}};
        trunc_ln173_1_reg_1322 <= {{add_ln173_1_fu_664_p2[31:2]}};
        trunc_ln192_reg_1352 <= trunc_ln192_fu_751_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln205_fu_1217_p2 == 1'd0) & (tmp_7_reg_1417 == 1'd1) & (1'b1 == ap_CS_fsm_state13))) begin
        trunc_ln16_reg_1491 <= {{add_ln205_fu_1223_p2[5:2]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        trunc_ln17_reg_1496 <= {{add_ln233_fu_1256_p2[31:2]}};
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

always @ (*) begin
    if ((m_axi_can_addr_RVALID == 1'b0)) begin
        ap_ST_fsm_state11_blk = 1'b1;
    end else begin
        ap_ST_fsm_state11_blk = 1'b0;
    end
end

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_block_state15_on_subcall_done)) begin
        ap_ST_fsm_state15_blk = 1'b1;
    end else begin
        ap_ST_fsm_state15_blk = 1'b0;
    end
end

assign ap_ST_fsm_state16_blk = 1'b0;

always @ (*) begin
    if ((m_axi_can_addr_ARREADY == 1'b0)) begin
        ap_ST_fsm_state17_blk = 1'b1;
    end else begin
        ap_ST_fsm_state17_blk = 1'b0;
    end
end

always @ (*) begin
    if ((grp_write_ddr_1_fu_543_ap_done == 1'b0)) begin
        ap_ST_fsm_state18_blk = 1'b1;
    end else begin
        ap_ST_fsm_state18_blk = 1'b0;
    end
end

assign ap_ST_fsm_state19_blk = 1'b0;

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state20_blk = 1'b0;

assign ap_ST_fsm_state21_blk = 1'b0;

assign ap_ST_fsm_state22_blk = 1'b0;

assign ap_ST_fsm_state23_blk = 1'b0;

always @ (*) begin
    if ((m_axi_can_addr_RVALID == 1'b0)) begin
        ap_ST_fsm_state24_blk = 1'b1;
    end else begin
        ap_ST_fsm_state24_blk = 1'b0;
    end
end

always @ (*) begin
    if ((m_axi_can_addr_AWREADY == 1'b0)) begin
        ap_ST_fsm_state25_blk = 1'b1;
    end else begin
        ap_ST_fsm_state25_blk = 1'b0;
    end
end

always @ (*) begin
    if ((m_axi_can_addr_WREADY == 1'b0)) begin
        ap_ST_fsm_state26_blk = 1'b1;
    end else begin
        ap_ST_fsm_state26_blk = 1'b0;
    end
end

assign ap_ST_fsm_state27_blk = 1'b0;

assign ap_ST_fsm_state28_blk = 1'b0;

assign ap_ST_fsm_state29_blk = 1'b0;

always @ (*) begin
    if (((m_axi_can_addr_ARREADY == 1'b0) | (grp_recvFrame_logic_1_Pipeline_1_fu_517_ap_done == 1'b0))) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end

assign ap_ST_fsm_state30_blk = 1'b0;

always @ (*) begin
    if ((m_axi_can_addr_BVALID == 1'b0)) begin
        ap_ST_fsm_state31_blk = 1'b1;
    end else begin
        ap_ST_fsm_state31_blk = 1'b0;
    end
end

assign ap_ST_fsm_state3_blk = 1'b0;

always @ (*) begin
    if ((m_axi_can_addr_ARREADY == 1'b0)) begin
        ap_ST_fsm_state4_blk = 1'b1;
    end else begin
        ap_ST_fsm_state4_blk = 1'b0;
    end
end

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

always @ (*) begin
    if ((m_axi_can_addr_RVALID == 1'b0)) begin
        ap_ST_fsm_state9_blk = 1'b1;
    end else begin
        ap_ST_fsm_state9_blk = 1'b0;
    end
end

always @ (*) begin
    if ((((m_axi_can_addr_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state31)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((m_axi_can_addr_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state31))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state2))) begin
        can_addr_blk_n_AR = m_axi_can_addr_ARREADY;
    end else begin
        can_addr_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        can_addr_blk_n_AW = m_axi_can_addr_AWREADY;
    end else begin
        can_addr_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        can_addr_blk_n_B = m_axi_can_addr_BVALID;
    end else begin
        can_addr_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state9))) begin
        can_addr_blk_n_R = m_axi_can_addr_RVALID;
    end else begin
        can_addr_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        can_addr_blk_n_W = m_axi_can_addr_WREADY;
    end else begin
        can_addr_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        can_frame_address0 = 32'd19;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        can_frame_address0 = 32'd15;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        can_frame_address0 = 32'd13;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        can_frame_address0 = 32'd17;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        can_frame_address0 = 32'd18;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        can_frame_address0 = 32'd9;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        can_frame_address0 = 32'd7;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        can_frame_address0 = 32'd5;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        can_frame_address0 = 32'd3;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        can_frame_address0 = 32'd1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        can_frame_address0 = grp_write_ddr_1_fu_543_data_address0;
    end else if (((icmp_ln205_reg_1487 == 1'd0) & (tmp_7_reg_1417 == 1'd1) & (1'b1 == ap_CS_fsm_state15))) begin
        can_frame_address0 = grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_533_can_frame_address0;
    end else if (((tmp_7_reg_1417 == 1'd0) & (1'b1 == ap_CS_fsm_state15))) begin
        can_frame_address0 = grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_523_can_frame_address0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        can_frame_address0 = grp_recvFrame_logic_1_Pipeline_1_fu_517_can_frame_address0;
    end else begin
        can_frame_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        can_frame_address1 = 32'd11;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        can_frame_address1 = 32'd14;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        can_frame_address1 = 32'd12;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        can_frame_address1 = 32'd16;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        can_frame_address1 = 32'd10;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        can_frame_address1 = 32'd8;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        can_frame_address1 = 32'd6;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        can_frame_address1 = 32'd4;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        can_frame_address1 = 32'd2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        can_frame_address1 = 32'd0;
    end else if (((icmp_ln205_reg_1487 == 1'd0) & (tmp_7_reg_1417 == 1'd1) & (1'b1 == ap_CS_fsm_state15))) begin
        can_frame_address1 = grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_533_can_frame_address1;
    end else if (((tmp_7_reg_1417 == 1'd0) & (1'b1 == ap_CS_fsm_state15))) begin
        can_frame_address1 = grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_523_can_frame_address1;
    end else begin
        can_frame_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state3) | ((m_axi_can_addr_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state11)) | ((m_axi_can_addr_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state4)))) begin
        can_frame_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        can_frame_ce0 = grp_write_ddr_1_fu_543_data_ce0;
    end else if (((icmp_ln205_reg_1487 == 1'd0) & (tmp_7_reg_1417 == 1'd1) & (1'b1 == ap_CS_fsm_state15))) begin
        can_frame_ce0 = grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_533_can_frame_ce0;
    end else if (((tmp_7_reg_1417 == 1'd0) & (1'b1 == ap_CS_fsm_state15))) begin
        can_frame_ce0 = grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_523_can_frame_ce0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        can_frame_ce0 = grp_recvFrame_logic_1_Pipeline_1_fu_517_can_frame_ce0;
    end else begin
        can_frame_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state3) | ((m_axi_can_addr_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state11)) | ((m_axi_can_addr_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state4)))) begin
        can_frame_ce1 = 1'b1;
    end else if (((icmp_ln205_reg_1487 == 1'd0) & (tmp_7_reg_1417 == 1'd1) & (1'b1 == ap_CS_fsm_state15))) begin
        can_frame_ce1 = grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_533_can_frame_ce1;
    end else if (((tmp_7_reg_1417 == 1'd0) & (1'b1 == ap_CS_fsm_state15))) begin
        can_frame_ce1 = grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_523_can_frame_ce1;
    end else begin
        can_frame_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        can_frame_d0 = zext_ln196_fu_1196_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        can_frame_d0 = trunc_ln168_reg_1406;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        can_frame_d0 = trunc_ln_reg_1396;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        can_frame_d0 = zext_ln158_1_fu_845_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        can_frame_d0 = 8'd0;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        can_frame_d0 = zext_ln179_1_fu_775_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        can_frame_d0 = trunc_ln192_reg_1352;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        can_frame_d0 = trunc_ln14_reg_1342;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        can_frame_d0 = trunc_ln12_reg_1332;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        can_frame_d0 = {{timestamp[55:48]}};
    end else if (((icmp_ln205_reg_1487 == 1'd0) & (tmp_7_reg_1417 == 1'd1) & (1'b1 == ap_CS_fsm_state15))) begin
        can_frame_d0 = grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_533_can_frame_d0;
    end else if (((tmp_7_reg_1417 == 1'd0) & (1'b1 == ap_CS_fsm_state15))) begin
        can_frame_d0 = grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_523_can_frame_d0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        can_frame_d0 = grp_recvFrame_logic_1_Pipeline_1_fu_517_can_frame_d0;
    end else begin
        can_frame_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        can_frame_d1 = zext_ln196_1_fu_1207_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        can_frame_d1 = trunc_ln8_reg_1401;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        can_frame_d1 = zext_ln165_fu_884_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        can_frame_d1 = zext_ln153_fu_820_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        can_frame_d1 = 8'd0;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        can_frame_d1 = 8'd2;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        can_frame_d1 = trunc_ln15_reg_1347;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        can_frame_d1 = trunc_ln13_reg_1337;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        can_frame_d1 = trunc_ln11_reg_1327;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        can_frame_d1 = {{timestamp[63:56]}};
    end else if (((icmp_ln205_reg_1487 == 1'd0) & (tmp_7_reg_1417 == 1'd1) & (1'b1 == ap_CS_fsm_state15))) begin
        can_frame_d1 = grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_533_can_frame_d1;
    end else if (((tmp_7_reg_1417 == 1'd0) & (1'b1 == ap_CS_fsm_state15))) begin
        can_frame_d1 = grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_523_can_frame_d1;
    end else begin
        can_frame_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state3) | ((m_axi_can_addr_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state11)) | ((m_axi_can_addr_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state4)))) begin
        can_frame_we0 = 1'b1;
    end else if (((icmp_ln205_reg_1487 == 1'd0) & (tmp_7_reg_1417 == 1'd1) & (1'b1 == ap_CS_fsm_state15))) begin
        can_frame_we0 = grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_533_can_frame_we0;
    end else if (((tmp_7_reg_1417 == 1'd0) & (1'b1 == ap_CS_fsm_state15))) begin
        can_frame_we0 = grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_523_can_frame_we0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        can_frame_we0 = grp_recvFrame_logic_1_Pipeline_1_fu_517_can_frame_we0;
    end else begin
        can_frame_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state3) | ((m_axi_can_addr_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state11)) | ((m_axi_can_addr_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state4)))) begin
        can_frame_we1 = 1'b1;
    end else if (((icmp_ln205_reg_1487 == 1'd0) & (tmp_7_reg_1417 == 1'd1) & (1'b1 == ap_CS_fsm_state15))) begin
        can_frame_we1 = grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_533_can_frame_we1;
    end else if (((tmp_7_reg_1417 == 1'd0) & (1'b1 == ap_CS_fsm_state15))) begin
        can_frame_we1 = grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_523_can_frame_we1;
    end else begin
        can_frame_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((m_axi_can_addr_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state17))) begin
        m_axi_can_addr_ARADDR = sext_ln233_fu_1281_p1;
    end else if (((m_axi_can_addr_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        m_axi_can_addr_ARADDR = sext_ln173_fu_755_p1;
    end else if ((~((m_axi_can_addr_ARREADY == 1'b0) | (grp_recvFrame_logic_1_Pipeline_1_fu_517_ap_done == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        m_axi_can_addr_ARADDR = sext_ln150_fu_627_p1;
    end else if (((1'b1 == ap_CS_fsm_state16) | ((icmp_ln205_reg_1487 == 1'd0) & (tmp_7_reg_1417 == 1'd1) & (1'b1 == ap_CS_fsm_state15)))) begin
        m_axi_can_addr_ARADDR = grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_533_m_axi_can_addr_ARADDR;
    end else if (((1'b1 == ap_CS_fsm_state14) | ((tmp_7_reg_1417 == 1'd0) & (1'b1 == ap_CS_fsm_state15)))) begin
        m_axi_can_addr_ARADDR = grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_523_m_axi_can_addr_ARADDR;
    end else begin
        m_axi_can_addr_ARADDR = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) | ((icmp_ln205_reg_1487 == 1'd0) & (tmp_7_reg_1417 == 1'd1) & (1'b1 == ap_CS_fsm_state15)))) begin
        m_axi_can_addr_ARBURST = grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_533_m_axi_can_addr_ARBURST;
    end else if (((1'b1 == ap_CS_fsm_state14) | ((tmp_7_reg_1417 == 1'd0) & (1'b1 == ap_CS_fsm_state15)))) begin
        m_axi_can_addr_ARBURST = grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_523_m_axi_can_addr_ARBURST;
    end else begin
        m_axi_can_addr_ARBURST = 2'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) | ((icmp_ln205_reg_1487 == 1'd0) & (tmp_7_reg_1417 == 1'd1) & (1'b1 == ap_CS_fsm_state15)))) begin
        m_axi_can_addr_ARCACHE = grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_533_m_axi_can_addr_ARCACHE;
    end else if (((1'b1 == ap_CS_fsm_state14) | ((tmp_7_reg_1417 == 1'd0) & (1'b1 == ap_CS_fsm_state15)))) begin
        m_axi_can_addr_ARCACHE = grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_523_m_axi_can_addr_ARCACHE;
    end else begin
        m_axi_can_addr_ARCACHE = 4'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) | ((icmp_ln205_reg_1487 == 1'd0) & (tmp_7_reg_1417 == 1'd1) & (1'b1 == ap_CS_fsm_state15)))) begin
        m_axi_can_addr_ARID = grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_533_m_axi_can_addr_ARID;
    end else if (((1'b1 == ap_CS_fsm_state14) | ((tmp_7_reg_1417 == 1'd0) & (1'b1 == ap_CS_fsm_state15)))) begin
        m_axi_can_addr_ARID = grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_523_m_axi_can_addr_ARID;
    end else begin
        m_axi_can_addr_ARID = 1'd0;
    end
end

always @ (*) begin
    if (((~((m_axi_can_addr_ARREADY == 1'b0) | (grp_recvFrame_logic_1_Pipeline_1_fu_517_ap_done == 1'b0)) & (1'b1 == ap_CS_fsm_state2)) | ((m_axi_can_addr_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state17)) | ((m_axi_can_addr_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state4)))) begin
        m_axi_can_addr_ARLEN = 32'd1;
    end else if (((1'b1 == ap_CS_fsm_state16) | ((icmp_ln205_reg_1487 == 1'd0) & (tmp_7_reg_1417 == 1'd1) & (1'b1 == ap_CS_fsm_state15)))) begin
        m_axi_can_addr_ARLEN = grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_533_m_axi_can_addr_ARLEN;
    end else if (((1'b1 == ap_CS_fsm_state14) | ((tmp_7_reg_1417 == 1'd0) & (1'b1 == ap_CS_fsm_state15)))) begin
        m_axi_can_addr_ARLEN = grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_523_m_axi_can_addr_ARLEN;
    end else begin
        m_axi_can_addr_ARLEN = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) | ((icmp_ln205_reg_1487 == 1'd0) & (tmp_7_reg_1417 == 1'd1) & (1'b1 == ap_CS_fsm_state15)))) begin
        m_axi_can_addr_ARLOCK = grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_533_m_axi_can_addr_ARLOCK;
    end else if (((1'b1 == ap_CS_fsm_state14) | ((tmp_7_reg_1417 == 1'd0) & (1'b1 == ap_CS_fsm_state15)))) begin
        m_axi_can_addr_ARLOCK = grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_523_m_axi_can_addr_ARLOCK;
    end else begin
        m_axi_can_addr_ARLOCK = 2'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) | ((icmp_ln205_reg_1487 == 1'd0) & (tmp_7_reg_1417 == 1'd1) & (1'b1 == ap_CS_fsm_state15)))) begin
        m_axi_can_addr_ARPROT = grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_533_m_axi_can_addr_ARPROT;
    end else if (((1'b1 == ap_CS_fsm_state14) | ((tmp_7_reg_1417 == 1'd0) & (1'b1 == ap_CS_fsm_state15)))) begin
        m_axi_can_addr_ARPROT = grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_523_m_axi_can_addr_ARPROT;
    end else begin
        m_axi_can_addr_ARPROT = 3'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) | ((icmp_ln205_reg_1487 == 1'd0) & (tmp_7_reg_1417 == 1'd1) & (1'b1 == ap_CS_fsm_state15)))) begin
        m_axi_can_addr_ARQOS = grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_533_m_axi_can_addr_ARQOS;
    end else if (((1'b1 == ap_CS_fsm_state14) | ((tmp_7_reg_1417 == 1'd0) & (1'b1 == ap_CS_fsm_state15)))) begin
        m_axi_can_addr_ARQOS = grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_523_m_axi_can_addr_ARQOS;
    end else begin
        m_axi_can_addr_ARQOS = 4'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) | ((icmp_ln205_reg_1487 == 1'd0) & (tmp_7_reg_1417 == 1'd1) & (1'b1 == ap_CS_fsm_state15)))) begin
        m_axi_can_addr_ARREGION = grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_533_m_axi_can_addr_ARREGION;
    end else if (((1'b1 == ap_CS_fsm_state14) | ((tmp_7_reg_1417 == 1'd0) & (1'b1 == ap_CS_fsm_state15)))) begin
        m_axi_can_addr_ARREGION = grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_523_m_axi_can_addr_ARREGION;
    end else begin
        m_axi_can_addr_ARREGION = 4'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) | ((icmp_ln205_reg_1487 == 1'd0) & (tmp_7_reg_1417 == 1'd1) & (1'b1 == ap_CS_fsm_state15)))) begin
        m_axi_can_addr_ARSIZE = grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_533_m_axi_can_addr_ARSIZE;
    end else if (((1'b1 == ap_CS_fsm_state14) | ((tmp_7_reg_1417 == 1'd0) & (1'b1 == ap_CS_fsm_state15)))) begin
        m_axi_can_addr_ARSIZE = grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_523_m_axi_can_addr_ARSIZE;
    end else begin
        m_axi_can_addr_ARSIZE = 3'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) | ((icmp_ln205_reg_1487 == 1'd0) & (tmp_7_reg_1417 == 1'd1) & (1'b1 == ap_CS_fsm_state15)))) begin
        m_axi_can_addr_ARUSER = grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_533_m_axi_can_addr_ARUSER;
    end else if (((1'b1 == ap_CS_fsm_state14) | ((tmp_7_reg_1417 == 1'd0) & (1'b1 == ap_CS_fsm_state15)))) begin
        m_axi_can_addr_ARUSER = grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_523_m_axi_can_addr_ARUSER;
    end else begin
        m_axi_can_addr_ARUSER = 1'd0;
    end
end

always @ (*) begin
    if (((~((m_axi_can_addr_ARREADY == 1'b0) | (grp_recvFrame_logic_1_Pipeline_1_fu_517_ap_done == 1'b0)) & (1'b1 == ap_CS_fsm_state2)) | ((m_axi_can_addr_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state17)) | ((m_axi_can_addr_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state4)))) begin
        m_axi_can_addr_ARVALID = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state16) | ((icmp_ln205_reg_1487 == 1'd0) & (tmp_7_reg_1417 == 1'd1) & (1'b1 == ap_CS_fsm_state15)))) begin
        m_axi_can_addr_ARVALID = grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_533_m_axi_can_addr_ARVALID;
    end else if (((1'b1 == ap_CS_fsm_state14) | ((tmp_7_reg_1417 == 1'd0) & (1'b1 == ap_CS_fsm_state15)))) begin
        m_axi_can_addr_ARVALID = grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_523_m_axi_can_addr_ARVALID;
    end else begin
        m_axi_can_addr_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((m_axi_can_addr_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state25))) begin
        m_axi_can_addr_AWVALID = 1'b1;
    end else begin
        m_axi_can_addr_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((m_axi_can_addr_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state31))) begin
        m_axi_can_addr_BREADY = 1'b1;
    end else begin
        m_axi_can_addr_BREADY = 1'b0;
    end
end

always @ (*) begin
    if ((((m_axi_can_addr_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state24)) | ((m_axi_can_addr_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state11)) | ((m_axi_can_addr_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state9)))) begin
        m_axi_can_addr_RREADY = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state16) | ((icmp_ln205_reg_1487 == 1'd0) & (tmp_7_reg_1417 == 1'd1) & (1'b1 == ap_CS_fsm_state15)))) begin
        m_axi_can_addr_RREADY = grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_533_m_axi_can_addr_RREADY;
    end else if (((1'b1 == ap_CS_fsm_state14) | ((tmp_7_reg_1417 == 1'd0) & (1'b1 == ap_CS_fsm_state15)))) begin
        m_axi_can_addr_RREADY = grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_523_m_axi_can_addr_RREADY;
    end else begin
        m_axi_can_addr_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((m_axi_can_addr_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state26))) begin
        m_axi_can_addr_WVALID = 1'b1;
    end else begin
        m_axi_can_addr_WVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17))) begin
        m_axi_ps_ddr_ARVALID = grp_write_ddr_1_fu_543_m_axi_ps_ddr_ARVALID;
    end else begin
        m_axi_ps_ddr_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17))) begin
        m_axi_ps_ddr_AWVALID = grp_write_ddr_1_fu_543_m_axi_ps_ddr_AWVALID;
    end else begin
        m_axi_ps_ddr_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17))) begin
        m_axi_ps_ddr_BREADY = grp_write_ddr_1_fu_543_m_axi_ps_ddr_BREADY;
    end else begin
        m_axi_ps_ddr_BREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17))) begin
        m_axi_ps_ddr_RREADY = grp_write_ddr_1_fu_543_m_axi_ps_ddr_RREADY;
    end else begin
        m_axi_ps_ddr_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17))) begin
        m_axi_ps_ddr_WVALID = grp_write_ddr_1_fu_543_m_axi_ps_ddr_WVALID;
    end else begin
        m_axi_ps_ddr_WVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state15_on_subcall_done) & (1'b1 == ap_CS_fsm_state15))) begin
        received_can_ap_vld = 1'b1;
    end else begin
        received_can_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if ((~((m_axi_can_addr_ARREADY == 1'b0) | (grp_recvFrame_logic_1_Pipeline_1_fu_517_ap_done == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((m_axi_can_addr_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            if (((m_axi_can_addr_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            if (((m_axi_can_addr_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            if (((icmp_ln205_fu_1217_p2 == 1'd0) & (tmp_7_reg_1417 == 1'd1) & (1'b1 == ap_CS_fsm_state13))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else if (((icmp_ln205_fu_1217_p2 == 1'd1) & (tmp_7_reg_1417 == 1'd1) & (1'b1 == ap_CS_fsm_state13))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            if (((1'b0 == ap_block_state15_on_subcall_done) & (1'b1 == ap_CS_fsm_state15))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state17 : begin
            if (((m_axi_can_addr_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state17))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_state18 : begin
            if (((grp_write_ddr_1_fu_543_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state18))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            if (((m_axi_can_addr_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state24))) begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end
        end
        ap_ST_fsm_state25 : begin
            if (((m_axi_can_addr_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state25))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end
        end
        ap_ST_fsm_state26 : begin
            if (((m_axi_can_addr_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state26))) begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            if (((m_axi_can_addr_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state31))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Dlc_assign_fu_905_p3 = {{tmp_5_fu_896_p4}, {28'd0}};

assign FrameID_1_fu_838_p3 = ((tmp_2_reg_1368[0:0] == 1'b1) ? FrameID_fu_827_p3 : zext_ln158_fu_824_p1);

assign FrameID_fu_827_p3 = {{trunc_ln158_1_reg_1375}, {trunc_ln161_2_reg_1386}};

assign NofBytes_fu_1184_p3 = ((empty_69_fu_1180_p2[0:0] == 1'b1) ? empty_fu_1173_p3 : zext_ln32_5_fu_1169_p1);

assign add115_fu_1212_p2 = (add_ln150_2_reg_1305 + 15'd8456);

assign add_ln150_1_fu_611_p2 = (zext_ln150_2_fu_607_p1 + canbase);

assign add_ln150_2_fu_577_p2 = (zext_ln150_fu_561_p1 + zext_ln150_1_fu_573_p1);

assign add_ln150_fu_583_p2 = (add_ln150_2_fu_577_p2 + 15'd8448);

assign add_ln173_1_fu_664_p2 = (zext_ln173_fu_660_p1 + canbase);

assign add_ln173_fu_637_p2 = (add_ln150_2_reg_1305 + 15'd8452);

assign add_ln196_fu_1201_p2 = (NofBytes_fu_1184_p3 + 7'd8);

assign add_ln205_1_fu_1274_p2 = (zext_ln205_fu_1271_p1 + 5'd1);

assign add_ln205_fu_1223_p2 = ($signed(trunc_ln27_fu_1192_p1) + $signed(6'd63));

assign add_ln230_fu_1243_p2 = (internal_can_counter + 32'd1);

assign add_ln233_fu_1256_p2 = (canbase + 32'd232);

assign and_ln28_fu_923_p2 = (xor_ln28_fu_913_p2 & icmp_ln28_fu_918_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state15_on_subcall_done = (((ap_predicate_op208_call_state15 == 1'b1) & (grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_533_ap_done == 1'b0)) | ((grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_523_ap_done == 1'b0) & (tmp_7_reg_1417 == 1'd0)));
end

always @ (*) begin
    ap_predicate_op208_call_state15 = ((icmp_ln205_reg_1487 == 1'd0) & (tmp_7_reg_1417 == 1'd1));
end

assign empty_69_fu_1180_p2 = (icmp_ln32_14_reg_1465 | icmp_ln32_13_reg_1460);

assign empty_fu_1173_p3 = ((icmp_ln32_14_reg_1465[0:0] == 1'b1) ? 7'd64 : 7'd48);

assign grp_recvFrame_logic_1_Pipeline_1_fu_517_ap_start = grp_recvFrame_logic_1_Pipeline_1_fu_517_ap_start_reg;

assign grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_533_ap_start = grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_205_1_fu_533_ap_start_reg;

assign grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_523_ap_start = grp_recvFrame_logic_1_Pipeline_VITIS_LOOP_219_2_fu_523_ap_start_reg;

assign grp_write_ddr_1_fu_543_ap_start = grp_write_ddr_1_fu_543_ap_start_reg;

assign icmp_ln205_fu_1217_p2 = ((NofBytes_fu_1184_p3 == 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln28_fu_918_p2 = ((frameDLC_reg_1411 > 32'd2415919103) ? 1'b1 : 1'b0);

assign icmp_ln32_10_fu_1071_p2 = ((select_ln28_fu_929_p3 == 32'd2952790016) ? 1'b1 : 1'b0);

assign icmp_ln32_11_fu_1077_p2 = ((select_ln28_fu_929_p3 == 32'd3221225472) ? 1'b1 : 1'b0);

assign icmp_ln32_12_fu_1083_p2 = ((select_ln28_fu_929_p3 == 32'd3489660928) ? 1'b1 : 1'b0);

assign icmp_ln32_13_fu_1089_p2 = ((select_ln28_fu_929_p3 == 32'd3758096384) ? 1'b1 : 1'b0);

assign icmp_ln32_14_fu_1095_p2 = ((select_ln28_fu_929_p3 == 32'd4026531840) ? 1'b1 : 1'b0);

assign icmp_ln32_1_fu_947_p2 = ((select_ln28_fu_929_p3 == 32'd536870912) ? 1'b1 : 1'b0);

assign icmp_ln32_2_fu_953_p2 = ((select_ln28_fu_929_p3 == 32'd805306368) ? 1'b1 : 1'b0);

assign icmp_ln32_3_fu_985_p2 = ((select_ln28_fu_929_p3 == 32'd1073741824) ? 1'b1 : 1'b0);

assign icmp_ln32_4_fu_991_p2 = ((select_ln28_fu_929_p3 == 32'd1342177280) ? 1'b1 : 1'b0);

assign icmp_ln32_5_fu_1019_p2 = ((select_ln28_fu_929_p3 == 32'd1610612736) ? 1'b1 : 1'b0);

assign icmp_ln32_6_fu_1025_p2 = ((select_ln28_fu_929_p3 == 32'd1879048192) ? 1'b1 : 1'b0);

assign icmp_ln32_7_fu_1053_p2 = ((select_ln28_fu_929_p3 == 32'd2147483648) ? 1'b1 : 1'b0);

assign icmp_ln32_8_fu_1059_p2 = ((select_ln28_fu_929_p3 == 32'd2415919104) ? 1'b1 : 1'b0);

assign icmp_ln32_9_fu_1065_p2 = ((select_ln28_fu_929_p3 == 32'd2684354560) ? 1'b1 : 1'b0);

assign icmp_ln32_fu_937_p2 = ((select_ln28_fu_929_p3 == 32'd268435456) ? 1'b1 : 1'b0);

assign id_can_fu_769_p2 = (zext_ln179_fu_765_p1 + 5'd8);

assign m_axi_can_addr_AWADDR = can_addr_addr_2_reg_1506;

assign m_axi_can_addr_AWBURST = 2'd0;

assign m_axi_can_addr_AWCACHE = 4'd0;

assign m_axi_can_addr_AWID = 1'd0;

assign m_axi_can_addr_AWLEN = 32'd1;

assign m_axi_can_addr_AWLOCK = 2'd0;

assign m_axi_can_addr_AWPROT = 3'd0;

assign m_axi_can_addr_AWQOS = 4'd0;

assign m_axi_can_addr_AWREGION = 4'd0;

assign m_axi_can_addr_AWSIZE = 3'd0;

assign m_axi_can_addr_AWUSER = 1'd0;

assign m_axi_can_addr_WDATA = (can_addr_addr_2_read_reg_1513 | 32'd128);

assign m_axi_can_addr_WID = 1'd0;

assign m_axi_can_addr_WLAST = 1'b0;

assign m_axi_can_addr_WSTRB = 4'd15;

assign m_axi_can_addr_WUSER = 1'd0;

assign m_axi_ps_ddr_ARADDR = grp_write_ddr_1_fu_543_m_axi_ps_ddr_ARADDR;

assign m_axi_ps_ddr_ARBURST = grp_write_ddr_1_fu_543_m_axi_ps_ddr_ARBURST;

assign m_axi_ps_ddr_ARCACHE = grp_write_ddr_1_fu_543_m_axi_ps_ddr_ARCACHE;

assign m_axi_ps_ddr_ARID = grp_write_ddr_1_fu_543_m_axi_ps_ddr_ARID;

assign m_axi_ps_ddr_ARLEN = grp_write_ddr_1_fu_543_m_axi_ps_ddr_ARLEN;

assign m_axi_ps_ddr_ARLOCK = grp_write_ddr_1_fu_543_m_axi_ps_ddr_ARLOCK;

assign m_axi_ps_ddr_ARPROT = grp_write_ddr_1_fu_543_m_axi_ps_ddr_ARPROT;

assign m_axi_ps_ddr_ARQOS = grp_write_ddr_1_fu_543_m_axi_ps_ddr_ARQOS;

assign m_axi_ps_ddr_ARREGION = grp_write_ddr_1_fu_543_m_axi_ps_ddr_ARREGION;

assign m_axi_ps_ddr_ARSIZE = grp_write_ddr_1_fu_543_m_axi_ps_ddr_ARSIZE;

assign m_axi_ps_ddr_ARUSER = grp_write_ddr_1_fu_543_m_axi_ps_ddr_ARUSER;

assign m_axi_ps_ddr_AWADDR = grp_write_ddr_1_fu_543_m_axi_ps_ddr_AWADDR;

assign m_axi_ps_ddr_AWBURST = grp_write_ddr_1_fu_543_m_axi_ps_ddr_AWBURST;

assign m_axi_ps_ddr_AWCACHE = grp_write_ddr_1_fu_543_m_axi_ps_ddr_AWCACHE;

assign m_axi_ps_ddr_AWID = grp_write_ddr_1_fu_543_m_axi_ps_ddr_AWID;

assign m_axi_ps_ddr_AWLEN = grp_write_ddr_1_fu_543_m_axi_ps_ddr_AWLEN;

assign m_axi_ps_ddr_AWLOCK = grp_write_ddr_1_fu_543_m_axi_ps_ddr_AWLOCK;

assign m_axi_ps_ddr_AWPROT = grp_write_ddr_1_fu_543_m_axi_ps_ddr_AWPROT;

assign m_axi_ps_ddr_AWQOS = grp_write_ddr_1_fu_543_m_axi_ps_ddr_AWQOS;

assign m_axi_ps_ddr_AWREGION = grp_write_ddr_1_fu_543_m_axi_ps_ddr_AWREGION;

assign m_axi_ps_ddr_AWSIZE = grp_write_ddr_1_fu_543_m_axi_ps_ddr_AWSIZE;

assign m_axi_ps_ddr_AWUSER = grp_write_ddr_1_fu_543_m_axi_ps_ddr_AWUSER;

assign m_axi_ps_ddr_WDATA = grp_write_ddr_1_fu_543_m_axi_ps_ddr_WDATA;

assign m_axi_ps_ddr_WID = grp_write_ddr_1_fu_543_m_axi_ps_ddr_WID;

assign m_axi_ps_ddr_WLAST = grp_write_ddr_1_fu_543_m_axi_ps_ddr_WLAST;

assign m_axi_ps_ddr_WSTRB = grp_write_ddr_1_fu_543_m_axi_ps_ddr_WSTRB;

assign m_axi_ps_ddr_WUSER = grp_write_ddr_1_fu_543_m_axi_ps_ddr_WUSER;

assign or_ln32_1_fu_1005_p2 = (icmp_ln32_4_fu_991_p2 | icmp_ln32_3_fu_985_p2);

assign or_ln32_2_fu_1039_p2 = (icmp_ln32_6_fu_1025_p2 | icmp_ln32_5_fu_1019_p2);

assign or_ln32_3_fu_1111_p2 = (icmp_ln32_8_reg_1432 | icmp_ln32_7_reg_1427);

assign or_ln32_4_fu_1134_p2 = (icmp_ln32_9_reg_1438 | icmp_ln32_10_reg_1443);

assign or_ln32_5_fu_1157_p2 = (icmp_ln32_12_reg_1454 | icmp_ln32_11_reg_1449);

assign or_ln32_fu_967_p2 = (icmp_ln32_2_fu_953_p2 | icmp_ln32_1_fu_947_p2);

assign received_can = (internal_can_counter + 32'd1);

assign select_ln158_fu_833_p3 = ((tmp_2_reg_1368[0:0] == 1'b1) ? trunc_ln146_reg_1363 : tmp_6_reg_1381);

assign select_ln28_fu_929_p3 = ((and_ln28_fu_923_p2[0:0] == 1'b1) ? 32'd2147483648 : Dlc_assign_fu_905_p3);

assign select_ln32_10_fu_1150_p3 = ((icmp_ln32_12_reg_1454[0:0] == 1'b1) ? 6'd32 : 6'd24);

assign select_ln32_11_fu_1161_p3 = ((or_ln32_5_fu_1157_p2[0:0] == 1'b1) ? select_ln32_10_fu_1150_p3 : zext_ln32_4_fu_1146_p1);

assign select_ln32_1_fu_973_p3 = ((or_ln32_fu_967_p2[0:0] == 1'b1) ? select_ln32_fu_959_p3 : zext_ln32_fu_943_p1);

assign select_ln32_2_fu_997_p3 = ((icmp_ln32_4_fu_991_p2[0:0] == 1'b1) ? 3'd5 : 3'd4);

assign select_ln32_3_fu_1011_p3 = ((or_ln32_1_fu_1005_p2[0:0] == 1'b1) ? select_ln32_2_fu_997_p3 : zext_ln32_1_fu_981_p1);

assign select_ln32_4_fu_1031_p3 = ((icmp_ln32_6_fu_1025_p2[0:0] == 1'b1) ? 3'd7 : 3'd6);

assign select_ln32_5_fu_1045_p3 = ((or_ln32_2_fu_1039_p2[0:0] == 1'b1) ? select_ln32_4_fu_1031_p3 : select_ln32_3_fu_1011_p3);

assign select_ln32_6_fu_1104_p3 = ((icmp_ln32_8_reg_1432[0:0] == 1'b1) ? 4'd12 : 4'd8);

assign select_ln32_7_fu_1115_p3 = ((or_ln32_3_fu_1111_p2[0:0] == 1'b1) ? select_ln32_6_fu_1104_p3 : zext_ln32_2_fu_1101_p1);

assign select_ln32_8_fu_1127_p3 = ((icmp_ln32_10_reg_1443[0:0] == 1'b1) ? 5'd20 : 5'd16);

assign select_ln32_9_fu_1138_p3 = ((or_ln32_4_fu_1134_p2[0:0] == 1'b1) ? select_ln32_8_fu_1127_p3 : zext_ln32_3_fu_1123_p1);

assign select_ln32_fu_959_p3 = ((icmp_ln32_2_fu_953_p2[0:0] == 1'b1) ? 2'd3 : 2'd2);

assign sext_ln150_fu_627_p1 = $signed(trunc_ln150_1_reg_1311);

assign sext_ln173_fu_755_p1 = $signed(trunc_ln173_1_reg_1322);

assign sext_ln233_fu_1281_p1 = $signed(trunc_ln17_reg_1496);

assign shl_ln150_1_fu_565_p3 = {{readIndex}, {3'd0}};

assign shl_ln150_2_fu_599_p3 = {{tmp_fu_589_p4}, {2'd0}};

assign shl_ln1_fu_652_p3 = {{tmp_4_fu_642_p4}, {2'd0}};

assign shl_ln_fu_553_p3 = {{readIndex}, {6'd0}};

assign tmp_4_fu_642_p4 = {{add_ln173_fu_637_p2[14:2]}};

assign tmp_5_fu_896_p4 = {{frameDLC_reg_1411[31:28]}};

assign tmp_fu_589_p4 = {{add_ln150_fu_583_p2[14:2]}};

assign trunc_ln146_fu_780_p1 = m_axi_can_addr_RDATA[0:0];

assign trunc_ln168_fu_880_p1 = FrameID_1_fu_838_p3[7:0];

assign trunc_ln192_fu_751_p1 = timestamp[7:0];

assign trunc_ln27_fu_1192_p1 = NofBytes_fu_1184_p3[5:0];

assign xor_ln28_fu_913_p2 = (tmp_7_reg_1417 ^ 1'd1);

assign zext_ln150_1_fu_573_p1 = shl_ln150_1_fu_565_p3;

assign zext_ln150_2_fu_607_p1 = shl_ln150_2_fu_599_p3;

assign zext_ln150_fu_561_p1 = shl_ln_fu_553_p3;

assign zext_ln153_fu_820_p1 = tmp_2_reg_1368;

assign zext_ln158_1_fu_845_p1 = select_ln158_fu_833_p3;

assign zext_ln158_fu_824_p1 = trunc_ln158_1_reg_1375;

assign zext_ln165_fu_884_p1 = tmp_3_reg_1391;

assign zext_ln173_fu_660_p1 = shl_ln1_fu_652_p3;

assign zext_ln179_1_fu_775_p1 = id_can_fu_769_p2;

assign zext_ln179_fu_765_p1 = EN;

assign zext_ln196_1_fu_1207_p1 = add_ln196_fu_1201_p2;

assign zext_ln196_fu_1196_p1 = NofBytes_fu_1184_p3;

assign zext_ln205_fu_1271_p1 = trunc_ln16_reg_1491;

assign zext_ln32_1_fu_981_p1 = select_ln32_1_fu_973_p3;

assign zext_ln32_2_fu_1101_p1 = select_ln32_5_reg_1422;

assign zext_ln32_3_fu_1123_p1 = select_ln32_7_fu_1115_p3;

assign zext_ln32_4_fu_1146_p1 = select_ln32_9_fu_1138_p3;

assign zext_ln32_5_fu_1169_p1 = select_ln32_11_fu_1161_p3;

assign zext_ln32_fu_943_p1 = icmp_ln32_fu_937_p2;

always @ (posedge ap_clk) begin
    add_ln150_2_reg_1305[2:0] <= 3'b000;
    add115_reg_1481[2:0] <= 3'b000;
end

endmodule //clu_recvFrame_logic_1
