// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module clu_single_lin_process_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_lin_addr_AWVALID,
        m_axi_lin_addr_AWREADY,
        m_axi_lin_addr_AWADDR,
        m_axi_lin_addr_AWID,
        m_axi_lin_addr_AWLEN,
        m_axi_lin_addr_AWSIZE,
        m_axi_lin_addr_AWBURST,
        m_axi_lin_addr_AWLOCK,
        m_axi_lin_addr_AWCACHE,
        m_axi_lin_addr_AWPROT,
        m_axi_lin_addr_AWQOS,
        m_axi_lin_addr_AWREGION,
        m_axi_lin_addr_AWUSER,
        m_axi_lin_addr_WVALID,
        m_axi_lin_addr_WREADY,
        m_axi_lin_addr_WDATA,
        m_axi_lin_addr_WSTRB,
        m_axi_lin_addr_WLAST,
        m_axi_lin_addr_WID,
        m_axi_lin_addr_WUSER,
        m_axi_lin_addr_ARVALID,
        m_axi_lin_addr_ARREADY,
        m_axi_lin_addr_ARADDR,
        m_axi_lin_addr_ARID,
        m_axi_lin_addr_ARLEN,
        m_axi_lin_addr_ARSIZE,
        m_axi_lin_addr_ARBURST,
        m_axi_lin_addr_ARLOCK,
        m_axi_lin_addr_ARCACHE,
        m_axi_lin_addr_ARPROT,
        m_axi_lin_addr_ARQOS,
        m_axi_lin_addr_ARREGION,
        m_axi_lin_addr_ARUSER,
        m_axi_lin_addr_RVALID,
        m_axi_lin_addr_RREADY,
        m_axi_lin_addr_RDATA,
        m_axi_lin_addr_RLAST,
        m_axi_lin_addr_RID,
        m_axi_lin_addr_RFIFONUM,
        m_axi_lin_addr_RUSER,
        m_axi_lin_addr_RRESP,
        m_axi_lin_addr_BVALID,
        m_axi_lin_addr_BREADY,
        m_axi_lin_addr_BRESP,
        m_axi_lin_addr_BID,
        m_axi_lin_addr_BUSER,
        linbase,
        m_axi_ps_ddr_AWVALID,
        m_axi_ps_ddr_AWREADY,
        m_axi_ps_ddr_AWADDR,
        m_axi_ps_ddr_AWID,
        m_axi_ps_ddr_AWLEN,
        m_axi_ps_ddr_AWSIZE,
        m_axi_ps_ddr_AWBURST,
        m_axi_ps_ddr_AWLOCK,
        m_axi_ps_ddr_AWCACHE,
        m_axi_ps_ddr_AWPROT,
        m_axi_ps_ddr_AWQOS,
        m_axi_ps_ddr_AWREGION,
        m_axi_ps_ddr_AWUSER,
        m_axi_ps_ddr_WVALID,
        m_axi_ps_ddr_WREADY,
        m_axi_ps_ddr_WDATA,
        m_axi_ps_ddr_WSTRB,
        m_axi_ps_ddr_WLAST,
        m_axi_ps_ddr_WID,
        m_axi_ps_ddr_WUSER,
        m_axi_ps_ddr_ARVALID,
        m_axi_ps_ddr_ARREADY,
        m_axi_ps_ddr_ARADDR,
        m_axi_ps_ddr_ARID,
        m_axi_ps_ddr_ARLEN,
        m_axi_ps_ddr_ARSIZE,
        m_axi_ps_ddr_ARBURST,
        m_axi_ps_ddr_ARLOCK,
        m_axi_ps_ddr_ARCACHE,
        m_axi_ps_ddr_ARPROT,
        m_axi_ps_ddr_ARQOS,
        m_axi_ps_ddr_ARREGION,
        m_axi_ps_ddr_ARUSER,
        m_axi_ps_ddr_RVALID,
        m_axi_ps_ddr_RREADY,
        m_axi_ps_ddr_RDATA,
        m_axi_ps_ddr_RLAST,
        m_axi_ps_ddr_RID,
        m_axi_ps_ddr_RFIFONUM,
        m_axi_ps_ddr_RUSER,
        m_axi_ps_ddr_RRESP,
        m_axi_ps_ddr_BVALID,
        m_axi_ps_ddr_BREADY,
        m_axi_ps_ddr_BRESP,
        m_axi_ps_ddr_BID,
        m_axi_ps_ddr_BUSER,
        ddr,
        timestamp,
        EN,
        received_lin,
        received_lin_ap_vld
);

parameter    ap_ST_fsm_state1 = 70'd1;
parameter    ap_ST_fsm_state2 = 70'd2;
parameter    ap_ST_fsm_state3 = 70'd4;
parameter    ap_ST_fsm_state4 = 70'd8;
parameter    ap_ST_fsm_state5 = 70'd16;
parameter    ap_ST_fsm_state6 = 70'd32;
parameter    ap_ST_fsm_state7 = 70'd64;
parameter    ap_ST_fsm_state8 = 70'd128;
parameter    ap_ST_fsm_state9 = 70'd256;
parameter    ap_ST_fsm_state10 = 70'd512;
parameter    ap_ST_fsm_state11 = 70'd1024;
parameter    ap_ST_fsm_state12 = 70'd2048;
parameter    ap_ST_fsm_state13 = 70'd4096;
parameter    ap_ST_fsm_state14 = 70'd8192;
parameter    ap_ST_fsm_state15 = 70'd16384;
parameter    ap_ST_fsm_state16 = 70'd32768;
parameter    ap_ST_fsm_state17 = 70'd65536;
parameter    ap_ST_fsm_state18 = 70'd131072;
parameter    ap_ST_fsm_state19 = 70'd262144;
parameter    ap_ST_fsm_state20 = 70'd524288;
parameter    ap_ST_fsm_state21 = 70'd1048576;
parameter    ap_ST_fsm_state22 = 70'd2097152;
parameter    ap_ST_fsm_state23 = 70'd4194304;
parameter    ap_ST_fsm_state24 = 70'd8388608;
parameter    ap_ST_fsm_state25 = 70'd16777216;
parameter    ap_ST_fsm_state26 = 70'd33554432;
parameter    ap_ST_fsm_state27 = 70'd67108864;
parameter    ap_ST_fsm_state28 = 70'd134217728;
parameter    ap_ST_fsm_state29 = 70'd268435456;
parameter    ap_ST_fsm_state30 = 70'd536870912;
parameter    ap_ST_fsm_state31 = 70'd1073741824;
parameter    ap_ST_fsm_state32 = 70'd2147483648;
parameter    ap_ST_fsm_state33 = 70'd4294967296;
parameter    ap_ST_fsm_state34 = 70'd8589934592;
parameter    ap_ST_fsm_state35 = 70'd17179869184;
parameter    ap_ST_fsm_state36 = 70'd34359738368;
parameter    ap_ST_fsm_state37 = 70'd68719476736;
parameter    ap_ST_fsm_state38 = 70'd137438953472;
parameter    ap_ST_fsm_state39 = 70'd274877906944;
parameter    ap_ST_fsm_state40 = 70'd549755813888;
parameter    ap_ST_fsm_state41 = 70'd1099511627776;
parameter    ap_ST_fsm_state42 = 70'd2199023255552;
parameter    ap_ST_fsm_state43 = 70'd4398046511104;
parameter    ap_ST_fsm_state44 = 70'd8796093022208;
parameter    ap_ST_fsm_state45 = 70'd17592186044416;
parameter    ap_ST_fsm_state46 = 70'd35184372088832;
parameter    ap_ST_fsm_state47 = 70'd70368744177664;
parameter    ap_ST_fsm_state48 = 70'd140737488355328;
parameter    ap_ST_fsm_state49 = 70'd281474976710656;
parameter    ap_ST_fsm_state50 = 70'd562949953421312;
parameter    ap_ST_fsm_state51 = 70'd1125899906842624;
parameter    ap_ST_fsm_state52 = 70'd2251799813685248;
parameter    ap_ST_fsm_state53 = 70'd4503599627370496;
parameter    ap_ST_fsm_state54 = 70'd9007199254740992;
parameter    ap_ST_fsm_state55 = 70'd18014398509481984;
parameter    ap_ST_fsm_state56 = 70'd36028797018963968;
parameter    ap_ST_fsm_state57 = 70'd72057594037927936;
parameter    ap_ST_fsm_state58 = 70'd144115188075855872;
parameter    ap_ST_fsm_state59 = 70'd288230376151711744;
parameter    ap_ST_fsm_state60 = 70'd576460752303423488;
parameter    ap_ST_fsm_state61 = 70'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 70'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 70'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 70'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 70'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 70'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 70'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 70'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 70'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 70'd590295810358705651712;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_lin_addr_AWVALID;
input   m_axi_lin_addr_AWREADY;
output  [31:0] m_axi_lin_addr_AWADDR;
output  [0:0] m_axi_lin_addr_AWID;
output  [31:0] m_axi_lin_addr_AWLEN;
output  [2:0] m_axi_lin_addr_AWSIZE;
output  [1:0] m_axi_lin_addr_AWBURST;
output  [1:0] m_axi_lin_addr_AWLOCK;
output  [3:0] m_axi_lin_addr_AWCACHE;
output  [2:0] m_axi_lin_addr_AWPROT;
output  [3:0] m_axi_lin_addr_AWQOS;
output  [3:0] m_axi_lin_addr_AWREGION;
output  [0:0] m_axi_lin_addr_AWUSER;
output   m_axi_lin_addr_WVALID;
input   m_axi_lin_addr_WREADY;
output  [31:0] m_axi_lin_addr_WDATA;
output  [3:0] m_axi_lin_addr_WSTRB;
output   m_axi_lin_addr_WLAST;
output  [0:0] m_axi_lin_addr_WID;
output  [0:0] m_axi_lin_addr_WUSER;
output   m_axi_lin_addr_ARVALID;
input   m_axi_lin_addr_ARREADY;
output  [31:0] m_axi_lin_addr_ARADDR;
output  [0:0] m_axi_lin_addr_ARID;
output  [31:0] m_axi_lin_addr_ARLEN;
output  [2:0] m_axi_lin_addr_ARSIZE;
output  [1:0] m_axi_lin_addr_ARBURST;
output  [1:0] m_axi_lin_addr_ARLOCK;
output  [3:0] m_axi_lin_addr_ARCACHE;
output  [2:0] m_axi_lin_addr_ARPROT;
output  [3:0] m_axi_lin_addr_ARQOS;
output  [3:0] m_axi_lin_addr_ARREGION;
output  [0:0] m_axi_lin_addr_ARUSER;
input   m_axi_lin_addr_RVALID;
output   m_axi_lin_addr_RREADY;
input  [31:0] m_axi_lin_addr_RDATA;
input   m_axi_lin_addr_RLAST;
input  [0:0] m_axi_lin_addr_RID;
input  [8:0] m_axi_lin_addr_RFIFONUM;
input  [0:0] m_axi_lin_addr_RUSER;
input  [1:0] m_axi_lin_addr_RRESP;
input   m_axi_lin_addr_BVALID;
output   m_axi_lin_addr_BREADY;
input  [1:0] m_axi_lin_addr_BRESP;
input  [0:0] m_axi_lin_addr_BID;
input  [0:0] m_axi_lin_addr_BUSER;
input  [31:0] linbase;
output   m_axi_ps_ddr_AWVALID;
input   m_axi_ps_ddr_AWREADY;
output  [31:0] m_axi_ps_ddr_AWADDR;
output  [0:0] m_axi_ps_ddr_AWID;
output  [31:0] m_axi_ps_ddr_AWLEN;
output  [2:0] m_axi_ps_ddr_AWSIZE;
output  [1:0] m_axi_ps_ddr_AWBURST;
output  [1:0] m_axi_ps_ddr_AWLOCK;
output  [3:0] m_axi_ps_ddr_AWCACHE;
output  [2:0] m_axi_ps_ddr_AWPROT;
output  [3:0] m_axi_ps_ddr_AWQOS;
output  [3:0] m_axi_ps_ddr_AWREGION;
output  [0:0] m_axi_ps_ddr_AWUSER;
output   m_axi_ps_ddr_WVALID;
input   m_axi_ps_ddr_WREADY;
output  [7:0] m_axi_ps_ddr_WDATA;
output  [0:0] m_axi_ps_ddr_WSTRB;
output   m_axi_ps_ddr_WLAST;
output  [0:0] m_axi_ps_ddr_WID;
output  [0:0] m_axi_ps_ddr_WUSER;
output   m_axi_ps_ddr_ARVALID;
input   m_axi_ps_ddr_ARREADY;
output  [31:0] m_axi_ps_ddr_ARADDR;
output  [0:0] m_axi_ps_ddr_ARID;
output  [31:0] m_axi_ps_ddr_ARLEN;
output  [2:0] m_axi_ps_ddr_ARSIZE;
output  [1:0] m_axi_ps_ddr_ARBURST;
output  [1:0] m_axi_ps_ddr_ARLOCK;
output  [3:0] m_axi_ps_ddr_ARCACHE;
output  [2:0] m_axi_ps_ddr_ARPROT;
output  [3:0] m_axi_ps_ddr_ARQOS;
output  [3:0] m_axi_ps_ddr_ARREGION;
output  [0:0] m_axi_ps_ddr_ARUSER;
input   m_axi_ps_ddr_RVALID;
output   m_axi_ps_ddr_RREADY;
input  [7:0] m_axi_ps_ddr_RDATA;
input   m_axi_ps_ddr_RLAST;
input  [0:0] m_axi_ps_ddr_RID;
input  [10:0] m_axi_ps_ddr_RFIFONUM;
input  [0:0] m_axi_ps_ddr_RUSER;
input  [1:0] m_axi_ps_ddr_RRESP;
input   m_axi_ps_ddr_BVALID;
output   m_axi_ps_ddr_BREADY;
input  [1:0] m_axi_ps_ddr_BRESP;
input  [0:0] m_axi_ps_ddr_BID;
input  [0:0] m_axi_ps_ddr_BUSER;
input  [31:0] ddr;
input  [63:0] timestamp;
input  [3:0] EN;
output  [31:0] received_lin;
output   received_lin_ap_vld;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg m_axi_lin_addr_AWVALID;
reg[31:0] m_axi_lin_addr_AWADDR;
reg m_axi_lin_addr_WVALID;
reg[31:0] m_axi_lin_addr_WDATA;
reg m_axi_lin_addr_ARVALID;
reg[31:0] m_axi_lin_addr_ARADDR;
reg[0:0] m_axi_lin_addr_ARID;
reg[31:0] m_axi_lin_addr_ARLEN;
reg[2:0] m_axi_lin_addr_ARSIZE;
reg[1:0] m_axi_lin_addr_ARBURST;
reg[1:0] m_axi_lin_addr_ARLOCK;
reg[3:0] m_axi_lin_addr_ARCACHE;
reg[2:0] m_axi_lin_addr_ARPROT;
reg[3:0] m_axi_lin_addr_ARQOS;
reg[3:0] m_axi_lin_addr_ARREGION;
reg[0:0] m_axi_lin_addr_ARUSER;
reg m_axi_lin_addr_RREADY;
reg m_axi_lin_addr_BREADY;
reg m_axi_ps_ddr_AWVALID;
reg m_axi_ps_ddr_WVALID;
reg m_axi_ps_ddr_ARVALID;
reg m_axi_ps_ddr_RREADY;
reg m_axi_ps_ddr_BREADY;
reg received_lin_ap_vld;

(* fsm_encoding = "none" *) reg   [69:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [3:0] PLIN_Ctrl_run_state_address0;
reg    PLIN_Ctrl_run_state_ce0;
reg    PLIN_Ctrl_run_state_we0;
reg   [0:0] PLIN_Ctrl_run_state_d0;
wire   [0:0] PLIN_Ctrl_run_state_q0;
reg   [5:0] PL_Data_0;
reg   [3:0] PL_Data_1;
reg   [31:0] internal_lin_counter;
wire    grp_read_lin_reg_1_fu_421_lin_addr_blk_n_AR;
wire    grp_read_lin_reg_1_fu_421_lin_addr_blk_n_R;
reg    lin_addr_blk_n_AR;
reg    lin_addr_blk_n_R;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state15;
wire    ap_CS_fsm_state22;
wire    ap_CS_fsm_state25;
wire    ap_CS_fsm_state32;
reg    lin_addr_blk_n_AW;
wire    ap_CS_fsm_state33;
reg    lin_addr_blk_n_W;
wire    ap_CS_fsm_state34;
reg    lin_addr_blk_n_B;
wire    ap_CS_fsm_state39;
wire    ap_CS_fsm_state35;
wire    ap_CS_fsm_state40;
reg   [0:0] PLIN_Ctrl_run_state_load_reg_799;
reg   [0:0] trunc_ln142_reg_810;
wire    ap_CS_fsm_state44;
wire    ap_CS_fsm_state51;
wire    ap_CS_fsm_state52;
wire    ap_CS_fsm_state53;
wire    ap_CS_fsm_state58;
reg   [29:0] reg_469;
wire   [0:0] icmp_ln169_fu_585_p2;
wire   [7:0] EN_cast_fu_473_p1;
reg   [7:0] EN_cast_reg_786;
reg   [3:0] PLIN_Ctrl_run_state_addr_reg_794;
wire    ap_CS_fsm_state10;
wire   [7:0] grp_read_lin_reg_1_fu_421_ap_return;
reg   [7:0] reg_status_reg_803;
wire   [0:0] trunc_ln142_fu_511_p1;
reg   [29:0] trunc_ln89_1_reg_814;
wire   [0:0] icmp_ln166_fu_570_p2;
reg   [0:0] icmp_ln166_reg_831;
wire    ap_CS_fsm_state41;
reg   [0:0] icmp_ln169_reg_835;
reg   [7:0] trunc_ln7_reg_845;
wire    ap_CS_fsm_state61;
reg   [7:0] trunc_ln8_reg_850;
reg   [7:0] trunc_ln9_reg_855;
reg   [7:0] trunc_ln_reg_860;
reg   [7:0] trunc_ln1_reg_865;
wire   [7:0] trunc_ln191_fu_699_p1;
reg   [7:0] trunc_ln191_reg_870;
reg   [4:0] lin_frame_address0;
reg    lin_frame_ce0;
reg    lin_frame_we0;
reg   [7:0] lin_frame_d0;
wire   [7:0] lin_frame_q0;
reg   [4:0] lin_frame_address1;
reg    lin_frame_ce1;
reg    lin_frame_we1;
reg   [7:0] lin_frame_d1;
wire    grp_read_lin_reg_1_fu_421_ap_start;
wire    grp_read_lin_reg_1_fu_421_ap_done;
wire    grp_read_lin_reg_1_fu_421_ap_idle;
wire    grp_read_lin_reg_1_fu_421_ap_ready;
wire    grp_read_lin_reg_1_fu_421_m_axi_lin_addr_AWVALID;
wire   [31:0] grp_read_lin_reg_1_fu_421_m_axi_lin_addr_AWADDR;
wire   [0:0] grp_read_lin_reg_1_fu_421_m_axi_lin_addr_AWID;
wire   [31:0] grp_read_lin_reg_1_fu_421_m_axi_lin_addr_AWLEN;
wire   [2:0] grp_read_lin_reg_1_fu_421_m_axi_lin_addr_AWSIZE;
wire   [1:0] grp_read_lin_reg_1_fu_421_m_axi_lin_addr_AWBURST;
wire   [1:0] grp_read_lin_reg_1_fu_421_m_axi_lin_addr_AWLOCK;
wire   [3:0] grp_read_lin_reg_1_fu_421_m_axi_lin_addr_AWCACHE;
wire   [2:0] grp_read_lin_reg_1_fu_421_m_axi_lin_addr_AWPROT;
wire   [3:0] grp_read_lin_reg_1_fu_421_m_axi_lin_addr_AWQOS;
wire   [3:0] grp_read_lin_reg_1_fu_421_m_axi_lin_addr_AWREGION;
wire   [0:0] grp_read_lin_reg_1_fu_421_m_axi_lin_addr_AWUSER;
wire    grp_read_lin_reg_1_fu_421_m_axi_lin_addr_WVALID;
wire   [31:0] grp_read_lin_reg_1_fu_421_m_axi_lin_addr_WDATA;
wire   [3:0] grp_read_lin_reg_1_fu_421_m_axi_lin_addr_WSTRB;
wire    grp_read_lin_reg_1_fu_421_m_axi_lin_addr_WLAST;
wire   [0:0] grp_read_lin_reg_1_fu_421_m_axi_lin_addr_WID;
wire   [0:0] grp_read_lin_reg_1_fu_421_m_axi_lin_addr_WUSER;
wire    grp_read_lin_reg_1_fu_421_m_axi_lin_addr_ARVALID;
wire   [31:0] grp_read_lin_reg_1_fu_421_m_axi_lin_addr_ARADDR;
wire   [0:0] grp_read_lin_reg_1_fu_421_m_axi_lin_addr_ARID;
wire   [31:0] grp_read_lin_reg_1_fu_421_m_axi_lin_addr_ARLEN;
wire   [2:0] grp_read_lin_reg_1_fu_421_m_axi_lin_addr_ARSIZE;
wire   [1:0] grp_read_lin_reg_1_fu_421_m_axi_lin_addr_ARBURST;
wire   [1:0] grp_read_lin_reg_1_fu_421_m_axi_lin_addr_ARLOCK;
wire   [3:0] grp_read_lin_reg_1_fu_421_m_axi_lin_addr_ARCACHE;
wire   [2:0] grp_read_lin_reg_1_fu_421_m_axi_lin_addr_ARPROT;
wire   [3:0] grp_read_lin_reg_1_fu_421_m_axi_lin_addr_ARQOS;
wire   [3:0] grp_read_lin_reg_1_fu_421_m_axi_lin_addr_ARREGION;
wire   [0:0] grp_read_lin_reg_1_fu_421_m_axi_lin_addr_ARUSER;
wire    grp_read_lin_reg_1_fu_421_m_axi_lin_addr_RREADY;
wire    grp_read_lin_reg_1_fu_421_m_axi_lin_addr_BREADY;
reg    grp_read_lin_reg_1_fu_421_ap_ce;
reg   [4:0] grp_read_lin_reg_1_fu_421_offset;
reg    ap_block_state4;
reg    ap_block_state11;
reg    ap_block_state15;
reg    ap_block_state22;
reg    ap_block_state25;
reg    ap_block_state32;
reg    ap_block_state44;
reg    ap_block_state51;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state16;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state18;
wire    ap_CS_fsm_state19;
wire    ap_CS_fsm_state20;
wire    ap_CS_fsm_state21;
wire    ap_CS_fsm_state24;
wire    ap_CS_fsm_state26;
wire    ap_CS_fsm_state27;
wire    ap_CS_fsm_state28;
wire    ap_CS_fsm_state29;
wire    ap_CS_fsm_state30;
wire    ap_CS_fsm_state31;
wire    ap_CS_fsm_state43;
wire    ap_CS_fsm_state45;
wire    ap_CS_fsm_state46;
wire    ap_CS_fsm_state47;
wire    ap_CS_fsm_state48;
wire    ap_CS_fsm_state49;
wire    ap_CS_fsm_state50;
wire    grp_single_lin_process_1_Pipeline_VITIS_LOOP_178_1_fu_432_ap_start;
wire    grp_single_lin_process_1_Pipeline_VITIS_LOOP_178_1_fu_432_ap_done;
wire    grp_single_lin_process_1_Pipeline_VITIS_LOOP_178_1_fu_432_ap_idle;
wire    grp_single_lin_process_1_Pipeline_VITIS_LOOP_178_1_fu_432_ap_ready;
wire    grp_single_lin_process_1_Pipeline_VITIS_LOOP_178_1_fu_432_m_axi_lin_addr_AWVALID;
wire   [31:0] grp_single_lin_process_1_Pipeline_VITIS_LOOP_178_1_fu_432_m_axi_lin_addr_AWADDR;
wire   [0:0] grp_single_lin_process_1_Pipeline_VITIS_LOOP_178_1_fu_432_m_axi_lin_addr_AWID;
wire   [31:0] grp_single_lin_process_1_Pipeline_VITIS_LOOP_178_1_fu_432_m_axi_lin_addr_AWLEN;
wire   [2:0] grp_single_lin_process_1_Pipeline_VITIS_LOOP_178_1_fu_432_m_axi_lin_addr_AWSIZE;
wire   [1:0] grp_single_lin_process_1_Pipeline_VITIS_LOOP_178_1_fu_432_m_axi_lin_addr_AWBURST;
wire   [1:0] grp_single_lin_process_1_Pipeline_VITIS_LOOP_178_1_fu_432_m_axi_lin_addr_AWLOCK;
wire   [3:0] grp_single_lin_process_1_Pipeline_VITIS_LOOP_178_1_fu_432_m_axi_lin_addr_AWCACHE;
wire   [2:0] grp_single_lin_process_1_Pipeline_VITIS_LOOP_178_1_fu_432_m_axi_lin_addr_AWPROT;
wire   [3:0] grp_single_lin_process_1_Pipeline_VITIS_LOOP_178_1_fu_432_m_axi_lin_addr_AWQOS;
wire   [3:0] grp_single_lin_process_1_Pipeline_VITIS_LOOP_178_1_fu_432_m_axi_lin_addr_AWREGION;
wire   [0:0] grp_single_lin_process_1_Pipeline_VITIS_LOOP_178_1_fu_432_m_axi_lin_addr_AWUSER;
wire    grp_single_lin_process_1_Pipeline_VITIS_LOOP_178_1_fu_432_m_axi_lin_addr_WVALID;
wire   [31:0] grp_single_lin_process_1_Pipeline_VITIS_LOOP_178_1_fu_432_m_axi_lin_addr_WDATA;
wire   [3:0] grp_single_lin_process_1_Pipeline_VITIS_LOOP_178_1_fu_432_m_axi_lin_addr_WSTRB;
wire    grp_single_lin_process_1_Pipeline_VITIS_LOOP_178_1_fu_432_m_axi_lin_addr_WLAST;
wire   [0:0] grp_single_lin_process_1_Pipeline_VITIS_LOOP_178_1_fu_432_m_axi_lin_addr_WID;
wire   [0:0] grp_single_lin_process_1_Pipeline_VITIS_LOOP_178_1_fu_432_m_axi_lin_addr_WUSER;
wire    grp_single_lin_process_1_Pipeline_VITIS_LOOP_178_1_fu_432_m_axi_lin_addr_ARVALID;
wire   [31:0] grp_single_lin_process_1_Pipeline_VITIS_LOOP_178_1_fu_432_m_axi_lin_addr_ARADDR;
wire   [0:0] grp_single_lin_process_1_Pipeline_VITIS_LOOP_178_1_fu_432_m_axi_lin_addr_ARID;
wire   [31:0] grp_single_lin_process_1_Pipeline_VITIS_LOOP_178_1_fu_432_m_axi_lin_addr_ARLEN;
wire   [2:0] grp_single_lin_process_1_Pipeline_VITIS_LOOP_178_1_fu_432_m_axi_lin_addr_ARSIZE;
wire   [1:0] grp_single_lin_process_1_Pipeline_VITIS_LOOP_178_1_fu_432_m_axi_lin_addr_ARBURST;
wire   [1:0] grp_single_lin_process_1_Pipeline_VITIS_LOOP_178_1_fu_432_m_axi_lin_addr_ARLOCK;
wire   [3:0] grp_single_lin_process_1_Pipeline_VITIS_LOOP_178_1_fu_432_m_axi_lin_addr_ARCACHE;
wire   [2:0] grp_single_lin_process_1_Pipeline_VITIS_LOOP_178_1_fu_432_m_axi_lin_addr_ARPROT;
wire   [3:0] grp_single_lin_process_1_Pipeline_VITIS_LOOP_178_1_fu_432_m_axi_lin_addr_ARQOS;
wire   [3:0] grp_single_lin_process_1_Pipeline_VITIS_LOOP_178_1_fu_432_m_axi_lin_addr_ARREGION;
wire   [0:0] grp_single_lin_process_1_Pipeline_VITIS_LOOP_178_1_fu_432_m_axi_lin_addr_ARUSER;
wire    grp_single_lin_process_1_Pipeline_VITIS_LOOP_178_1_fu_432_m_axi_lin_addr_RREADY;
wire    grp_single_lin_process_1_Pipeline_VITIS_LOOP_178_1_fu_432_m_axi_lin_addr_BREADY;
wire   [4:0] grp_single_lin_process_1_Pipeline_VITIS_LOOP_178_1_fu_432_lin_frame_address0;
wire    grp_single_lin_process_1_Pipeline_VITIS_LOOP_178_1_fu_432_lin_frame_ce0;
wire    grp_single_lin_process_1_Pipeline_VITIS_LOOP_178_1_fu_432_lin_frame_we0;
wire   [7:0] grp_single_lin_process_1_Pipeline_VITIS_LOOP_178_1_fu_432_lin_frame_d0;
wire   [3:0] grp_single_lin_process_1_Pipeline_VITIS_LOOP_178_1_fu_432_PL_Data_1_load_out;
wire    grp_single_lin_process_1_Pipeline_VITIS_LOOP_178_1_fu_432_PL_Data_1_load_out_ap_vld;
wire   [3:0] grp_single_lin_process_1_Pipeline_VITIS_LOOP_178_1_fu_432_zext_ln178_1_out;
wire    grp_single_lin_process_1_Pipeline_VITIS_LOOP_178_1_fu_432_zext_ln178_1_out_ap_vld;
wire    grp_write_lin_ddr_1_fu_444_ap_start;
wire    grp_write_lin_ddr_1_fu_444_ap_done;
wire    grp_write_lin_ddr_1_fu_444_ap_idle;
wire    grp_write_lin_ddr_1_fu_444_ap_ready;
wire    grp_write_lin_ddr_1_fu_444_m_axi_ps_ddr_AWVALID;
wire   [31:0] grp_write_lin_ddr_1_fu_444_m_axi_ps_ddr_AWADDR;
wire   [0:0] grp_write_lin_ddr_1_fu_444_m_axi_ps_ddr_AWID;
wire   [31:0] grp_write_lin_ddr_1_fu_444_m_axi_ps_ddr_AWLEN;
wire   [2:0] grp_write_lin_ddr_1_fu_444_m_axi_ps_ddr_AWSIZE;
wire   [1:0] grp_write_lin_ddr_1_fu_444_m_axi_ps_ddr_AWBURST;
wire   [1:0] grp_write_lin_ddr_1_fu_444_m_axi_ps_ddr_AWLOCK;
wire   [3:0] grp_write_lin_ddr_1_fu_444_m_axi_ps_ddr_AWCACHE;
wire   [2:0] grp_write_lin_ddr_1_fu_444_m_axi_ps_ddr_AWPROT;
wire   [3:0] grp_write_lin_ddr_1_fu_444_m_axi_ps_ddr_AWQOS;
wire   [3:0] grp_write_lin_ddr_1_fu_444_m_axi_ps_ddr_AWREGION;
wire   [0:0] grp_write_lin_ddr_1_fu_444_m_axi_ps_ddr_AWUSER;
wire    grp_write_lin_ddr_1_fu_444_m_axi_ps_ddr_WVALID;
wire   [7:0] grp_write_lin_ddr_1_fu_444_m_axi_ps_ddr_WDATA;
wire   [0:0] grp_write_lin_ddr_1_fu_444_m_axi_ps_ddr_WSTRB;
wire    grp_write_lin_ddr_1_fu_444_m_axi_ps_ddr_WLAST;
wire   [0:0] grp_write_lin_ddr_1_fu_444_m_axi_ps_ddr_WID;
wire   [0:0] grp_write_lin_ddr_1_fu_444_m_axi_ps_ddr_WUSER;
wire    grp_write_lin_ddr_1_fu_444_m_axi_ps_ddr_ARVALID;
wire   [31:0] grp_write_lin_ddr_1_fu_444_m_axi_ps_ddr_ARADDR;
wire   [0:0] grp_write_lin_ddr_1_fu_444_m_axi_ps_ddr_ARID;
wire   [31:0] grp_write_lin_ddr_1_fu_444_m_axi_ps_ddr_ARLEN;
wire   [2:0] grp_write_lin_ddr_1_fu_444_m_axi_ps_ddr_ARSIZE;
wire   [1:0] grp_write_lin_ddr_1_fu_444_m_axi_ps_ddr_ARBURST;
wire   [1:0] grp_write_lin_ddr_1_fu_444_m_axi_ps_ddr_ARLOCK;
wire   [3:0] grp_write_lin_ddr_1_fu_444_m_axi_ps_ddr_ARCACHE;
wire   [2:0] grp_write_lin_ddr_1_fu_444_m_axi_ps_ddr_ARPROT;
wire   [3:0] grp_write_lin_ddr_1_fu_444_m_axi_ps_ddr_ARQOS;
wire   [3:0] grp_write_lin_ddr_1_fu_444_m_axi_ps_ddr_ARREGION;
wire   [0:0] grp_write_lin_ddr_1_fu_444_m_axi_ps_ddr_ARUSER;
wire    grp_write_lin_ddr_1_fu_444_m_axi_ps_ddr_RREADY;
wire    grp_write_lin_ddr_1_fu_444_m_axi_ps_ddr_BREADY;
wire   [4:0] grp_write_lin_ddr_1_fu_444_data_address0;
wire    grp_write_lin_ddr_1_fu_444_data_ce0;
reg    grp_read_lin_reg_1_fu_421_ap_start_reg;
wire    ap_CS_fsm_state2;
reg   [69:0] ap_NS_fsm;
wire    ap_NS_fsm_state3;
wire    ap_CS_fsm_state13;
wire    ap_NS_fsm_state14;
wire    ap_CS_fsm_state23;
wire    ap_NS_fsm_state24;
wire    ap_CS_fsm_state42;
wire    ap_NS_fsm_state43;
reg    grp_single_lin_process_1_Pipeline_VITIS_LOOP_178_1_fu_432_ap_start_reg;
wire    ap_CS_fsm_state59;
wire    ap_CS_fsm_state60;
reg    grp_write_lin_ddr_1_fu_444_ap_start_reg;
wire    ap_CS_fsm_state69;
wire    ap_CS_fsm_state70;
reg    ap_predicate_op240_call_state70;
reg    ap_block_state70_on_subcall_done;
wire   [31:0] p_cast_fu_497_p1;
wire   [0:0] exitcond1_fu_485_p2;
wire   [31:0] zext_ln142_fu_507_p1;
wire    ap_CS_fsm_state62;
wire    ap_CS_fsm_state63;
wire    ap_CS_fsm_state64;
wire    ap_CS_fsm_state65;
wire    ap_CS_fsm_state66;
wire    ap_CS_fsm_state67;
wire    ap_CS_fsm_state68;
wire  signed [31:0] sext_ln89_fu_540_p1;
wire  signed [31:0] sext_ln89_1_fu_551_p1;
wire  signed [31:0] sext_ln89_2_fu_623_p1;
reg    ap_block_state34_io;
reg    ap_predicate_op152_writeresp_state40;
reg    ap_block_state40;
wire   [5:0] trunc_ln153_fu_515_p1;
wire   [31:0] add_ln202_fu_610_p2;
reg   [4:0] empty_fu_162;
wire   [4:0] empty_70_fu_491_p2;
wire   [7:0] zext_ln195_fu_715_p1;
wire   [7:0] zext_ln198_fu_724_p1;
wire   [7:0] zext_ln178_fu_732_p1;
wire   [31:0] grp_fu_454_p2;
wire   [31:0] add_ln89_1_fu_525_p2;
wire   [2:0] tmp_fu_561_p4;
wire   [1:0] tmp_1_fu_576_p4;
wire   [4:0] zext_ln178_1_reload_cast_fu_705_p1;
wire   [4:0] add_ln195_fu_709_p2;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
reg    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
reg    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
reg    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
wire    ap_ST_fsm_state18_blk;
wire    ap_ST_fsm_state19_blk;
wire    ap_ST_fsm_state20_blk;
wire    ap_ST_fsm_state21_blk;
reg    ap_ST_fsm_state22_blk;
wire    ap_ST_fsm_state23_blk;
wire    ap_ST_fsm_state24_blk;
reg    ap_ST_fsm_state25_blk;
wire    ap_ST_fsm_state26_blk;
wire    ap_ST_fsm_state27_blk;
wire    ap_ST_fsm_state28_blk;
wire    ap_ST_fsm_state29_blk;
wire    ap_ST_fsm_state30_blk;
wire    ap_ST_fsm_state31_blk;
reg    ap_ST_fsm_state32_blk;
reg    ap_ST_fsm_state33_blk;
reg    ap_ST_fsm_state34_blk;
reg    ap_ST_fsm_state35_blk;
wire    ap_ST_fsm_state36_blk;
wire    ap_ST_fsm_state37_blk;
wire    ap_ST_fsm_state38_blk;
reg    ap_ST_fsm_state39_blk;
reg    ap_ST_fsm_state40_blk;
wire    ap_ST_fsm_state41_blk;
wire    ap_ST_fsm_state42_blk;
wire    ap_ST_fsm_state43_blk;
reg    ap_ST_fsm_state44_blk;
wire    ap_ST_fsm_state45_blk;
wire    ap_ST_fsm_state46_blk;
wire    ap_ST_fsm_state47_blk;
wire    ap_ST_fsm_state48_blk;
wire    ap_ST_fsm_state49_blk;
wire    ap_ST_fsm_state50_blk;
reg    ap_ST_fsm_state51_blk;
reg    ap_ST_fsm_state52_blk;
reg    ap_ST_fsm_state53_blk;
wire    ap_ST_fsm_state54_blk;
wire    ap_ST_fsm_state55_blk;
wire    ap_ST_fsm_state56_blk;
wire    ap_ST_fsm_state57_blk;
reg    ap_ST_fsm_state58_blk;
wire    ap_ST_fsm_state59_blk;
reg    ap_ST_fsm_state60_blk;
wire    ap_ST_fsm_state61_blk;
wire    ap_ST_fsm_state62_blk;
wire    ap_ST_fsm_state63_blk;
wire    ap_ST_fsm_state64_blk;
wire    ap_ST_fsm_state65_blk;
wire    ap_ST_fsm_state66_blk;
wire    ap_ST_fsm_state67_blk;
wire    ap_ST_fsm_state68_blk;
wire    ap_ST_fsm_state69_blk;
reg    ap_ST_fsm_state70_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 70'd1;
#0 PL_Data_0 = 6'd0;
#0 PL_Data_1 = 4'd0;
#0 internal_lin_counter = 32'd0;
#0 grp_read_lin_reg_1_fu_421_ap_start_reg = 1'b0;
#0 grp_single_lin_process_1_Pipeline_VITIS_LOOP_178_1_fu_432_ap_start_reg = 1'b0;
#0 grp_write_lin_ddr_1_fu_444_ap_start_reg = 1'b0;
end

clu_single_lin_process_1_PLIN_Ctrl_run_state_RAM_AUTO_1R1W #(
    .DataWidth( 1 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
PLIN_Ctrl_run_state_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(PLIN_Ctrl_run_state_address0),
    .ce0(PLIN_Ctrl_run_state_ce0),
    .we0(PLIN_Ctrl_run_state_we0),
    .d0(PLIN_Ctrl_run_state_d0),
    .q0(PLIN_Ctrl_run_state_q0)
);

clu_single_lin_process_1_lin_frame_RAM_AUTO_1R1W #(
    .DataWidth( 8 ),
    .AddressRange( 28 ),
    .AddressWidth( 5 ))
lin_frame_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(lin_frame_address0),
    .ce0(lin_frame_ce0),
    .we0(lin_frame_we0),
    .d0(lin_frame_d0),
    .q0(lin_frame_q0),
    .address1(lin_frame_address1),
    .ce1(lin_frame_ce1),
    .we1(lin_frame_we1),
    .d1(lin_frame_d1)
);

clu_read_lin_reg_1 grp_read_lin_reg_1_fu_421(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_read_lin_reg_1_fu_421_ap_start),
    .ap_done(grp_read_lin_reg_1_fu_421_ap_done),
    .ap_idle(grp_read_lin_reg_1_fu_421_ap_idle),
    .ap_ready(grp_read_lin_reg_1_fu_421_ap_ready),
    .m_axi_lin_addr_AWVALID(grp_read_lin_reg_1_fu_421_m_axi_lin_addr_AWVALID),
    .m_axi_lin_addr_AWREADY(1'b0),
    .m_axi_lin_addr_AWADDR(grp_read_lin_reg_1_fu_421_m_axi_lin_addr_AWADDR),
    .m_axi_lin_addr_AWID(grp_read_lin_reg_1_fu_421_m_axi_lin_addr_AWID),
    .m_axi_lin_addr_AWLEN(grp_read_lin_reg_1_fu_421_m_axi_lin_addr_AWLEN),
    .m_axi_lin_addr_AWSIZE(grp_read_lin_reg_1_fu_421_m_axi_lin_addr_AWSIZE),
    .m_axi_lin_addr_AWBURST(grp_read_lin_reg_1_fu_421_m_axi_lin_addr_AWBURST),
    .m_axi_lin_addr_AWLOCK(grp_read_lin_reg_1_fu_421_m_axi_lin_addr_AWLOCK),
    .m_axi_lin_addr_AWCACHE(grp_read_lin_reg_1_fu_421_m_axi_lin_addr_AWCACHE),
    .m_axi_lin_addr_AWPROT(grp_read_lin_reg_1_fu_421_m_axi_lin_addr_AWPROT),
    .m_axi_lin_addr_AWQOS(grp_read_lin_reg_1_fu_421_m_axi_lin_addr_AWQOS),
    .m_axi_lin_addr_AWREGION(grp_read_lin_reg_1_fu_421_m_axi_lin_addr_AWREGION),
    .m_axi_lin_addr_AWUSER(grp_read_lin_reg_1_fu_421_m_axi_lin_addr_AWUSER),
    .m_axi_lin_addr_WVALID(grp_read_lin_reg_1_fu_421_m_axi_lin_addr_WVALID),
    .m_axi_lin_addr_WREADY(1'b0),
    .m_axi_lin_addr_WDATA(grp_read_lin_reg_1_fu_421_m_axi_lin_addr_WDATA),
    .m_axi_lin_addr_WSTRB(grp_read_lin_reg_1_fu_421_m_axi_lin_addr_WSTRB),
    .m_axi_lin_addr_WLAST(grp_read_lin_reg_1_fu_421_m_axi_lin_addr_WLAST),
    .m_axi_lin_addr_WID(grp_read_lin_reg_1_fu_421_m_axi_lin_addr_WID),
    .m_axi_lin_addr_WUSER(grp_read_lin_reg_1_fu_421_m_axi_lin_addr_WUSER),
    .m_axi_lin_addr_ARVALID(grp_read_lin_reg_1_fu_421_m_axi_lin_addr_ARVALID),
    .m_axi_lin_addr_ARREADY(m_axi_lin_addr_ARREADY),
    .m_axi_lin_addr_ARADDR(grp_read_lin_reg_1_fu_421_m_axi_lin_addr_ARADDR),
    .m_axi_lin_addr_ARID(grp_read_lin_reg_1_fu_421_m_axi_lin_addr_ARID),
    .m_axi_lin_addr_ARLEN(grp_read_lin_reg_1_fu_421_m_axi_lin_addr_ARLEN),
    .m_axi_lin_addr_ARSIZE(grp_read_lin_reg_1_fu_421_m_axi_lin_addr_ARSIZE),
    .m_axi_lin_addr_ARBURST(grp_read_lin_reg_1_fu_421_m_axi_lin_addr_ARBURST),
    .m_axi_lin_addr_ARLOCK(grp_read_lin_reg_1_fu_421_m_axi_lin_addr_ARLOCK),
    .m_axi_lin_addr_ARCACHE(grp_read_lin_reg_1_fu_421_m_axi_lin_addr_ARCACHE),
    .m_axi_lin_addr_ARPROT(grp_read_lin_reg_1_fu_421_m_axi_lin_addr_ARPROT),
    .m_axi_lin_addr_ARQOS(grp_read_lin_reg_1_fu_421_m_axi_lin_addr_ARQOS),
    .m_axi_lin_addr_ARREGION(grp_read_lin_reg_1_fu_421_m_axi_lin_addr_ARREGION),
    .m_axi_lin_addr_ARUSER(grp_read_lin_reg_1_fu_421_m_axi_lin_addr_ARUSER),
    .m_axi_lin_addr_RVALID(m_axi_lin_addr_RVALID),
    .m_axi_lin_addr_RREADY(grp_read_lin_reg_1_fu_421_m_axi_lin_addr_RREADY),
    .m_axi_lin_addr_RDATA(m_axi_lin_addr_RDATA),
    .m_axi_lin_addr_RLAST(m_axi_lin_addr_RLAST),
    .m_axi_lin_addr_RID(m_axi_lin_addr_RID),
    .m_axi_lin_addr_RFIFONUM(m_axi_lin_addr_RFIFONUM),
    .m_axi_lin_addr_RUSER(m_axi_lin_addr_RUSER),
    .m_axi_lin_addr_RRESP(m_axi_lin_addr_RRESP),
    .m_axi_lin_addr_BVALID(1'b0),
    .m_axi_lin_addr_BREADY(grp_read_lin_reg_1_fu_421_m_axi_lin_addr_BREADY),
    .m_axi_lin_addr_BRESP(2'd0),
    .m_axi_lin_addr_BID(1'd0),
    .m_axi_lin_addr_BUSER(1'd0),
    .ap_ce(grp_read_lin_reg_1_fu_421_ap_ce),
    .lin_reg(linbase),
    .offset(grp_read_lin_reg_1_fu_421_offset),
    .ap_return(grp_read_lin_reg_1_fu_421_ap_return),
    .lin_addr_blk_n_AR(grp_read_lin_reg_1_fu_421_lin_addr_blk_n_AR),
    .lin_addr_blk_n_R(grp_read_lin_reg_1_fu_421_lin_addr_blk_n_R)
);

clu_single_lin_process_1_Pipeline_VITIS_LOOP_178_1 grp_single_lin_process_1_Pipeline_VITIS_LOOP_178_1_fu_432(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_single_lin_process_1_Pipeline_VITIS_LOOP_178_1_fu_432_ap_start),
    .ap_done(grp_single_lin_process_1_Pipeline_VITIS_LOOP_178_1_fu_432_ap_done),
    .ap_idle(grp_single_lin_process_1_Pipeline_VITIS_LOOP_178_1_fu_432_ap_idle),
    .ap_ready(grp_single_lin_process_1_Pipeline_VITIS_LOOP_178_1_fu_432_ap_ready),
    .m_axi_lin_addr_AWVALID(grp_single_lin_process_1_Pipeline_VITIS_LOOP_178_1_fu_432_m_axi_lin_addr_AWVALID),
    .m_axi_lin_addr_AWREADY(1'b0),
    .m_axi_lin_addr_AWADDR(grp_single_lin_process_1_Pipeline_VITIS_LOOP_178_1_fu_432_m_axi_lin_addr_AWADDR),
    .m_axi_lin_addr_AWID(grp_single_lin_process_1_Pipeline_VITIS_LOOP_178_1_fu_432_m_axi_lin_addr_AWID),
    .m_axi_lin_addr_AWLEN(grp_single_lin_process_1_Pipeline_VITIS_LOOP_178_1_fu_432_m_axi_lin_addr_AWLEN),
    .m_axi_lin_addr_AWSIZE(grp_single_lin_process_1_Pipeline_VITIS_LOOP_178_1_fu_432_m_axi_lin_addr_AWSIZE),
    .m_axi_lin_addr_AWBURST(grp_single_lin_process_1_Pipeline_VITIS_LOOP_178_1_fu_432_m_axi_lin_addr_AWBURST),
    .m_axi_lin_addr_AWLOCK(grp_single_lin_process_1_Pipeline_VITIS_LOOP_178_1_fu_432_m_axi_lin_addr_AWLOCK),
    .m_axi_lin_addr_AWCACHE(grp_single_lin_process_1_Pipeline_VITIS_LOOP_178_1_fu_432_m_axi_lin_addr_AWCACHE),
    .m_axi_lin_addr_AWPROT(grp_single_lin_process_1_Pipeline_VITIS_LOOP_178_1_fu_432_m_axi_lin_addr_AWPROT),
    .m_axi_lin_addr_AWQOS(grp_single_lin_process_1_Pipeline_VITIS_LOOP_178_1_fu_432_m_axi_lin_addr_AWQOS),
    .m_axi_lin_addr_AWREGION(grp_single_lin_process_1_Pipeline_VITIS_LOOP_178_1_fu_432_m_axi_lin_addr_AWREGION),
    .m_axi_lin_addr_AWUSER(grp_single_lin_process_1_Pipeline_VITIS_LOOP_178_1_fu_432_m_axi_lin_addr_AWUSER),
    .m_axi_lin_addr_WVALID(grp_single_lin_process_1_Pipeline_VITIS_LOOP_178_1_fu_432_m_axi_lin_addr_WVALID),
    .m_axi_lin_addr_WREADY(1'b0),
    .m_axi_lin_addr_WDATA(grp_single_lin_process_1_Pipeline_VITIS_LOOP_178_1_fu_432_m_axi_lin_addr_WDATA),
    .m_axi_lin_addr_WSTRB(grp_single_lin_process_1_Pipeline_VITIS_LOOP_178_1_fu_432_m_axi_lin_addr_WSTRB),
    .m_axi_lin_addr_WLAST(grp_single_lin_process_1_Pipeline_VITIS_LOOP_178_1_fu_432_m_axi_lin_addr_WLAST),
    .m_axi_lin_addr_WID(grp_single_lin_process_1_Pipeline_VITIS_LOOP_178_1_fu_432_m_axi_lin_addr_WID),
    .m_axi_lin_addr_WUSER(grp_single_lin_process_1_Pipeline_VITIS_LOOP_178_1_fu_432_m_axi_lin_addr_WUSER),
    .m_axi_lin_addr_ARVALID(grp_single_lin_process_1_Pipeline_VITIS_LOOP_178_1_fu_432_m_axi_lin_addr_ARVALID),
    .m_axi_lin_addr_ARREADY(m_axi_lin_addr_ARREADY),
    .m_axi_lin_addr_ARADDR(grp_single_lin_process_1_Pipeline_VITIS_LOOP_178_1_fu_432_m_axi_lin_addr_ARADDR),
    .m_axi_lin_addr_ARID(grp_single_lin_process_1_Pipeline_VITIS_LOOP_178_1_fu_432_m_axi_lin_addr_ARID),
    .m_axi_lin_addr_ARLEN(grp_single_lin_process_1_Pipeline_VITIS_LOOP_178_1_fu_432_m_axi_lin_addr_ARLEN),
    .m_axi_lin_addr_ARSIZE(grp_single_lin_process_1_Pipeline_VITIS_LOOP_178_1_fu_432_m_axi_lin_addr_ARSIZE),
    .m_axi_lin_addr_ARBURST(grp_single_lin_process_1_Pipeline_VITIS_LOOP_178_1_fu_432_m_axi_lin_addr_ARBURST),
    .m_axi_lin_addr_ARLOCK(grp_single_lin_process_1_Pipeline_VITIS_LOOP_178_1_fu_432_m_axi_lin_addr_ARLOCK),
    .m_axi_lin_addr_ARCACHE(grp_single_lin_process_1_Pipeline_VITIS_LOOP_178_1_fu_432_m_axi_lin_addr_ARCACHE),
    .m_axi_lin_addr_ARPROT(grp_single_lin_process_1_Pipeline_VITIS_LOOP_178_1_fu_432_m_axi_lin_addr_ARPROT),
    .m_axi_lin_addr_ARQOS(grp_single_lin_process_1_Pipeline_VITIS_LOOP_178_1_fu_432_m_axi_lin_addr_ARQOS),
    .m_axi_lin_addr_ARREGION(grp_single_lin_process_1_Pipeline_VITIS_LOOP_178_1_fu_432_m_axi_lin_addr_ARREGION),
    .m_axi_lin_addr_ARUSER(grp_single_lin_process_1_Pipeline_VITIS_LOOP_178_1_fu_432_m_axi_lin_addr_ARUSER),
    .m_axi_lin_addr_RVALID(m_axi_lin_addr_RVALID),
    .m_axi_lin_addr_RREADY(grp_single_lin_process_1_Pipeline_VITIS_LOOP_178_1_fu_432_m_axi_lin_addr_RREADY),
    .m_axi_lin_addr_RDATA(m_axi_lin_addr_RDATA),
    .m_axi_lin_addr_RLAST(m_axi_lin_addr_RLAST),
    .m_axi_lin_addr_RID(m_axi_lin_addr_RID),
    .m_axi_lin_addr_RFIFONUM(m_axi_lin_addr_RFIFONUM),
    .m_axi_lin_addr_RUSER(m_axi_lin_addr_RUSER),
    .m_axi_lin_addr_RRESP(m_axi_lin_addr_RRESP),
    .m_axi_lin_addr_BVALID(1'b0),
    .m_axi_lin_addr_BREADY(grp_single_lin_process_1_Pipeline_VITIS_LOOP_178_1_fu_432_m_axi_lin_addr_BREADY),
    .m_axi_lin_addr_BRESP(2'd0),
    .m_axi_lin_addr_BID(1'd0),
    .m_axi_lin_addr_BUSER(1'd0),
    .linbase(linbase),
    .lin_frame_address0(grp_single_lin_process_1_Pipeline_VITIS_LOOP_178_1_fu_432_lin_frame_address0),
    .lin_frame_ce0(grp_single_lin_process_1_Pipeline_VITIS_LOOP_178_1_fu_432_lin_frame_ce0),
    .lin_frame_we0(grp_single_lin_process_1_Pipeline_VITIS_LOOP_178_1_fu_432_lin_frame_we0),
    .lin_frame_d0(grp_single_lin_process_1_Pipeline_VITIS_LOOP_178_1_fu_432_lin_frame_d0),
    .PL_Data_1_load_out(grp_single_lin_process_1_Pipeline_VITIS_LOOP_178_1_fu_432_PL_Data_1_load_out),
    .PL_Data_1_load_out_ap_vld(grp_single_lin_process_1_Pipeline_VITIS_LOOP_178_1_fu_432_PL_Data_1_load_out_ap_vld),
    .zext_ln178_1_out(grp_single_lin_process_1_Pipeline_VITIS_LOOP_178_1_fu_432_zext_ln178_1_out),
    .zext_ln178_1_out_ap_vld(grp_single_lin_process_1_Pipeline_VITIS_LOOP_178_1_fu_432_zext_ln178_1_out_ap_vld),
    .PL_Data_1(PL_Data_1)
);

clu_write_lin_ddr_1 grp_write_lin_ddr_1_fu_444(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_write_lin_ddr_1_fu_444_ap_start),
    .ap_done(grp_write_lin_ddr_1_fu_444_ap_done),
    .ap_idle(grp_write_lin_ddr_1_fu_444_ap_idle),
    .ap_ready(grp_write_lin_ddr_1_fu_444_ap_ready),
    .m_axi_ps_ddr_AWVALID(grp_write_lin_ddr_1_fu_444_m_axi_ps_ddr_AWVALID),
    .m_axi_ps_ddr_AWREADY(m_axi_ps_ddr_AWREADY),
    .m_axi_ps_ddr_AWADDR(grp_write_lin_ddr_1_fu_444_m_axi_ps_ddr_AWADDR),
    .m_axi_ps_ddr_AWID(grp_write_lin_ddr_1_fu_444_m_axi_ps_ddr_AWID),
    .m_axi_ps_ddr_AWLEN(grp_write_lin_ddr_1_fu_444_m_axi_ps_ddr_AWLEN),
    .m_axi_ps_ddr_AWSIZE(grp_write_lin_ddr_1_fu_444_m_axi_ps_ddr_AWSIZE),
    .m_axi_ps_ddr_AWBURST(grp_write_lin_ddr_1_fu_444_m_axi_ps_ddr_AWBURST),
    .m_axi_ps_ddr_AWLOCK(grp_write_lin_ddr_1_fu_444_m_axi_ps_ddr_AWLOCK),
    .m_axi_ps_ddr_AWCACHE(grp_write_lin_ddr_1_fu_444_m_axi_ps_ddr_AWCACHE),
    .m_axi_ps_ddr_AWPROT(grp_write_lin_ddr_1_fu_444_m_axi_ps_ddr_AWPROT),
    .m_axi_ps_ddr_AWQOS(grp_write_lin_ddr_1_fu_444_m_axi_ps_ddr_AWQOS),
    .m_axi_ps_ddr_AWREGION(grp_write_lin_ddr_1_fu_444_m_axi_ps_ddr_AWREGION),
    .m_axi_ps_ddr_AWUSER(grp_write_lin_ddr_1_fu_444_m_axi_ps_ddr_AWUSER),
    .m_axi_ps_ddr_WVALID(grp_write_lin_ddr_1_fu_444_m_axi_ps_ddr_WVALID),
    .m_axi_ps_ddr_WREADY(m_axi_ps_ddr_WREADY),
    .m_axi_ps_ddr_WDATA(grp_write_lin_ddr_1_fu_444_m_axi_ps_ddr_WDATA),
    .m_axi_ps_ddr_WSTRB(grp_write_lin_ddr_1_fu_444_m_axi_ps_ddr_WSTRB),
    .m_axi_ps_ddr_WLAST(grp_write_lin_ddr_1_fu_444_m_axi_ps_ddr_WLAST),
    .m_axi_ps_ddr_WID(grp_write_lin_ddr_1_fu_444_m_axi_ps_ddr_WID),
    .m_axi_ps_ddr_WUSER(grp_write_lin_ddr_1_fu_444_m_axi_ps_ddr_WUSER),
    .m_axi_ps_ddr_ARVALID(grp_write_lin_ddr_1_fu_444_m_axi_ps_ddr_ARVALID),
    .m_axi_ps_ddr_ARREADY(m_axi_ps_ddr_ARREADY),
    .m_axi_ps_ddr_ARADDR(grp_write_lin_ddr_1_fu_444_m_axi_ps_ddr_ARADDR),
    .m_axi_ps_ddr_ARID(grp_write_lin_ddr_1_fu_444_m_axi_ps_ddr_ARID),
    .m_axi_ps_ddr_ARLEN(grp_write_lin_ddr_1_fu_444_m_axi_ps_ddr_ARLEN),
    .m_axi_ps_ddr_ARSIZE(grp_write_lin_ddr_1_fu_444_m_axi_ps_ddr_ARSIZE),
    .m_axi_ps_ddr_ARBURST(grp_write_lin_ddr_1_fu_444_m_axi_ps_ddr_ARBURST),
    .m_axi_ps_ddr_ARLOCK(grp_write_lin_ddr_1_fu_444_m_axi_ps_ddr_ARLOCK),
    .m_axi_ps_ddr_ARCACHE(grp_write_lin_ddr_1_fu_444_m_axi_ps_ddr_ARCACHE),
    .m_axi_ps_ddr_ARPROT(grp_write_lin_ddr_1_fu_444_m_axi_ps_ddr_ARPROT),
    .m_axi_ps_ddr_ARQOS(grp_write_lin_ddr_1_fu_444_m_axi_ps_ddr_ARQOS),
    .m_axi_ps_ddr_ARREGION(grp_write_lin_ddr_1_fu_444_m_axi_ps_ddr_ARREGION),
    .m_axi_ps_ddr_ARUSER(grp_write_lin_ddr_1_fu_444_m_axi_ps_ddr_ARUSER),
    .m_axi_ps_ddr_RVALID(m_axi_ps_ddr_RVALID),
    .m_axi_ps_ddr_RREADY(grp_write_lin_ddr_1_fu_444_m_axi_ps_ddr_RREADY),
    .m_axi_ps_ddr_RDATA(m_axi_ps_ddr_RDATA),
    .m_axi_ps_ddr_RLAST(m_axi_ps_ddr_RLAST),
    .m_axi_ps_ddr_RID(m_axi_ps_ddr_RID),
    .m_axi_ps_ddr_RFIFONUM(m_axi_ps_ddr_RFIFONUM),
    .m_axi_ps_ddr_RUSER(m_axi_ps_ddr_RUSER),
    .m_axi_ps_ddr_RRESP(m_axi_ps_ddr_RRESP),
    .m_axi_ps_ddr_BVALID(m_axi_ps_ddr_BVALID),
    .m_axi_ps_ddr_BREADY(grp_write_lin_ddr_1_fu_444_m_axi_ps_ddr_BREADY),
    .m_axi_ps_ddr_BRESP(m_axi_ps_ddr_BRESP),
    .m_axi_ps_ddr_BID(m_axi_ps_ddr_BID),
    .m_axi_ps_ddr_BUSER(m_axi_ps_ddr_BUSER),
    .ddr_header(ddr),
    .data_address0(grp_write_lin_ddr_1_fu_444_data_address0),
    .data_ce0(grp_write_lin_ddr_1_fu_444_data_ce0),
    .data_q0(lin_frame_q0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_read_lin_reg_1_fu_421_ap_start_reg <= 1'b0;
    end else begin
        if ((((1'b1 == ap_NS_fsm_state43) & (1'b1 == ap_CS_fsm_state42)) | ((1'b1 == ap_NS_fsm_state24) & (1'b1 == ap_CS_fsm_state23)) | ((1'b1 == ap_NS_fsm_state14) & (1'b1 == ap_CS_fsm_state13)) | ((1'b1 == ap_NS_fsm_state3) & (1'b1 == ap_CS_fsm_state2)))) begin
            grp_read_lin_reg_1_fu_421_ap_start_reg <= 1'b1;
        end else if ((grp_read_lin_reg_1_fu_421_ap_ready == 1'b1)) begin
            grp_read_lin_reg_1_fu_421_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_single_lin_process_1_Pipeline_VITIS_LOOP_178_1_fu_432_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state59)) begin
            grp_single_lin_process_1_Pipeline_VITIS_LOOP_178_1_fu_432_ap_start_reg <= 1'b1;
        end else if ((grp_single_lin_process_1_Pipeline_VITIS_LOOP_178_1_fu_432_ap_ready == 1'b1)) begin
            grp_single_lin_process_1_Pipeline_VITIS_LOOP_178_1_fu_432_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_write_lin_ddr_1_fu_444_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state69)) begin
            grp_write_lin_ddr_1_fu_444_ap_start_reg <= 1'b1;
        end else if ((grp_write_lin_ddr_1_fu_444_ap_ready == 1'b1)) begin
            grp_write_lin_ddr_1_fu_444_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        empty_fu_162 <= 5'd0;
    end else if (((exitcond1_fu_485_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        empty_fu_162 <= empty_70_fu_491_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        EN_cast_reg_786[3 : 0] <= EN_cast_fu_473_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        PLIN_Ctrl_run_state_addr_reg_794 <= zext_ln142_fu_507_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        PLIN_Ctrl_run_state_load_reg_799 <= PLIN_Ctrl_run_state_q0;
        reg_status_reg_803 <= grp_read_lin_reg_1_fu_421_ap_return;
        trunc_ln142_reg_810 <= trunc_ln142_fu_511_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((((grp_read_lin_reg_1_fu_421_lin_addr_blk_n_R & grp_read_lin_reg_1_fu_421_lin_addr_blk_n_AR) == 1'b1) & (1'b1 == ap_CS_fsm_state32))) begin
        PL_Data_0 <= trunc_ln153_fu_515_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((((grp_read_lin_reg_1_fu_421_lin_addr_blk_n_R & grp_read_lin_reg_1_fu_421_lin_addr_blk_n_AR) == 1'b1) & (icmp_ln169_fu_585_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state51))) begin
        PL_Data_1 <= {{reg_status_reg_803[7:4]}};
        internal_lin_counter <= add_ln202_fu_610_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        icmp_ln166_reg_831 <= icmp_ln166_fu_570_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state51)) begin
        icmp_ln169_reg_835 <= icmp_ln169_fu_585_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state32) | ((icmp_ln169_fu_585_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state51)))) begin
        reg_469 <= {{grp_fu_454_p2[31:2]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state61)) begin
        trunc_ln191_reg_870 <= trunc_ln191_fu_699_p1;
        trunc_ln1_reg_865 <= {{timestamp[15:8]}};
        trunc_ln7_reg_845 <= {{timestamp[47:40]}};
        trunc_ln8_reg_850 <= {{timestamp[39:32]}};
        trunc_ln9_reg_855 <= {{timestamp[31:24]}};
        trunc_ln_reg_860 <= {{timestamp[23:16]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        trunc_ln89_1_reg_814 <= {{add_ln89_1_fu_525_p2[31:2]}};
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state22))) begin
        PLIN_Ctrl_run_state_address0 = PLIN_Ctrl_run_state_addr_reg_794;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        PLIN_Ctrl_run_state_address0 = zext_ln142_fu_507_p1;
    end else begin
        PLIN_Ctrl_run_state_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | (((grp_read_lin_reg_1_fu_421_lin_addr_blk_n_R & grp_read_lin_reg_1_fu_421_lin_addr_blk_n_AR) == 1'b1) & (1'b1 == ap_CS_fsm_state51)) | (((grp_read_lin_reg_1_fu_421_lin_addr_blk_n_R & grp_read_lin_reg_1_fu_421_lin_addr_blk_n_AR) == 1'b1) & (1'b1 == ap_CS_fsm_state22)))) begin
        PLIN_Ctrl_run_state_ce0 = 1'b1;
    end else begin
        PLIN_Ctrl_run_state_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state51)) begin
        PLIN_Ctrl_run_state_d0 = 1'd0;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        PLIN_Ctrl_run_state_d0 = 1'd1;
    end else begin
        PLIN_Ctrl_run_state_d0 = 'bx;
    end
end

always @ (*) begin
    if (((((grp_read_lin_reg_1_fu_421_lin_addr_blk_n_R & grp_read_lin_reg_1_fu_421_lin_addr_blk_n_AR) == 1'b1) & (icmp_ln169_fu_585_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state51)) | (((grp_read_lin_reg_1_fu_421_lin_addr_blk_n_R & grp_read_lin_reg_1_fu_421_lin_addr_blk_n_AR) == 1'b1) & (trunc_ln142_reg_810 == 1'd1) & (1'b1 == ap_CS_fsm_state22)))) begin
        PLIN_Ctrl_run_state_we0 = 1'b1;
    end else begin
        PLIN_Ctrl_run_state_we0 = 1'b0;
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

always @ (*) begin
    if (((grp_read_lin_reg_1_fu_421_lin_addr_blk_n_R & grp_read_lin_reg_1_fu_421_lin_addr_blk_n_AR) == 1'b0)) begin
        ap_ST_fsm_state11_blk = 1'b1;
    end else begin
        ap_ST_fsm_state11_blk = 1'b0;
    end
end

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

always @ (*) begin
    if (((grp_read_lin_reg_1_fu_421_lin_addr_blk_n_R & grp_read_lin_reg_1_fu_421_lin_addr_blk_n_AR) == 1'b0)) begin
        ap_ST_fsm_state15_blk = 1'b1;
    end else begin
        ap_ST_fsm_state15_blk = 1'b0;
    end
end

assign ap_ST_fsm_state16_blk = 1'b0;

assign ap_ST_fsm_state17_blk = 1'b0;

assign ap_ST_fsm_state18_blk = 1'b0;

assign ap_ST_fsm_state19_blk = 1'b0;

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state20_blk = 1'b0;

assign ap_ST_fsm_state21_blk = 1'b0;

always @ (*) begin
    if (((grp_read_lin_reg_1_fu_421_lin_addr_blk_n_R & grp_read_lin_reg_1_fu_421_lin_addr_blk_n_AR) == 1'b0)) begin
        ap_ST_fsm_state22_blk = 1'b1;
    end else begin
        ap_ST_fsm_state22_blk = 1'b0;
    end
end

assign ap_ST_fsm_state23_blk = 1'b0;

assign ap_ST_fsm_state24_blk = 1'b0;

always @ (*) begin
    if (((grp_read_lin_reg_1_fu_421_lin_addr_blk_n_R & grp_read_lin_reg_1_fu_421_lin_addr_blk_n_AR) == 1'b0)) begin
        ap_ST_fsm_state25_blk = 1'b1;
    end else begin
        ap_ST_fsm_state25_blk = 1'b0;
    end
end

assign ap_ST_fsm_state26_blk = 1'b0;

assign ap_ST_fsm_state27_blk = 1'b0;

assign ap_ST_fsm_state28_blk = 1'b0;

assign ap_ST_fsm_state29_blk = 1'b0;

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state30_blk = 1'b0;

assign ap_ST_fsm_state31_blk = 1'b0;

always @ (*) begin
    if (((grp_read_lin_reg_1_fu_421_lin_addr_blk_n_R & grp_read_lin_reg_1_fu_421_lin_addr_blk_n_AR) == 1'b0)) begin
        ap_ST_fsm_state32_blk = 1'b1;
    end else begin
        ap_ST_fsm_state32_blk = 1'b0;
    end
end

always @ (*) begin
    if ((m_axi_lin_addr_AWREADY == 1'b0)) begin
        ap_ST_fsm_state33_blk = 1'b1;
    end else begin
        ap_ST_fsm_state33_blk = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_block_state34_io)) begin
        ap_ST_fsm_state34_blk = 1'b1;
    end else begin
        ap_ST_fsm_state34_blk = 1'b0;
    end
end

always @ (*) begin
    if ((m_axi_lin_addr_WREADY == 1'b0)) begin
        ap_ST_fsm_state35_blk = 1'b1;
    end else begin
        ap_ST_fsm_state35_blk = 1'b0;
    end
end

assign ap_ST_fsm_state36_blk = 1'b0;

assign ap_ST_fsm_state37_blk = 1'b0;

assign ap_ST_fsm_state38_blk = 1'b0;

always @ (*) begin
    if ((m_axi_lin_addr_BVALID == 1'b0)) begin
        ap_ST_fsm_state39_blk = 1'b1;
    end else begin
        ap_ST_fsm_state39_blk = 1'b0;
    end
end

assign ap_ST_fsm_state3_blk = 1'b0;

always @ (*) begin
    if (((ap_predicate_op152_writeresp_state40 == 1'b1) & (m_axi_lin_addr_BVALID == 1'b0))) begin
        ap_ST_fsm_state40_blk = 1'b1;
    end else begin
        ap_ST_fsm_state40_blk = 1'b0;
    end
end

assign ap_ST_fsm_state41_blk = 1'b0;

assign ap_ST_fsm_state42_blk = 1'b0;

assign ap_ST_fsm_state43_blk = 1'b0;

always @ (*) begin
    if (((grp_read_lin_reg_1_fu_421_lin_addr_blk_n_R & grp_read_lin_reg_1_fu_421_lin_addr_blk_n_AR) == 1'b0)) begin
        ap_ST_fsm_state44_blk = 1'b1;
    end else begin
        ap_ST_fsm_state44_blk = 1'b0;
    end
end

assign ap_ST_fsm_state45_blk = 1'b0;

assign ap_ST_fsm_state46_blk = 1'b0;

assign ap_ST_fsm_state47_blk = 1'b0;

assign ap_ST_fsm_state48_blk = 1'b0;

assign ap_ST_fsm_state49_blk = 1'b0;

always @ (*) begin
    if (((grp_read_lin_reg_1_fu_421_lin_addr_blk_n_R & grp_read_lin_reg_1_fu_421_lin_addr_blk_n_AR) == 1'b0)) begin
        ap_ST_fsm_state4_blk = 1'b1;
    end else begin
        ap_ST_fsm_state4_blk = 1'b0;
    end
end

assign ap_ST_fsm_state50_blk = 1'b0;

always @ (*) begin
    if (((grp_read_lin_reg_1_fu_421_lin_addr_blk_n_R & grp_read_lin_reg_1_fu_421_lin_addr_blk_n_AR) == 1'b0)) begin
        ap_ST_fsm_state51_blk = 1'b1;
    end else begin
        ap_ST_fsm_state51_blk = 1'b0;
    end
end

always @ (*) begin
    if ((m_axi_lin_addr_AWREADY == 1'b0)) begin
        ap_ST_fsm_state52_blk = 1'b1;
    end else begin
        ap_ST_fsm_state52_blk = 1'b0;
    end
end

always @ (*) begin
    if ((m_axi_lin_addr_WREADY == 1'b0)) begin
        ap_ST_fsm_state53_blk = 1'b1;
    end else begin
        ap_ST_fsm_state53_blk = 1'b0;
    end
end

assign ap_ST_fsm_state54_blk = 1'b0;

assign ap_ST_fsm_state55_blk = 1'b0;

assign ap_ST_fsm_state56_blk = 1'b0;

assign ap_ST_fsm_state57_blk = 1'b0;

always @ (*) begin
    if ((m_axi_lin_addr_BVALID == 1'b0)) begin
        ap_ST_fsm_state58_blk = 1'b1;
    end else begin
        ap_ST_fsm_state58_blk = 1'b0;
    end
end

assign ap_ST_fsm_state59_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

always @ (*) begin
    if ((grp_single_lin_process_1_Pipeline_VITIS_LOOP_178_1_fu_432_ap_done == 1'b0)) begin
        ap_ST_fsm_state60_blk = 1'b1;
    end else begin
        ap_ST_fsm_state60_blk = 1'b0;
    end
end

assign ap_ST_fsm_state61_blk = 1'b0;

assign ap_ST_fsm_state62_blk = 1'b0;

assign ap_ST_fsm_state63_blk = 1'b0;

assign ap_ST_fsm_state64_blk = 1'b0;

assign ap_ST_fsm_state65_blk = 1'b0;

assign ap_ST_fsm_state66_blk = 1'b0;

assign ap_ST_fsm_state67_blk = 1'b0;

assign ap_ST_fsm_state68_blk = 1'b0;

assign ap_ST_fsm_state69_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_block_state70_on_subcall_done)) begin
        ap_ST_fsm_state70_blk = 1'b1;
    end else begin
        ap_ST_fsm_state70_blk = 1'b0;
    end
end

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if (((~((ap_predicate_op152_writeresp_state40 == 1'b1) & (m_axi_lin_addr_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state40)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_predicate_op152_writeresp_state40 == 1'b1) & (m_axi_lin_addr_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state40))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state4))) begin
        grp_read_lin_reg_1_fu_421_ap_ce = 1'b1;
    end else begin
        grp_read_lin_reg_1_fu_421_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        grp_read_lin_reg_1_fu_421_offset = 5'd8;
    end else if (((1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state14))) begin
        grp_read_lin_reg_1_fu_421_offset = 5'd12;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_read_lin_reg_1_fu_421_offset = 5'd20;
    end else begin
        grp_read_lin_reg_1_fu_421_offset = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state4))) begin
        lin_addr_blk_n_AR = grp_read_lin_reg_1_fu_421_lin_addr_blk_n_AR;
    end else begin
        lin_addr_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33))) begin
        lin_addr_blk_n_AW = m_axi_lin_addr_AWREADY;
    end else begin
        lin_addr_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state39) | ((trunc_ln142_reg_810 == 1'd1) & (1'd0 == PLIN_Ctrl_run_state_load_reg_799) & (1'b1 == ap_CS_fsm_state40)))) begin
        lin_addr_blk_n_B = m_axi_lin_addr_BVALID;
    end else begin
        lin_addr_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state4))) begin
        lin_addr_blk_n_R = grp_read_lin_reg_1_fu_421_lin_addr_blk_n_R;
    end else begin
        lin_addr_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34))) begin
        lin_addr_blk_n_W = m_axi_lin_addr_WREADY;
    end else begin
        lin_addr_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state68)) begin
        lin_frame_address0 = 32'd14;
    end else if ((1'b1 == ap_CS_fsm_state67)) begin
        lin_frame_address0 = 32'd12;
    end else if ((1'b1 == ap_CS_fsm_state66)) begin
        lin_frame_address0 = 32'd10;
    end else if ((1'b1 == ap_CS_fsm_state65)) begin
        lin_frame_address0 = 32'd8;
    end else if ((1'b1 == ap_CS_fsm_state64)) begin
        lin_frame_address0 = 32'd6;
    end else if ((1'b1 == ap_CS_fsm_state63)) begin
        lin_frame_address0 = 32'd4;
    end else if ((1'b1 == ap_CS_fsm_state62)) begin
        lin_frame_address0 = 32'd2;
    end else if ((1'b1 == ap_CS_fsm_state61)) begin
        lin_frame_address0 = 32'd1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        lin_frame_address0 = p_cast_fu_497_p1;
    end else if (((icmp_ln169_reg_835 == 1'd1) & (icmp_ln166_reg_831 == 1'd0) & (1'b1 == ap_CS_fsm_state70))) begin
        lin_frame_address0 = grp_write_lin_ddr_1_fu_444_data_address0;
    end else if ((1'b1 == ap_CS_fsm_state60)) begin
        lin_frame_address0 = grp_single_lin_process_1_Pipeline_VITIS_LOOP_178_1_fu_432_lin_frame_address0;
    end else begin
        lin_frame_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state68)) begin
        lin_frame_address1 = 32'd15;
    end else if ((1'b1 == ap_CS_fsm_state67)) begin
        lin_frame_address1 = 32'd13;
    end else if ((1'b1 == ap_CS_fsm_state66)) begin
        lin_frame_address1 = 32'd11;
    end else if ((1'b1 == ap_CS_fsm_state65)) begin
        lin_frame_address1 = 32'd9;
    end else if ((1'b1 == ap_CS_fsm_state64)) begin
        lin_frame_address1 = 32'd7;
    end else if ((1'b1 == ap_CS_fsm_state63)) begin
        lin_frame_address1 = 32'd5;
    end else if ((1'b1 == ap_CS_fsm_state62)) begin
        lin_frame_address1 = 32'd3;
    end else if ((1'b1 == ap_CS_fsm_state61)) begin
        lin_frame_address1 = 32'd0;
    end else begin
        lin_frame_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state61))) begin
        lin_frame_ce0 = 1'b1;
    end else if (((icmp_ln169_reg_835 == 1'd1) & (icmp_ln166_reg_831 == 1'd0) & (1'b1 == ap_CS_fsm_state70))) begin
        lin_frame_ce0 = grp_write_lin_ddr_1_fu_444_data_ce0;
    end else if ((1'b1 == ap_CS_fsm_state60)) begin
        lin_frame_ce0 = grp_single_lin_process_1_Pipeline_VITIS_LOOP_178_1_fu_432_lin_frame_ce0;
    end else begin
        lin_frame_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state61))) begin
        lin_frame_ce1 = 1'b1;
    end else begin
        lin_frame_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state65)) begin
        lin_frame_d0 = 8'd3;
    end else if ((1'b1 == ap_CS_fsm_state64)) begin
        lin_frame_d0 = trunc_ln1_reg_865;
    end else if ((1'b1 == ap_CS_fsm_state63)) begin
        lin_frame_d0 = trunc_ln9_reg_855;
    end else if ((1'b1 == ap_CS_fsm_state62)) begin
        lin_frame_d0 = trunc_ln7_reg_845;
    end else if ((1'b1 == ap_CS_fsm_state61)) begin
        lin_frame_d0 = {{timestamp[55:48]}};
    end else if (((1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state2))) begin
        lin_frame_d0 = 8'd0;
    end else if ((1'b1 == ap_CS_fsm_state60)) begin
        lin_frame_d0 = grp_single_lin_process_1_Pipeline_VITIS_LOOP_178_1_fu_432_lin_frame_d0;
    end else begin
        lin_frame_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state68)) begin
        lin_frame_d1 = zext_ln178_fu_732_p1;
    end else if ((1'b1 == ap_CS_fsm_state67)) begin
        lin_frame_d1 = zext_ln198_fu_724_p1;
    end else if ((1'b1 == ap_CS_fsm_state66)) begin
        lin_frame_d1 = zext_ln195_fu_715_p1;
    end else if ((1'b1 == ap_CS_fsm_state65)) begin
        lin_frame_d1 = EN_cast_reg_786;
    end else if ((1'b1 == ap_CS_fsm_state64)) begin
        lin_frame_d1 = trunc_ln191_reg_870;
    end else if ((1'b1 == ap_CS_fsm_state63)) begin
        lin_frame_d1 = trunc_ln_reg_860;
    end else if ((1'b1 == ap_CS_fsm_state62)) begin
        lin_frame_d1 = trunc_ln8_reg_850;
    end else if ((1'b1 == ap_CS_fsm_state61)) begin
        lin_frame_d1 = {{timestamp[63:56]}};
    end else begin
        lin_frame_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state61) | ((exitcond1_fu_485_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
        lin_frame_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state60)) begin
        lin_frame_we0 = grp_single_lin_process_1_Pipeline_VITIS_LOOP_178_1_fu_432_lin_frame_we0;
    end else begin
        lin_frame_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state61))) begin
        lin_frame_we1 = 1'b1;
    end else begin
        lin_frame_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state59))) begin
        m_axi_lin_addr_ARADDR = grp_single_lin_process_1_Pipeline_VITIS_LOOP_178_1_fu_432_m_axi_lin_addr_ARADDR;
    end else if (((1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state4))) begin
        m_axi_lin_addr_ARADDR = grp_read_lin_reg_1_fu_421_m_axi_lin_addr_ARADDR;
    end else begin
        m_axi_lin_addr_ARADDR = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state59))) begin
        m_axi_lin_addr_ARBURST = grp_single_lin_process_1_Pipeline_VITIS_LOOP_178_1_fu_432_m_axi_lin_addr_ARBURST;
    end else if (((1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state4))) begin
        m_axi_lin_addr_ARBURST = grp_read_lin_reg_1_fu_421_m_axi_lin_addr_ARBURST;
    end else begin
        m_axi_lin_addr_ARBURST = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state59))) begin
        m_axi_lin_addr_ARCACHE = grp_single_lin_process_1_Pipeline_VITIS_LOOP_178_1_fu_432_m_axi_lin_addr_ARCACHE;
    end else if (((1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state4))) begin
        m_axi_lin_addr_ARCACHE = grp_read_lin_reg_1_fu_421_m_axi_lin_addr_ARCACHE;
    end else begin
        m_axi_lin_addr_ARCACHE = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state59))) begin
        m_axi_lin_addr_ARID = grp_single_lin_process_1_Pipeline_VITIS_LOOP_178_1_fu_432_m_axi_lin_addr_ARID;
    end else if (((1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state4))) begin
        m_axi_lin_addr_ARID = grp_read_lin_reg_1_fu_421_m_axi_lin_addr_ARID;
    end else begin
        m_axi_lin_addr_ARID = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state59))) begin
        m_axi_lin_addr_ARLEN = grp_single_lin_process_1_Pipeline_VITIS_LOOP_178_1_fu_432_m_axi_lin_addr_ARLEN;
    end else if (((1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state4))) begin
        m_axi_lin_addr_ARLEN = grp_read_lin_reg_1_fu_421_m_axi_lin_addr_ARLEN;
    end else begin
        m_axi_lin_addr_ARLEN = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state59))) begin
        m_axi_lin_addr_ARLOCK = grp_single_lin_process_1_Pipeline_VITIS_LOOP_178_1_fu_432_m_axi_lin_addr_ARLOCK;
    end else if (((1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state4))) begin
        m_axi_lin_addr_ARLOCK = grp_read_lin_reg_1_fu_421_m_axi_lin_addr_ARLOCK;
    end else begin
        m_axi_lin_addr_ARLOCK = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state59))) begin
        m_axi_lin_addr_ARPROT = grp_single_lin_process_1_Pipeline_VITIS_LOOP_178_1_fu_432_m_axi_lin_addr_ARPROT;
    end else if (((1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state4))) begin
        m_axi_lin_addr_ARPROT = grp_read_lin_reg_1_fu_421_m_axi_lin_addr_ARPROT;
    end else begin
        m_axi_lin_addr_ARPROT = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state59))) begin
        m_axi_lin_addr_ARQOS = grp_single_lin_process_1_Pipeline_VITIS_LOOP_178_1_fu_432_m_axi_lin_addr_ARQOS;
    end else if (((1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state4))) begin
        m_axi_lin_addr_ARQOS = grp_read_lin_reg_1_fu_421_m_axi_lin_addr_ARQOS;
    end else begin
        m_axi_lin_addr_ARQOS = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state59))) begin
        m_axi_lin_addr_ARREGION = grp_single_lin_process_1_Pipeline_VITIS_LOOP_178_1_fu_432_m_axi_lin_addr_ARREGION;
    end else if (((1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state4))) begin
        m_axi_lin_addr_ARREGION = grp_read_lin_reg_1_fu_421_m_axi_lin_addr_ARREGION;
    end else begin
        m_axi_lin_addr_ARREGION = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state59))) begin
        m_axi_lin_addr_ARSIZE = grp_single_lin_process_1_Pipeline_VITIS_LOOP_178_1_fu_432_m_axi_lin_addr_ARSIZE;
    end else if (((1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state4))) begin
        m_axi_lin_addr_ARSIZE = grp_read_lin_reg_1_fu_421_m_axi_lin_addr_ARSIZE;
    end else begin
        m_axi_lin_addr_ARSIZE = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state59))) begin
        m_axi_lin_addr_ARUSER = grp_single_lin_process_1_Pipeline_VITIS_LOOP_178_1_fu_432_m_axi_lin_addr_ARUSER;
    end else if (((1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state4))) begin
        m_axi_lin_addr_ARUSER = grp_read_lin_reg_1_fu_421_m_axi_lin_addr_ARUSER;
    end else begin
        m_axi_lin_addr_ARUSER = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state59))) begin
        m_axi_lin_addr_ARVALID = grp_single_lin_process_1_Pipeline_VITIS_LOOP_178_1_fu_432_m_axi_lin_addr_ARVALID;
    end else if (((1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state4))) begin
        m_axi_lin_addr_ARVALID = grp_read_lin_reg_1_fu_421_m_axi_lin_addr_ARVALID;
    end else begin
        m_axi_lin_addr_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((m_axi_lin_addr_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state52))) begin
        m_axi_lin_addr_AWADDR = sext_ln89_2_fu_623_p1;
    end else if (((1'b0 == ap_block_state34_io) & (1'b1 == ap_CS_fsm_state34))) begin
        m_axi_lin_addr_AWADDR = sext_ln89_1_fu_551_p1;
    end else if (((m_axi_lin_addr_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state33))) begin
        m_axi_lin_addr_AWADDR = sext_ln89_fu_540_p1;
    end else begin
        m_axi_lin_addr_AWADDR = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_state34_io) & (1'b1 == ap_CS_fsm_state34)) | ((m_axi_lin_addr_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state52)) | ((m_axi_lin_addr_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state33)))) begin
        m_axi_lin_addr_AWVALID = 1'b1;
    end else begin
        m_axi_lin_addr_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((~((ap_predicate_op152_writeresp_state40 == 1'b1) & (m_axi_lin_addr_BVALID == 1'b0)) & (ap_predicate_op152_writeresp_state40 == 1'b1) & (1'b1 == ap_CS_fsm_state40)) | ((1'b1 == ap_CS_fsm_state58) & (m_axi_lin_addr_BVALID == 1'b1)) | ((1'b1 == ap_CS_fsm_state39) & (m_axi_lin_addr_BVALID == 1'b1)))) begin
        m_axi_lin_addr_BREADY = 1'b1;
    end else begin
        m_axi_lin_addr_BREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state59))) begin
        m_axi_lin_addr_RREADY = grp_single_lin_process_1_Pipeline_VITIS_LOOP_178_1_fu_432_m_axi_lin_addr_RREADY;
    end else if (((1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state4))) begin
        m_axi_lin_addr_RREADY = grp_read_lin_reg_1_fu_421_m_axi_lin_addr_RREADY;
    end else begin
        m_axi_lin_addr_RREADY = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        m_axi_lin_addr_WDATA = 32'd128;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        m_axi_lin_addr_WDATA = 32'd59;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        m_axi_lin_addr_WDATA = 32'd0;
    end else begin
        m_axi_lin_addr_WDATA = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_state34_io) & (1'b1 == ap_CS_fsm_state34)) | ((1'b1 == ap_CS_fsm_state53) & (m_axi_lin_addr_WREADY == 1'b1)) | ((1'b1 == ap_CS_fsm_state35) & (m_axi_lin_addr_WREADY == 1'b1)))) begin
        m_axi_lin_addr_WVALID = 1'b1;
    end else begin
        m_axi_lin_addr_WVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state69) | ((icmp_ln169_reg_835 == 1'd1) & (icmp_ln166_reg_831 == 1'd0) & (1'b1 == ap_CS_fsm_state70)))) begin
        m_axi_ps_ddr_ARVALID = grp_write_lin_ddr_1_fu_444_m_axi_ps_ddr_ARVALID;
    end else begin
        m_axi_ps_ddr_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state69) | ((icmp_ln169_reg_835 == 1'd1) & (icmp_ln166_reg_831 == 1'd0) & (1'b1 == ap_CS_fsm_state70)))) begin
        m_axi_ps_ddr_AWVALID = grp_write_lin_ddr_1_fu_444_m_axi_ps_ddr_AWVALID;
    end else begin
        m_axi_ps_ddr_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state69) | ((icmp_ln169_reg_835 == 1'd1) & (icmp_ln166_reg_831 == 1'd0) & (1'b1 == ap_CS_fsm_state70)))) begin
        m_axi_ps_ddr_BREADY = grp_write_lin_ddr_1_fu_444_m_axi_ps_ddr_BREADY;
    end else begin
        m_axi_ps_ddr_BREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state69) | ((icmp_ln169_reg_835 == 1'd1) & (icmp_ln166_reg_831 == 1'd0) & (1'b1 == ap_CS_fsm_state70)))) begin
        m_axi_ps_ddr_RREADY = grp_write_lin_ddr_1_fu_444_m_axi_ps_ddr_RREADY;
    end else begin
        m_axi_ps_ddr_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state69) | ((icmp_ln169_reg_835 == 1'd1) & (icmp_ln166_reg_831 == 1'd0) & (1'b1 == ap_CS_fsm_state70)))) begin
        m_axi_ps_ddr_WVALID = grp_write_lin_ddr_1_fu_444_m_axi_ps_ddr_WVALID;
    end else begin
        m_axi_ps_ddr_WVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((grp_read_lin_reg_1_fu_421_lin_addr_blk_n_R & grp_read_lin_reg_1_fu_421_lin_addr_blk_n_AR) == 1'b1) & (icmp_ln169_fu_585_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state51))) begin
        received_lin_ap_vld = 1'b1;
    end else begin
        received_lin_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((exitcond1_fu_485_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if ((((grp_read_lin_reg_1_fu_421_lin_addr_blk_n_R & grp_read_lin_reg_1_fu_421_lin_addr_blk_n_AR) == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            if ((((grp_read_lin_reg_1_fu_421_lin_addr_blk_n_R & grp_read_lin_reg_1_fu_421_lin_addr_blk_n_AR) == 1'b1) & (1'd1 == PLIN_Ctrl_run_state_q0) & (1'b1 == ap_CS_fsm_state11))) begin
                ap_NS_fsm = ap_ST_fsm_state41;
            end else if ((((grp_read_lin_reg_1_fu_421_lin_addr_blk_n_R & grp_read_lin_reg_1_fu_421_lin_addr_blk_n_AR) == 1'b1) & (1'd0 == PLIN_Ctrl_run_state_q0) & (1'b1 == ap_CS_fsm_state11))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            if ((((grp_read_lin_reg_1_fu_421_lin_addr_blk_n_R & grp_read_lin_reg_1_fu_421_lin_addr_blk_n_AR) == 1'b1) & (1'b1 == ap_CS_fsm_state15))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            if ((((grp_read_lin_reg_1_fu_421_lin_addr_blk_n_R & grp_read_lin_reg_1_fu_421_lin_addr_blk_n_AR) == 1'b1) & (trunc_ln142_reg_810 == 1'd0) & (1'b1 == ap_CS_fsm_state22))) begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end else if ((((grp_read_lin_reg_1_fu_421_lin_addr_blk_n_R & grp_read_lin_reg_1_fu_421_lin_addr_blk_n_AR) == 1'b1) & (trunc_ln142_reg_810 == 1'd1) & (1'b1 == ap_CS_fsm_state22))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            if ((((grp_read_lin_reg_1_fu_421_lin_addr_blk_n_R & grp_read_lin_reg_1_fu_421_lin_addr_blk_n_AR) == 1'b1) & (1'b1 == ap_CS_fsm_state25))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            if ((((grp_read_lin_reg_1_fu_421_lin_addr_blk_n_R & grp_read_lin_reg_1_fu_421_lin_addr_blk_n_AR) == 1'b1) & (1'b1 == ap_CS_fsm_state32))) begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end
        end
        ap_ST_fsm_state33 : begin
            if (((m_axi_lin_addr_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state33))) begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end
        end
        ap_ST_fsm_state34 : begin
            if (((1'b0 == ap_block_state34_io) & (1'b1 == ap_CS_fsm_state34))) begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end
        end
        ap_ST_fsm_state35 : begin
            if (((1'b1 == ap_CS_fsm_state35) & (m_axi_lin_addr_WREADY == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            if (((1'b1 == ap_CS_fsm_state39) & (m_axi_lin_addr_BVALID == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state39;
            end
        end
        ap_ST_fsm_state40 : begin
            if ((~((ap_predicate_op152_writeresp_state40 == 1'b1) & (m_axi_lin_addr_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state40))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end
        end
        ap_ST_fsm_state41 : begin
            if (((icmp_ln166_fu_570_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state41))) begin
                ap_NS_fsm = ap_ST_fsm_state70;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state42;
            end
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            if ((((grp_read_lin_reg_1_fu_421_lin_addr_blk_n_R & grp_read_lin_reg_1_fu_421_lin_addr_blk_n_AR) == 1'b1) & (1'b1 == ap_CS_fsm_state44))) begin
                ap_NS_fsm = ap_ST_fsm_state45;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state44;
            end
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            if ((((grp_read_lin_reg_1_fu_421_lin_addr_blk_n_R & grp_read_lin_reg_1_fu_421_lin_addr_blk_n_AR) == 1'b1) & (icmp_ln169_fu_585_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state51))) begin
                ap_NS_fsm = ap_ST_fsm_state70;
            end else if ((((grp_read_lin_reg_1_fu_421_lin_addr_blk_n_R & grp_read_lin_reg_1_fu_421_lin_addr_blk_n_AR) == 1'b1) & (icmp_ln169_fu_585_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state51))) begin
                ap_NS_fsm = ap_ST_fsm_state52;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state51;
            end
        end
        ap_ST_fsm_state52 : begin
            if (((m_axi_lin_addr_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state52))) begin
                ap_NS_fsm = ap_ST_fsm_state53;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state52;
            end
        end
        ap_ST_fsm_state53 : begin
            if (((1'b1 == ap_CS_fsm_state53) & (m_axi_lin_addr_WREADY == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state54;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state53;
            end
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            if (((1'b1 == ap_CS_fsm_state58) & (m_axi_lin_addr_BVALID == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state59;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state58;
            end
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            if (((grp_single_lin_process_1_Pipeline_VITIS_LOOP_178_1_fu_432_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state60))) begin
                ap_NS_fsm = ap_ST_fsm_state61;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state60;
            end
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            if (((1'b0 == ap_block_state70_on_subcall_done) & (1'b1 == ap_CS_fsm_state70))) begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state70;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign EN_cast_fu_473_p1 = EN;

assign add_ln195_fu_709_p2 = (zext_ln178_1_reload_cast_fu_705_p1 + 5'd4);

assign add_ln202_fu_610_p2 = (internal_lin_counter + 32'd1);

assign add_ln89_1_fu_525_p2 = (linbase + 32'd20);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_state58 = ap_CS_fsm[32'd57];

assign ap_CS_fsm_state59 = ap_CS_fsm[32'd58];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state60 = ap_CS_fsm[32'd59];

assign ap_CS_fsm_state61 = ap_CS_fsm[32'd60];

assign ap_CS_fsm_state62 = ap_CS_fsm[32'd61];

assign ap_CS_fsm_state63 = ap_CS_fsm[32'd62];

assign ap_CS_fsm_state64 = ap_CS_fsm[32'd63];

assign ap_CS_fsm_state65 = ap_CS_fsm[32'd64];

assign ap_CS_fsm_state66 = ap_CS_fsm[32'd65];

assign ap_CS_fsm_state67 = ap_CS_fsm[32'd66];

assign ap_CS_fsm_state68 = ap_CS_fsm[32'd67];

assign ap_CS_fsm_state69 = ap_CS_fsm[32'd68];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state70 = ap_CS_fsm[32'd69];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_NS_fsm_state14 = ap_NS_fsm[32'd13];

assign ap_NS_fsm_state24 = ap_NS_fsm[32'd23];

assign ap_NS_fsm_state3 = ap_NS_fsm[32'd2];

assign ap_NS_fsm_state43 = ap_NS_fsm[32'd42];

always @ (*) begin
    ap_block_state11 = ((grp_read_lin_reg_1_fu_421_lin_addr_blk_n_R & grp_read_lin_reg_1_fu_421_lin_addr_blk_n_AR) == 1'b0);
end

always @ (*) begin
    ap_block_state15 = ((grp_read_lin_reg_1_fu_421_lin_addr_blk_n_R & grp_read_lin_reg_1_fu_421_lin_addr_blk_n_AR) == 1'b0);
end

always @ (*) begin
    ap_block_state22 = ((grp_read_lin_reg_1_fu_421_lin_addr_blk_n_R & grp_read_lin_reg_1_fu_421_lin_addr_blk_n_AR) == 1'b0);
end

always @ (*) begin
    ap_block_state25 = ((grp_read_lin_reg_1_fu_421_lin_addr_blk_n_R & grp_read_lin_reg_1_fu_421_lin_addr_blk_n_AR) == 1'b0);
end

always @ (*) begin
    ap_block_state32 = ((grp_read_lin_reg_1_fu_421_lin_addr_blk_n_R & grp_read_lin_reg_1_fu_421_lin_addr_blk_n_AR) == 1'b0);
end

always @ (*) begin
    ap_block_state34_io = ((m_axi_lin_addr_AWREADY == 1'b0) | (m_axi_lin_addr_WREADY == 1'b0));
end

always @ (*) begin
    ap_block_state4 = ((grp_read_lin_reg_1_fu_421_lin_addr_blk_n_R & grp_read_lin_reg_1_fu_421_lin_addr_blk_n_AR) == 1'b0);
end

always @ (*) begin
    ap_block_state40 = ((ap_predicate_op152_writeresp_state40 == 1'b1) & (m_axi_lin_addr_BVALID == 1'b0));
end

always @ (*) begin
    ap_block_state44 = ((grp_read_lin_reg_1_fu_421_lin_addr_blk_n_R & grp_read_lin_reg_1_fu_421_lin_addr_blk_n_AR) == 1'b0);
end

always @ (*) begin
    ap_block_state51 = ((grp_read_lin_reg_1_fu_421_lin_addr_blk_n_R & grp_read_lin_reg_1_fu_421_lin_addr_blk_n_AR) == 1'b0);
end

always @ (*) begin
    ap_block_state70_on_subcall_done = ((ap_predicate_op240_call_state70 == 1'b1) & (grp_write_lin_ddr_1_fu_444_ap_done == 1'b0));
end

always @ (*) begin
    ap_predicate_op152_writeresp_state40 = ((trunc_ln142_reg_810 == 1'd1) & (1'd0 == PLIN_Ctrl_run_state_load_reg_799));
end

always @ (*) begin
    ap_predicate_op240_call_state70 = ((icmp_ln169_reg_835 == 1'd1) & (icmp_ln166_reg_831 == 1'd0));
end

assign empty_70_fu_491_p2 = (empty_fu_162 + 5'd1);

assign exitcond1_fu_485_p2 = ((empty_fu_162 == 5'd28) ? 1'b1 : 1'b0);

assign grp_fu_454_p2 = (linbase + 32'd4);

assign grp_read_lin_reg_1_fu_421_ap_start = grp_read_lin_reg_1_fu_421_ap_start_reg;

assign grp_single_lin_process_1_Pipeline_VITIS_LOOP_178_1_fu_432_ap_start = grp_single_lin_process_1_Pipeline_VITIS_LOOP_178_1_fu_432_ap_start_reg;

assign grp_write_lin_ddr_1_fu_444_ap_start = grp_write_lin_ddr_1_fu_444_ap_start_reg;

assign icmp_ln166_fu_570_p2 = ((tmp_fu_561_p4 == 3'd0) ? 1'b1 : 1'b0);

assign icmp_ln169_fu_585_p2 = ((tmp_1_fu_576_p4 == 2'd0) ? 1'b1 : 1'b0);

assign m_axi_lin_addr_AWBURST = 2'd0;

assign m_axi_lin_addr_AWCACHE = 4'd0;

assign m_axi_lin_addr_AWID = 1'd0;

assign m_axi_lin_addr_AWLEN = 32'd1;

assign m_axi_lin_addr_AWLOCK = 2'd0;

assign m_axi_lin_addr_AWPROT = 3'd0;

assign m_axi_lin_addr_AWQOS = 4'd0;

assign m_axi_lin_addr_AWREGION = 4'd0;

assign m_axi_lin_addr_AWSIZE = 3'd0;

assign m_axi_lin_addr_AWUSER = 1'd0;

assign m_axi_lin_addr_WID = 1'd0;

assign m_axi_lin_addr_WLAST = 1'b0;

assign m_axi_lin_addr_WSTRB = 4'd15;

assign m_axi_lin_addr_WUSER = 1'd0;

assign m_axi_ps_ddr_ARADDR = grp_write_lin_ddr_1_fu_444_m_axi_ps_ddr_ARADDR;

assign m_axi_ps_ddr_ARBURST = grp_write_lin_ddr_1_fu_444_m_axi_ps_ddr_ARBURST;

assign m_axi_ps_ddr_ARCACHE = grp_write_lin_ddr_1_fu_444_m_axi_ps_ddr_ARCACHE;

assign m_axi_ps_ddr_ARID = grp_write_lin_ddr_1_fu_444_m_axi_ps_ddr_ARID;

assign m_axi_ps_ddr_ARLEN = grp_write_lin_ddr_1_fu_444_m_axi_ps_ddr_ARLEN;

assign m_axi_ps_ddr_ARLOCK = grp_write_lin_ddr_1_fu_444_m_axi_ps_ddr_ARLOCK;

assign m_axi_ps_ddr_ARPROT = grp_write_lin_ddr_1_fu_444_m_axi_ps_ddr_ARPROT;

assign m_axi_ps_ddr_ARQOS = grp_write_lin_ddr_1_fu_444_m_axi_ps_ddr_ARQOS;

assign m_axi_ps_ddr_ARREGION = grp_write_lin_ddr_1_fu_444_m_axi_ps_ddr_ARREGION;

assign m_axi_ps_ddr_ARSIZE = grp_write_lin_ddr_1_fu_444_m_axi_ps_ddr_ARSIZE;

assign m_axi_ps_ddr_ARUSER = grp_write_lin_ddr_1_fu_444_m_axi_ps_ddr_ARUSER;

assign m_axi_ps_ddr_AWADDR = grp_write_lin_ddr_1_fu_444_m_axi_ps_ddr_AWADDR;

assign m_axi_ps_ddr_AWBURST = grp_write_lin_ddr_1_fu_444_m_axi_ps_ddr_AWBURST;

assign m_axi_ps_ddr_AWCACHE = grp_write_lin_ddr_1_fu_444_m_axi_ps_ddr_AWCACHE;

assign m_axi_ps_ddr_AWID = grp_write_lin_ddr_1_fu_444_m_axi_ps_ddr_AWID;

assign m_axi_ps_ddr_AWLEN = grp_write_lin_ddr_1_fu_444_m_axi_ps_ddr_AWLEN;

assign m_axi_ps_ddr_AWLOCK = grp_write_lin_ddr_1_fu_444_m_axi_ps_ddr_AWLOCK;

assign m_axi_ps_ddr_AWPROT = grp_write_lin_ddr_1_fu_444_m_axi_ps_ddr_AWPROT;

assign m_axi_ps_ddr_AWQOS = grp_write_lin_ddr_1_fu_444_m_axi_ps_ddr_AWQOS;

assign m_axi_ps_ddr_AWREGION = grp_write_lin_ddr_1_fu_444_m_axi_ps_ddr_AWREGION;

assign m_axi_ps_ddr_AWSIZE = grp_write_lin_ddr_1_fu_444_m_axi_ps_ddr_AWSIZE;

assign m_axi_ps_ddr_AWUSER = grp_write_lin_ddr_1_fu_444_m_axi_ps_ddr_AWUSER;

assign m_axi_ps_ddr_WDATA = grp_write_lin_ddr_1_fu_444_m_axi_ps_ddr_WDATA;

assign m_axi_ps_ddr_WID = grp_write_lin_ddr_1_fu_444_m_axi_ps_ddr_WID;

assign m_axi_ps_ddr_WLAST = grp_write_lin_ddr_1_fu_444_m_axi_ps_ddr_WLAST;

assign m_axi_ps_ddr_WSTRB = grp_write_lin_ddr_1_fu_444_m_axi_ps_ddr_WSTRB;

assign m_axi_ps_ddr_WUSER = grp_write_lin_ddr_1_fu_444_m_axi_ps_ddr_WUSER;

assign p_cast_fu_497_p1 = empty_fu_162;

assign received_lin = (internal_lin_counter + 32'd1);

assign sext_ln89_1_fu_551_p1 = $signed(trunc_ln89_1_reg_814);

assign sext_ln89_2_fu_623_p1 = $signed(reg_469);

assign sext_ln89_fu_540_p1 = $signed(reg_469);

assign tmp_1_fu_576_p4 = {{reg_status_reg_803[3:2]}};

assign tmp_fu_561_p4 = {{reg_status_reg_803[3:1]}};

assign trunc_ln142_fu_511_p1 = grp_read_lin_reg_1_fu_421_ap_return[0:0];

assign trunc_ln153_fu_515_p1 = grp_read_lin_reg_1_fu_421_ap_return[5:0];

assign trunc_ln191_fu_699_p1 = timestamp[7:0];

assign zext_ln142_fu_507_p1 = EN;

assign zext_ln178_1_reload_cast_fu_705_p1 = grp_single_lin_process_1_Pipeline_VITIS_LOOP_178_1_fu_432_zext_ln178_1_out;

assign zext_ln178_fu_732_p1 = grp_single_lin_process_1_Pipeline_VITIS_LOOP_178_1_fu_432_PL_Data_1_load_out;

assign zext_ln195_fu_715_p1 = add_ln195_fu_709_p2;

assign zext_ln198_fu_724_p1 = PL_Data_0;

always @ (posedge ap_clk) begin
    EN_cast_reg_786[7:4] <= 4'b0000;
end

endmodule //clu_single_lin_process_1
