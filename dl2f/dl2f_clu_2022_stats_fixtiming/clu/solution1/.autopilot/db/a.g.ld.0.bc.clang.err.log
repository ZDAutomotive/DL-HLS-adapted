remark: can.c:97:0: Inlining function 'update_write_index' into 'write_ddr'
remark: can.c:150:0: Inlining function 'XCanFd_GetDlc2len' into 'recvFrame_logic'
remark: can.c:333:0: Inlining function 'CanFd_Recv_Sequential' into 'can'
remark: dlin.c:94:0: Inlining function 'update_write_index' into 'write_lin_ddr'
remark: dlin.c:146:0: Inlining function 'write_lin_reg' into 'single_lin_process'
remark: dlin.c:375:0: Inlining function 'dlin_FSM' into 'dlin'
remark: clu.c:43:0: Inlining function 'can' into 'clu'
remark: clu.c:43:0: Inlining function 'dlin' into 'clu'
remark: can.c:103:2: Sequential read of length 28 has been inferred _XLX_SEP_ OldID=load-store-loop3.load.3,  _XLX_SEP_ ddr_headerseq ddr_header ps_ddr anonymous can.c:103:2 write_ddr 
remark: can.c:126:3: Sequential write of length 92 has been inferred _XLX_SEP_ OldID=load-store-loop.store.6,  _XLX_SEP_ scevgepseq ddr_header ps_ddr anonymous can.c:126:3 write_ddr 
remark: clu.c:17:2: Sequential write of length 4 has been inferred _XLX_SEP_ OldID=load-store-loop.i.store.6,  _XLX_SEP_ scevgep7seq ddr_header ps_ddr anonymous clu.c:17:2 write_ddr 
remark: can.c:120:21: Volatile or Atomic access cannot be transformed _XLX_SEP_ if.then.store.5 ddr_header ps_ddr write_ddr 
remark: can.c:168:15: Volatile or Atomic access cannot be transformed _XLX_SEP_ split.load.5 canbase can_addr recvFrame_logic 
remark: can.c:191:14: Volatile or Atomic access cannot be transformed _XLX_SEP_ if.end.load.25 canbase can_addr recvFrame_logic 
remark: can.c:226:13: Volatile or Atomic access cannot be transformed _XLX_SEP_ for.inc.load.10 canbase can_addr recvFrame_logic 
remark: can.c:240:13: Volatile or Atomic access cannot be transformed _XLX_SEP_ for.inc189.load.8 canbase can_addr recvFrame_logic 
remark: can.c:274:18: Volatile or Atomic access cannot be transformed _XLX_SEP_ sw.epilog.store.1 can_0_received  recvFrame_logic 
remark: can.c:275:18: Volatile or Atomic access cannot be transformed _XLX_SEP_ sw.epilog.store.3 can_1_received  recvFrame_logic 
remark: can.c:276:18: Volatile or Atomic access cannot be transformed _XLX_SEP_ sw.epilog.store.5 can_2_received  recvFrame_logic 
remark: can.c:277:18: Volatile or Atomic access cannot be transformed _XLX_SEP_ sw.epilog.store.7 can_3_received  recvFrame_logic 
remark: can.c:278:15: Volatile or Atomic access cannot be transformed _XLX_SEP_ sw.epilog.store.9 can_dropped  recvFrame_logic 
remark: can.c:281:17: Volatile or Atomic access cannot be transformed _XLX_SEP_ sw.epilog.store.13 received_can  recvFrame_logic 
remark: can.c:283:12: Volatile or Atomic access cannot be transformed _XLX_SEP_ sw.epilog.load.16 canbase can_addr recvFrame_logic 
remark: can.c:285:26: Volatile or Atomic access cannot be transformed _XLX_SEP_ sw.epilog.store.20 canbase can_addr recvFrame_logic 
remark: can.c:304:16: Volatile or Atomic access cannot be transformed _XLX_SEP_ if.then.i.i.load.6 can_ptr can_addr clu 
remark: dlin.c:213:23: Could not analyze the loop bounds _XLX_SEP_ VITIS_LOOP_213_1 dlin.c:213:23 single_lin_process 
remark: dlin.c:284:21: Volatile or Atomic access cannot be transformed _XLX_SEP_ sw.epilog.store.1 lin_0_received  single_lin_process 
remark: dlin.c:285:21: Volatile or Atomic access cannot be transformed _XLX_SEP_ sw.epilog.store.3 lin_1_received  single_lin_process 
remark: dlin.c:286:21: Volatile or Atomic access cannot be transformed _XLX_SEP_ sw.epilog.store.5 lin_2_received  single_lin_process 
remark: dlin.c:287:21: Volatile or Atomic access cannot be transformed _XLX_SEP_ sw.epilog.store.7 lin_3_received  single_lin_process 
remark: dlin.c:288:21: Volatile or Atomic access cannot be transformed _XLX_SEP_ sw.epilog.store.9 lin_4_received  single_lin_process 
remark: dlin.c:289:21: Volatile or Atomic access cannot be transformed _XLX_SEP_ sw.epilog.store.11 lin_5_received  single_lin_process 
remark: dlin.c:290:21: Volatile or Atomic access cannot be transformed _XLX_SEP_ sw.epilog.store.13 lin_6_received  single_lin_process 
remark: dlin.c:291:21: Volatile or Atomic access cannot be transformed _XLX_SEP_ sw.epilog.store.15 lin_7_received  single_lin_process 
remark: dlin.c:292:21: Volatile or Atomic access cannot be transformed _XLX_SEP_ sw.epilog.store.17 lin_8_received  single_lin_process 
remark: dlin.c:293:21: Volatile or Atomic access cannot be transformed _XLX_SEP_ sw.epilog.store.19 lin_9_received  single_lin_process 
remark: dlin.c:294:18: Volatile or Atomic access cannot be transformed _XLX_SEP_ sw.epilog.store.21 lin_dropped  single_lin_process 
remark: dlin.c:298:19: Volatile or Atomic access cannot be transformed _XLX_SEP_ sw.epilog.store.25 received_lin  single_lin_process 
remark: dlin.c:89:29: Volatile or Atomic access cannot be transformed _XLX_SEP_ if.then23.store.8 linbase lin_addr single_lin_process 
remark: dlin.c:89:29: Volatile or Atomic access cannot be transformed _XLX_SEP_ if.then3.store.8 linbase lin_addr single_lin_process 
remark: dlin.c:89:29: Volatile or Atomic access cannot be transformed _XLX_SEP_ if.then3.store.13 linbase lin_addr single_lin_process 
remark: dlin.c:83:24: Volatile or Atomic access cannot be transformed _XLX_SEP_ entry.load.7 lin_reg lin_addr,lin_addr,lin_addr,lin_addr,lin_addr,lin_addr read_lin_reg 
remark: dlin.c:100:2: Sequential read of length 28 has been inferred _XLX_SEP_ OldID=load-store-loop3.load.3,  _XLX_SEP_ ddr_headerseq ddr_header ps_ddr anonymous dlin.c:100:2 write_lin_ddr 
remark: dlin.c:122:3: Sequential write of length 28 has been inferred _XLX_SEP_ OldID=load-store-loop.store.6,  _XLX_SEP_ scevgepseq ddr_header ps_ddr anonymous dlin.c:122:3 write_lin_ddr 
remark: clu.c:17:2: Sequential write of length 4 has been inferred _XLX_SEP_ OldID=load-store-loop.i.store.6,  _XLX_SEP_ scevgep7seq ddr_header ps_ddr anonymous clu.c:17:2 write_lin_ddr 
remark: dlin.c:117:21: Volatile or Atomic access cannot be transformed _XLX_SEP_ if.then.store.5 ddr_header ps_ddr write_lin_ddr 
remark: clu.c:17:2: Could not widen since type i8 size is greater than or equal to the max_widen_bitwidth threshold of 0 _XLX_SEP_ scevgep7seq ddr_header ps_ddr anonymous clu.c:17:2 write_ddr 
remark: can.c:126:3: Could not widen since type i8 size is greater than or equal to the max_widen_bitwidth threshold of 0 _XLX_SEP_ scevgepseq ddr_header ps_ddr anonymous can.c:126:3 write_ddr 
remark: can.c:103:2: Could not widen since type i8 size is greater than or equal to the max_widen_bitwidth threshold of 0 _XLX_SEP_ ddr_headerseq ddr_header ps_ddr anonymous can.c:103:2 write_ddr 
remark: clu.c:17:2: Could not widen since type i8 size is greater than or equal to the max_widen_bitwidth threshold of 0 _XLX_SEP_ scevgep7seq ddr_header ps_ddr anonymous clu.c:17:2 write_lin_ddr 
remark: dlin.c:122:3: Could not widen since type i8 size is greater than or equal to the max_widen_bitwidth threshold of 0 _XLX_SEP_ scevgepseq ddr_header ps_ddr anonymous dlin.c:122:3 write_lin_ddr 
remark: dlin.c:100:2: Could not widen since type i8 size is greater than or equal to the max_widen_bitwidth threshold of 0 _XLX_SEP_ ddr_headerseq ddr_header ps_ddr anonymous dlin.c:100:2 write_lin_ddr 
remark: can.c:103:2: Multiple burst reads of length 28 and bit width 8 has been inferred. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. _XLX_SEP_ seq  ps_ddr anonymous can.c:103:2 write_ddr.1 
remark: can.c:103:2: Multiple burst reads of length 28 and bit width 8 in loop 'anonymous'(can.c:103:2) has been inferred on bundle 'ps_ddr'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
remark: can.c:126:3: Multiple burst writes of length 92 and bit width 8 has been inferred. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. _XLX_SEP_ seq1  ps_ddr anonymous can.c:126:3 write_ddr.1 
remark: can.c:126:3: Multiple burst writes of length 92 and bit width 8 in loop 'anonymous'(can.c:126:3) has been inferred on bundle 'ps_ddr'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
remark: clu.c:17:2: Multiple burst writes of length 4 and bit width 8 has been inferred. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. _XLX_SEP_ seq2  ps_ddr anonymous clu.c:17:2 write_ddr.1 
remark: clu.c:17:2: Multiple burst writes of length 4 and bit width 8 in loop 'anonymous'(clu.c:17:2) has been inferred on bundle 'ps_ddr'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
remark: dlin.c:100:2: Multiple burst reads of length 28 and bit width 8 has been inferred. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. _XLX_SEP_ seq  ps_ddr anonymous dlin.c:100:2 write_lin_ddr.1 
remark: dlin.c:100:2: Multiple burst reads of length 28 and bit width 8 in loop 'anonymous'(dlin.c:100:2) has been inferred on bundle 'ps_ddr'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
remark: dlin.c:122:3: Multiple burst writes of length 28 and bit width 8 has been inferred. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. _XLX_SEP_ seq1  ps_ddr anonymous dlin.c:122:3 write_lin_ddr.1 
remark: dlin.c:122:3: Multiple burst writes of length 28 and bit width 8 in loop 'anonymous'(dlin.c:122:3) has been inferred on bundle 'ps_ddr'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
remark: clu.c:17:2: Multiple burst writes of length 4 and bit width 8 has been inferred. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. _XLX_SEP_ seq2  ps_ddr anonymous clu.c:17:2 write_lin_ddr.1 
remark: clu.c:17:2: Multiple burst writes of length 4 and bit width 8 in loop 'anonymous'(clu.c:17:2) has been inferred on bundle 'ps_ddr'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
