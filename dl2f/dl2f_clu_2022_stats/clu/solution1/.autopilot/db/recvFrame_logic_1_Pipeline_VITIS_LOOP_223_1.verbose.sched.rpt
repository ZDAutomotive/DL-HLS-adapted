

================================================================
== Vitis HLS Report for 'recvFrame_logic_1_Pipeline_VITIS_LOOP_223_1'
================================================================
* Date:           Thu Dec 22 11:33:34 2022

* Version:        2022.2 (Build 3670227 on Oct 13 2022)
* Project:        clu
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg400-2


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  7.300 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |       12|       42|  0.120 us|  0.420 us|   12|   42|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +--------------------+---------+---------+----------+-----------+-----------+--------+----------+
        |                    |  Latency (cycles) | Iteration|  Initiation Interval  |  Trip  |          |
        |      Loop Name     |   min   |   max   |  Latency |  achieved |   target  |  Count | Pipelined|
        +--------------------+---------+---------+----------+-----------+-----------+--------+----------+
        |- VITIS_LOOP_223_1  |       10|       40|        11|          2|          1|  1 ~ 16|       yes|
        +--------------------+---------+---------+----------+-----------+-----------+--------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 2, depth = 11


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 11
* Pipeline : 1
  Pipeline-0 : II = 2, D = 11, States = { 1 2 3 4 5 6 7 8 9 10 11 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 3.58>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%DwIndex = alloca i32 1"   --->   Operation 14 'alloca' 'DwIndex' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%canIndex = alloca i32 1"   --->   Operation 15 'alloca' 'canIndex' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%zext_ln223_read = read i15 @_ssdm_op_Read.ap_auto.i15, i15 %zext_ln223"   --->   Operation 16 'read' 'zext_ln223_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%canbase_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %canbase"   --->   Operation 17 'read' 'canbase_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%add_ln223_1_read = read i5 @_ssdm_op_Read.ap_auto.i5, i5 %add_ln223_1"   --->   Operation 18 'read' 'add_ln223_1_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%zext_ln223_cast = zext i15 %zext_ln223_read"   --->   Operation 19 'zext' 'zext_ln223_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %can_addr, void @empty_42, i32 0, i32 0, void @empty_43, i32 0, i32 1, void @empty_44, void @empty, void @empty_43, i32 16, i32 16, i32 16, i32 16, void @empty_43, void @empty_43, i32 4294967295, i32 0"   --->   Operation 20 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (1.29ns)   --->   "%store_ln0 = store i7 8, i7 %canIndex"   --->   Operation 21 'store' 'store_ln0' <Predicate = true> <Delay = 1.29>
ST_1 : Operation 22 [1/1] (1.29ns)   --->   "%store_ln0 = store i5 0, i5 %DwIndex"   --->   Operation 22 'store' 'store_ln0' <Predicate = true> <Delay = 1.29>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.inc"   --->   Operation 23 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%DwIndex_1 = load i5 %DwIndex" [can.c:226]   --->   Operation 24 'load' 'DwIndex_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 25 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.97ns)   --->   "%icmp_ln223 = icmp_eq  i5 %DwIndex_1, i5 %add_ln223_1_read" [can.c:223]   --->   Operation 26 'icmp' 'icmp_ln223' <Predicate = true> <Delay = 0.97> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%empty = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 1, i64 16, i64 0"   --->   Operation 27 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (1.02ns)   --->   "%DwIndex_2 = add i5 %DwIndex_1, i5 1" [can.c:232]   --->   Operation 28 'add' 'DwIndex_2' <Predicate = true> <Delay = 1.02> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.02> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%br_ln223 = br i1 %icmp_ln223, void %for.inc.split, void %for.end.loopexit.exitStub" [can.c:223]   --->   Operation 29 'br' 'br_ln223' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%trunc_ln226 = trunc i5 %DwIndex_1" [can.c:226]   --->   Operation 30 'trunc' 'trunc_ln226' <Predicate = (!icmp_ln223)> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%shl_ln3 = bitconcatenate i6 @_ssdm_op_BitConcatenate.i6.i4.i2, i4 %trunc_ln226, i2 0" [can.c:226]   --->   Operation 31 'bitconcatenate' 'shl_ln3' <Predicate = (!icmp_ln223)> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%zext_ln225 = zext i6 %shl_ln3" [can.c:225]   --->   Operation 32 'zext' 'zext_ln225' <Predicate = (!icmp_ln223)> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln225_1 = add i32 %zext_ln225, i32 %canbase_read" [can.c:225]   --->   Operation 33 'add' 'add_ln225_1' <Predicate = (!icmp_ln223)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.79> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_1 : Operation 34 [1/1] (3.58ns) (root node of TernaryAdder)   --->   "%add_ln225 = add i32 %add_ln225_1, i32 %zext_ln223_cast" [can.c:225]   --->   Operation 34 'add' 'add_ln225' <Predicate = (!icmp_ln223)> <Delay = 3.58> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.79> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "%trunc_ln = partselect i30 @_ssdm_op_PartSelect.i30.i32.i32.i32, i32 %add_ln225, i32 2, i32 31" [can.c:225]   --->   Operation 35 'partselect' 'trunc_ln' <Predicate = (!icmp_ln223)> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (1.29ns)   --->   "%store_ln223 = store i5 %DwIndex_2, i5 %DwIndex" [can.c:223]   --->   Operation 36 'store' 'store_ln223' <Predicate = (!icmp_ln223)> <Delay = 1.29>

State 2 <SV = 1> <Delay = 7.30>
ST_2 : Operation 37 [1/1] (0.00ns)   --->   "%sext_ln225 = sext i30 %trunc_ln" [can.c:225]   --->   Operation 37 'sext' 'sext_ln225' <Predicate = (!icmp_ln223)> <Delay = 0.00>
ST_2 : Operation 38 [1/1] (0.00ns)   --->   "%can_addr_addr = getelementptr i32 %can_addr, i32 %sext_ln225" [can.c:225]   --->   Operation 38 'getelementptr' 'can_addr_addr' <Predicate = (!icmp_ln223)> <Delay = 0.00>
ST_2 : Operation 39 [7/7] (7.30ns)   --->   "%data_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P1A, i32 %can_addr_addr, i32 1" [can.c:225]   --->   Operation 39 'readreq' 'data_1_req' <Predicate = (!icmp_ln223)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 3 <SV = 2> <Delay = 7.30>
ST_3 : Operation 40 [6/7] (7.30ns)   --->   "%data_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P1A, i32 %can_addr_addr, i32 1" [can.c:225]   --->   Operation 40 'readreq' 'data_1_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 4 <SV = 3> <Delay = 7.30>
ST_4 : Operation 41 [5/7] (7.30ns)   --->   "%data_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P1A, i32 %can_addr_addr, i32 1" [can.c:225]   --->   Operation 41 'readreq' 'data_1_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 5 <SV = 4> <Delay = 7.30>
ST_5 : Operation 42 [4/7] (7.30ns)   --->   "%data_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P1A, i32 %can_addr_addr, i32 1" [can.c:225]   --->   Operation 42 'readreq' 'data_1_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 6 <SV = 5> <Delay = 7.30>
ST_6 : Operation 43 [3/7] (7.30ns)   --->   "%data_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P1A, i32 %can_addr_addr, i32 1" [can.c:225]   --->   Operation 43 'readreq' 'data_1_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 7 <SV = 6> <Delay = 7.30>
ST_7 : Operation 44 [2/7] (7.30ns)   --->   "%data_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P1A, i32 %can_addr_addr, i32 1" [can.c:225]   --->   Operation 44 'readreq' 'data_1_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 8 <SV = 7> <Delay = 7.30>
ST_8 : Operation 45 [1/7] (7.30ns)   --->   "%data_1_req = readreq i1 @_ssdm_op_ReadReq.m_axi.i32P1A, i32 %can_addr_addr, i32 1" [can.c:225]   --->   Operation 45 'readreq' 'data_1_req' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 9 <SV = 8> <Delay = 7.30>
ST_9 : Operation 46 [1/1] (7.30ns)   --->   "%data = read i32 @_ssdm_op_Read.m_axi.volatile.i32P1A, i32 %can_addr_addr" [can.c:225]   --->   Operation 46 'read' 'data' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 113 'm_axi' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_9 : Operation 47 [1/1] (0.00ns)   --->   "%trunc_ln5 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %data, i32 24, i32 31" [can.c:227]   --->   Operation 47 'partselect' 'trunc_ln5' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 48 [1/1] (0.00ns)   --->   "%trunc_ln6 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %data, i32 16, i32 23" [can.c:228]   --->   Operation 48 'partselect' 'trunc_ln6' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 49 [1/1] (0.00ns)   --->   "%trunc_ln7 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %data, i32 8, i32 15" [can.c:229]   --->   Operation 49 'partselect' 'trunc_ln7' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 50 [1/1] (0.00ns)   --->   "%trunc_ln230 = trunc i32 %data" [can.c:230]   --->   Operation 50 'trunc' 'trunc_ln230' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 72 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 72 'ret' 'ret_ln0' <Predicate = (icmp_ln223)> <Delay = 0.00>

State 10 <SV = 9> <Delay = 3.07>
ST_10 : Operation 51 [1/1] (0.00ns)   --->   "%canIndex_load = load i7 %canIndex" [can.c:227]   --->   Operation 51 'load' 'canIndex_load' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 52 [1/1] (1.31ns)   --->   "%add_ln227 = add i7 %canIndex_load, i7 12" [can.c:227]   --->   Operation 52 'add' 'add_ln227' <Predicate = true> <Delay = 1.31> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.31> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 53 [1/1] (0.00ns)   --->   "%zext_ln227 = zext i7 %add_ln227" [can.c:227]   --->   Operation 53 'zext' 'zext_ln227' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 54 [1/1] (0.00ns)   --->   "%can_frame_addr = getelementptr i8 %can_frame, i32 0, i32 %zext_ln227" [can.c:227]   --->   Operation 54 'getelementptr' 'can_frame_addr' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 55 [1/1] (1.75ns)   --->   "%store_ln227 = store i8 %trunc_ln5, i7 %can_frame_addr" [can.c:227]   --->   Operation 55 'store' 'store_ln227' <Predicate = true> <Delay = 1.75> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 92> <RAM>
ST_10 : Operation 56 [1/1] (1.31ns)   --->   "%add_ln228 = add i7 %canIndex_load, i7 13" [can.c:228]   --->   Operation 56 'add' 'add_ln228' <Predicate = true> <Delay = 1.31> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.31> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 57 [1/1] (0.00ns)   --->   "%zext_ln228 = zext i7 %add_ln228" [can.c:228]   --->   Operation 57 'zext' 'zext_ln228' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 58 [1/1] (0.00ns)   --->   "%can_frame_addr_4 = getelementptr i8 %can_frame, i32 0, i32 %zext_ln228" [can.c:228]   --->   Operation 58 'getelementptr' 'can_frame_addr_4' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 59 [1/1] (1.75ns)   --->   "%store_ln228 = store i8 %trunc_ln6, i7 %can_frame_addr_4" [can.c:228]   --->   Operation 59 'store' 'store_ln228' <Predicate = true> <Delay = 1.75> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 92> <RAM>
ST_10 : Operation 60 [1/1] (1.31ns)   --->   "%add_ln231 = add i7 %canIndex_load, i7 4" [can.c:231]   --->   Operation 60 'add' 'add_ln231' <Predicate = true> <Delay = 1.31> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.31> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 61 [1/1] (1.29ns)   --->   "%store_ln223 = store i7 %add_ln231, i7 %canIndex" [can.c:223]   --->   Operation 61 'store' 'store_ln223' <Predicate = true> <Delay = 1.29>

State 11 <SV = 10> <Delay = 3.07>
ST_11 : Operation 62 [1/1] (0.00ns)   --->   "%specloopname_ln164 = specloopname void @_ssdm_op_SpecLoopName, void @empty_40" [can.c:164]   --->   Operation 62 'specloopname' 'specloopname_ln164' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 63 [1/1] (1.31ns)   --->   "%add_ln229 = add i7 %canIndex_load, i7 14" [can.c:229]   --->   Operation 63 'add' 'add_ln229' <Predicate = true> <Delay = 1.31> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.31> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 64 [1/1] (0.00ns)   --->   "%zext_ln229 = zext i7 %add_ln229" [can.c:229]   --->   Operation 64 'zext' 'zext_ln229' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 65 [1/1] (0.00ns)   --->   "%can_frame_addr_5 = getelementptr i8 %can_frame, i32 0, i32 %zext_ln229" [can.c:229]   --->   Operation 65 'getelementptr' 'can_frame_addr_5' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 66 [1/1] (1.75ns)   --->   "%store_ln229 = store i8 %trunc_ln7, i7 %can_frame_addr_5" [can.c:229]   --->   Operation 66 'store' 'store_ln229' <Predicate = true> <Delay = 1.75> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 92> <RAM>
ST_11 : Operation 67 [1/1] (1.31ns)   --->   "%add_ln230 = add i7 %canIndex_load, i7 15" [can.c:230]   --->   Operation 67 'add' 'add_ln230' <Predicate = true> <Delay = 1.31> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.31> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 68 [1/1] (0.00ns)   --->   "%zext_ln230 = zext i7 %add_ln230" [can.c:230]   --->   Operation 68 'zext' 'zext_ln230' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 69 [1/1] (0.00ns)   --->   "%can_frame_addr_6 = getelementptr i8 %can_frame, i32 0, i32 %zext_ln230" [can.c:230]   --->   Operation 69 'getelementptr' 'can_frame_addr_6' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 70 [1/1] (1.75ns)   --->   "%store_ln230 = store i8 %trunc_ln230, i7 %can_frame_addr_6" [can.c:230]   --->   Operation 70 'store' 'store_ln230' <Predicate = true> <Delay = 1.75> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 92> <RAM>
ST_11 : Operation 71 [1/1] (0.00ns)   --->   "%br_ln223 = br void %for.inc" [can.c:223]   --->   Operation 71 'br' 'br_ln223' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 3.59ns
The critical path consists of the following:
	'alloca' operation ('DwIndex') [6]  (0 ns)
	'load' operation ('DwIndex', can.c:226) on local variable 'DwIndex' [17]  (0 ns)
	'add' operation ('add_ln225_1', can.c:225) [29]  (0 ns)
	'add' operation ('add_ln225', can.c:225) [30]  (3.59 ns)

 <State 2>: 7.3ns
The critical path consists of the following:
	'getelementptr' operation ('can_addr_addr', can.c:225) [33]  (0 ns)
	bus request operation ('data_1_req', can.c:225) on port 'can_addr' (can.c:225) [34]  (7.3 ns)

 <State 3>: 7.3ns
The critical path consists of the following:
	bus request operation ('data_1_req', can.c:225) on port 'can_addr' (can.c:225) [34]  (7.3 ns)

 <State 4>: 7.3ns
The critical path consists of the following:
	bus request operation ('data_1_req', can.c:225) on port 'can_addr' (can.c:225) [34]  (7.3 ns)

 <State 5>: 7.3ns
The critical path consists of the following:
	bus request operation ('data_1_req', can.c:225) on port 'can_addr' (can.c:225) [34]  (7.3 ns)

 <State 6>: 7.3ns
The critical path consists of the following:
	bus request operation ('data_1_req', can.c:225) on port 'can_addr' (can.c:225) [34]  (7.3 ns)

 <State 7>: 7.3ns
The critical path consists of the following:
	bus request operation ('data_1_req', can.c:225) on port 'can_addr' (can.c:225) [34]  (7.3 ns)

 <State 8>: 7.3ns
The critical path consists of the following:
	bus request operation ('data_1_req', can.c:225) on port 'can_addr' (can.c:225) [34]  (7.3 ns)

 <State 9>: 7.3ns
The critical path consists of the following:
	bus read operation ('data', can.c:225) on port 'can_addr' (can.c:225) [35]  (7.3 ns)

 <State 10>: 3.07ns
The critical path consists of the following:
	'load' operation ('canIndex_load', can.c:227) on local variable 'canIndex' [24]  (0 ns)
	'add' operation ('add_ln227', can.c:227) [37]  (1.32 ns)
	'getelementptr' operation ('can_frame_addr', can.c:227) [39]  (0 ns)
	'store' operation ('store_ln227', can.c:227) of variable 'trunc_ln5', can.c:227 on array 'can_frame' [40]  (1.75 ns)

 <State 11>: 3.07ns
The critical path consists of the following:
	'add' operation ('add_ln229', can.c:229) [47]  (1.32 ns)
	'getelementptr' operation ('can_frame_addr_5', can.c:229) [49]  (0 ns)
	'store' operation ('store_ln229', can.c:229) of variable 'trunc_ln7', can.c:229 on array 'can_frame' [50]  (1.75 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
