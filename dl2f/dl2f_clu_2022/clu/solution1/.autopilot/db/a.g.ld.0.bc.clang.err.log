remark: can.c:97:0: Inlining function 'update_write_index' into 'write_ddr'
remark: can.c:145:0: Inlining function 'XCanFd_GetDlc2len' into 'recvFrame_logic'
remark: can.c:271:0: Inlining function 'CanFd_Recv_Sequential' into 'can'
remark: dlin.c:92:0: Inlining function 'update_write_index' into 'write_lin_ddr'
remark: dlin.c:133:0: Inlining function 'read_lin_reg' into 'single_lin_process'
remark: dlin.c:133:0: Inlining function 'write_lin_reg' into 'single_lin_process'
remark: dlin.c:253:0: Inlining function 'dlin_FSM' into 'dlin'
remark: clu.c:26:0: Inlining function 'can' into 'clu'
remark: clu.c:26:0: Inlining function 'dlin' into 'clu'
remark: can.c:103:2: Sequential read of length 28 has been inferred _XLX_SEP_ OldID=load-store-loop3.load.3,  _XLX_SEP_ ddr_headerseq ddr_header ps_ddr anonymous can.c:103:2 write_ddr 
remark: can.c:126:3: Sequential write of length 92 has been inferred _XLX_SEP_ OldID=load-store-loop.store.6,  _XLX_SEP_ scevgepseq ddr_header ps_ddr anonymous can.c:126:3 write_ddr 
remark: clu.c:17:2: Sequential write of length 4 has been inferred _XLX_SEP_ OldID=load-store-loop.i.store.6,  _XLX_SEP_ scevgep7seq ddr_header ps_ddr anonymous clu.c:17:2 write_ddr 
remark: can.c:120:21: Volatile or Atomic access cannot be transformed _XLX_SEP_ if.then.store.5 ddr_header ps_ddr write_ddr 
remark: can.c:150:15: Volatile or Atomic access cannot be transformed _XLX_SEP_ split.load.5 canbase can_addr recvFrame_logic 
remark: can.c:173:14: Volatile or Atomic access cannot be transformed _XLX_SEP_ if.end.load.25 canbase can_addr recvFrame_logic 
remark: can.c:207:14: Volatile or Atomic access cannot be transformed _XLX_SEP_ for.inc.load.10 canbase can_addr recvFrame_logic 
remark: can.c:220:14: Volatile or Atomic access cannot be transformed _XLX_SEP_ for.inc189.load.8 canbase can_addr recvFrame_logic 
remark: can.c:231:17: Volatile or Atomic access cannot be transformed _XLX_SEP_ if.end192.store.3 received_can  recvFrame_logic 
remark: can.c:233:12: Volatile or Atomic access cannot be transformed _XLX_SEP_ if.end192.load.6 canbase can_addr recvFrame_logic 
remark: can.c:235:26: Volatile or Atomic access cannot be transformed _XLX_SEP_ if.end192.store.10 canbase can_addr recvFrame_logic 
remark: can.c:248:16: Volatile or Atomic access cannot be transformed _XLX_SEP_ if.then.i.i.load.6 can_ptr can_addr clu 
remark: dlin.c:81:24: Volatile or Atomic access cannot be transformed _XLX_SEP_ for.inc.load.2 linbase lin_addr single_lin_process 
remark: dlin.c:201:19: Volatile or Atomic access cannot be transformed _XLX_SEP_ for.end.store.60 received_lin  single_lin_process 
remark: dlin.c:87:29: Volatile or Atomic access cannot be transformed _XLX_SEP_ if.then23.store.6 linbase lin_addr single_lin_process 
remark: dlin.c:81:24: Volatile or Atomic access cannot be transformed _XLX_SEP_ if.then19.load.3 linbase lin_addr single_lin_process 
remark: dlin.c:81:24: Volatile or Atomic access cannot be transformed _XLX_SEP_ if.else15.load.2 linbase lin_addr single_lin_process 
remark: dlin.c:81:24: Volatile or Atomic access cannot be transformed _XLX_SEP_ if.then3.load.3 linbase lin_addr single_lin_process 
remark: dlin.c:87:29: Volatile or Atomic access cannot be transformed _XLX_SEP_ if.then3.store.12 linbase lin_addr single_lin_process 
remark: dlin.c:87:29: Volatile or Atomic access cannot be transformed _XLX_SEP_ if.then3.store.16 linbase lin_addr single_lin_process 
remark: dlin.c:81:24: Volatile or Atomic access cannot be transformed _XLX_SEP_ if.then.load.2 linbase lin_addr single_lin_process 
remark: dlin.c:81:24: Volatile or Atomic access cannot be transformed _XLX_SEP_ if.then.load.8 linbase lin_addr single_lin_process 
remark: dlin.c:98:2: Sequential read of length 28 has been inferred _XLX_SEP_ OldID=load-store-loop3.load.3,  _XLX_SEP_ ddr_headerseq ddr_header ps_ddr anonymous dlin.c:98:2 write_lin_ddr 
remark: dlin.c:120:3: Sequential write of length 28 has been inferred _XLX_SEP_ OldID=load-store-loop.store.6,  _XLX_SEP_ scevgepseq ddr_header ps_ddr anonymous dlin.c:120:3 write_lin_ddr 
remark: clu.c:17:2: Sequential write of length 4 has been inferred _XLX_SEP_ OldID=load-store-loop.i.store.6,  _XLX_SEP_ scevgep7seq ddr_header ps_ddr anonymous clu.c:17:2 write_lin_ddr 
remark: dlin.c:115:21: Volatile or Atomic access cannot be transformed _XLX_SEP_ if.then.store.5 ddr_header ps_ddr write_lin_ddr 
remark: clu.c:17:2: Could not widen since type i8 size is greater than or equal to the max_widen_bitwidth threshold of 0 _XLX_SEP_ scevgep7seq ddr_header ps_ddr anonymous clu.c:17:2 write_ddr 
remark: can.c:126:3: Could not widen since type i8 size is greater than or equal to the max_widen_bitwidth threshold of 0 _XLX_SEP_ scevgepseq ddr_header ps_ddr anonymous can.c:126:3 write_ddr 
remark: can.c:103:2: Could not widen since type i8 size is greater than or equal to the max_widen_bitwidth threshold of 0 _XLX_SEP_ ddr_headerseq ddr_header ps_ddr anonymous can.c:103:2 write_ddr 
remark: clu.c:17:2: Could not widen since type i8 size is greater than or equal to the max_widen_bitwidth threshold of 0 _XLX_SEP_ scevgep7seq ddr_header ps_ddr anonymous clu.c:17:2 write_lin_ddr 
remark: dlin.c:120:3: Could not widen since type i8 size is greater than or equal to the max_widen_bitwidth threshold of 0 _XLX_SEP_ scevgepseq ddr_header ps_ddr anonymous dlin.c:120:3 write_lin_ddr 
remark: dlin.c:98:2: Could not widen since type i8 size is greater than or equal to the max_widen_bitwidth threshold of 0 _XLX_SEP_ ddr_headerseq ddr_header ps_ddr anonymous dlin.c:98:2 write_lin_ddr 
remark: can.c:103:2: Multiple burst reads of length 28 and bit width 8 has been inferred. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. _XLX_SEP_ seq  ps_ddr anonymous can.c:103:2 write_ddr.1 
remark: can.c:103:2: Multiple burst reads of length 28 and bit width 8 in loop 'anonymous'(can.c:103:2) has been inferred on bundle 'ps_ddr'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
remark: can.c:126:3: Multiple burst writes of length 92 and bit width 8 has been inferred. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. _XLX_SEP_ seq1  ps_ddr anonymous can.c:126:3 write_ddr.1 
remark: can.c:126:3: Multiple burst writes of length 92 and bit width 8 in loop 'anonymous'(can.c:126:3) has been inferred on bundle 'ps_ddr'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
remark: clu.c:17:2: Multiple burst writes of length 4 and bit width 8 has been inferred. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. _XLX_SEP_ seq2  ps_ddr anonymous clu.c:17:2 write_ddr.1 
remark: clu.c:17:2: Multiple burst writes of length 4 and bit width 8 in loop 'anonymous'(clu.c:17:2) has been inferred on bundle 'ps_ddr'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
remark: dlin.c:98:2: Multiple burst reads of length 28 and bit width 8 has been inferred. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. _XLX_SEP_ seq  ps_ddr anonymous dlin.c:98:2 write_lin_ddr.1 
remark: dlin.c:98:2: Multiple burst reads of length 28 and bit width 8 in loop 'anonymous'(dlin.c:98:2) has been inferred on bundle 'ps_ddr'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
remark: dlin.c:120:3: Multiple burst writes of length 28 and bit width 8 has been inferred. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. _XLX_SEP_ seq1  ps_ddr anonymous dlin.c:120:3 write_lin_ddr.1 
remark: dlin.c:120:3: Multiple burst writes of length 28 and bit width 8 in loop 'anonymous'(dlin.c:120:3) has been inferred on bundle 'ps_ddr'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
remark: clu.c:17:2: Multiple burst writes of length 4 and bit width 8 has been inferred. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings. _XLX_SEP_ seq2  ps_ddr anonymous clu.c:17:2 write_lin_ddr.1 
remark: clu.c:17:2: Multiple burst writes of length 4 and bit width 8 in loop 'anonymous'(clu.c:17:2) has been inferred on bundle 'ps_ddr'. These burst requests might be further partitioned into multiple requests during RTL generation, based on max_read_burst_length or max_write_burst_length settings.
